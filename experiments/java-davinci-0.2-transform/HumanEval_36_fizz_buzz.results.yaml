language: java
name: HumanEval_36_fizz_buzz
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String str = Long.toString(i);\n             \
    \   for (int j = 0; j < str.length(); j++) {\n                    if (str.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i += 11) {\n            if (i % 13 == 0)\
    \ {\n                count += 2;\n            } else {\n                count\
    \ += 1;\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw_iago4l.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        result++;\n                    }\n      \
    \          }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i += 11) {\n            if (i % 13 == 0)\
    \ {\n                count += 2;\n            } else {\n                count\
    \ += 1;\n            }\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw_iago4l.java:28)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = String.valueOf(i);\n              \
    \  for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803709
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg28r1ao7.java:21)\n"
  stdout: ''
  timestamp: 1659803708
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String str = Long.toString(i);\n             \
    \   for (int j = 0; j < str.length(); j++) {\n                    if (str.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i += 11) {\n            if (i % 13 == 0)\
    \ {\n                count += 2;\n            } else {\n                count\
    \ += 1;\n            }\n        }\n        for (long i = 13; i < n; i += 13) {\n\
    \            if (i % 11 == 0) {\n                continue;\n            }\n  \
    \          count += 1;\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ds569c8.java:34)\n"
  stdout: ''
  timestamp: 1659803708
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i += 11) {\n            if (i % 11 == 0\
    \ || i % 13 == 0) {\n                String s = Long.toString(i);\n          \
    \      for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu9ajj3n5.java:33)\n"
  stdout: ''
  timestamp: 1659803738
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg28r1ao7.java:21)\n"
  stdout: ''
  timestamp: 1659803708
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long ans = 0;\n\
    \        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13\
    \ == 0) {\n                String s = Long.toString(i);\n                for (int\
    \ j = 0; j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n\
    \                        ans++;\n                    }\n                }\n  \
    \          }\n        }\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803738
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = String.valueOf(i);\n              \
    \  for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803709
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = String.valueOf(i);\n            \
    \    for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803708
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg28r1ao7.java:21)\n"
  stdout: ''
  timestamp: 1659803708
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = String.valueOf(i);\n              \
    \  for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803709
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                count += (i + \"\").chars().filter(c -> c ==\
    \ '7').count();\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803738
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg28r1ao7.java:21)\n"
  stdout: ''
  timestamp: 1659803708
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = \"\" + i;\n                for (int\
    \ j = 0; j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803738
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = String.valueOf(i);\n              \
    \  for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803709
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = String.valueOf(i);\n            \
    \    for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803708
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        result++;\n                    }\n      \
    \          }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i += 11) {\n            if (i % 13 == 0)\
    \ {\n                count += 2;\n            } else {\n                count\
    \ += 1;\n            }\n        }\n        for (long i = 13; i < n; i += 13) {\n\
    \            if (i % 11 == 0) {\n                continue;\n            }\n  \
    \          count += 1;\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ds569c8.java:34)\n"
  stdout: ''
  timestamp: 1659803708
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return 0l;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpio6k2asd.java:21)\n"
  stdout: ''
  timestamp: 1659803709
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg28r1ao7.java:21)\n"
  stdout: ''
  timestamp: 1659803708
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                long temp = i;\n                while (temp >\
    \ 0) {\n                    if (temp % 10 == 7) {\n                        count++;\n\
    \                    }\n                    temp /= 10;\n                }\n \
    \           }\n        }\n        return count;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803738
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = String.valueOf(i);\n              \
    \  for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803709
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long result =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        result++;\n                    }\n      \
    \          }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803738
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = String.valueOf(i);\n              \
    \  for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803709
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String str = Long.toString(i);\n             \
    \   for (int j = 0; j < str.length(); j++) {\n                    if (str.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803738
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i += 11) {\n            if (i % 13 == 0)\
    \ {\n                count += 2;\n            } else {\n                count\
    \ += 1;\n            }\n        }\n        for (long i = 13; i < n; i += 13) {\n\
    \            if (i % 11 == 0) {\n                continue;\n            }\n  \
    \          count += 1;\n        }\n        return count;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l))\
    \ == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l))\
    \ == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ds569c8.java:34)\n"
  stdout: ''
  timestamp: 1659803708
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long ans = 0;\n\
    \        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13\
    \ == 0) {\n                String s = Long.toString(i);\n                for (int\
    \ j = 0; j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n\
    \                        ans++;\n                    }\n                }\n  \
    \          }\n        }\n        return ans;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) ==\
    \ (2l));\n    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) ==\
    \ (3l));\n    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l))\
    \ == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l))\
    \ == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803738
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String num = Long.toString(i);\n             \
    \   for (int j = 0; j < num.length(); j++) {\n                    if (num.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659803709
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 1; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 11; i < n; i++) {\n            if (i % 11 == 0 ||\
    \ i % 13 == 0) {\n                String s = Long.toString(i);\n             \
    \   for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg28r1ao7.java:21)\n"
  stdout: ''
  timestamp: 1659803708
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        return 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(fizzBuzz((50l))\
    \ == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l))\
    \ == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l))\
    \ == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l))\
    \ == (639l));\n    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg28r1ao7.java:21)\n"
  stdout: ''
  timestamp: 1659803708
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        // Write your\
    \ code here\n        return 0l;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fizzBuzz((50l)) == (0l));\n    assert(fizzBuzz((78l)) == (2l));\n\
    \    assert(fizzBuzz((79l)) == (3l));\n    assert(fizzBuzz((100l)) == (3l));\n\
    \    assert(fizzBuzz((200l)) == (6l));\n    assert(fizzBuzz((4000l)) == (192l));\n\
    \    assert(fizzBuzz((10000l)) == (639l));\n    assert(fizzBuzz((100000l)) ==\
    \ (8026l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp9rdahec.java:22)\n"
  stdout: ''
  timestamp: 1659803738
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n    // >>> fizzBuzz((50l))\n \
    \   // (0l)\n    // >>> fizzBuzz((78l))\n    // (2l)\n    // >>> fizzBuzz((79l))\n\
    \    // (3l)\n    public static long fizzBuzz(long n) {\n        long count =\
    \ 0;\n        for (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i\
    \ % 13 == 0) {\n                String s = Long.toString(i);\n               \
    \ for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
    \ == '7') {\n                        count++;\n                    }\n       \
    \         }\n            }\n        }\n        return count;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fizzBuzz((50l)) == (0l));\n  \
    \  assert(fizzBuzz((78l)) == (2l));\n    assert(fizzBuzz((79l)) == (3l));\n  \
    \  assert(fizzBuzz((100l)) == (3l));\n    assert(fizzBuzz((200l)) == (6l));\n\
    \    assert(fizzBuzz((4000l)) == (192l));\n    assert(fizzBuzz((10000l)) == (639l));\n\
    \    assert(fizzBuzz((100000l)) == (8026l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''

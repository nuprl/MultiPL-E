name: HumanEval_161_solve
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse\
  \ its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n\
  \    // If the string contains no letters, reverse the string.\n    // The function\
  \ should return the resulted string.\n    // Examples\n    // >>> solve((\"1234\"\
  ))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n    // (\"AB\")\n    // >>> solve((\"\
  #a@C\"))\n    // (\"#A@c\")\n    public static String solve(String s) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(solve((\"\
  AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
  \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
  #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
  #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n\
  \    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
completions: ['        return null;', "        // Write your code here\n        return\
    \ null;", "        // Your code here\n        return \"\";", "        // Write\
    \ your code here\n        return null;", "        // Write your code here\n  \
    \      return \"\";", "        // Write your code here\n        return \"\";",
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return null;", "        StringBuilder sb = new StringBuilder();\n        boolean\
    \ hasLetter = false;\n        for (int i = 0; i < s.length(); i++) {\n       \
    \     char c = s.charAt(i);\n            if (Character.isLetter(c)) {\n      \
    \          hasLetter = true;\n                if (Character.isUpperCase(c)) {\n\
    \                    sb.append(Character.toLowerCase(c));\n                } else\
    \ {\n                    sb.append(Character.toUpperCase(c));\n              \
    \  }\n            } else {\n                sb.append(c);\n            }\n   \
    \     }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return hasLetter\
    \ ? sb.toString() : sb.reverse().toString();", "        // Write your code here\n\
    \        return \"\";", '        return null;', "        // Write your code here\n\
    \        return \"\";", "        StringBuilder sb = new StringBuilder();\n   \
    \     boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.length()\
    \ == 0 ? new StringBuilder(s).reverse().toString() : sb.toString();", "      \
    \  // Your code here\n        return \"\";", "        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return hasLetter\
    \ ? sb.toString() : sb.reverse().toString();", "        // Write your code here\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        if (s.isEmpty()) {\n            return s;\n        }\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n\
    \            char c = s.charAt(i);\n            if (Character.isLetter(c)) {\n\
    \                sb.append(Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c));\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        boolean hasLetter = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (Character.isLetter(c)) {\n                hasLetter = true;\n        \
    \        if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        boolean hasLetter = false;\n\
    \        for (int i = 0; i < s.length(); i++) {\n            if (Character.isLetter(s.charAt(i)))\
    \ {\n                hasLetter = true;\n                break;\n            }\n\
    \        }\n        if (!hasLetter) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n        StringBuilder sb = new StringBuilder();\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            if (Character.isLetter(s.charAt(i)))\
    \ {\n                if (Character.isUpperCase(s.charAt(i))) {\n             \
    \       sb.append(Character.toLowerCase(s.charAt(i)));\n                } else\
    \ {\n                    sb.append(Character.toUpperCase(s.charAt(i)));\n    \
    \            }\n            } else {\n                sb.append(s.charAt(i));\n\
    \            }\n        }\n        return sb.toString();", "        // Write your\
    \ code here\n        return null;", "        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", "        StringBuilder sb = new StringBuilder();\n   \
    \     boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", "        StringBuilder sb = new StringBuilder();\n   \
    \     boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", '        return "";', "        StringBuilder\
    \ sb = new StringBuilder();\n        boolean hasLetter = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (Character.isLetter(c)) {\n                hasLetter = true;\n        \
    \        if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", "        StringBuilder sb = new StringBuilder();\n   \
    \     boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return null;", "        // Your code here\n        return null;", " \
    \       StringBuilder sb = new StringBuilder();\n        boolean hasLetter = false;\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                hasLetter = true;\n\
    \                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", "        StringBuilder sb = new StringBuilder();\n   \
    \     boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        if (s.matches(\"[a-zA-Z]+\"\
    )) {\n            return new StringBuilder(s).reverse().toString();\n        }\
    \ else {\n            StringBuilder sb = new StringBuilder();\n            for\
    \ (int i = 0; i < s.length(); i++) {\n                char c = s.charAt(i);\n\
    \                if (Character.isLetter(c)) {\n                    if (Character.isUpperCase(c))\
    \ {\n                        sb.append(Character.toLowerCase(c));\n          \
    \          } else {\n                        sb.append(Character.toUpperCase(c));\n\
    \                    }\n                } else {\n                    sb.append(c);\n\
    \                }\n            }\n            return sb.toString();\n       \
    \ }", "        // Write your code here\n        return \"\";", "        // Write\
    \ your code here.\n        return \"\";", "        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", '        return null;', "        // Write your code here\n\
    \        return \"\";", "        StringBuilder sb = new StringBuilder();\n   \
    \     boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Your code here\n     \
    \   return \"\";", "        // Write your code here\n        return null;", " \
    \       if (s.matches(\"[a-zA-Z]+\")) {\n            return s.toUpperCase();\n\
    \        } else if (s.matches(\"[^a-zA-Z]+\")) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        } else {\n            StringBuilder sb = new StringBuilder();\n     \
    \       for (int i = 0; i < s.length(); i++) {\n                if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                    sb.append(Character.toLowerCase(s.charAt(i)));\n    \
    \            } else {\n                    sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \                }\n            }\n            return sb.toString();\n       \
    \ }", "        StringBuilder sb = new StringBuilder();\n        boolean hasLetter\
    \ = false;\n        for (int i = 0; i < s.length(); i++) {\n            char c\
    \ = s.charAt(i);\n            if (Character.isLetter(c)) {\n                hasLetter\
    \ = true;\n                if (Character.isUpperCase(c)) {\n                 \
    \   sb.append(Character.toLowerCase(c));\n                } else {\n         \
    \           sb.append(Character.toUpperCase(c));\n                }\n        \
    \    } else {\n                sb.append(c);\n            }\n        }\n     \
    \   if (!hasLetter) {\n            return sb.reverse().toString();\n        }\n\
    \        return sb.toString();", "        if (s.length() == 0) {\n           \
    \ return s;\n        }\n        StringBuilder sb = new StringBuilder();\n    \
    \    boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (hasLetter) {\n            return sb.toString();\n\
    \        } else {\n            return sb.reverse().toString();\n        }", " \
    \       if (s.chars().anyMatch(Character::isLetter)) {\n            return s.chars().mapToObj(c\
    \ -> (char) c)\n                .map(c -> Character.isLetter(c) ? \n         \
    \           Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c)\
    \ : c)\n                .map(Object::toString)\n                .collect(Collectors.joining());\n\
    \        } else {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }", '        return "";', "        // Write your code here\n        return\
    \ \"\";", "        StringBuilder sb = new StringBuilder();\n        boolean hasLetter\
    \ = false;\n        for (int i = 0; i < s.length(); i++) {\n            char c\
    \ = s.charAt(i);\n            if (Character.isLetter(c)) {\n                hasLetter\
    \ = true;\n                if (Character.isUpperCase(c)) {\n                 \
    \   sb.append(Character.toLowerCase(c));\n                } else {\n         \
    \           sb.append(Character.toUpperCase(c));\n                }\n        \
    \    } else {\n                sb.append(c);\n            }\n        }\n     \
    \   if (!hasLetter) {\n            return sb.reverse().toString();\n        }\n\
    \        return sb.toString();", "        // Write your code here\n        return\
    \ \"\";", '        return "";', "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        return sb.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        boolean isLetter = false;\n        for (int i = 0;\
    \ i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                isLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!isLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", "        if (s.matches(\"[a-zA-Z]+\")) {\n           \
    \ return s.toUpperCase();\n        } else if (s.matches(\"[^a-zA-Z]+\")) {\n \
    \           return new StringBuilder(s).reverse().toString();\n        } else\
    \ {\n            StringBuilder sb = new StringBuilder();\n            for (int\
    \ i = 0; i < s.length(); i++) {\n                char c = s.charAt(i);\n     \
    \           if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            }\n            return sb.toString();\n       \
    \ }", "        // Write your code here\n        return \"\";", "        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        return \"\";", "        // Write your code here\n        return null;",
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Your code here\n        return\
    \ \"\";", "        // Write your code here\n        return \"\";", "        StringBuilder\
    \ sb = new StringBuilder();\n        boolean hasLetter = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (Character.isLetter(c)) {\n                hasLetter = true;\n        \
    \        sb.append(Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return hasLetter ? sb.toString() : sb.reverse().toString();", "     \
    \   StringBuilder sb = new StringBuilder();\n        boolean hasLetter = false;\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                hasLetter = true;\n\
    \                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", "        StringBuilder sb = new StringBuilder();\n   \
    \     boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", "        if (s.matches(\"[a-zA-Z]+\")) {\n           \
    \ return s.toUpperCase();\n        } else if (s.matches(\"[^a-zA-Z]+\")) {\n \
    \           return new StringBuilder(s).reverse().toString();\n        } else\
    \ {\n            return s.toLowerCase();\n        }", "        StringBuilder sb\
    \ = new StringBuilder();\n        boolean hasLetters = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (Character.isLetter(c)) {\n                hasLetters = true;\n       \
    \         if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (!hasLetters) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", '        return null;', "        //\
    \ Write your code here\n        return null;", "        StringBuilder sb = new\
    \ StringBuilder();\n        boolean hasLetters = false;\n        for (int i =\
    \ 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if\
    \ (Character.isLetter(c)) {\n                hasLetters = true;\n            \
    \    sb.append(Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return hasLetters ? sb.toString() : sb.reverse().toString();", "    \
    \    // Your code here\n        return \"\";", "        // Write your code here\n\
    \        return null;", "        // Write your code here\n        return \"\";",
  "        StringBuilder sb = new StringBuilder();\n        boolean hasLetter = false;\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                hasLetter = true;\n\
    \                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", "        if (s.length() == 0) {\n            return \"\
    \";\n        }\n        StringBuilder sb = new StringBuilder();\n        boolean\
    \ hasLetter = false;\n        for (int i = 0; i < s.length(); i++) {\n       \
    \     char c = s.charAt(i);\n            if (Character.isLetter(c)) {\n      \
    \          hasLetter = true;\n                if (Character.isUpperCase(c)) {\n\
    \                    sb.append(Character.toLowerCase(c));\n                } else\
    \ {\n                    sb.append(Character.toUpperCase(c));\n              \
    \  }\n            } else {\n                sb.append(c);\n            }\n   \
    \     }\n        if (hasLetter) {\n            return sb.toString();\n       \
    \ } else {\n            return sb.reverse().toString();\n        }", "       \
    \ // Write your code here.\n        return \"\";", "        // Write your code\
    \ here\n        return \"\";", "        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return null;", "        // Write your code here\n        return null;",
  "        // Write your code here\n        return \"\";", '        return "";', " \
    \       // Write your code here\n        return \"\";", "        if (s.length()\
    \ == 0) {\n            return s;\n        }\n        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (hasLetter) {\n            return sb.toString();\n\
    \        } else {\n            return sb.reverse().toString();\n        }", " \
    \       StringBuilder sb = new StringBuilder();\n        boolean hasLetter = false;\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                hasLetter = true;\n\
    \                sb.append(Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c));\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return hasLetter ? sb.toString() : sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        boolean hasLetter = false;\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                hasLetter = true;\n\
    \                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return null;", "        StringBuilder sb = new StringBuilder();\n   \
    \     for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (sb.length() == 0) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", "        // Write your code here\n        return null;",
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", '        return
    "";', "        // Your code here\n        return null;", "        // Write your\
    \ code here\n        return \"\";", "        // Your code here\n        return\
    \ \"\";", "        StringBuilder sb = new StringBuilder();\n        boolean hasLetter\
    \ = false;\n        for (int i = 0; i < s.length(); i++) {\n            char c\
    \ = s.charAt(i);\n            if (Character.isLetter(c)) {\n                hasLetter\
    \ = true;\n                if (Character.isUpperCase(c)) {\n                 \
    \   sb.append(Character.toLowerCase(c));\n                } else {\n         \
    \           sb.append(Character.toUpperCase(c));\n                }\n        \
    \    } else {\n                sb.append(c);\n            }\n        }\n     \
    \   if (!hasLetter) {\n            return sb.reverse().toString();\n        }\n\
    \        return sb.toString();", "        if (s.chars().allMatch(Character::isDigit))\
    \ {\n            return new StringBuilder(s).reverse().toString();\n        }\n\
    \        StringBuilder sb = new StringBuilder();\n        for (char c : s.toCharArray())\
    \ {\n            if (Character.isLetter(c)) {\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
  "        // Your code here\n        return null;", "        if (s.length() == 0)\
    \ return s;\n        StringBuilder sb = new StringBuilder();\n        boolean\
    \ hasLetters = false;\n        for (int i = 0; i < s.length(); i++) {\n      \
    \      char c = s.charAt(i);\n            if (Character.isLetter(c)) {\n     \
    \           hasLetters = true;\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return hasLetters\
    \ ? sb.toString() : sb.reverse().toString();", "        // Write your code here\n\
    \        return \"\";", '        return null;', "        // Write your code here\n\
    \        return \"\";", "        StringBuilder sb = new StringBuilder();\n   \
    \     for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        StringBuilder sb = new StringBuilder();\n        boolean hasLetter = false;\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                hasLetter = true;\n\
    \                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", '        return null;', "        //\
    \ Write your code here\n        return \"\";", "        // Write your code here\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        // Write your code here.\n        return null;", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        StringBuilder sb = new StringBuilder();\n        boolean\
    \ hasLetter = false;\n        for (int i = 0; i < s.length(); i++) {\n       \
    \     char c = s.charAt(i);\n            if (Character.isLetter(c)) {\n      \
    \          hasLetter = true;\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return hasLetter\
    \ ? sb.toString() : sb.reverse().toString();", "        // Write your code here\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        if (s.length() == 0) {\n            return \"\";\n        }\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean hasLetter = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (Character.isLetter(c)) {\n                hasLetter = true;\n        \
    \        if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (hasLetter) {\n            return sb.toString();\n\
    \        } else {\n            return sb.reverse().toString();\n        }", " \
    \       StringBuilder sb = new StringBuilder();\n        boolean hasLetter = false;\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                hasLetter = true;\n\
    \                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (sb.length() == 0) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", "        StringBuilder sb = new StringBuilder();\n   \
    \     for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (sb.length() == 0) {\n            return s;\n    \
    \    }\n        return sb.toString();", '        return null;', "        // Your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        if (s.matches(\"^[a-zA-Z]+$\")) {\n            return\
    \ new StringBuilder(s).reverse().toString();\n        }\n        else {\n    \
    \        StringBuilder sb = new StringBuilder();\n            for (char c : s.toCharArray())\
    \ {\n                if (Character.isLetter(c)) {\n                    if (Character.isUpperCase(c))\
    \ {\n                        sb.append(Character.toLowerCase(c));\n          \
    \          }\n                    else {\n                        sb.append(Character.toUpperCase(c));\n\
    \                    }\n                }\n                else {\n          \
    \          sb.append(c);\n                }\n            }\n            return\
    \ sb.toString();\n        }", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                sb.append(Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c));\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();", '        return "";',
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return null;", '        return
    "";', "        // Write your code here\n        return \"\";", "        StringBuilder\
    \ sb = new StringBuilder();\n        boolean hasLetter = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (Character.isLetter(c)) {\n                hasLetter = true;\n        \
    \        if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        return hasLetter ? sb.toString() : sb.reverse().toString();",
  "        StringBuilder sb = new StringBuilder();\n        boolean hasLetter = false;\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                hasLetter = true;\n\
    \                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetters = false;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetters = true;\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return hasLetters\
    \ ? sb.toString() : sb.reverse().toString();", "        // Write your code here\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return null;", "  \
    \      if (s.isEmpty()) return s;\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", '        return "";', "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n         \
    \   char c = s.charAt(i);\n            if (Character.isLetter(c)) {\n        \
    \        if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        return sb.toString();", "        // Write your\
    \ code here\n        return null;", '        return "";', '        return null;',
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return hasLetter\
    \ ? sb.toString() : sb.reverse().toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n         \
    \   if (Character.isLetter(s.charAt(i))) {\n                if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                    sb.append(Character.toLowerCase(s.charAt(i)));\n    \
    \            } else {\n                    sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \                }\n            } else {\n                sb.append(s.charAt(i));\n\
    \            }\n        }\n        if (sb.length() == 0) {\n            return\
    \ new StringBuilder(s).reverse().toString();\n        }\n        return sb.toString();",
  "        if (s.matches(\"[a-zA-Z]+\")) {\n            return s.toUpperCase();\n\
    \        } else if (s.matches(\"[^a-zA-Z]+\")) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        } else {\n            StringBuilder sb = new StringBuilder();\n     \
    \       for (char c : s.toCharArray()) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            }\n            return sb.toString();\n        }", " \
    \       // Write your code here\n        return \"\";", "        StringBuilder\
    \ sb = new StringBuilder();\n        boolean hasLetter = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (Character.isLetter(c)) {\n                hasLetter = true;\n        \
    \        if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Your code here\n     \
    \   return \"\";", "        StringBuilder sb = new StringBuilder();\n        boolean\
    \ hasLetter = false;\n        for (int i = 0; i < s.length(); i++) {\n       \
    \     char c = s.charAt(i);\n            if (Character.isLetter(c)) {\n      \
    \          hasLetter = true;\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return hasLetter\
    \ ? sb.toString() : sb.reverse().toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n         \
    \   char c = s.charAt(i);\n            if (Character.isLetter(c)) {\n        \
    \        if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        return sb.toString();", "        // Write your\
    \ code here\n        return null;", "        // Write your code here\n       \
    \ return \"\";", "        // Write your code here\n        return \"\";", "  \
    \      // Write your code here\n        return \"\";", "        StringBuilder\
    \ sb = new StringBuilder();\n        boolean hasLetter = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (Character.isLetter(c)) {\n                hasLetter = true;\n        \
    \        if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Your code here\n     \
    \   return \"\";", "        // Write your code here\n        return \"\";", " \
    \       StringBuilder sb = new StringBuilder();\n        boolean hasLetter = false;\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                hasLetter = true;\n\
    \                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        return sb.toString();", "        StringBuilder sb = new\
    \ StringBuilder();\n        boolean hasLetter = false;\n        for (int i = 0;\
    \ i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", "        StringBuilder sb = new StringBuilder();\n   \
    \     boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n\
    \            char c = s.charAt(i);\n            if (Character.isLetter(c)) {\n\
    \                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        return sb.toString();", "        StringBuilder\
    \ sb = new StringBuilder();\n        boolean hasLetter = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (Character.isLetter(c)) {\n                hasLetter = true;\n        \
    \        if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", '        return "";', "        //\
    \ Write your code here\n        return null;", "        // Write your code here\n\
    \        return \"\";", "        StringBuilder sb = new StringBuilder();\n   \
    \     boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";", "        StringBuilder sb = new StringBuilder();\n   \
    \     boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        // Write your code here\n\
    \        return \"\";"]
stop_tokens:
- "\n    }\n"

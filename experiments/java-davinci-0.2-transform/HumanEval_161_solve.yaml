name: HumanEval_161_solve
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given a string s.\n    // if s[i] is a letter, reverse\
  \ its case from lower to upper or vise versa, \n    // otherwise keep it as it is.\n\
  \    // If the string contains no letters, reverse the string.\n    // The function\
  \ should return the resulted string.\n    // Examples\n    // >>> solve((\"1234\"\
  ))\n    // (\"4321\")\n    // >>> solve((\"ab\"))\n    // (\"AB\")\n    // >>> solve((\"\
  #a@C\"))\n    // (\"#A@c\")\n    public static String solve(String s) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(solve((\"\
  AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
  \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
  #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
  #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n\
  \    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
completions: ['        return null;', "        // Write your code here\n        return\
    \ null;", "        // Your code here\n        return \"\";", "        // Write\
    \ your code here\n        return null;", "        // Write your code here\n  \
    \      return \"\";", "        // Write your code here\n        return \"\";",
  "        // Write your code here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return null;", "        StringBuilder sb = new StringBuilder();\n        boolean\
    \ hasLetter = false;\n        for (int i = 0; i < s.length(); i++) {\n       \
    \     char c = s.charAt(i);\n            if (Character.isLetter(c)) {\n      \
    \          hasLetter = true;\n                if (Character.isUpperCase(c)) {\n\
    \                    sb.append(Character.toLowerCase(c));\n                } else\
    \ {\n                    sb.append(Character.toUpperCase(c));\n              \
    \  }\n            } else {\n                sb.append(c);\n            }\n   \
    \     }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return hasLetter\
    \ ? sb.toString() : sb.reverse().toString();", "        // Write your code here\n\
    \        return \"\";", '        return null;', "        // Write your code here\n\
    \        return \"\";", "        StringBuilder sb = new StringBuilder();\n   \
    \     boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                if (Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        if (!hasLetter) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.length()\
    \ == 0 ? new StringBuilder(s).reverse().toString() : sb.toString();", "      \
    \  // Your code here\n        return \"\";", "        StringBuilder sb = new StringBuilder();\n\
    \        boolean hasLetter = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                hasLetter = true;\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return hasLetter\
    \ ? sb.toString() : sb.reverse().toString();", "        // Write your code here\n\
    \        return \"\";"]
stop_tokens:
- "\n    }\n"

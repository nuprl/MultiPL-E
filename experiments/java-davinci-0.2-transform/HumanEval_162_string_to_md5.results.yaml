language: java
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpslz8ij8w.java:31)\n"
  stdout: ''
  timestamp: 1659798645
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_zh3_zv8.java:16: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798645
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        // YOUR CODE HERE\n   \
    \     return Optional.empty();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4veoavl.java:18)\n"
  stdout: ''
  timestamp: 1659798645
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdnaq6xo9.java:31)\n"
  stdout: ''
  timestamp: 1659798645
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpslz8ij8w.java:31)\n"
  stdout: ''
  timestamp: 1659798645
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_zh3_zv8.java:16: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798645
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        if (text.isEmpty()) {\n\
    \            return Optional.empty();\n        }\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpslz8ij8w.java:31)\n"
  stdout: ''
  timestamp: 1659798645
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ digest = MessageDigest.getInstance(\"MD5\");\n            byte[] hash = digest.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder hexString = new StringBuilder();\n            for (byte\
    \ b : hash) {\n                String hex = Integer.toHexString(0xff & b);\n \
    \               if (hex.length() == 1) hexString.append('0');\n              \
    \  hexString.append(hex);\n            }\n            return Optional.of(hexString.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8qs2jsun.java:16: error: cannot find symbol\n            byte[]\
    \ hash = digest.digest(text.getBytes(StandardCharsets.UTF_8));\n             \
    \                                         ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798645
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_zh3_zv8.java:16: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659798645
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\n    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp64eqehl_.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2zb6xpj.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"\
    Hello world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    public static\
    \ Optional<String> stringToMd5(String text) {\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbiu56cun.java:28)\n"
  stdout: ''

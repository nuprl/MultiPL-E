name: HumanEval_18_how_many_times
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Find how many times a given substring can be found in the\
  \ original string. Count overlaping cases.\n    // >>> howManyTimes((\"\"), (\"\
  a\"))\n    // (0l)\n    // >>> howManyTimes((\"aaa\"), (\"a\"))\n    // (3l)\n \
  \   // >>> howManyTimes((\"aaaa\"), (\"aa\"))\n    // (3l)\n    public static long\
  \ howManyTimes(String string, String substring) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
  \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
  \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
  john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
completions: ['        return (long) string.chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()).collect(Collectors.joining()).split(substring).length - 1;',
  "        long count = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return string.chars().mapToObj(c -> (char) c).collect(Collectors.joining()).split(substring).length
    - 1;', "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         if (string.substring(i, i + substring.length()).equals(substring)) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;", '        return
    string.chars().mapToObj(x -> (char) x).collect(Collectors.toList()).stream().map(x
    -> x.toString()).collect(Collectors.joining()).split(substring).length - 1;',
  "        long count = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;", "        int count = 0;\n        int index\
    \ = 0;\n        while ((index = string.indexOf(substring, index)) != -1) {\n \
    \           index++;\n            count++;\n        }\n        return count;",
  "        long count = 0;\n        int i = 0;\n        while (i < string.length())\
    \ {\n            if (string.substring(i).startsWith(substring)) {\n          \
    \      count++;\n                i += substring.length();\n            } else\
    \ {\n                i++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.length() - i >= substring.length()) {\n      \
    \              if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;", "        long count = 0;\n\
    \        int index = 0;\n        while ((index = string.indexOf(substring, index))\
    \ != -1) {\n            index += substring.length();\n            count++;\n \
    \       }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        int index = 0;\n        while ((index\
    \ = string.indexOf(substring, index)) != -1) {\n            index += substring.length();\n\
    \            count++;\n        }\n        return count;", '        return 0;',
  "        long count = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;", '        return 0l;', "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        int index = 0;\n        while (index != -1) {\n\
    \            index = string.indexOf(substring, index);\n            if (index\
    \ != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return string.chars().mapToObj(i -> string.substring(i)).filter(s -> s.startsWith(substring)).count();',
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                boolean\
    \ found = true;\n                for (int j = 0; j < substring.length(); j++)\
    \ {\n                    if (i + j >= string.length() || string.charAt(i + j)\
    \ != substring.charAt(j)) {\n                        found = false;\n        \
    \                break;\n                    }\n                }\n          \
    \      if (found) {\n                    count++;\n                }\n       \
    \     }\n        }\n        return count;", '        return 0;', "        long\
    \ count = 0;\n        for (int i = 0; i < string.length(); i++) {\n          \
    \  if (string.substring(i).startsWith(substring)) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return string.chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> substring.indexOf(c)).filter(i -> i != -1).count();', "        long count =\
    \ 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.startsWith(substring, i)) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return 0;', "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         if (string.substring(i, i + substring.length()).equals(substring)) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean match = true;\n                for (int j = 0; j\
    \ < substring.length(); j++) {\n                    if (i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        match\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (match) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;", '        return (long) string.chars().mapToObj(c
    -> (char) c).collect(Collectors.toList()).stream().map(c -> String.valueOf(c)).collect(Collectors.joining()).split(substring).length
    - 1;', '        return string.split(substring, -1).length - 1;', "        long\
    \ count = 0;\n        for (int i = 0; i < string.length(); i++) {\n          \
    \  if (string.charAt(i) == substring.charAt(0)) {\n                boolean found\
    \ = true;\n                for (int j = 0; j < substring.length(); j++) {\n  \
    \                  if (i + j >= string.length() || string.charAt(i + j) != substring.charAt(j))\
    \ {\n                        found = false;\n                        break;\n\
    \                    }\n                }\n                if (found) {\n    \
    \                count++;\n                }\n            }\n        }\n     \
    \   return count;", '        return string.chars().mapToObj(i -> string.substring(i)).filter(s
    -> s.startsWith(substring)).count();', "        long count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        int index = 0;\n  \
    \      while ((index = string.indexOf(substring, index)) != -1) {\n          \
    \  index += substring.length();\n            count++;\n        }\n        return\
    \ count;", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         if (string.substring(i, i + substring.length()).equals(substring)) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;", "        long count = 0;\n        int index = 0;\n   \
    \     while ((index = string.indexOf(substring, index)) != -1) {\n           \
    \ index += substring.length();\n            count++;\n        }\n        return\
    \ count;", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;", "    \
    \    long count = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return string.split(substring, -1).length - 1;', "        long count =\
    \ 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            count++;\n            index += substring.length();\n\
    \        }\n        return count;", "        int count = 0;\n        int index\
    \ = 0;\n        while ((index = string.indexOf(substring, index)) != -1) {\n \
    \           index += substring.length();\n            count++;\n        }\n  \
    \      return count;", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;", "    \
    \    long count = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;", '        return
    0;', '        return string.chars().mapToObj(i -> string.substring(i)).filter(s
    -> s.startsWith(substring)).count();', "        long count = 0;\n        int index\
    \ = 0;\n        while ((index = string.indexOf(substring, index)) != -1) {\n \
    \           index += substring.length();\n            count++;\n        }\n  \
    \      return count;", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;", "    \
    \    long count = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;", '        return 0;', "        if (string.length()\
    \ == 0 || substring.length() == 0) {\n            return 0;\n        }\n     \
    \   long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n   \
    \         if (string.charAt(i) == substring.charAt(0)) {\n                if (string.substring(i).startsWith(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        int index = 0;\n        while (index != -1) {\n\
    \            index = string.indexOf(substring, index);\n            if (index\
    \ != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                boolean\
    \ found = true;\n                for (int j = 0; j < substring.length(); j++)\
    \ {\n                    if (i + j >= string.length() || string.charAt(i + j)\
    \ != substring.charAt(j)) {\n                        found = false;\n        \
    \                break;\n                    }\n                }\n          \
    \      if (found) {\n                    count++;\n                }\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        int index = 0;\n  \
    \      while ((index = string.indexOf(substring, index)) != -1) {\n          \
    \  count++;\n            index += substring.length();\n        }\n        return\
    \ count;", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         boolean isSubstring = true;\n                for (int j = 0; j < substring.length();\
    \ j++) {\n                    if (string.charAt(i + j) != substring.charAt(j))\
    \ {\n                        isSubstring = false;\n                        break;\n\
    \                    }\n                }\n                if (isSubstring) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        int index = 0;\n  \
    \      while ((index = string.indexOf(substring, index)) != -1) {\n          \
    \  index += substring.length();\n            count++;\n        }\n        return\
    \ count;", '        return string.chars().filter(c -> c == substring.charAt(0)).count();',
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return string.chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()).collect(Collectors.joining()).split(substring).length - 1;',
  "        long count = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;", '        return 0;', "        long count =\
    \ 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return string.split(substring, -1).length - 1;', "        long count =\
    \ 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                boolean found = true;\n         \
    \       for (int j = 0; j < substring.length(); j++) {\n                    if\
    \ (string.charAt(i + j) != substring.charAt(j)) {\n                        found\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (found) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        int count = 0;\n        int index = 0;\n   \
    \     while (index != -1) {\n            index = string.indexOf(substring, index);\n\
    \            if (index != -1) {\n                count++;\n                index\
    \ += substring.length();\n            }\n        }\n        return count;", " \
    \       int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        int index = 0;\n  \
    \      while ((index = string.indexOf(substring, index)) != -1) {\n          \
    \  index += substring.length();\n            count++;\n        }\n        return\
    \ count;", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;", "    \
    \    return string.chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c\
    \ -> {\n            if (c == substring.charAt(0)) {\n                return 1;\n\
    \            } else {\n                return 0;\n            }\n        }).reduce(0,\
    \ (a, b) -> a + b);", "        long count = 0;\n        int index = 0;\n     \
    \   while ((index = string.indexOf(substring, index)) != -1) {\n            index\
    \ += substring.length();\n            count++;\n        }\n        return count;",
  '        return string.split(substring, -1).length - 1;', "        long count =\
    \ 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;", "        long count = 0;\n        int index\
    \ = 0;\n        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         int j = 0;\n                while (j < substring.length() && i + j <\
    \ string.length() && string.charAt(i + j) == substring.charAt(j)) {\n        \
    \            j++;\n                }\n                if (j == substring.length())\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        int count = 0;\n        int index = 0;\n   \
    \     while ((index = string.indexOf(substring, index)) != -1) {\n           \
    \ index++;\n            count++;\n        }\n        return count;", '        return
    string.length() - string.replace(substring, "").length();', "        long count\
    \ = 0;\n        for (int i = 0; i <= string.length() - substring.length(); i++)\
    \ {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        if (string.length() < substring.length()) {\n            return 0;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < string.length()\
    \ - substring.length() + 1; i++) {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;", '        return
    string.length() - string.replace(substring, "").length();', "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        int index = 0;\n  \
    \      while ((index = string.indexOf(substring, index)) != -1) {\n          \
    \  index += substring.length();\n            count++;\n        }\n        return\
    \ count;", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;", "    \
    \    long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n  \
    \          if (string.substring(i).startsWith(substring)) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;", '        return 0;', "        long count =\
    \ 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        int index = 0;\n        while (index != -1) {\n            index\
    \ = string.indexOf(substring, index);\n            if (index != -1) {\n      \
    \          count++;\n                index += substring.length();\n          \
    \  }\n        }\n        return count;", "        long count = 0;\n        int\
    \ index = 0;\n        while ((index = string.indexOf(substring, index)) != -1)\
    \ {\n            index += substring.length();\n            count++;\n        }\n\
    \        return count;", "        long count = 0;\n        int index = 0;\n  \
    \      while ((index = string.indexOf(substring, index)) != -1) {\n          \
    \  index++;\n            count++;\n        }\n        return count;", '        return
    string.length() - string.replace(substring, "").length();', "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return string.chars().mapToObj(i -> string.substring(i)).filter(s -> s.startsWith(substring)).count();',
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                boolean found = true;\n         \
    \       for (int j = 0; j < substring.length(); j++) {\n                    if\
    \ (i + j >= string.length() || string.charAt(i + j) != substring.charAt(j)) {\n\
    \                        found = false;\n                        break;\n    \
    \                }\n                }\n                if (found) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;", "        return string.chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().collect(Collectors.groupingBy(c\
    \ -> c)).entrySet().stream().map(entry -> {\n            if (entry.getKey() ==\
    \ substring.charAt(0)) {\n                return entry.getValue().stream().map(c\
    \ -> {\n                    int index = string.indexOf(substring, string.indexOf(c));\n\
    \                    if (index == -1) {\n                        return 0;\n \
    \                   } else {\n                        return 1 + howManyTimes(string.substring(index\
    \ + 1), substring);\n                    }\n                }).reduce(0, (a, b)\
    \ -> a + b);\n            } else {\n                return 0;\n            }\n\
    \        }).reduce(0, (a, b) -> a + b);", "        long count = 0;\n        for\
    \ (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) ==\
    \ substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", '        return string.length() - string.replace(substring,
    "").length();', "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         if (string.substring(i, i + substring.length()).equals(substring)) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        int index = 0;\n        while ((index\
    \ = string.indexOf(substring, index)) != -1) {\n            index += substring.length();\n\
    \            count++;\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return string.length() - string.replace(substring, "").length();', "  \
    \      long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;", "    \
    \    long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n  \
    \          if (string.substring(i).startsWith(substring)) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return string.length() - string.replace(substring, "").length();', '        return
    string.chars().mapToObj(i -> (char) i).collect(Collectors.toList()).stream().map(c
    -> String.valueOf(c)).collect(Collectors.joining()).split(substring).length -
    1;', "        int count = 0;\n        int index = 0;\n        while ((index =\
    \ string.indexOf(substring, index)) != -1) {\n            index += substring.length();\n\
    \            count++;\n        }\n        return count;", "        long count\
    \ = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            count++;\n            index += substring.length();\n\
    \        }\n        return count;", "        long result = 0;\n        int index\
    \ = 0;\n        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                result++;\n       \
    \         index += substring.length();\n            }\n        }\n        return\
    \ result;", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;", "    \
    \    long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n  \
    \          if (string.substring(i).startsWith(substring)) {\n                count++;\n\
    \            }\n        }\n        return count;", '        return string.length()
    - string.replace(substring, "").length();', "        long count = 0;\n       \
    \ for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return string.length() - string.replace(substring, "").length();', "  \
    \      long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        int index = 0;\n        while ((index\
    \ = string.indexOf(substring, index)) != -1) {\n            index += substring.length();\n\
    \            count++;\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;", "    \
    \    long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n  \
    \          if (string.substring(i).startsWith(substring)) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            index += substring.length();\n            count++;\n\
    \        }\n        return count;", "        long count = 0;\n        int index\
    \ = 0;\n        while ((index = string.indexOf(substring, index)) != -1) {\n \
    \           index += substring.length();\n            count++;\n        }\n  \
    \      return count;", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;", "    \
    \    long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n  \
    \          if (string.substring(i).startsWith(substring)) {\n                count++;\n\
    \            }\n        }\n        return count;", '        return string.split(substring).length
    - 1;', "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;", "    \
    \    long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n  \
    \          if (string.substring(i).startsWith(substring)) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        int index = 0;\n        while ((index = string.indexOf(substring, index))\
    \ != -1) {\n            index += substring.length();\n            count++;\n \
    \       }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return string.chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()).collect(Collectors.joining()).split(substring).length - 1;',
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;", "        return (long) IntStream.range(0, string.length() - substring.length()\
    \ + 1)\n                .filter(i -> string.substring(i, i + substring.length()).equals(substring))\n\
    \                .count();", '        return string.chars().mapToObj(i -> string.substring(i)).filter(s
    -> s.startsWith(substring)).count();', "        long count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        int index = 0;\n  \
    \      while ((index = string.indexOf(substring, index)) != -1) {\n          \
    \  index += substring.length();\n            count++;\n        }\n        return\
    \ count;", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;", "    \
    \    long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n  \
    \          if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;", "    \
    \    long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n  \
    \          if (string.substring(i).startsWith(substring)) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        int index = 0;\n        while ((index = string.indexOf(substring, index))\
    \ != -1) {\n            count++;\n            index += substring.length();\n \
    \       }\n        return count;", '        return string.length() - string.replace(substring,
    "").length();', "        long count = 0;\n        int index = 0;\n        while\
    \ ((index = string.indexOf(substring, index)) != -1) {\n            index += substring.length();\n\
    \            count++;\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        long count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  '        return string.chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()).collect(Collectors.joining()).split(substring).length - 1;',
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;", "        int count = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            count++;\n            index += substring.length();\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;"]
stop_tokens:
- "\n    }\n"

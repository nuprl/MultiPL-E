language: java
name: HumanEval_104_unique_digits
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"[13579]+\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long num : x)\
    \ {\n            if (isUniqueDigits(num)) {\n                result.add(num);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb5e733kv.java:20: error: cannot find symbol\n            if (isUniqueDigits(num))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglsl0r7k.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[13579]+$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpvjkezg0n.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"[13579]+\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long l : x) {\n \
    \           if (l.toString().chars().mapToObj(i -> (char)i).filter(c -> c == '2'\
    \ || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(l);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpojoz_v5v.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglsl0r7k.java:21)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long n : x) {\n\
    \            if (n.toString().matches(\"^[13579]+$\")) {\n                result.add(n);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().filter(c -> c % 2 == 0).count() == 0) {\n\
    \                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpvjkezg0n.java:21)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c %\
    \ 2 == 0).count() == 0) {\n                result.add(i);\n            }\n   \
    \     }\n        Collections.sort(result);\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long l : x) {\n\
    \            if (l.toString().chars().mapToObj(i -> (char)i).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(l);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6d4c53gv.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           boolean isUnique = true;\n            while (i > 0) {\n          \
    \      if (i % 2 == 0) {\n                    isUnique = false;\n            \
    \        break;\n                }\n                i /= 10;\n            }\n\
    \            if (isUnique) {\n                res.add(i);\n            }\n   \
    \     }\n        Collections.sort(res);\n        return res;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9z8segz6.java:36)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long num : x)\
    \ {\n            if (hasEvenDigit(num)) {\n                continue;\n       \
    \     }\n            result.add(num);\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpm9qudw5r.java:20: error: cannot find symbol\n            if (hasEvenDigit(num))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1659792893
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long l : x) {\n \
    \           if (l.toString().matches(\"[13579]+\")) {\n                res.add(l);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"[1-9]+\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnan21l4j.java:28)\n"
  stdout: ''
  timestamp: 1659792893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphofokonz.java:27)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here.\n        return null;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpib58h13d.java:22)\n"
  stdout: ''
  timestamp: 1659792893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           boolean flag = true;\n            for (char c : i.toString().toCharArray())\
    \ {\n                if (c % 2 == 0) {\n                    flag = false;\n  \
    \                  break;\n                }\n            }\n            if (flag)\
    \ {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphofokonz.java:27)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"[13579]+\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ans = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c % 2\
    \ == 0).count() == 0) {\n                ans.add(i);\n            }\n        }\n\
    \        Collections.sort(ans);\n        return ans;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"[13579]+\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpvjkezg0n.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglsl0r7k.java:21)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> res = new ArrayList<Long>();\n     \
    \   for (Long l : x) {\n            String s = String.valueOf(l);\n          \
    \  boolean flag = true;\n            for (int i = 0; i < s.length(); i++) {\n\
    \                if (s.charAt(i) % 2 == 0) {\n                    flag = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ (flag) {\n                res.add(l);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long n : x) {\n\
    \            if (n < 10) {\n                result.add(n);\n            } else\
    \ {\n                boolean hasEvenDigit = false;\n                while (n >\
    \ 0) {\n                    if ((n % 10) % 2 == 0) {\n                       \
    \ hasEvenDigit = true;\n                        break;\n                    }\n\
    \                    n /= 10;\n                }\n                if (!hasEvenDigit)\
    \ {\n                    result.add(n);\n                }\n            }\n  \
    \      }\n        Collections.sort(result);\n        return result;\n    }\n \
    \   public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ivtf6b4.java:40)\n"
  stdout: ''
  timestamp: 1659792893
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> ans = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c % 2\
    \ == 0).count() == 0) {\n                ans.add(i);\n            }\n        }\n\
    \        Collections.sort(ans);\n        return ans;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> res = new ArrayList<Long>();\n     \
    \   for (Long i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n\
    \                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[1-9]+$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqz2u47pt.java:28)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().allMatch(c -> (c - '0') % 2 != 0)) {\n  \
    \              res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (long i : x) {\n \
    \           if (i % 2 == 0) {\n                continue;\n            }\n    \
    \        boolean flag = true;\n            while (i > 0) {\n                if\
    \ (i % 10 % 2 == 0) {\n                    flag = false;\n                   \
    \ break;\n                }\n                i /= 10;\n            }\n       \
    \     if (flag) {\n                res.add(i);\n            }\n        }\n   \
    \     Collections.sort(res);\n        return res;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvps4t69f.java:39)\n"
  stdout: ''
  timestamp: 1659792893
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[13579]+$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().matches(\"[13579]+\")) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[13579]+$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[13579]+$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglsl0r7k.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long num : x)\
    \ {\n            if (num.toString().chars().mapToObj(i -> (char)i).filter(c ->\
    \ c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n            \
    \    result.add(num);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi8of5szi.java:29)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long n : x) {\n\
    \            if (n.toString().chars().mapToObj(i -> (char)i).filter(c -> c % 2\
    \ == 0).count() == 0) {\n                result.add(n);\n            }\n     \
    \   }\n        Collections.sort(result);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long num : x)\
    \ {\n            if (num.toString().chars().mapToObj(i -> (char)i).filter(c ->\
    \ c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n            \
    \    result.add(num);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi8of5szi.java:29)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().allMatch(c -> c % 2 != 0)) {\n          \
    \      res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      for (Long i : x) {\n            if (i.toString().chars().anyMatch(c ->\
    \ c == '2' || c == '4' || c == '6' || c == '8')) {\n                continue;\n\
    \            }\n            result.add(i);\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvr46m4fj.java:33)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        for (Long i : x) {\n   \
    \         if (i.toString().chars().mapToObj(c -> (char) c).allMatch(c -> c % 2\
    \ != 0)) {\n                y.add(i);\n            }\n        }\n        Collections.sort(y);\n\
    \        return y;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().filter(c -> c % 2 == 0).count() == 0) {\n\
    \                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        for (Long i : x) {\n   \
    \         if (i.toString().matches(\"^[13579]+$\")) {\n                y.add(i);\n\
    \            }\n        }\n        Collections.sort(y);\n        return y;\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[13579]+$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglsl0r7k.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (hasEvenDigit(i)) {\n                continue;\n            }\n\
    \            result.add(i);\n        }\n        Collections.sort(result);\n  \
    \      return result;\n    }\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz9nyt9sj.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1659792893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i % 2 == 0) {\n                continue;\n            }\n   \
    \         result.add(i);\n        }\n        Collections.sort(result);\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpihgk_d64.java:30)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c %\
    \ 2 == 0).count() == 0) {\n                result.add(i);\n            }\n   \
    \     }\n        Collections.sort(result);\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return x.stream().filter(i -> i.toString().chars().allMatch(j -> j % 2 != 0)).sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpvjkezg0n.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpvjkezg0n.java:21)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().matches(\"^[13579]+$\")) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().matches(\"[13579]+\")) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792893
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i < 10) {\n                result.add(i);\n            } else\
    \ {\n                boolean isUnique = true;\n                while (i > 0) {\n\
    \                    if (i % 2 == 0) {\n                        isUnique = false;\n\
    \                        break;\n                    }\n                    i\
    \ /= 10;\n                }\n                if (isUnique) {\n               \
    \     result.add(i);\n                }\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy929b09e.java:40)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().filter(c -> c % 2 == 0).count() == 0) {\n\
    \                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().matches(\"^[13579]+$\")) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        for (Long i : x) {\n   \
    \         if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c == '2'\
    \ || c == '4' || c == '6' || c == '8').count() == 0) {\n                y.add(i);\n\
    \            }\n        }\n        Collections.sort(y);\n        return y;\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl09joh7i.java:29)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i < 10) {\n                res.add(i);\n            } else {\n\
    \                boolean flag = true;\n                while (i > 0) {\n     \
    \               if (i % 2 == 0) {\n                        flag = false;\n   \
    \                     break;\n                    }\n                    i /=\
    \ 10;\n                }\n                if (flag) {\n                    res.add(i);\n\
    \                }\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc2bjoes9.java:40)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().allMatch(c -> c % 2 != 0)) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c %\
    \ 2 == 0).count() == 0) {\n                result.add(i);\n            }\n   \
    \     }\n        Collections.sort(result);\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long n : x) {\n\
    \            if (n.toString().chars().mapToObj(i -> (char)i).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(n);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmmwgw409.java:29)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"[13579]+\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (long i : x) {\n\
    \            if (i % 2 != 0) {\n                result.add(i);\n            }\n\
    \        }\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpauo5mgs0.java:27)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        return res;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5xssh08r.java:27)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpvjkezg0n.java:21)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().filter(c -> c % 2 == 0).count() == 0) {\n\
    \                result.add(i);\n            }\n        }\n        result.sort(Comparator.naturalOrder());\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphofokonz.java:27)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglsl0r7k.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long n : x) {\n\
    \            if (n.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(n);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf7gd809a.java:29)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().allMatch(c -> c % 2 != 0)) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[1-9]*$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ulbib1h.java:28)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[13579]+$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long l : x) {\n\
    \            if (l.toString().matches(\"^[13579]+$\")) {\n                result.add(l);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      for (Long i : x) {\n            if (i.toString().chars().mapToObj(c ->\
    \ (char) c).allMatch(c -> c % 2 != 0)) {\n                result.add(i);\n   \
    \         }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      for (Long i : x) {\n            if (i.toString().matches(\"^[1-9]*$\"))\
    \ {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpal0u1ge8.java:31)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      for (Long n : x) {\n            if (hasEvenDigit(n)) {\n              \
    \  continue;\n            }\n            result.add(n);\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd6ynje4p.java:23: error: cannot find symbol\n            if (hasEvenDigit(n))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(Long)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[13579]+$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglsl0r7k.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpvjkezg0n.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglsl0r7k.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[13579]+$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpvjkezg0n.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[1-9]+$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqz2u47pt.java:28)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpvjkezg0n.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> res = new ArrayList<Long>();\n     \
    \   for (Long i : x) {\n            if (i.toString().chars().mapToObj(c -> (char)\
    \ c).filter(c -> c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n\
    \                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7atfyxeu.java:32)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c %\
    \ 2 == 0).count() == 0) {\n                result.add(i);\n            }\n   \
    \     }\n        Collections.sort(result);\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().allMatch(c -> c % 2 != 0)) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        for (Long i : x) {\n   \
    \         if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c == '2'\
    \ || c == '4' || c == '6' || c == '8').count() == 0) {\n                y.add(i);\n\
    \            }\n        }\n        Collections.sort(y);\n        return y;\n \
    \   }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl09joh7i.java:29)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglsl0r7k.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long num : x)\
    \ {\n            if (num.toString().chars().mapToObj(i -> (char) i).filter(c ->\
    \ c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n            \
    \    result.add(num);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp08vzw6ln.java:29)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().anyMatch(c -> c % 2 == 0)) {\n          \
    \      continue;\n            }\n            res.add(i);\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> y = new ArrayList<Long>();\n        for (Long i : x) {\n   \
    \         if (i % 2 != 0) {\n                y.add(i);\n            }\n      \
    \  }\n        Collections.sort(y);\n        return y;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprt9d1dh0.java:29)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"[13579]+\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[13579]+$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"[13579]+\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().filter(c -> c % 2 == 0).count() == 0) {\n\
    \                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> res = new ArrayList<Long>();\n     \
    \   for (Long i : x) {\n            if (i.toString().matches(\"[13579]+\")) {\n\
    \                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792893
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[13579]+$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long l : x) {\n \
    \           if (l.toString().chars().filter(c -> c % 2 == 0).count() == 0) {\n\
    \                res.add(l);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (hasUniqueDigits(i)) {\n                result.add(i);\n     \
    \       }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1qjfcsoa.java:20: error: cannot find symbol\n            if (hasUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(Long)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      for (Long i : x) {\n            if (i.toString().chars().mapToObj(c ->\
    \ (char) c).filter(c -> c == '2' || c == '4' || c == '6' || c == '8').count()\
    \ == 0) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4my80fhk.java:32)\n"
  stdout: ''
  timestamp: 1659792895
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[13579]+$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpvjkezg0n.java:21)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i < 10) {\n                result.add(i);\n            } else\
    \ {\n                boolean isUnique = true;\n                long temp = i;\n\
    \                while (temp > 0) {\n                    long digit = temp % 10;\n\
    \                    if (digit % 2 == 0) {\n                        isUnique =\
    \ false;\n                        break;\n                    }\n            \
    \        temp /= 10;\n                }\n                if (isUnique) {\n   \
    \                 result.add(i);\n                }\n            }\n        }\n\
    \        Collections.sort(result);\n        return result;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpvjkezg0n.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"[13579]+\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglsl0r7k.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpvjkezg0n.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ // Your code here\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpb9i8javl.java:22)\n"
  stdout: ''
  timestamp: 1659792895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[1-9]+$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqz2u47pt.java:28)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglsl0r7k.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return new ArrayList<Long>();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglsl0r7k.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ return null;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmpvjkezg0n.java:21)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"[13579]+\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (long i : x) {\n\
    \            if (i < 10) {\n                result.add(i);\n            } else\
    \ {\n                boolean hasEven = false;\n                long num = i;\n\
    \                while (num > 0) {\n                    if ((num % 10) % 2 ==\
    \ 0) {\n                        hasEven = true;\n                        break;\n\
    \                    }\n                    num /= 10;\n                }\n  \
    \              if (!hasEven) {\n                    result.add(i);\n         \
    \       }\n            }\n        }\n        Collections.sort(result);\n     \
    \   return result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792895
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long num : x)\
    \ {\n            if (num.toString().chars().mapToObj(i -> (char) i).filter(c ->\
    \ c == '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n            \
    \    result.add(num);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp08vzw6ln.java:29)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long l : x) {\n\
    \            if (l.toString().chars().mapToObj(i -> (char)i).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(l);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6d4c53gv.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> res = new ArrayList<Long>();\n        for (Long i : x) {\n \
    \           if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp78jju62f.java:29)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[1-9]*$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ulbib1h.java:28)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().matches(\"^[1-9]+$\")) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqz2u47pt.java:28)\n"
  stdout: ''
  timestamp: 1659792894
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c %\
    \ 2 == 0).count() == 0) {\n                result.add(i);\n            }\n   \
    \     }\n        Collections.sort(result);\n        return result;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l,\
    \ (long)33l, (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().filter(c -> c % 2 == 0).count() == 0) {\n\
    \                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n    }\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l,\
    \ (long)1422l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
    \ (long)15l, (long)33l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l)))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l, (long)2033l,\
    \ (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ uniqueDigits((new ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l,\
    \ (long)1l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l, (long)15l,\
    \ (long)33l)))\n    // >>> uniqueDigits((new ArrayList<Long>(Arrays.asList((long)152l,\
    \ (long)323l, (long)1422l, (long)10l))))\n    // (new ArrayList<Long>(Arrays.asList()))\n\
    \    public static ArrayList<Long> uniqueDigits(ArrayList<Long> x) {\n       \
    \ ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : x) {\n\
    \            if (i.toString().chars().mapToObj(c -> (char) c).filter(c -> c ==\
    \ '2' || c == '4' || c == '6' || c == '8').count() == 0) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    \    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)15l, (long)33l, (long)1422l, (long)1l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList((long)1l, (long)15l, (long)33l)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Long>(Arrays.asList((long)152l, (long)323l, (long)1422l, (long)10l)))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)12345l,\
    \ (long)2033l, (long)111l, (long)151l)))).equals((new ArrayList<Long>(Arrays.asList((long)111l,\
    \ (long)151l)))));\n    assert(uniqueDigits((new ArrayList<Long>(Arrays.asList((long)135l,\
    \ (long)103l, (long)31l)))).equals((new ArrayList<Long>(Arrays.asList((long)31l,\
    \ (long)135l)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkh48_rs1.java:29)\n"
  stdout: ''

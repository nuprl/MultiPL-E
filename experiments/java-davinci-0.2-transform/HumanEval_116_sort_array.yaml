name: HumanEval_116_sort_array
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // In this Kata, you have to sort an array of non-negative\
  \ integers according to\n    // number of ones in their binary representation in\
  \ ascending order.\n    // For similar number of ones, sort based on decimal value.\n\
  \    // It must be implemented like this:\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)5l, (long)2l, (long)3l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)4l, (long)5l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)-2l,\
  \ (long)-3l, (long)-4l, (long)-5l, (long)-6l))))\n    // (new ArrayList<Long>(Arrays.asList((long)-6l,\
  \ (long)-5l, (long)-4l, (long)-3l, (long)-2l)))\n    // >>> sortArray((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)0l, (long)2l, (long)3l, (long)4l))))\n    // (new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)1l, (long)2l, (long)3l, (long)4l)))\n    public static ArrayList<Long> sortArray(ArrayList<Long>\
  \ arr) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(sortArray((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)2l, (long)3l, (long)4l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)3l, (long)5l)))));\n\
  \    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)-2l, (long)-3l, (long)-4l,\
  \ (long)-5l, (long)-6l)))).equals((new ArrayList<Long>(Arrays.asList((long)-4l,\
  \ (long)-2l, (long)-6l, (long)-5l, (long)-3l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)0l, (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)1l, (long)2l, (long)4l, (long)3l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList()))).equals((new\
  \ ArrayList<Long>(Arrays.asList()))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)5l, (long)77l, (long)4l, (long)5l, (long)3l, (long)5l, (long)7l, (long)2l,\
  \ (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)2l,\
  \ (long)4l, (long)4l, (long)3l, (long)3l, (long)5l, (long)5l, (long)5l, (long)7l,\
  \ (long)77l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)6l, (long)44l, (long)12l, (long)32l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)32l,\
  \ (long)3l, (long)5l, (long)6l, (long)12l, (long)44l)))));\n    assert(sortArray((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)16l, (long)32l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)16l, (long)32l)))));\n\
  \    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l,\
  \ (long)16l, (long)32l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l,\
  \ (long)8l, (long)16l, (long)32l)))));\n    }\n\n}\n"
completions: ['        return arr;', "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> nineteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentys = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentys1 = new ArrayList<Long>();\n        ArrayList<Long> twentys2 = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentys3 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentys4 = new ArrayList<Long>();\n        ArrayList<Long> twentys5 = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentys6 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentys7 = new ArrayList<Long>();\n        ArrayList<Long", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twos = new ArrayList<Long>();\n        ArrayList<Long> threes = new ArrayList<Long>();\n\
    \        ArrayList<Long> fours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fives = new ArrayList<Long>();\n        ArrayList<Long> sixes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eights = new ArrayList<Long>();\n        ArrayList<Long> nines = new ArrayList<Long>();\n\
    \        ArrayList<Long> tens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ elevens = new ArrayList<Long>();\n        ArrayList<Long> twelves = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourteens = new ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentyones = new ArrayList<Long>();\n        ArrayList<Long> twentytwos = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twentythrees = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentyfours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentyfives = new ArrayList<Long>();\n        ArrayList<Long> twentysixes =\
    \ new ArrayList<Long>();\n        ArrayList<Long> twentysevens = new ArrayList<Long>();\n\
    \        ArrayList<Long", "        // Your code here\n        return arr;", " \
    \       ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> fourties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ninties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new", " \
    \       ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByOnes = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimal = new\
    \ ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndDecimalAndOnes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByDecimalAndOnesAndDecimal = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimal = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnes = new\
    \ ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnes\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnes\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnes\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAnd",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (Long i :\
    \ arr) {\n            sorted.add(i);\n        }\n        sorted.sort(new Comparator<Long>()\
    \ {\n            public int compare(Long a, Long b) {\n                String\
    \ aBin = Long.toBinaryString(a);\n                String bBin = Long.toBinaryString(b);\n\
    \                int aOnes = 0;\n                int bOnes = 0;\n            \
    \    for (int i = 0; i < aBin.length(); i++) {\n                    if (aBin.charAt(i)\
    \ == '1') {\n                        aOnes++;\n                    }\n       \
    \         }\n                for (int i = 0; i < bBin.length(); i++) {\n     \
    \               if (bBin.charAt(i) == '1') {\n                        bOnes++;\n\
    \                    }\n                }\n                if (aOnes == bOnes)\
    \ {\n                    return a.compareTo(b);\n                } else {\n  \
    \                  return aOnes - bOnes;\n                }\n            }\n \
    \       });\n        return sorted;", "        // your code here\n        return\
    \ arr;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentyones = new ArrayList<Long>();\n        ArrayList<Long> twentytwos = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twentythrees = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentyfours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentyfives = new ArrayList<Long>();\n        ArrayList<Long> twentysixes =\
    \ new ArrayList<Long>();\n        ArrayList<Long> twentysevens = new ArrayList<Long>();\n\
    \        ArrayList", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByZeros = new ArrayList<Long>();\n        for (Long i : arr) {\n     \
    \       if (Long.bitCount(i) % 2 == 0) {\n                sortedByZeros.add(i);\n\
    \            } else {\n                sortedByOnes.add(i);\n            }\n \
    \       }\n        Collections.sort(sortedByOnes);\n        Collections.sort(sortedByZeros);\n\
    \        sorted.addAll(sortedByOnes);\n        sorted.addAll(sortedByZeros);\n\
    \        return sorted;", "        // Your code here\n        return arr;", " \
    \       ArrayList<Long> sorted = new ArrayList<>();\n        ArrayList<Long> zeros\
    \ = new ArrayList<>();\n        ArrayList<Long> ones = new ArrayList<>();\n  \
    \      for (Long l : arr) {\n            if (Long.bitCount(l) == 0) {\n      \
    \          zeros.add(l);\n            } else {\n                ones.add(l);\n\
    \            }\n        }\n        Collections.sort(zeros);\n        Collections.sort(ones);\n\
    \        sorted.addAll(zeros);\n        sorted.addAll(ones);\n        return sorted;",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> nineteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twenties = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourties = new ArrayList<Long>();\n        ArrayList<Long> fifties = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventies = new ArrayList<Long>();\n        ArrayList<Long> eighties = new ArrayList<Long>();\n\
    \        ArrayList<Long> nineties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ hundreds = new ArrayList", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByDecimal = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegative\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositive\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegative\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositive\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositiveAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositiveAndZeroAndNegative\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositive\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNeg",
  "        // Your code here\n        return arr;", "        ArrayList<Long> sorted\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sorted2 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted3 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted4 = new ArrayList<Long>();\n        ArrayList<Long> sorted5 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted6 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted7 = new ArrayList<Long>();\n        ArrayList<Long> sorted8 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted9 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted10 = new ArrayList<Long>();\n        ArrayList<Long> sorted11 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted12 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted13 = new ArrayList<Long>();\n        ArrayList<Long> sorted14 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted15 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted16 = new ArrayList<Long>();\n        ArrayList<Long> sorted17 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted18 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted19 = new ArrayList<Long>();\n        ArrayList<Long> sorted20 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted21 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted22 = new ArrayList<Long>();\n        ArrayList<Long> sorted23 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted24 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted25 = new ArrayList<Long>();\n        ArrayList<Long> sorted26 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted27 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted28 = new ArrayList<Long>();\n        ArrayList<Long> sorted29 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted30 = new ArrayList<Long>();\n        Array", " \
    \       ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eigteens = new ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentys = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentys1 = new ArrayList<Long>();\n        ArrayList<Long> twentys2 = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentys3 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentys4 = new ArrayList<Long>();\n        ArrayList<Long> twentys5 = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentys6 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentys7 = new ArrayList<Long>();\n        ArrayList", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> sorted_ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted_zeros = new ArrayList<Long>();\n        for (Long\
    \ i : arr) {\n            if (Long.bitCount(i) == 0) {\n                sorted_zeros.add(i);\n\
    \            } else {\n                sorted_ones.add(i);\n            }\n  \
    \      }\n        Collections.sort(sorted_ones);\n        Collections.sort(sorted_zeros);\n\
    \        sorted.addAll(sorted_ones);\n        sorted.addAll(sorted_zeros);\n \
    \       return sorted;", "        return new ArrayList<Long>(arr.stream().sorted((a,\
    \ b) -> {\n            int a1 = Long.bitCount(a);\n            int b1 = Long.bitCount(b);\n\
    \            if (a1 == b1) {\n                return a.compareTo(b);\n       \
    \     }\n            return a1 - b1;\n        }).collect(Collectors.toList()));",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> nineteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twenties = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirtyones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtytwos = new ArrayList<Long>();\n        ArrayList<Long> thirtythrees =\
    \ new ArrayList<Long>();\n        ArrayList<Long> thirtyfours = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirtyfives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtysixes = new ArrayList<Long>();\n        ArrayList<Long> thirtysevens =\
    \ new ArrayList<Long>();\n        ArrayList<Long> thirty", "        // Your code\
    \ here\n        return arr;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            sorted.add(arr.get(i));\n\
    \        }\n        Collections.sort(sorted, new Comparator<Long>() {\n      \
    \      public int compare(Long a, Long b) {\n                int aOnes = Long.bitCount(a);\n\
    \                int bOnes = Long.bitCount(b);\n                if (aOnes == bOnes)\
    \ {\n                    return a.compareTo(b);\n                } else {\n  \
    \                  return aOnes - bOnes;\n                }\n            }\n \
    \       });\n        return sorted;", "        // Your code here\n        return\
    \ arr;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for\
    \ (Long l : arr) {\n            sorted.add(l);\n        }\n        Collections.sort(sorted,\
    \ new Comparator<Long>() {\n            public int compare(Long l1, Long l2) {\n\
    \                int l1Ones = Long.bitCount(l1);\n                int l2Ones =\
    \ Long.bitCount(l2);\n                if (l1Ones == l2Ones) {\n              \
    \      return l1.compareTo(l2);\n                } else {\n                  \
    \  return l1Ones - l2Ones;\n                }\n            }\n        });\n  \
    \      return sorted;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eigteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentyones = new ArrayList<Long>();\n        ArrayList<Long> twentytwos = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twentythrees = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentyfours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentyfives = new ArrayList<Long>();\n        ArrayList<Long> twentysixes =\
    \ new ArrayList<Long>();\n        ArrayList<Long> twentysevens = new ArrayList<Long>();\n\
    \        Array", "        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> negatives = new ArrayList<Long>();\n\
    \        ArrayList<Long> positives = new ArrayList<Long>();\n        for (Long\
    \ l : arr) {\n            if (l < 0) {\n                negatives.add(l);\n  \
    \          } else {\n                positives.add(l);\n            }\n      \
    \  }\n        for (Long l : positives) {\n            if (Long.bitCount(l) ==\
    \ 1) {\n                ones.add(l);\n            } else {\n                zeros.add(l);\n\
    \            }\n        }\n        Collections.sort(ones);\n        Collections.sort(zeros);\n\
    \        Collections.sort(negatives);\n        result.addAll(ones);\n        result.addAll(zeros);\n\
    \        result.addAll(negatives);\n        return result;", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            sorted.add(arr.get(i));\n        }\n        Collections.sort(sorted,\
    \ new Comparator<Long>() {\n            public int compare(Long a, Long b) {\n\
    \                String aBin = Long.toBinaryString(a);\n                String\
    \ bBin = Long.toBinaryString(b);\n                int aOnes = 0;\n           \
    \     int bOnes = 0;\n                for (int i = 0; i < aBin.length(); i++)\
    \ {\n                    if (aBin.charAt(i) == '1') {\n                      \
    \  aOnes++;\n                    }\n                }\n                for (int\
    \ i = 0; i < bBin.length(); i++) {\n                    if (bBin.charAt(i) ==\
    \ '1') {\n                        bOnes++;\n                    }\n          \
    \      }\n                if (aOnes == bOnes) {\n                    return a.compareTo(b);\n\
    \                } else {\n                    return aOnes - bOnes;\n       \
    \         }\n            }\n        });\n        return sorted;", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twos = new ArrayList<Long>();\n        ArrayList<Long> threes = new ArrayList<Long>();\n\
    \        ArrayList<Long> fours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fives = new ArrayList<Long>();\n        ArrayList<Long> sixes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eights = new ArrayList<Long>();\n        ArrayList<Long> nines = new ArrayList<Long>();\n\
    \        ArrayList<Long> tens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ elevens = new ArrayList<Long>();\n        ArrayList<Long> twelves = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourteens = new ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> nineteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new ArrayList",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (long i =\
    \ 0; i < arr.size(); i++) {\n            sorted.add(arr.get((int)i));\n      \
    \  }\n        Collections.sort(sorted, new Comparator<Long>() {\n            public\
    \ int compare(Long a, Long b) {\n                String aBin = Long.toBinaryString(a);\n\
    \                String bBin = Long.toBinaryString(b);\n                int aOnes\
    \ = 0;\n                int bOnes = 0;\n                for (int i = 0; i < aBin.length();\
    \ i++) {\n                    if (aBin.charAt(i) == '1') {\n                 \
    \       aOnes++;\n                    }\n                }\n                for\
    \ (int i = 0; i < bBin.length(); i++) {\n                    if (bBin.charAt(i)\
    \ == '1') {\n                        bOnes++;\n                    }\n       \
    \         }\n                if (aOnes < bOnes) {\n                    return\
    \ -1;\n                } else if (aOnes > bOnes) {\n                    return\
    \ 1;\n                } else {\n                    if (a < b) {\n           \
    \             return -1;\n                    } else if (a > b) {\n          \
    \              return 1;\n                    } else {\n                     \
    \   return 0;\n                    }\n                }\n            }\n     \
    \   });\n        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        for (Long num : arr) {\n            if\
    \ (num == 0) {\n                zeros.add(num);\n            } else {\n      \
    \          ones.add(num);\n            }\n        }\n        Collections.sort(ones);\n\
    \        sorted.addAll(zeros);\n        sorted.addAll(ones);\n        return sorted;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> nineteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twenties = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ forties = new ArrayList<Long>();\n        ArrayList<Long> fifties = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventies = new ArrayList<Long>();\n        ArrayList<Long> eighties = new ArrayList<Long>();\n\
    \        ArrayList<Long> nineties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ hundreds = new ArrayList", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        for (Long i : arr) {\n            if\
    \ (Long.bitCount(i) == 0) {\n                zeros.add(i);\n            } else\
    \ {\n                ones.add(i);\n            }\n        }\n        Collections.sort(ones);\n\
    \        Collections.sort(zeros);\n        result.addAll(ones);\n        result.addAll(zeros);\n\
    \        return result;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        for (Long l : arr) {\n            sorted.add(l);\n        }\n       \
    \ Collections.sort(sorted, new Comparator<Long>() {\n            public int compare(Long\
    \ l1, Long l2) {\n                int count1 = Long.bitCount(l1);\n          \
    \      int count2 = Long.bitCount(l2);\n                if (count1 == count2)\
    \ {\n                    return l1.compareTo(l2);\n                }\n       \
    \         return count1 - count2;\n            }\n        });\n        return\
    \ sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n       \
    \ ArrayList<Long> sortedByOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByZeros = new ArrayList<Long>();\n        for (Long l : arr) {\n     \
    \       if (Long.bitCount(l) == 0) {\n                sortedByZeros.add(l);\n\
    \            } else {\n                sortedByOnes.add(l);\n            }\n \
    \       }\n        Collections.sort(sortedByOnes);\n        Collections.sort(sortedByZeros);\n\
    \        sorted.addAll(sortedByOnes);\n        sorted.addAll(sortedByZeros);\n\
    \        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> fourties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ninties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new", " \
    \       // Your code here\n        return arr;", "        ArrayList<Long> sorted\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sorted_ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted_zeros = new ArrayList<Long>();\n        for (Long\
    \ l : arr) {\n            if (Long.bitCount(l) == 0) {\n                sorted_zeros.add(l);\n\
    \            } else {\n                sorted_ones.add(l);\n            }\n  \
    \      }\n        Collections.sort(sorted_ones);\n        Collections.sort(sorted_zeros);\n\
    \        sorted.addAll(sorted_ones);\n        sorted.addAll(sorted_zeros);\n \
    \       return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> nineteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new ArrayList",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new Array",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            int ones = 0;\n            long num = arr.get(i);\n\
    \            while (num > 0) {\n                ones += num % 2;\n           \
    \     num /= 2;\n            }\n            sorted.add(ones * 10000000 + arr.get(i));\n\
    \        }\n        Collections.sort(sorted);\n        for (int i = 0; i < sorted.size();\
    \ i++) {\n            sorted.set(i, sorted.get(i) % 10000000);\n        }\n  \
    \      return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedZeros = new ArrayList<Long>();\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (Long.bitCount(arr.get(i)) == 0) {\n                sortedZeros.add(arr.get(i));\n\
    \            } else {\n                sortedOnes.add(arr.get(i));\n         \
    \   }\n        }\n        Collections.sort(sortedOnes);\n        Collections.sort(sortedZeros);\n\
    \        sorted.addAll(sortedZeros);\n        sorted.addAll(sortedOnes);\n   \
    \     return sorted;", "        if (arr.size() == 0) {\n            return arr;\n\
    \        }\n        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ negatives = new ArrayList<Long>();\n        ArrayList<Long> positives = new\
    \ ArrayList<Long>();\n        for (Long i : arr) {\n            if (i < 0) {\n\
    \                negatives.add(i);\n            } else {\n                positives.add(i);\n\
    \            }\n        }\n        Collections.sort(negatives);\n        Collections.sort(positives);\n\
    \        for (Long i : negatives) {\n            sorted.add(i);\n        }\n \
    \       for (Long i : positives) {\n            sorted.add(i);\n        }\n  \
    \      return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> oneCounts = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeroCounts = new ArrayList<Long>();\n        ArrayList<Long> negative = new\
    \ ArrayList<Long>();\n        ArrayList<Long> positive = new ArrayList<Long>();\n\
    \        for (Long l : arr) {\n            if (l < 0) {\n                negative.add(l);\n\
    \            } else {\n                positive.add(l);\n            }\n     \
    \   }\n        Collections.sort(negative);\n        Collections.sort(positive);\n\
    \        for (Long l : positive) {\n            if (l == 0) {\n              \
    \  zeroCounts.add(l);\n            } else {\n                oneCounts.add(l);\n\
    \            }\n        }\n        Collections.sort(oneCounts, new Comparator<Long>()\
    \ {\n            public int compare(Long l1, Long l2) {\n                return\
    \ Long.bitCount(l1) - Long.bitCount(l2);\n            }\n        });\n       \
    \ sorted.addAll(zeroCounts);\n        sorted.addAll(oneCounts);\n        Collections.reverse(negative);\n\
    \        sorted.addAll(negative);\n        return sorted;", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> sortedWithOnes = new\
    \ ArrayList<Long>();\n        ArrayList<Long> sortedWithZeros = new ArrayList<Long>();\n\
    \        for (Long i : arr) {\n            if (Long.bitCount(i) == 0) {\n    \
    \            sortedWithZeros.add(i);\n            } else {\n                sortedWithOnes.add(i);\n\
    \            }\n        }\n        Collections.sort(sortedWithOnes);\n       \
    \ Collections.sort(sortedWithZeros);\n        for (Long i : sortedWithOnes) {\n\
    \            sorted.add(i);\n        }\n        for (Long i : sortedWithZeros)\
    \ {\n            sorted.add(i);\n        }\n        return sorted;", "       \
    \ ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long> zeros\
    \ = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> fourties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ninties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new", " \
    \       ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByOnes = new ArrayList<Long>();\n        ArrayList<Long> sortedByZeros\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndZeros = new\
    \ ArrayList<Long>();\n        ArrayList<Long> sortedByZerosAndOnes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByZerosAndZeros = new ArrayList<Long>();\n    \
    \    ArrayList<Long> sortedByOnesAndOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByOnesAndZerosAndZeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByZerosAndOnesAndOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByZerosAndZerosAndZeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByOnesAndOnesAndOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByOnesAndZerosAndZerosAndZeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByZerosAndOnesAndOnesAndOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByZerosAndZerosAndZerosAndZeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByOnesAndOnesAndOnesAndOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByOnesAndZerosAndZerosAndZerosAndZeros = new ArrayList<Long>();\n    \
    \    ArrayList<Long> sortedByZerosAndOnesAndOnesAndOnesAndOnes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByZerosAndZerosAndZerosAndZerosAndZeros = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndOnesAndOnesAndOnesAndOnes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndZerosAndZerosAndZerosAndZerosAndZeros\
    \ = new ArrayList<Long>();", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> fourties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ninties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new", " \
    \       ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        for (Long l : arr) {\n            if (Long.bitCount(l) == 0) {\n    \
    \            zeros.add(l);\n            } else {\n                ones.add(l);\n\
    \            }\n        }\n        Collections.sort(ones);\n        Collections.sort(zeros);\n\
    \        sorted.addAll(ones);\n        sorted.addAll(zeros);\n        return sorted;",
  "        // Your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> one = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zero = new ArrayList<Long>();\n        ArrayList<Long> neg = new ArrayList<Long>();\n\
    \        for (Long i : arr) {\n            if (i < 0) {\n                neg.add(i);\n\
    \            } else if (i == 0) {\n                zero.add(i);\n            }\
    \ else {\n                one.add(i);\n            }\n        }\n        Collections.sort(one,\
    \ new Comparator<Long>() {\n            public int compare(Long a, Long b) {\n\
    \                int countA = 0;\n                int countB = 0;\n          \
    \      while (a > 0) {\n                    if (a % 2 == 1) {\n              \
    \          countA++;\n                    }\n                    a = a / 2;\n\
    \                }\n                while (b > 0) {\n                    if (b\
    \ % 2 == 1) {\n                        countB++;\n                    }\n    \
    \                b = b / 2;\n                }\n                if (countA ==\
    \ countB) {\n                    return a.compareTo(b);\n                } else\
    \ {\n                    return countA - countB;\n                }\n        \
    \    }\n        });\n        Collections.sort(neg, new Comparator<Long>() {\n\
    \            public int compare(Long a, Long b) {\n                int countA\
    \ = 0;\n                int countB = 0;\n                while (a < 0) {\n   \
    \                 if (a % 2 == 1) {\n                        countA++;\n     \
    \               }\n                    a = a / 2;\n                }\n       \
    \         while (b < 0) {\n                    if (b % 2 == 1) {\n           \
    \             countB++;\n                    }\n                    b = b / 2;\n\
    \                }\n                if (countA == countB) {\n                \
    \    return a.compareTo(b);\n                } else {\n                    return\
    \ countA - countB;\n                }\n            }\n        });\n        for\
    \ (Long i : neg) {\n            result.add(i);\n        }\n        for (Long i\
    \ : zero) {\n            result.add(i);\n       ", "        ArrayList<Long> sorted\
    \ = new ArrayList<>();\n        for (int i = 0; i < arr.size(); i++) {\n     \
    \       sorted.add(arr.get(i));\n        }\n        Collections.sort(sorted, new\
    \ Comparator<Long>() {\n            @Override\n            public int compare(Long\
    \ a, Long b) {\n                if (Long.bitCount(a) == Long.bitCount(b)) {\n\
    \                    return a.compareTo(b);\n                }\n             \
    \   return Long.bitCount(a) - Long.bitCount(b);\n            }\n        });\n\
    \        return sorted;", "        // Your code here\n        return arr;", " \
    \       ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> nineteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twenties = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirtyones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtytwos = new ArrayList<Long>();\n        ArrayList<Long> thirtythrees =\
    \ new ArrayList<Long>();\n        ArrayList<Long> thirtyfours = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirtyfives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtysixes = new ArrayList<Long>();\n        ArrayList<Long> thirtysevens =\
    \ new ArrayList<Long>();\n        ArrayList<Long> thirty", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> negatives = new ArrayList<Long>();\n\
    \        ArrayList<Long> positives = new ArrayList<Long>();\n        for (Long\
    \ l : arr) {\n            if (l < 0) {\n                negatives.add(l);\n  \
    \          } else {\n                positives.add(l);\n            }\n      \
    \  }\n        Collections.sort(negatives);\n        Collections.sort(positives);\n\
    \        Collections.reverse(negatives);\n        Collections.reverse(positives);\n\
    \        for (Long l : negatives) {\n            sorted.add(l);\n        }\n \
    \       for (Long l : positives) {\n            sorted.add(l);\n        }\n  \
    \      return sorted;", "        // Your code here\n        return arr;", "  \
    \      ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new Array",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            sorted.add(arr.get(i));\n        }\n   \
    \     Collections.sort(sorted, new Comparator<Long>() {\n            public int\
    \ compare(Long a, Long b) {\n                int aOnes = Long.bitCount(a);\n \
    \               int bOnes = Long.bitCount(b);\n                if (aOnes == bOnes)\
    \ {\n                    return a.compareTo(b);\n                } else {\n  \
    \                  return aOnes - bOnes;\n                }\n            }\n \
    \       });\n        return sorted;", "        return arr.stream().sorted(\n \
    \           Comparator.comparing(Problem::countOnes).thenComparing(Long::compareTo)\n\
    \        ).collect(Collectors.toCollection(ArrayList::new));", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> sorted_ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted_zeros = new ArrayList<Long>();\n        for (Long\
    \ i : arr) {\n            if (i == 0) {\n                sorted_zeros.add(i);\n\
    \            } else {\n                sorted_ones.add(i);\n            }\n  \
    \      }\n        sorted_ones.sort(new Comparator<Long>() {\n            public\
    \ int compare(Long a, Long b) {\n                return Long.bitCount(a) - Long.bitCount(b);\n\
    \            }\n        });\n        sorted.addAll(sorted_zeros);\n        sorted.addAll(sorted_ones);\n\
    \        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            sorted.add(arr.get(i));\n\
    \        }\n        Collections.sort(sorted, new Comparator<Long>() {\n      \
    \      public int compare(Long a, Long b) {\n                int aOnes = countOnes(a);\n\
    \                int bOnes = countOnes(b);\n                if (aOnes == bOnes)\
    \ {\n                    return a.compareTo(b);\n                } else {\n  \
    \                  return aOnes - bOnes;\n                }\n            }\n \
    \       });\n        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> nineteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtyones = new ArrayList<Long>();\n        ArrayList<Long> thirtytwos = new\
    \ ArrayList<Long>();\n        ArrayList<Long> thirtythrees = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirtyfours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtyfives = new ArrayList<Long>();\n        ArrayList<Long> thirtysixes =\
    \ new ArrayList<Long>();\n        ArrayList<Long> thirtysevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirty", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> nineteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new ArrayList",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new Array",
  "        // Your code here\n        return arr;", "        ArrayList<Long> sorted\
    \ = new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        for (Long l :\
    \ arr) {\n            if (l == 0) {\n                zeros.add(l);\n         \
    \   } else {\n                ones.add(l);\n            }\n        }\n       \
    \ Collections.sort(ones);\n        sorted.addAll(zeros);\n        sorted.addAll(ones);\n\
    \        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        for (Long i : arr) {\n            if\
    \ (Long.bitCount(i) == 0) {\n                zeros.add(i);\n            } else\
    \ {\n                ones.add(i);\n            }\n        }\n        Collections.sort(ones);\n\
    \        Collections.sort(zeros);\n        sorted.addAll(ones);\n        sorted.addAll(zeros);\n\
    \        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new Array",
  "        // Your code here\n        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> negative = new ArrayList<Long>();\n        ArrayList<Long>\
    \ positive = new ArrayList<Long>();\n        for (Long l : arr) {\n          \
    \  if (l < 0) {\n                negative.add(l);\n            } else {\n    \
    \            positive.add(l);\n            }\n        }\n        Collections.sort(negative);\n\
    \        Collections.sort(positive);\n        for (Long l : negative) {\n    \
    \        sorted.add(l);\n        }\n        for (Long l : positive) {\n      \
    \      sorted.add(l);\n        }\n        return sorted;", "        // Your code\
    \ here\n        return arr;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> nineteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new ArrayList",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> nineteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twenties = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourties = new ArrayList<Long>();\n        ArrayList<Long> fifties = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventies = new ArrayList<Long>();\n        ArrayList<Long> eighties = new ArrayList<Long>();\n\
    \        ArrayList<Long> nineties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ hundreds = new ArrayList", "        // your code here\n        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twos = new ArrayList<Long>();\n        ArrayList<Long> threes = new ArrayList<Long>();\n\
    \        ArrayList<Long> fours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fives = new ArrayList<Long>();\n        ArrayList<Long> sixes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eights = new ArrayList<Long>();\n        ArrayList<Long> nines = new ArrayList<Long>();\n\
    \        ArrayList<Long> tens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ elevens = new ArrayList<Long>();\n        ArrayList<Long> twelves = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourteens = new ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> fourties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ninties = new ArrayList<Long>();\n        ArrayList", "        // Your code\
    \ here\n        return arr;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        for (Long l : arr) {\n            sorted.add(l);\n        }\n       \
    \ Collections.sort(sorted, new Comparator<Long>() {\n            public int compare(Long\
    \ a, Long b) {\n                String aBin = Long.toBinaryString(a);\n      \
    \          String bBin = Long.toBinaryString(b);\n                int aOnes =\
    \ 0;\n                int bOnes = 0;\n                for (int i = 0; i < aBin.length();\
    \ i++) {\n                    if (aBin.charAt(i) == '1') {\n                 \
    \       aOnes++;\n                    }\n                }\n                for\
    \ (int i = 0; i < bBin.length(); i++) {\n                    if (bBin.charAt(i)\
    \ == '1') {\n                        bOnes++;\n                    }\n       \
    \         }\n                if (aOnes == bOnes) {\n                    return\
    \ a.compareTo(b);\n                } else {\n                    return aOnes\
    \ - bOnes;\n                }\n            }\n        });\n        return sorted;",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        for (Long l :\
    \ arr) {\n            if (Long.bitCount(l) == 0) {\n                zeros.add(l);\n\
    \            } else if (Long.bitCount(l) == 1) {\n                ones.add(l);\n\
    \            } else {\n                twos.add(l);\n            }\n        }\n\
    \        Collections.sort(zeros);\n        Collections.sort(ones);\n        Collections.sort(twos);\n\
    \        result.addAll(zeros);\n        result.addAll(ones);\n        result.addAll(twos);\n\
    \        return result;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new Array",
  "        // Your code here\n        return arr;", "        ArrayList<Long> sorted\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           sorted.add(arr.get(i));\n        }\n        Collections.sort(sorted,\
    \ new Comparator<Long>() {\n            public int compare(Long a, Long b) {\n\
    \                int aOnes = Long.bitCount(a);\n                int bOnes = Long.bitCount(b);\n\
    \                if (aOnes == bOnes) {\n                    return a.compareTo(b);\n\
    \                } else {\n                    return aOnes - bOnes;\n       \
    \         }\n            }\n        });\n        return sorted;", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            long num = arr.get(i);\n            int ones = 0;\n         \
    \   while (num > 0) {\n                ones += num % 2;\n                num /=\
    \ 2;\n            }\n            sorted.add(ones);\n        }\n        return\
    \ sorted;", "        // Your code here\n        // return arr;\n        // System.out.println(arr);\n\
    \        // System.out.println(arr.stream().map(x -> x.toString(2)).collect(Collectors.toList()));\n\
    \        // System.out.println(arr.stream().map(x -> x.toString(2)).map(x -> x.replaceAll(\"\
    0\", \"\")).collect(Collectors.toList()));\n        // System.out.println(arr.stream().map(x\
    \ -> x.toString(2)).map(x -> x.replaceAll(\"0\", \"\")).map(x -> x.length()).collect(Collectors.toList()));\n\
    \        // System.out.println(arr.stream().map(x -> x.toString(2)).map(x -> x.replaceAll(\"\
    0\", \"\")).map(x -> x.length()).sorted().collect(Collectors.toList()));\n   \
    \     // System.out.println(arr.stream().map(x -> x.toString(2)).map(x -> x.replaceAll(\"\
    0\", \"\")).map(x -> x.length()).sorted().map(x -> x.toString()).collect(Collectors.toList()));\n\
    \        // System.out.println(arr.stream().map(x -> x.toString(2)).map(x -> x.replaceAll(\"\
    0\", \"\")).map(x -> x.length()).sorted().map(x -> x.toString()).map(x -> x.length()).collect(Collectors.toList()));\n\
    \        // System.out.println(arr.stream().map(x -> x.toString(2)).map(x -> x.replaceAll(\"\
    0\", \"\")).map(x -> x.length()).sorted().map(x -> x.toString()).map(x -> x.length()).map(x\
    \ -> x.toString()).collect(Collectors.toList()));\n        // System.out.println(arr.stream().map(x\
    \ -> x.toString(2)).map(x -> x.replaceAll(\"0\", \"\")).map(x -> x.length()).sorted().map(x\
    \ -> x.toString()", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted2 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted3 = new ArrayList<Long>();\n        ArrayList<Long> sorted4 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted5 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted6 = new ArrayList<Long>();\n        ArrayList<Long> sorted7 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted8 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted9 = new ArrayList<Long>();\n        ArrayList<Long> sorted10 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted11 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted12 = new ArrayList<Long>();\n        ArrayList<Long> sorted13 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted14 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted15 = new ArrayList<Long>();\n        ArrayList<Long> sorted16 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted17 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted18 = new ArrayList<Long>();\n        ArrayList<Long> sorted19 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted20 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted21 = new ArrayList<Long>();\n        ArrayList<Long> sorted22 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted23 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted24 = new ArrayList<Long>();\n        ArrayList<Long> sorted25 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted26 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted27 = new ArrayList<Long>();\n        ArrayList<Long> sorted28 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted29 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted30 = new ArrayList<Long>();\n        Array", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twos = new ArrayList<Long>();\n        ArrayList<Long> threes = new ArrayList<Long>();\n\
    \        ArrayList<Long> fours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fives = new ArrayList<Long>();\n        ArrayList<Long> sixes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eights = new ArrayList<Long>();\n        ArrayList<Long> nines = new ArrayList<Long>();\n\
    \        ArrayList<Long> tens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ elevens = new ArrayList<Long>();\n        ArrayList<Long> twelves = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourteens = new ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtyones = new ArrayList<Long>();\n        for (Long i : arr) {\n        \
    \    if (i == 0) {\n                zeros.add(i);\n            } else if (i ==\
    \ 1) {\n                ones.add(i);\n            } else if (i == 2) {\n     \
    \           twos.add(i);\n            } else if (i == 3) {\n                threes.add(i);\n\
    \            } else if (i == 4) {\n                fours.add(i);\n           \
    \ } else if (i ==", "        // Your code here\n        return arr;", "      \
    \  ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long> sortedOnes\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedZeros = new ArrayList<Long>();\n\
    \        for (Long num : arr) {\n            if (num == 0) {\n               \
    \ sortedZeros.add(num);\n            } else {\n                sortedOnes.add(num);\n\
    \            }\n        }\n        sortedOnes.sort(new Comparator<Long>() {\n\
    \            public int compare(Long a, Long b) {\n                return Long.compare(Long.bitCount(a),\
    \ Long.bitCount(b));\n            }\n        });\n        sorted.addAll(sortedZeros);\n\
    \        sorted.addAll(sortedOnes);\n        return sorted;", "        // your\
    \ code here\n        return arr;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        for (Long l : arr) {\n            if\
    \ (l == 0) {\n                zeros.add(l);\n            } else {\n          \
    \      ones.add(l);\n            }\n        }\n        Collections.sort(ones);\n\
    \        sorted.addAll(zeros);\n        sorted.addAll(ones);\n        return sorted;",
  "        ArrayList<Long> sorted = new ArrayList<>();\n        for (long i : arr)\
    \ {\n            sorted.add(i);\n        }\n        Collections.sort(sorted, new\
    \ Comparator<Long>() {\n            @Override\n            public int compare(Long\
    \ a, Long b) {\n                int aOnes = Long.bitCount(a);\n              \
    \  int bOnes = Long.bitCount(b);\n                if (aOnes == bOnes) {\n    \
    \                return Long.compare(a, b);\n                }\n             \
    \   return Integer.compare(aOnes, bOnes);\n            }\n        });\n      \
    \  return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted_ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted_zeros = new ArrayList<Long>();\n        for (Long i : arr) {\n      \
    \      if (Long.bitCount(i) == 0) {\n                sorted_zeros.add(i);\n  \
    \          } else {\n                sorted_ones.add(i);\n            }\n    \
    \    }\n        Collections.sort(sorted_ones);\n        Collections.sort(sorted_zeros);\n\
    \        sorted.addAll(sorted_ones);\n        sorted.addAll(sorted_zeros);\n \
    \       return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByDecimal = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegative\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndNegative\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByNegative = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndNegative = new ArrayList<Long>();\n  \
    \      ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZero = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndDecimalAndZero = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndZero = new ArrayList<Long>();\n      \
    \  ArrayList<Long> sortedByDecimalAndZero = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByZero = new ArrayList<Long>();\n        ArrayList<Long> sortedByNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndZeroAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndZeroAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndZeroAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByZeroAndZero = new\
    \ ArrayList<Long>();\n        ArrayList<Long> sortedByNegativeAndZeroAndZero =\
    \ new ArrayList<", "        // your code here\n        ArrayList<Long> sorted\
    \ = new ArrayList<Long>();\n        for (int i = 0; i < arr.size(); i++) {\n \
    \           long num = arr.get(i);\n            int ones = 0;\n            while\
    \ (num > 0) {\n                ones += num % 2;\n                num /= 2;\n \
    \           }\n            sorted.add(ones * 1000000000 + arr.get(i));\n     \
    \   }\n        Collections.sort(sorted);\n        for (int i = 0; i < sorted.size();\
    \ i++) {\n            sorted.set(i, sorted.get(i) % 1000000000);\n        }\n\
    \        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> fourties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ninties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new", " \
    \       // your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> one = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zero = new ArrayList<Long>();\n        ArrayList<Long> neg = new ArrayList<Long>();\n\
    \        for (Long i : arr) {\n            if (i < 0) {\n                neg.add(i);\n\
    \            } else if (i == 0) {\n                zero.add(i);\n            }\
    \ else if (i == 1) {\n                one.add(i);\n            } else {\n    \
    \            String binary = Long.toBinaryString(i);\n                int count\
    \ = 0;\n                for (int j = 0; j < binary.length(); j++) {\n        \
    \            if (binary.charAt(j) == '1') {\n                        count++;\n\
    \                    }\n                }\n                result.add(i);\n  \
    \          }\n        }\n        Collections.sort(result);\n        Collections.sort(neg);\n\
    \        Collections.reverse(neg);\n        result.addAll(one);\n        result.addAll(zero);\n\
    \        result.addAll(neg);\n        return result;", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        for (Long num\
    \ : arr) {\n            if (num < 0) {\n                sorted.add(num);\n   \
    \         } else if (num == 0) {\n                zeros.add(num);\n          \
    \  } else {\n                ones.add(num);\n            }\n        }\n      \
    \  Collections.sort(ones);\n        Collections.sort(zeros);\n        Collections.sort(sorted);\n\
    \        for (Long num : ones) {\n            sorted.add(num);\n        }\n  \
    \      for (Long num : zeros) {\n            sorted.add(num);\n        }\n   \
    \     return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ negatives = new ArrayList<Long>();\n        for (Long l : arr) {\n         \
    \   if (l < 0) {\n                negatives.add(l);\n            } else {\n  \
    \              switch (Long.bitCount(l)) {\n                    case 0:\n    \
    \                    zeros.add(l);\n                        break;\n         \
    \           case 1:\n                        ones.add(l);\n                  \
    \      break;\n                    case 2:\n                        twos.add(l);\n\
    \                        break;\n                    case 3:\n               \
    \         threes.add(l);\n                        break;\n", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        for (Long l : arr) {\n            sorted.add(l);\n\
    \        }\n        Collections.sort(sorted, new Comparator<Long>() {\n      \
    \      public int compare(Long l1, Long l2) {\n                String s1 = Long.toBinaryString(l1);\n\
    \                String s2 = Long.toBinaryString(l2);\n                int ones1\
    \ = 0;\n                int ones2 = 0;\n                for (int i = 0; i < s1.length();\
    \ i++) {\n                    if (s1.charAt(i) == '1') {\n                   \
    \     ones1++;\n                    }\n                }\n                for\
    \ (int i = 0; i < s2.length(); i++) {\n                    if (s2.charAt(i) ==\
    \ '1') {\n                        ones2++;\n                    }\n          \
    \      }\n                if (ones1 == ones2) {\n                    return l1.compareTo(l2);\n\
    \                } else {\n                    return ones1 - ones2;\n       \
    \         }\n            }\n        });\n        return sorted;", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnes = new\
    \ ArrayList<Long>();\n        ArrayList<Long> sortedByDecimal = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndDecimal = new ArrayList<Long>();\n   \
    \     ArrayList<Long> sortedByOnesAndDecimalAndNegative = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZero = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositive =\
    \ new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegative\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositive\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositiveAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositiveAndZeroAndNegative\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositive\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNeg",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp = new ArrayList<Long>();\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            temp.add(arr.get(i));\n        }\n        Collections.sort(temp);\n\
    \        for (int i = 0; i < temp.size(); i++) {\n            result.add(temp.get(i));\n\
    \        }\n        return result;", "        // your code here\n        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twos = new ArrayList<Long>();\n        ArrayList<Long> threes = new ArrayList<Long>();\n\
    \        ArrayList<Long> fours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fives = new ArrayList<Long>();\n        ArrayList<Long> sixes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eights = new ArrayList<Long>();\n        ArrayList<Long> nines = new ArrayList<Long>();\n\
    \        ArrayList<Long> tens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ elevens = new ArrayList<Long>();\n        ArrayList<Long> twelves = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourteens = new ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> nineteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twos = new ArrayList<Long>();\n        ArrayList<Long> threes = new ArrayList<Long>();\n\
    \        ArrayList<Long> fours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fives = new ArrayList<Long>();\n        ArrayList<Long> sixes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eights = new ArrayList<Long>();\n        ArrayList<Long> nines = new ArrayList<Long>();\n\
    \        ArrayList<Long> tens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ elevens = new ArrayList<Long>();\n        ArrayList<Long> twelves = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourteens = new ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> nineteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new ArrayList",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> nineteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twenties = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ forties = new ArrayList<Long>();\n        ArrayList<Long> fifties = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventies = new ArrayList<Long>();\n        ArrayList<Long> eighties = new ArrayList<Long>();\n\
    \        ArrayList<Long> nineties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ hundreds = new ArrayList", "        return new ArrayList<Long>(arr.stream().sorted((a,\
    \ b) -> {\n            int aOnes = Long.bitCount(a);\n            int bOnes =\
    \ Long.bitCount(b);\n            if (aOnes == bOnes) {\n                return\
    \ a.compareTo(b);\n            } else {\n                return aOnes - bOnes;\n\
    \            }\n        }).collect(Collectors.toList()));", "        ArrayList<Long>\
    \ sorted = new ArrayList<>();\n        ArrayList<Long> zeros = new ArrayList<>();\n\
    \        ArrayList<Long> ones = new ArrayList<>();\n        for (Long i : arr)\
    \ {\n            if (i == 0) {\n                zeros.add(i);\n            } else\
    \ if (i == 1) {\n                ones.add(i);\n            } else {\n        \
    \        sorted.add(i);\n            }\n        }\n        Collections.sort(sorted,\
    \ (a, b) -> {\n            int aOnes = Long.bitCount(a);\n            int bOnes\
    \ = Long.bitCount(b);\n            if (aOnes == bOnes) {\n                return\
    \ a.compareTo(b);\n            } else {\n                return aOnes - bOnes;\n\
    \            }\n        });\n        sorted.addAll(ones);\n        sorted.addAll(zeros);\n\
    \        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> unsorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zero = new ArrayList<Long>();\n        for (Long l : arr) {\n            if\
    \ (l == 0) {\n                zero.add(l);\n            } else if (l < 0) {\n\
    \                unsorted.add(l);\n            } else {\n                sorted.add(l);\n\
    \            }\n        }\n        Collections.sort(sorted, new Comparator<Long>()\
    \ {\n            public int compare(Long l1, Long l2) {\n                int l1Ones\
    \ = Long.bitCount(l1);\n                int l2Ones = Long.bitCount(l2);\n    \
    \            if (l1Ones == l2Ones) {\n                    return l1.compareTo(l2);\n\
    \                } else {\n                    return l1Ones - l2Ones;\n     \
    \           }\n            }\n        });\n        Collections.sort(unsorted);\n\
    \        sorted.addAll(zero);\n        sorted.addAll(unsorted);\n        return\
    \ sorted;", "        // Your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        for (Long l : arr) {\n            if\
    \ (Long.bitCount(l) == 0) {\n                zeros.add(l);\n            } else\
    \ {\n                ones.add(l);\n            }\n        }\n        Collections.sort(ones);\n\
    \        Collections.sort(zeros);\n        result.addAll(ones);\n        result.addAll(zeros);\n\
    \        return result;", "        // Your code here\n        return arr;", " \
    \       ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteen = new ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenty = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentyone = new ArrayList<Long>();\n        ArrayList<Long> twentytwo = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twentythree = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentyfour = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentyfive = new ArrayList<Long>();\n        ArrayList<Long> twentysix = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twentyseven = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentyeight = new ArrayList<", "        // Your code\
    \ here\n        return arr;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> neg = new ArrayList<Long>();\n        ArrayList<Long>\
    \ pos = new ArrayList<Long>();\n        for (Long i : arr) {\n            if (i\
    \ < 0) {\n                neg.add(i);\n            } else {\n                pos.add(i);\n\
    \            }\n        }\n        Collections.sort(neg);\n        Collections.sort(pos);\n\
    \        for (Long i : neg) {\n            sorted.add(i);\n        }\n       \
    \ for (Long i : pos) {\n            sorted.add(i);\n        }\n        return\
    \ sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n       \
    \ ArrayList<Long> sortedByOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByDecimal = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegative\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositive\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndNegative\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndNegativeAndZeroAndPositive\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndNegativeAndZeroAndPositiveAndNegative\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndNegativeAndZeroAndPositiveAndNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndNegativeAndZeroAndPositiveAndNegativeAndZeroAndPositive\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndNegativeAndZeroAndPositiveAndNegativeAndZeroAndPositiveAndNegative\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndNegativeAndZeroAndPositiveAndNegativeAndZeroAndPositiveAndNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAnd",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            long num = arr.get(i);\n            int\
    \ ones = 0;\n            while (num > 0) {\n                ones += num % 2;\n\
    \                num /= 2;\n            }\n            sorted.add(ones * 1000000000\
    \ + arr.get(i));\n        }\n        Collections.sort(sorted);\n        for (int\
    \ i = 0; i < sorted.size(); i++) {\n            sorted.set(i, sorted.get(i) %\
    \ 1000000000);\n        }\n        return sorted;", "        // your code here\n\
    \        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted2 = new ArrayList<Long>();\n        ArrayList<Long> sorted3 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted4 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted5 = new ArrayList<Long>();\n        ArrayList<Long> sorted6 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted7 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted8 = new ArrayList<Long>();\n        ArrayList<Long> sorted9 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted10 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted11 = new ArrayList<Long>();\n        ArrayList<Long> sorted12 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted13 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted14 = new ArrayList<Long>();\n        ArrayList<Long> sorted15 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted16 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted17 = new ArrayList<Long>();\n        ArrayList<Long> sorted18 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted19 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted20 = new ArrayList<Long>();\n        ArrayList<Long> sorted21 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted22 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted23 = new ArrayList<Long>();\n        ArrayList<Long> sorted24 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted25 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted26 = new ArrayList<Long>();\n        ArrayList<Long> sorted27 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted28 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted29 = new ArrayList<Long>();\n        ArrayList<Long> sorted30 = new ArrayList<",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            sorted.add(arr.get(i));\n        }\n   \
    \     Collections.sort(sorted, new Comparator<Long>() {\n            @Override\n\
    \            public int compare(Long a, Long b) {\n                String aBin\
    \ = Long.toBinaryString(a);\n                String bBin = Long.toBinaryString(b);\n\
    \                int aOnes = 0;\n                int bOnes = 0;\n            \
    \    for (int i = 0; i < aBin.length(); i++) {\n                    if (aBin.charAt(i)\
    \ == '1') {\n                        aOnes++;\n                    }\n       \
    \         }\n                for (int i = 0; i < bBin.length(); i++) {\n     \
    \               if (bBin.charAt(i) == '1') {\n                        bOnes++;\n\
    \                    }\n                }\n                if (aOnes == bOnes)\
    \ {\n                    return a.compareTo(b);\n                } else {\n  \
    \                  return aOnes - bOnes;\n                }\n            }\n \
    \       });\n        return sorted;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted2 = new ArrayList<Long>();\n        ArrayList<Long> sorted3 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted4 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted5 = new ArrayList<Long>();\n        ArrayList<Long> sorted6 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted7 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted8 = new ArrayList<Long>();\n        ArrayList<Long> sorted9 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted10 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted11 = new ArrayList<Long>();\n        ArrayList<Long> sorted12 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted13 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted14 = new ArrayList<Long>();\n        ArrayList<Long> sorted15 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted16 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted17 = new ArrayList<Long>();\n        ArrayList<Long> sorted18 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted19 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted20 = new ArrayList<Long>();\n        ArrayList<Long> sorted21 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted22 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted23 = new ArrayList<Long>();\n        ArrayList<Long> sorted24 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted25 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted26 = new ArrayList<Long>();\n        ArrayList<Long> sorted27 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted28 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted29 = new ArrayList<Long>();\n        ArrayList", "        // Your code\
    \ here\n        return arr;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Integer> ones = new ArrayList<Integer>();\n        for (Long\
    \ l : arr) {\n            ones.add(Long.bitCount(l));\n        }\n        ArrayList<Integer>\
    \ sortedOnes = new ArrayList<Integer>(ones);\n        Collections.sort(sortedOnes);\n\
    \        for (Integer i : sortedOnes) {\n            for (int j = 0; j < ones.size();\
    \ j++) {\n                if (ones.get(j) == i) {\n                    sorted.add(arr.get(j));\n\
    \                    ones.set(j, -1);\n                }\n            }\n    \
    \    }\n        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> negatives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ positives = new ArrayList<Long>();\n        for (Long i : arr) {\n         \
    \   if (i < 0) {\n                negatives.add(i);\n            } else {\n  \
    \              positives.add(i);\n            }\n        }\n        Collections.sort(negatives);\n\
    \        Collections.sort(positives);\n        Collections.reverse(negatives);\n\
    \        for (Long i : negatives) {\n            sorted.add(i);\n        }\n \
    \       for (Long i : positives) {\n            sorted.add(i);\n        }\n  \
    \      return sorted;", "        // Your code here\n        return arr;", "  \
    \      ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> nineteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twenties = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourties = new ArrayList<Long>();\n        ArrayList<Long> fifties = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventies = new ArrayList<Long>();\n        ArrayList<Long> eighties = new ArrayList<Long>();\n\
    \        ArrayList<Long> nineties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ hundreds = new ArrayList", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            sorted.add(arr.get(i));\n\
    \        }\n        Collections.sort(sorted, new Comparator<Long>() {\n      \
    \      @Override\n            public int compare(Long a, Long b) {\n         \
    \       int aOnes = Long.bitCount(a);\n                int bOnes = Long.bitCount(b);\n\
    \                if (aOnes == bOnes) {\n                    return a.compareTo(b);\n\
    \                } else {\n                    return aOnes - bOnes;\n       \
    \         }\n            }\n        });\n        return sorted;", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twos = new ArrayList<Long>();\n        ArrayList<Long> threes = new ArrayList<Long>();\n\
    \        ArrayList<Long> fours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fives = new ArrayList<Long>();\n        ArrayList<Long> sixes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eights = new ArrayList<Long>();\n        ArrayList<Long> nines = new ArrayList<Long>();\n\
    \        ArrayList<Long> tens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ elevens = new ArrayList<Long>();\n        ArrayList<Long> twelves = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourteens = new ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> nineteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> fourties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new ArrayList",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (long i =\
    \ 0; i < arr.size(); i++) {\n            long num = arr.get((int)i);\n       \
    \     long ones = 0;\n            while (num > 0) {\n                ones += num\
    \ % 2;\n                num /= 2;\n            }\n            sorted.add(ones);\n\
    \        }\n        ArrayList<Long> sorted2 = new ArrayList<Long>();\n       \
    \ for (long i = 0; i < arr.size(); i++) {\n            long num = arr.get((int)i);\n\
    \            long ones = 0;\n            while (num > 0) {\n                ones\
    \ += num % 2;\n                num /= 2;\n            }\n            sorted2.add(ones);\n\
    \        }\n        ArrayList<Long> sorted3 = new ArrayList<Long>();\n       \
    \ for (long i = 0; i < arr.size(); i++) {\n            long num = arr.get((int)i);\n\
    \            long ones = 0;\n            while (num > 0) {\n                ones\
    \ += num % 2;\n                num /= 2;\n            }\n            sorted3.add(ones);\n\
    \        }\n        ArrayList<Long> sorted4 = new ArrayList<Long>();\n       \
    \ for (long i = 0; i < arr.size(); i++) {\n            long num = arr.get((int)i);\n\
    \            long ones = 0;\n            while (num > 0) {\n                ones\
    \ += num % 2;\n                num /= 2;\n            }\n            sorted4.add(ones);\n\
    \        }\n        ArrayList<Long> sorted5 = new ArrayList<Long>();\n       \
    \ for (long i = 0; i < arr.size(); i++) {\n            long num = arr.get((int)i);\n\
    \            long ones = 0;\n            while (num > 0) {\n                ones\
    \ += num % 2;\n                num /= 2;\n            }\n            sorted5.add(ones);\n\
    \        }\n        ArrayList<Long> sorted6 = new ArrayList<Long>();\n       \
    \ for (long i = 0; i < arr.size(); i++) {\n            long num = arr.get((",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedOnes = new ArrayList<Long>();\n        ArrayList<Long> sortedZeros = new\
    \ ArrayList<Long>();\n        for (Long i : arr) {\n            if (Long.bitCount(i)\
    \ == 0) {\n                sortedZeros.add(i);\n            } else {\n       \
    \         sortedOnes.add(i);\n            }\n        }\n        Collections.sort(sortedOnes);\n\
    \        Collections.sort(sortedZeros);\n        sorted.addAll(sortedZeros);\n\
    \        sorted.addAll(sortedOnes);\n        return sorted;", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            sorted.add(arr.get(i));\n        }\n        Collections.sort(sorted,\
    \ new Comparator<Long>() {\n            @Override\n            public int compare(Long\
    \ a, Long b) {\n                int aOnes = countOnes(a);\n                int\
    \ bOnes = countOnes(b);\n                if (aOnes == bOnes) {\n             \
    \       return a.compareTo(b);\n                } else {\n                   \
    \ return aOnes - bOnes;\n                }\n            }\n        });\n     \
    \   return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> negatives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ positives = new ArrayList<Long>();\n        for (Long l : arr) {\n         \
    \   if (l < 0) {\n                negatives.add(l);\n            } else {\n  \
    \              positives.add(l);\n            }\n        }\n        Collections.sort(negatives);\n\
    \        Collections.sort(positives);\n        for (Long l : negatives) {\n  \
    \          sorted.add(l);\n        }\n        for (Long l : positives) {\n   \
    \         sorted.add(l);\n        }\n        return sorted;", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twos = new ArrayList<Long>();\n        ArrayList<Long> threes = new ArrayList<Long>();\n\
    \        ArrayList<Long> fours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fives = new ArrayList<Long>();\n        ArrayList<Long> sixes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eights = new ArrayList<Long>();\n        ArrayList<Long> nines = new ArrayList<Long>();\n\
    \        ArrayList<Long> tens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ elevens = new ArrayList<Long>();\n        ArrayList<Long> twelves = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourteens = new ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtyones = new ArrayList<Long>();\n        ArrayList<Long> thirtytwos = new\
    \ ArrayList<Long>();\n        ArrayList<Long> thirtythrees = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirtyfours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtyfives = new ArrayList<Long>();\n        ArrayList<Long> thirtysixes =\
    \ new ArrayList<Long>();\n        ArrayList<Long> thirtysevens = new ArrayList<Long>();\n\
    \        ArrayList<Long>", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        for (Long i : arr) {\n            if\
    \ (Long.bitCount(i) == 0) {\n                zeros.add(i);\n            } else\
    \ {\n                ones.add(i);\n            }\n        }\n        Collections.sort(ones);\n\
    \        Collections.sort(zeros);\n        sorted.addAll(ones);\n        sorted.addAll(zeros);\n\
    \        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new Array",
  "        ArrayList<Long> sorted = new ArrayList<>();\n        ArrayList<Long> zeros\
    \ = new ArrayList<>();\n        ArrayList<Long> ones = new ArrayList<>();\n  \
    \      ArrayList<Long> twos = new ArrayList<>();\n        ArrayList<Long> threes\
    \ = new ArrayList<>();\n        ArrayList<Long> fours = new ArrayList<>();\n \
    \       ArrayList<Long> fives = new ArrayList<>();\n        ArrayList<Long> sixes\
    \ = new ArrayList<>();\n        ArrayList<Long> sevens = new ArrayList<>();\n\
    \        ArrayList<Long> eights = new ArrayList<>();\n        ArrayList<Long>\
    \ nines = new ArrayList<>();\n        ArrayList<Long> tens = new ArrayList<>();\n\
    \        ArrayList<Long> elevens = new ArrayList<>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<>();\n        ArrayList<Long> thirteens = new ArrayList<>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<>();\n        ArrayList<Long> sixteens = new ArrayList<>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<>();\n        ArrayList<Long> ninteens = new ArrayList<>();\n\
    \        ArrayList<Long> twenties = new ArrayList<>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<>();\n        ArrayList<Long> fourties = new ArrayList<>();\n\
    \        ArrayList<Long> fifties = new ArrayList<>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<>();\n        ArrayList<Long> seventies = new ArrayList<>();\n\
    \        ArrayList<Long> eighties = new ArrayList<>();\n        ArrayList<Long>\
    \ ninties = new ArrayList<>();\n        ArrayList<Long> hundreds = new ArrayList<>();\n\
    \        ArrayList<Long> thousands = new ArrayList<>();\n        ArrayList<Long>\
    \ tenThousands", "        ArrayList<Long> sorted = new ArrayList<Long>();\n  \
    \      for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n\
    \            int ones = 0;\n            while (num > 0) {\n                if\
    \ (num % 2 == 1) {\n                    ones++;\n                }\n         \
    \       num /= 2;\n            }\n            sorted.add(new Long(ones));\n  \
    \      }\n        ArrayList<Long> sorted2 = new ArrayList<Long>();\n        for\
    \ (int i = 0; i < sorted.size(); i++) {\n            long num = sorted.get(i);\n\
    \            int ones = 0;\n            while (num > 0) {\n                if\
    \ (num % 2 == 1) {\n                    ones++;\n                }\n         \
    \       num /= 2;\n            }\n            sorted2.add(new Long(ones));\n \
    \       }\n        return sorted2;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            sorted.add(arr.get(i));\n\
    \        }\n        Collections.sort(sorted, new Comparator<Long>() {\n      \
    \      @Override\n            public int compare(Long a, Long b) {\n         \
    \       int aOnes = Long.bitCount(a);\n                int bOnes = Long.bitCount(b);\n\
    \                if (aOnes < bOnes) {\n                    return -1;\n      \
    \          } else if (aOnes > bOnes) {\n                    return 1;\n      \
    \          } else {\n                    return a.compareTo(b);\n            \
    \    }\n            }\n        });\n        return sorted;", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> negative = new ArrayList<Long>();\n\
    \        ArrayList<Long> positive = new ArrayList<Long>();\n        for (Long\
    \ l : arr) {\n            if (l < 0) {\n                negative.add(l);\n   \
    \         } else {\n                positive.add(l);\n            }\n        }\n\
    \        Collections.sort(negative);\n        Collections.sort(positive);\n  \
    \      for (Long l : negative) {\n            sorted.add(l);\n        }\n    \
    \    for (Long l : positive) {\n            sorted.add(l);\n        }\n      \
    \  return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> negatives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ positives = new ArrayList<Long>();\n        for (Long l : arr) {\n         \
    \   if (l < 0) {\n                negatives.add(l);\n            } else {\n  \
    \              positives.add(l);\n            }\n        }\n        Collections.sort(negatives);\n\
    \        Collections.sort(positives);\n        Collections.reverse(negatives);\n\
    \        for (Long l : negatives) {\n            sorted.add(l);\n        }\n \
    \       for (Long l : positives) {\n            sorted.add(l);\n        }\n  \
    \      return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByDecimal = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnes = new\
    \ ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnes =\
    \ new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnes\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnes\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnes\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnes\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnes\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAnd",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            long num = arr.get(i);\n            int\
    \ ones = 0;\n            while (num > 0) {\n                if (num % 2 == 1)\
    \ {\n                    ones++;\n                }\n                num /= 2;\n\
    \            }\n            result.add(ones * 1000000000 + arr.get(i));\n    \
    \    }\n        Collections.sort(result);\n        for (int i = 0; i < result.size();\
    \ i++) {\n            result.set(i, result.get(i) % 1000000000);\n        }\n\
    \        return result;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            sorted.add(arr.get(i));\n\
    \        }\n        Collections.sort(sorted, new Comparator<Long>() {\n      \
    \      @Override\n            public int compare(Long a, Long b) {\n         \
    \       String aBin = Long.toBinaryString(a);\n                String bBin = Long.toBinaryString(b);\n\
    \                int aOnes = 0;\n                int bOnes = 0;\n            \
    \    for (int i = 0; i < aBin.length(); i++) {\n                    if (aBin.charAt(i)\
    \ == '1') {\n                        aOnes++;\n                    }\n       \
    \         }\n                for (int i = 0; i < bBin.length(); i++) {\n     \
    \               if (bBin.charAt(i) == '1') {\n                        bOnes++;\n\
    \                    }\n                }\n                if (aOnes == bOnes)\
    \ {\n                    return a.compareTo(b);\n                } else {\n  \
    \                  return aOnes - bOnes;\n                }\n            }\n \
    \       });\n        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> nineteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentyones = new ArrayList<Long>();\n        ArrayList<Long> twentytwos = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twentythrees = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentyfours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentyfives = new ArrayList<Long>();\n        ArrayList<Long> twentysixes =\
    \ new ArrayList<Long>();\n        ArrayList<Long> twentysevens = new ArrayList<Long>();\n\
    \        ArrayList<Long>", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new Array",
  "        // Your code here\n        return arr;", "        ArrayList<Long> sorted\
    \ = new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twos = new ArrayList<Long>();\n        ArrayList<Long> threes = new ArrayList<Long>();\n\
    \        ArrayList<Long> fours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fives = new ArrayList<Long>();\n        ArrayList<Long> sixes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eights = new ArrayList<Long>();\n        ArrayList<Long> nines = new ArrayList<Long>();\n\
    \        ArrayList<Long> tens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ elevens = new ArrayList<Long>();\n        ArrayList<Long> twelves = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourteens = new ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new Array",
  "        // your code here\n        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted_ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted_zeros = new ArrayList<Long>();\n        ArrayList<Long> sorted_neg =\
    \ new ArrayList<Long>();\n        ArrayList<Long> sorted_pos = new ArrayList<Long>();\n\
    \        for (Long num : arr) {\n            if (num < 0) {\n                sorted_neg.add(num);\n\
    \            } else {\n                sorted_pos.add(num);\n            }\n \
    \       }\n        Collections.sort(sorted_neg);\n        Collections.sort(sorted_pos);\n\
    \        for (Long num : sorted_neg) {\n            if (num == 0) {\n        \
    \        sorted_zeros.add(num);\n            } else {\n                sorted_ones.add(num);\n\
    \            }\n        }\n        for (Long num : sorted_pos) {\n           \
    \ if (num == 0) {\n                sorted_zeros.add(num);\n            } else\
    \ {\n                sorted_ones.add(num);\n            }\n        }\n       \
    \ sorted.addAll(sorted_zeros);\n        sorted.addAll(sorted_ones);\n        return\
    \ sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n       \
    \ for (Long l : arr) {\n            sorted.add(l);\n        }\n        Collections.sort(sorted,\
    \ new Comparator<Long>() {\n            public int compare(Long l1, Long l2) {\n\
    \                int l1Ones = Long.bitCount(l1);\n                int l2Ones =\
    \ Long.bitCount(l2);\n                if (l1Ones == l2Ones) {\n              \
    \      return l1.compareTo(l2);\n                } else {\n                  \
    \  return l1Ones - l2Ones;\n                }\n            }\n        });\n  \
    \      return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new Array",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            sorted.add(arr.get(i));\n        }\n   \
    \     Collections.sort(sorted, new Comparator<Long>() {\n            public int\
    \ compare(Long a, Long b) {\n                int aOnes = Long.bitCount(a);\n \
    \               int bOnes = Long.bitCount(b);\n                if (aOnes == bOnes)\
    \ {\n                    return a.compareTo(b);\n                } else {\n  \
    \                  return aOnes - bOnes;\n                }\n            }\n \
    \       });\n        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zero = new ArrayList<Long>();\n        ArrayList<Long>\
    \ one = new ArrayList<Long>();\n        ArrayList<Long> two = new ArrayList<Long>();\n\
    \        ArrayList<Long> three = new ArrayList<Long>();\n        ArrayList<Long>\
    \ four = new ArrayList<Long>();\n        ArrayList<Long> five = new ArrayList<Long>();\n\
    \        ArrayList<Long> six = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seven = new ArrayList<Long>();\n        ArrayList<Long> eight = new ArrayList<Long>();\n\
    \        ArrayList<Long> nine = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ten = new ArrayList<Long>();\n        ArrayList<Long> eleven = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelve = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteen = new ArrayList<Long>();\n        ArrayList<Long> fourteen = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifteen = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixteen = new ArrayList<Long>();\n        ArrayList<Long> seventeen = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighteen = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineteen = new ArrayList<Long>();\n        ArrayList<Long> twenty = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentyOne = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentyTwo = new ArrayList<Long>();\n        ArrayList<Long> twentyThree = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twentyFour = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentyFive = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentySix = new ArrayList<Long>();\n        ArrayList<Long> twentySeven = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twentyEight = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentyNine = new ArrayList<Long>();\n        ArrayList<Long>",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted2 = new ArrayList<Long>();\n        ArrayList<Long> sorted3 = new ArrayList<Long>();\n\
    \        for (Long i : arr) {\n            if (i < 0) {\n                sorted.add(i);\n\
    \            } else {\n                sorted2.add(i);\n            }\n      \
    \  }\n        Collections.sort(sorted);\n        Collections.sort(sorted2, new\
    \ Comparator<Long>() {\n            public int compare(Long a, Long b) {\n   \
    \             int countA = Long.bitCount(a);\n                int countB = Long.bitCount(b);\n\
    \                if (countA == countB) {\n                    return a.compareTo(b);\n\
    \                } else {\n                    return countA - countB;\n     \
    \           }\n            }\n        });\n        sorted3.addAll(sorted2);\n\
    \        sorted3.addAll(sorted);\n        return sorted3;", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> negatives = new ArrayList<Long>();\n\
    \        ArrayList<Long> positives = new ArrayList<Long>();\n        for (Long\
    \ i : arr) {\n            if (i < 0) {\n                negatives.add(i);\n  \
    \          } else {\n                positives.add(i);\n            }\n      \
    \  }\n        Collections.sort(negatives);\n        Collections.sort(positives);\n\
    \        for (Long i : negatives) {\n            sorted.add(i);\n        }\n \
    \       for (Long i : positives) {\n            sorted.add(i);\n        }\n  \
    \      return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByZeros = new ArrayList<Long>();\n        for (Long l : arr) {\n     \
    \       if (l < 0) {\n                sorted.add(l);\n            } else if (l\
    \ == 0) {\n                sortedByZeros.add(l);\n            } else {\n     \
    \           sortedByOnes.add(l);\n            }\n        }\n        Collections.sort(sortedByOnes,\
    \ new Comparator<Long>() {\n            public int compare(Long l1, Long l2) {\n\
    \                int l1Ones = countOnes(l1);\n                int l2Ones = countOnes(l2);\n\
    \                if (l1Ones == l2Ones) {\n                    return l1.compareTo(l2);\n\
    \                } else {\n                    return l1Ones - l2Ones;\n     \
    \           }\n            }\n        });\n        sorted.addAll(sortedByZeros);\n\
    \        sorted.addAll(sortedByOnes);\n        return sorted;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        for (Long l :\
    \ arr) {\n            if (Long.bitCount(l) == 0) {\n                zeros.add(l);\n\
    \            } else {\n                ones.add(l);\n            }\n        }\n\
    \        Collections.sort(ones);\n        Collections.sort(zeros);\n        result.addAll(ones);\n\
    \        result.addAll(zeros);\n        return result;", "        // Your code\
    \ here\n        ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> unsorted = new ArrayList<Long>();\n\
    \        for (Long l : arr) {\n            if (l < 0) {\n                sorted.add(l);\n\
    \            } else {\n                unsorted.add(l);\n            }\n     \
    \   }\n        Collections.sort(sorted);\n        Collections.sort(unsorted, new\
    \ Comparator<Long>() {\n            public int compare(Long l1, Long l2) {\n \
    \               String s1 = Long.toBinaryString(l1);\n                String s2\
    \ = Long.toBinaryString(l2);\n                int c1 = 0;\n                int\
    \ c2 = 0;\n                for (int i = 0; i < s1.length(); i++) {\n         \
    \           if (s1.charAt(i) == '1') {\n                        c1++;\n      \
    \              }\n                }\n                for (int i = 0; i < s2.length();\
    \ i++) {\n                    if (s2.charAt(i) == '1') {\n                   \
    \     c2++;\n                    }\n                }\n                if (c1\
    \ == c2) {\n                    return l1.compareTo(l2);\n                } else\
    \ {\n                    return c1 - c2;\n                }\n            }\n \
    \       });\n        result.addAll(sorted);\n        result.addAll(unsorted);\n\
    \        return result;", "        ArrayList<Long> sorted = new ArrayList<>();\n\
    \        ArrayList<Long> zeros = new ArrayList<>();\n        ArrayList<Long> ones\
    \ = new ArrayList<>();\n        for (Long i : arr) {\n            if (i == 0)\
    \ {\n                zeros.add(i);\n            } else if (i == 1) {\n       \
    \         ones.add(i);\n            } else {\n                sorted.add(i);\n\
    \            }\n        }\n        Collections.sort(sorted, new Comparator<Long>()\
    \ {\n            @Override\n            public int compare(Long o1, Long o2) {\n\
    \                return Long.bitCount(o1) - Long.bitCount(o2);\n            }\n\
    \        });\n        sorted.addAll(zeros);\n        sorted.addAll(ones);\n  \
    \      return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtyones = new ArrayList<Long>();\n        ArrayList<Long> thirtytwos = new\
    \ ArrayList<Long>();\n        ArrayList<Long> thirtythrees = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirtyfours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtyfives = new ArrayList<Long>();\n        ArrayList<Long> thirtysixes =\
    \ new ArrayList<Long>();\n        ArrayList<Long> thirtysevens = new ArrayList<Long>();\n\
    \        ArrayList<Long>", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        for (Long i : arr) {\n            sorted.add(i);\n        }\n       \
    \ Collections.sort(sorted, new Comparator<Long>() {\n            @Override\n \
    \           public int compare(Long a, Long b) {\n                String aBin\
    \ = Long.toBinaryString(a);\n                String bBin = Long.toBinaryString(b);\n\
    \                int aOnes = 0;\n                int bOnes = 0;\n            \
    \    for (int i = 0; i < aBin.length(); i++) {\n                    if (aBin.charAt(i)\
    \ == '1') {\n                        aOnes++;\n                    }\n       \
    \         }\n                for (int i = 0; i < bBin.length(); i++) {\n     \
    \               if (bBin.charAt(i) == '1') {\n                        bOnes++;\n\
    \                    }\n                }\n                if (aOnes == bOnes)\
    \ {\n                    return a.compareTo(b);\n                } else {\n  \
    \                  return aOnes - bOnes;\n                }\n            }\n \
    \       });\n        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        for (Long i : arr) {\n            if\
    \ (Long.bitCount(i) == 0) {\n                zeros.add(i);\n            } else\
    \ {\n                ones.add(i);\n            }\n        }\n        Collections.sort(zeros);\n\
    \        Collections.sort(ones);\n        sorted.addAll(zeros);\n        sorted.addAll(ones);\n\
    \        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByDecimal = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegative\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositive\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegative\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositive\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositiveAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositiveAndZeroAndNegative\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZero\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositiveAndZeroAndNegativeAndZeroAndPositive\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndNegativeAndZeroAndPositiveAndZeroAndNeg",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtys = new ArrayList<Long>();\n        ArrayList<Long> fortys = new ArrayList<Long>();\n\
    \        ArrayList<Long> fiftys = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixtys = new ArrayList<Long>();\n        ArrayList<Long> seventys = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighty = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ninety = new ArrayList<Long>();\n        ArrayList<Long> hundred = new ArrayList<Long>",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedOnes = new ArrayList<Long>();\n        ArrayList<Long> sortedZeros = new\
    \ ArrayList<Long>();\n        for (Long l : arr) {\n            if (Long.bitCount(l)\
    \ == 0) {\n                sortedZeros.add(l);\n            } else {\n       \
    \         sortedOnes.add(l);\n            }\n        }\n        Collections.sort(sortedOnes);\n\
    \        Collections.sort(sortedZeros);\n        sorted.addAll(sortedZeros);\n\
    \        sorted.addAll(sortedOnes);\n        return sorted;", "        // Your\
    \ code here\n        return arr;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        for (Long l : arr) {\n            sorted.add(l);\n        }\n       \
    \ Collections.sort(sorted, new Comparator<Long>() {\n            public int compare(Long\
    \ a, Long b) {\n                int aOnes = Long.bitCount(a);\n              \
    \  int bOnes = Long.bitCount(b);\n                if (aOnes == bOnes) {\n    \
    \                return a.compareTo(b);\n                } else {\n          \
    \          return aOnes - bOnes;\n                }\n            }\n        });\n\
    \        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedZeros = new ArrayList<Long>();\n        for (Long l : arr) {\n       \
    \     if (Long.bitCount(l) == 0) {\n                sortedZeros.add(l);\n    \
    \        } else {\n                sortedOnes.add(l);\n            }\n       \
    \ }\n        Collections.sort(sortedOnes);\n        Collections.sort(sortedZeros);\n\
    \        sorted.addAll(sortedZeros);\n        sorted.addAll(sortedOnes);\n   \
    \     return sorted;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted2 = new ArrayList<Long>();\n        ArrayList<Long> sorted3 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted4 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted5 = new ArrayList<Long>();\n        ArrayList<Long> sorted6 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted7 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted8 = new ArrayList<Long>();\n        ArrayList<Long> sorted9 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted10 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted11 = new ArrayList<Long>();\n        ArrayList<Long> sorted12 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted13 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted14 = new ArrayList<Long>();\n        ArrayList<Long> sorted15 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted16 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted17 = new ArrayList<Long>();\n        ArrayList<Long> sorted18 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted19 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted20 = new ArrayList<Long>();\n        ArrayList<Long> sorted21 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted22 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted23 = new ArrayList<Long>();\n        ArrayList<Long> sorted24 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted25 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted26 = new ArrayList<Long>();\n        ArrayList<Long> sorted27 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted28 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted29 = new ArrayList<Long>();\n        ArrayList", "        // Your code\
    \ here\n        return arr;", "        return new ArrayList<Long>(arr.stream().sorted((a,\
    \ b) -> {\n            int a_ones = Long.bitCount(a);\n            int b_ones\
    \ = Long.bitCount(b);\n            if (a_ones == b_ones) {\n                return\
    \ a.compareTo(b);\n            } else {\n                return a_ones - b_ones;\n\
    \            }\n        }).collect(Collectors.toList()));", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twos = new ArrayList<Long>();\n        ArrayList<Long> threes = new ArrayList<Long>();\n\
    \        ArrayList<Long> fours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fives = new ArrayList<Long>();\n        ArrayList<Long> sixes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eights = new ArrayList<Long>();\n        ArrayList<Long> nines = new ArrayList<Long>();\n\
    \        ArrayList<Long> tens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ elevens = new ArrayList<Long>();\n        ArrayList<Long> twelves = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourteens = new ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> nineteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> fourties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new ArrayList",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByOnes = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimal = new\
    \ ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndDecimalAndOnes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByDecimalAndOnesAndDecimal = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimal = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnes = new\
    \ ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnes\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnes\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnes\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAnd",
  "        ArrayList<Long> sorted = new ArrayList<>();\n        ArrayList<Long> sorted2\
    \ = new ArrayList<>();\n        ArrayList<Long> sorted3 = new ArrayList<>();\n\
    \        ArrayList<Long> sorted4 = new ArrayList<>();\n        ArrayList<Long>\
    \ sorted5 = new ArrayList<>();\n        ArrayList<Long> sorted6 = new ArrayList<>();\n\
    \        ArrayList<Long> sorted7 = new ArrayList<>();\n        ArrayList<Long>\
    \ sorted8 = new ArrayList<>();\n        ArrayList<Long> sorted9 = new ArrayList<>();\n\
    \        ArrayList<Long> sorted10 = new ArrayList<>();\n        ArrayList<Long>\
    \ sorted11 = new ArrayList<>();\n        ArrayList<Long> sorted12 = new ArrayList<>();\n\
    \        ArrayList<Long> sorted13 = new ArrayList<>();\n        ArrayList<Long>\
    \ sorted14 = new ArrayList<>();\n        ArrayList<Long> sorted15 = new ArrayList<>();\n\
    \        ArrayList<Long> sorted16 = new ArrayList<>();\n        ArrayList<Long>\
    \ sorted17 = new ArrayList<>();\n        ArrayList<Long> sorted18 = new ArrayList<>();\n\
    \        ArrayList<Long> sorted19 = new ArrayList<>();\n        ArrayList<Long>\
    \ sorted20 = new ArrayList<>();\n        ArrayList<Long> sorted21 = new ArrayList<>();\n\
    \        ArrayList<Long> sorted22 = new ArrayList<>();\n        ArrayList<Long>\
    \ sorted23 = new ArrayList<>();\n        ArrayList<Long> sorted24 = new ArrayList<>();\n\
    \        ArrayList<Long> sorted25 = new ArrayList<>();\n        ArrayList<Long>\
    \ sorted26 = new ArrayList<>();\n        ArrayList<Long> sorted27 = new ArrayList<>();\n\
    \        ArrayList<Long> sorted28 = new ArrayList<>();\n        ArrayList<Long>\
    \ sorted29 = new ArrayList<>();\n        ArrayList<Long> sorted30 = new ArrayList<>();\n\
    \        ArrayList<Long> sorted31 = new ArrayList<>();\n        ArrayList<Long>\
    \ sorted32 = new ArrayList<>();\n", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        for (int i = 0; i < arr.size(); i++) {\n            sorted.add(arr.get(i));\n\
    \        }\n        Collections.sort(sorted, new Comparator<Long>() {\n      \
    \      public int compare(Long a, Long b) {\n                int aOnes = 0;\n\
    \                int bOnes = 0;\n                for (int i = 0; i < Long.toBinaryString(a).length();\
    \ i++) {\n                    if (Long.toBinaryString(a).charAt(i) == '1') {\n\
    \                        aOnes++;\n                    }\n                }\n\
    \                for (int i = 0; i < Long.toBinaryString(b).length(); i++) {\n\
    \                    if (Long.toBinaryString(b).charAt(i) == '1') {\n        \
    \                bOnes++;\n                    }\n                }\n        \
    \        if (aOnes == bOnes) {\n                    return (int) (a - b);\n  \
    \              } else {\n                    return aOnes - bOnes;\n         \
    \       }\n            }\n        });\n        return sorted;", "        // Your\
    \ code here\n        return arr;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentyones = new ArrayList<Long>();\n        ArrayList<Long> twentytwos = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twentythrees = new ArrayList<Long>();\n\
    \        ArrayList<Long> twentyfours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twentyfives = new ArrayList<Long>();\n        ArrayList<Long> twentysixes =\
    \ new ArrayList<Long>();\n        ArrayList<Long> twentysevens = new ArrayList<Long>();\n\
    \        ArrayList", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedZeros = new ArrayList<Long>();\n        ArrayList<Long> sortedNegative\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedNegativeOnes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedNegativeZeros = new ArrayList<Long>();\n      \
    \  for (Long l : arr) {\n            if (l >= 0) {\n                if (Long.bitCount(l)\
    \ == 0) {\n                    sortedZeros.add(l);\n                } else {\n\
    \                    sortedOnes.add(l);\n                }\n            } else\
    \ {\n                if (Long.bitCount(l) == 0) {\n                    sortedNegativeZeros.add(l);\n\
    \                } else {\n                    sortedNegativeOnes.add(l);\n  \
    \              }\n            }\n        }\n        Collections.sort(sortedOnes);\n\
    \        Collections.sort(sortedZeros);\n        Collections.sort(sortedNegativeOnes);\n\
    \        Collections.sort(sortedNegativeZeros);\n        sorted.addAll(sortedOnes);\n\
    \        sorted.addAll(sortedZeros);\n        sorted.addAll(sortedNegativeOnes);\n\
    \        sorted.addAll(sortedNegativeZeros);\n        return sorted;", "     \
    \   ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long> zeros\
    \ = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new Array",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0;\
    \ i < arr.size(); i++) {\n            sorted.add(arr.get(i));\n        }\n   \
    \     Collections.sort(sorted, new Comparator<Long>() {\n            public int\
    \ compare(Long a, Long b) {\n                int aOnes = getOnes(a);\n       \
    \         int bOnes = getOnes(b);\n                if (aOnes == bOnes) {\n   \
    \                 return a.compareTo(b);\n                } else {\n         \
    \           return aOnes - bOnes;\n                }\n            }\n        });\n\
    \        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> nineteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtyones = new ArrayList<Long>();\n        ArrayList<Long> thirtytwos = new\
    \ ArrayList<Long>();\n        ArrayList<Long> thirtythrees = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirtyfours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtyfives = new ArrayList<Long>();\n        ArrayList<Long> thirtysixes =\
    \ new ArrayList<Long>();\n        ArrayList<Long> thirtysevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirty", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedByZeros = new ArrayList<Long>();\n        for (Long l : arr) {\n     \
    \       if (Long.bitCount(l) % 2 == 0) {\n                sortedByZeros.add(l);\n\
    \            } else {\n                sortedByOnes.add(l);\n            }\n \
    \       }\n        Collections.sort(sortedByOnes);\n        Collections.sort(sortedByZeros);\n\
    \        for (Long l : sortedByOnes) {\n            sorted.add(l);\n        }\n\
    \        for (Long l : sortedByZeros) {\n            sorted.add(l);\n        }\n\
    \        return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> nineteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> fourties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new ArrayList",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (long i :\
    \ arr) {\n            sorted.add(i);\n        }\n        Collections.sort(sorted,\
    \ new Comparator<Long>() {\n            @Override\n            public int compare(Long\
    \ a, Long b) {\n                int aOnes = Long.bitCount(a);\n              \
    \  int bOnes = Long.bitCount(b);\n                if (aOnes == bOnes) {\n    \
    \                return Long.compare(a, b);\n                }\n             \
    \   return Integer.compare(aOnes, bOnes);\n            }\n        });\n      \
    \  return sorted;", "        // Your code here\n        return arr;", "      \
    \  ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long> zeros\
    \ = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> fourties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ninties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new", " \
    \       ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new Array",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> nineteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twenties = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ forties = new ArrayList<Long>();\n        ArrayList<Long> fifties = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventies = new ArrayList<Long>();\n        ArrayList<Long> eighties = new ArrayList<Long>();\n\
    \        ArrayList<Long> nineties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ hundreds = new ArrayList", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> nineteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new ArrayList",
  "        // Your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp2 = new ArrayList<Long>();\n        ArrayList<Long> temp3 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp4 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp5 = new ArrayList<Long>();\n        ArrayList<Long> temp6 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp7 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp8 = new ArrayList<Long>();\n        ArrayList<Long> temp9 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp10 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp11 = new ArrayList<Long>();\n        ArrayList<Long> temp12 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp13 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp14 = new ArrayList<Long>();\n        ArrayList<Long> temp15 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp16 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp17 = new ArrayList<Long>();\n        ArrayList<Long> temp18 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp19 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp20 = new ArrayList<Long>();\n        ArrayList<Long> temp21 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp22 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp23 = new ArrayList<Long>();\n        ArrayList<Long> temp24 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp25 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp26 = new ArrayList<Long>();\n        ArrayList<Long> temp27 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp28 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp29 = new ArrayList<Long", "        ArrayList<Long> sorted = new ArrayList<>();\n\
    \        ArrayList<Long> zeros = new ArrayList<>();\n        ArrayList<Long> ones\
    \ = new ArrayList<>();\n        for (Long l : arr) {\n            if (Long.bitCount(l)\
    \ == 0) {\n                zeros.add(l);\n            } else {\n             \
    \   ones.add(l);\n            }\n        }\n        Collections.sort(zeros);\n\
    \        Collections.sort(ones);\n        sorted.addAll(zeros);\n        sorted.addAll(ones);\n\
    \        return sorted;", "        return new ArrayList<Long>(arr.stream().sorted(new\
    \ Comparator<Long>() {\n            public int compare(Long a, Long b) {\n   \
    \             int aOnes = Long.bitCount(a);\n                int bOnes = Long.bitCount(b);\n\
    \                if (aOnes == bOnes) {\n                    return a.compareTo(b);\n\
    \                } else {\n                    return aOnes - bOnes;\n       \
    \         }\n            }\n        }).collect(Collectors.toList()));", "    \
    \    ArrayList<Long> sorted = new ArrayList<Long>();\n        for (Long i : arr)\
    \ {\n            sorted.add(i);\n        }\n        Collections.sort(sorted, new\
    \ Comparator<Long>() {\n            @Override\n            public int compare(Long\
    \ a, Long b) {\n                int aOnes = countOnes(a);\n                int\
    \ bOnes = countOnes(b);\n                if (aOnes == bOnes) {\n             \
    \       return a.compareTo(b);\n                } else {\n                   \
    \ return aOnes - bOnes;\n                }\n            }\n        });\n     \
    \   return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ negatives = new ArrayList<Long>();\n        for (Long l : arr) {\n         \
    \   if (l < 0) {\n                negatives.add(l);\n            } else {\n  \
    \              String binary = Long.toBinaryString(l);\n                int count\
    \ = 0;\n                for (int i = 0; i < binary.length(); i++) {\n        \
    \            if (binary.charAt(i) == '1') {\n                        count++;\n\
    \                    }\n                }\n                switch (count) {\n\
    \                    case 0:\n                        zeros.add(", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twos = new ArrayList<Long>();\n        ArrayList<Long> threes = new ArrayList<Long>();\n\
    \        ArrayList<Long> fours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fives = new ArrayList<Long>();\n        ArrayList<Long> sixes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eights = new ArrayList<Long>();\n        ArrayList<Long> nines = new ArrayList<Long>();\n\
    \        ArrayList<Long> tens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ elevens = new ArrayList<Long>();\n        ArrayList<Long> twelves = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourteens = new ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new Array",
  "        // Your code here\n        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> negative = new ArrayList<Long>();\n        ArrayList<Long>\
    \ positive = new ArrayList<Long>();\n        for (Long l : arr) {\n          \
    \  if (l < 0) {\n                negative.add(l);\n            } else {\n    \
    \            positive.add(l);\n            }\n        }\n        Collections.sort(negative);\n\
    \        Collections.sort(positive);\n        for (Long l : negative) {\n    \
    \        sorted.add(l);\n        }\n        for (Long l : positive) {\n      \
    \      sorted.add(l);\n        }\n        return sorted;", "        Collections.sort(arr,\
    \ new Comparator<Long>() {\n            @Override\n            public int compare(Long\
    \ a, Long b) {\n                int aOnes = Long.bitCount(a);\n              \
    \  int bOnes = Long.bitCount(b);\n                if (aOnes == bOnes) {\n    \
    \                return Long.compare(a, b);\n                }\n             \
    \   return Integer.compare(aOnes, bOnes);\n            }\n        });\n      \
    \  return arr;", "        ArrayList<Long> sortedArray = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedArray2 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedArray3 = new ArrayList<Long>();\n        ArrayList<Long> sortedArray4\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedArray5 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedArray6 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedArray7 = new ArrayList<Long>();\n        ArrayList<Long> sortedArray8\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedArray9 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedArray10 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedArray11 = new ArrayList<Long>();\n        ArrayList<Long> sortedArray12\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedArray13 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedArray14 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedArray15 = new ArrayList<Long>();\n        ArrayList<Long> sortedArray16\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedArray17 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedArray18 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedArray19 = new ArrayList<Long>();\n        ArrayList<Long> sortedArray20\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedArray21 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedArray22 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedArray23 = new ArrayList<Long>();\n        ArrayList<Long> sortedArray24\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedArray25 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedArray26 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sortedArray27 = new ArrayList<Long>();\n        ArrayList<Long> sortedArray28\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedArray", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnes = new\
    \ ArrayList<Long>();\n        ArrayList<Long> sortedByDecimal = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndDecimal = new ArrayList<Long>();\n   \
    \     ArrayList<Long> sortedByDecimalAndOnes = new ArrayList<Long>();\n      \
    \  ArrayList<Long> sortedByOnesAndDecimalAndOnes = new ArrayList<Long>();\n  \
    \      ArrayList<Long> sortedByDecimalAndOnesAndDecimal = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimal = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnes = new\
    \ ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnes\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnes\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimal\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnesAndDecimalAndOnes\
    \ = new ArrayList<Long>();\n        ArrayList<Long> sortedByOnesAndDecimalAndOnesAndDecimalAndOnesAnd",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ negatives = new ArrayList<Long>();\n        ArrayList<Long> positives = new\
    \ ArrayList<Long>();\n        for (Long l : arr) {\n            if (l < 0) {\n\
    \                negatives.add(l);\n            } else {\n                positives.add(l);\n\
    \            }\n        }\n        Collections.sort(negatives);\n        Collections.sort(positives);\n\
    \        Collections.reverse(negatives);\n        Collections.reverse(positives);\n\
    \        for (Long l : negatives) {\n            sorted.add(l);\n        }\n \
    \       for (Long l : positives) {\n            sorted.add(l);\n        }\n  \
    \      return sorted;", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        ArrayList<Long> zeros = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ones = new ArrayList<Long>();\n        ArrayList<Long> twos = new ArrayList<Long>();\n\
    \        ArrayList<Long> threes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fours = new ArrayList<Long>();\n        ArrayList<Long> fives = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixes = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sevens = new ArrayList<Long>();\n        ArrayList<Long> eights = new ArrayList<Long>();\n\
    \        ArrayList<Long> nines = new ArrayList<Long>();\n        ArrayList<Long>\
    \ tens = new ArrayList<Long>();\n        ArrayList<Long> elevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twelves = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirteens = new ArrayList<Long>();\n        ArrayList<Long> fourteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtys = new ArrayList<Long>();\n        ArrayList<Long> fortys = new ArrayList<Long>();\n\
    \        ArrayList<Long> fiftys = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixtys = new ArrayList<Long>();\n        ArrayList<Long> seventys = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighty = new ArrayList<Long>();\n        ArrayList<Long>\
    \ ninety = new ArrayList<Long>();\n        ArrayList<Long> hundred = new ArrayList<Long>",
  "        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zeros = new ArrayList<Long>();\n        ArrayList<Long> ones = new ArrayList<Long>();\n\
    \        ArrayList<Long> twos = new ArrayList<Long>();\n        ArrayList<Long>\
    \ threes = new ArrayList<Long>();\n        ArrayList<Long> fours = new ArrayList<Long>();\n\
    \        ArrayList<Long> fives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixes = new ArrayList<Long>();\n        ArrayList<Long> sevens = new ArrayList<Long>();\n\
    \        ArrayList<Long> eights = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nines = new ArrayList<Long>();\n        ArrayList<Long> tens = new ArrayList<Long>();\n\
    \        ArrayList<Long> elevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twelves = new ArrayList<Long>();\n        ArrayList<Long> thirteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> fourteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fifteens = new ArrayList<Long>();\n        ArrayList<Long> sixteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> seventeens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eighteens = new ArrayList<Long>();\n        ArrayList<Long> nineteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> twenties = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirtyones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtytwos = new ArrayList<Long>();\n        ArrayList<Long> thirtythrees =\
    \ new ArrayList<Long>();\n        ArrayList<Long> thirtyfours = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirtyfives = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirtysixes = new ArrayList<Long>();\n        ArrayList<Long> thirtysevens =\
    \ new ArrayList<Long>();\n        ArrayList<Long> thirty", "        ArrayList<Long>\
    \ sorted = new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twos = new ArrayList<Long>();\n        ArrayList<Long> threes = new ArrayList<Long>();\n\
    \        ArrayList<Long> fours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fives = new ArrayList<Long>();\n        ArrayList<Long> sixes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eights = new ArrayList<Long>();\n        ArrayList<Long> nines = new ArrayList<Long>();\n\
    \        ArrayList<Long> tens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ elevens = new ArrayList<Long>();\n        ArrayList<Long> twelves = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourteens = new ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new Array",
  "        ArrayList<Long> sorted = new ArrayList<>();\n        ArrayList<Long> sortedByOnes\
    \ = new ArrayList<>();\n        ArrayList<Long> sortedByDecimal = new ArrayList<>();\n\
    \        ArrayList<Long> sortedByOnesAndDecimal = new ArrayList<>();\n       \
    \ for (Long num : arr) {\n            if (num < 0) {\n                sorted.add(num);\n\
    \            } else {\n                sortedByOnes.add(num);\n            }\n\
    \        }\n        sortedByOnes.sort((a, b) -> {\n            return Long.bitCount(a)\
    \ - Long.bitCount(b);\n        });\n        sortedByDecimal.addAll(sortedByOnes);\n\
    \        sortedByDecimal.sort((a, b) -> {\n            return (int) (a - b);\n\
    \        });\n        sortedByOnesAndDecimal.addAll(sortedByOnes);\n        sortedByOnesAndDecimal.sort((a,\
    \ b) -> {\n            if (Long.bitCount(a) == Long.bitCount(b)) {\n         \
    \       return (int) (a - b);\n            } else {\n                return Long.bitCount(a)\
    \ - Long.bitCount(b);\n            }\n        });\n        sorted.addAll(sortedByOnesAndDecimal);\n\
    \        return sorted;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted2 = new ArrayList<Long>();\n        ArrayList<Long> sorted3 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted4 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted5 = new ArrayList<Long>();\n        ArrayList<Long> sorted6 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted7 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted8 = new ArrayList<Long>();\n        ArrayList<Long> sorted9 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted10 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted11 = new ArrayList<Long>();\n        ArrayList<Long> sorted12 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted13 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted14 = new ArrayList<Long>();\n        ArrayList<Long> sorted15 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted16 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted17 = new ArrayList<Long>();\n        ArrayList<Long> sorted18 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted19 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted20 = new ArrayList<Long>();\n        ArrayList<Long> sorted21 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted22 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted23 = new ArrayList<Long>();\n        ArrayList<Long> sorted24 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted25 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted26 = new ArrayList<Long>();\n        ArrayList<Long> sorted27 = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted28 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sorted29 = new ArrayList<Long>();\n        ArrayList", "        // your code\
    \ here\n        ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp = new ArrayList<Long>();\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            temp.add(arr.get(i));\n        }\n        Collections.sort(temp);\n\
    \        for (int i = 0; i < temp.size(); i++) {\n            result.add(temp.get(i));\n\
    \        }\n        return result;", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> one = new ArrayList<Long>();\n        ArrayList<Long>\
    \ zero = new ArrayList<Long>();\n        for (Long l : arr) {\n            if\
    \ (l < 0) {\n                result.add(l);\n            } else if (l == 0) {\n\
    \                zero.add(l);\n            } else {\n                one.add(l);\n\
    \            }\n        }\n        Collections.sort(one);\n        Collections.sort(zero);\n\
    \        result.addAll(zero);\n        result.addAll(one);\n        return result;",
  "        return new ArrayList<Long>(arr.stream().sorted(new Comparator<Long>() {\n\
    \            public int compare(Long a, Long b) {\n                int aOnes =\
    \ Long.bitCount(a);\n                int bOnes = Long.bitCount(b);\n         \
    \       if (aOnes == bOnes) {\n                    return a.compareTo(b);\n  \
    \              } else {\n                    return aOnes - bOnes;\n         \
    \       }\n            }\n        }).collect(Collectors.toList()));", "      \
    \  // Your code here\n        return arr;", "        ArrayList<Long> sorted =\
    \ new ArrayList<Long>();\n        ArrayList<Long> zeros = new ArrayList<Long>();\n\
    \        ArrayList<Long> ones = new ArrayList<Long>();\n        ArrayList<Long>\
    \ twos = new ArrayList<Long>();\n        ArrayList<Long> threes = new ArrayList<Long>();\n\
    \        ArrayList<Long> fours = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fives = new ArrayList<Long>();\n        ArrayList<Long> sixes = new ArrayList<Long>();\n\
    \        ArrayList<Long> sevens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ eights = new ArrayList<Long>();\n        ArrayList<Long> nines = new ArrayList<Long>();\n\
    \        ArrayList<Long> tens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ elevens = new ArrayList<Long>();\n        ArrayList<Long> twelves = new ArrayList<Long>();\n\
    \        ArrayList<Long> thirteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ fourteens = new ArrayList<Long>();\n        ArrayList<Long> fifteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> sixteens = new ArrayList<Long>();\n        ArrayList<Long>\
    \ seventeens = new ArrayList<Long>();\n        ArrayList<Long> eighteens = new\
    \ ArrayList<Long>();\n        ArrayList<Long> ninteens = new ArrayList<Long>();\n\
    \        ArrayList<Long> twenties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ thirties = new ArrayList<Long>();\n        ArrayList<Long> forties = new ArrayList<Long>();\n\
    \        ArrayList<Long> fifties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ sixties = new ArrayList<Long>();\n        ArrayList<Long> seventies = new ArrayList<Long>();\n\
    \        ArrayList<Long> eighties = new ArrayList<Long>();\n        ArrayList<Long>\
    \ nineties = new ArrayList<Long>();\n        ArrayList<Long> hundreds = new Array"]
stop_tokens:
- "\n    }\n"

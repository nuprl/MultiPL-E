name: HumanEval_43_pairs_sum_to_zero
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
  \    // it returns True if there are two distinct elements in the list that\n  \
  \  // sum to zero, and False otherwise.\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)3l, (long)5l, (long)0l))))\n    // (false)\n    // >>> pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)-2l, (long)1l))))\n  \
  \  // (false)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)7l))))\n    // (false)\n    // >>> pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
  \ (long)7l))))\n    // (true)\n    // >>> pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\n\
  \    // (false)\n    public static boolean pairsSumToZero(ArrayList<Long> l) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)0l)))) == (false));\n\
  \    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l,\
  \ (long)-2l, (long)1l)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)7l)))) == (false));\n    assert(pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-5l, (long)3l, (long)5l,\
  \ (long)7l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)1l))))\
  \ == (false));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
  \ (long)9l, (long)-1l, (long)3l, (long)2l, (long)30l)))) == (true));\n    assert(pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)3l, (long)2l,\
  \ (long)31l)))) == (true));\n    assert(pairsSumToZero((new ArrayList<Long>(Arrays.asList((long)-3l,\
  \ (long)9l, (long)-1l, (long)4l, (long)2l, (long)30l)))) == (false));\n    assert(pairsSumToZero((new\
  \ ArrayList<Long>(Arrays.asList((long)-3l, (long)9l, (long)-1l, (long)4l, (long)2l,\
  \ (long)31l)))) == (false));\n    }\n\n}\n"
completions: ["        // your code here\n        return false;", "        if (l.size()\
    \ < 2) {\n            return false;\n        }\n        HashSet<Long> seen = new\
    \ HashSet<Long>();\n        for (Long x : l) {\n            if (seen.contains(-x))\
    \ {\n                return true;\n            }\n            seen.add(x);\n \
    \       }\n        return false;", '        return false;', '        return false;',
  "        // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        // your code goes here\n        return false;",
  '        return false;', "        // your code here\n        return false;", " \
    \       // YOUR CODE HERE\n        return false;", "        // your code here\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // your code here\n        return false;", "        // your code here\n\
    \        return false;", '        return false;', "        // Your code here\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // your code here\n        return false;", '        return false;', " \
    \       // your code here\n        return false;"]
stop_tokens:
- "\n    }\n"

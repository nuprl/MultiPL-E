language: java
name: HumanEval_121_solution
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).reduce(0l, (x, y) -> x + y);\n \
    \   }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpidx6xlqo.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).reduce(0l, (x, y) -> x + y);\n \
    \   }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpidx6xlqo.java:21)\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ long sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (i % 2 == 0 && lst.get(i) % 2 == 1) {\n                sum += lst.get(i);\n\
    \            }\n        }\n        return sum;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)8l, (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).filter(x -> lst.indexOf(x) % 2 ==\
    \ 0).mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjyhaf09z.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).reduce(0l, (x, y) -> x + y);\n \
    \   }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpidx6xlqo.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).filter(x -> lst.indexOf(x) % 2 ==\
    \ 0).mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjyhaf09z.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).filter(x -> lst.indexOf(x) % 2 ==\
    \ 0).mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjyhaf09z.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).reduce(0l, (x, y) -> x + y);\n \
    \   }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpidx6xlqo.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).reduce(0l, (x, y) -> x + y);\n \
    \   }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpidx6xlqo.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 != 0).reduce(0l, (x, y) -> x + y);\n \
    \   }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_d74_de7.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).reduce(0l, (x, y) -> x + y);\n \
    \   }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpidx6xlqo.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).filter(x -> lst.indexOf(x) % 2 ==\
    \ 0).mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjyhaf09z.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).reduce(0l, (x, y) -> x + y);\n \
    \   }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpidx6xlqo.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).reduce(0l, (x, y) -> x + y);\n \
    \   }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpidx6xlqo.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).filter(x -> lst.indexOf(x) % 2 ==\
    \ 0).mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjyhaf09z.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).reduce(0l, (x, y) -> x + y);\n \
    \   }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpidx6xlqo.java:21)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).filter(x -> lst.indexOf(x) % 2 ==\
    \ 0).mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l,\
    \ (long)7l, (long)1l)))) == (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\
    \ == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjyhaf09z.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a non-empty list of integers, return the sum of\
    \ all of the odd elements that are in even positions.\n    // Examples\n    //\
    \ >>> solution((new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l,\
    \ (long)1l))))\n    // (12l)\n    // >>> solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l, (long)3l, (long)3l))))\n    // (9l)\n    // >>> solution((new\
    \ ArrayList<Long>(Arrays.asList((long)30l, (long)13l, (long)24l, (long)321l))))\n\
    \    // (0l)\n    public static long solution(ArrayList<Long> lst) {\n       \
    \ return lst.stream().filter(x -> x % 2 == 1).reduce(0l, (x, y) -> x + y);\n \
    \   }\n    public static void main(String[] args) {\n    assert(solution((new\
    \ ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)7l, (long)1l)))) ==\
    \ (12l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l, (long)3l, (long)3l)))) == (9l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)24l, (long)321l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)5l,\
    \ (long)9l)))) == (5l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)2l,\
    \ (long)4l, (long)8l)))) == (0l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)30l,\
    \ (long)13l, (long)23l, (long)32l)))) == (23l));\n    assert(solution((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)13l, (long)2l, (long)9l)))) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpidx6xlqo.java:21)\n"
  stdout: ''

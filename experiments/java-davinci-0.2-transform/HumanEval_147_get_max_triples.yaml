name: HumanEval_147_get_max_triples
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given a positive integer n. You have to create an\
  \ integer array a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value\
  \ of a[i] = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k])\
  \ of a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n  \
  \  // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
  \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
  \    public static long getMaxTriples(long n) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(getMaxTriples((5l))\
  \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
  \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
completions: ["        long[] a = new long[(int)n];\n        for (int i = 0; i < n;\
    \ i++) {\n            a[i] = i * i - i + 1;\n        }\n        long count = 0;\n\
    \        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;\
    \ j++) {\n                for (int k = j + 1; k < n; k++) {\n                \
    \    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", "        long[] a = new long[(int)n];\n        for (int i = 0; i <\
    \ n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long count\
    \ = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1;\
    \ j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", "        long[] a = new long[(int)n];\n        for (int i = 0; i <\
    \ n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long count\
    \ = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1;\
    \ j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", "        long[] a = new long[(int)n];\n        for (int i = 0; i <\
    \ n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        long count\
    \ = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1;\
    \ j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n         \
    \           if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;", '        return 0;', "        long[] a = new long[(int)n];\n      \
    \  for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n\
    \        long count = 0;\n        for (int i = 0; i < n; i++) {\n            for\
    \ (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)\
    \ {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n              \
    \          count++;\n                    }\n                }\n            }\n\
    \        }\n        return count;", "        long[] a = new long[(int)n];\n  \
    \      for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n    \
    \    }\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n     \
    \       for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1;\
    \ k < n; k++) {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n  \
    \                      count++;\n                    }\n                }\n  \
    \          }\n        }\n        return count;", "        long[] a = new long[(int)n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n   \
    \         for (int j = i + 1; j < n; j++) {\n                for (int k = j +\
    \ 1; k < n; k++) {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;", "        long[] a = new long[(int)n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = (long)i * i - i + 1;\n\
    \        }\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n \
    \           for (int j = i + 1; j < n; j++) {\n                for (int k = j\
    \ + 1; k < n; k++) {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;", "        // Write your code\
    \ here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        long[] a =\
    \ new long[(int)n];\n        for (int i = 0; i < n; i++) {\n            a[i] =\
    \ i * i - i + 1;\n        }\n        long count = 0;\n        for (int i = 0;\
    \ i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n     \
    \           for (int k = j + 1; k < n; k++) {\n                    if ((a[i] +\
    \ a[j] + a[k]) % 3 == 0) {\n                        count++;\n               \
    \     }\n                }\n            }\n        }\n        return count;",
  "        long[] a = new long[(int)n];\n        long count = 0;\n        for (int\
    \ i = 0; i < n; i++) {\n            a[i] = (i + 1) * (i + 1) - (i + 1) + 1;\n\
    \        }\n        for (int i = 0; i < n; i++) {\n            for (int j = i\
    \ + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n    \
    \                if ((a[i] + a[j] + a[k]) % 3 == 0) {\n                      \
    \  count++;\n                    }\n                }\n            }\n       \
    \ }\n        return count;", "        long[] a = new long[(int)n];\n        for\
    \ (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n  \
    \      long count = 0;\n        for (int i = 0; i < n; i++) {\n            for\
    \ (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)\
    \ {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n              \
    \          count++;\n                    }\n                }\n            }\n\
    \        }\n        return count;", "        long[] a = new long[(int)n];\n  \
    \      for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n    \
    \    }\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n     \
    \       for (int j = i + 1; j < n; j++) {\n                for (int k = j + 1;\
    \ k < n; k++) {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n  \
    \                      count++;\n                    }\n                }\n  \
    \          }\n        }\n        return count;", "        long[] a = new long[(int)n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n   \
    \         for (int j = i + 1; j < n; j++) {\n                for (int k = j +\
    \ 1; k < n; k++) {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;", "        long[] a = new long[(int)n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = (long)i * i - i + 1;\n\
    \        }\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n \
    \           for (int j = i + 1; j < n; j++) {\n                for (int k = j\
    \ + 1; k < n; k++) {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;", "        long[] a = new long[(int)n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n   \
    \         for (int j = i + 1; j < n; j++) {\n                for (int k = j +\
    \ 1; k < n; k++) {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;", "        long[] a = new long[(int)n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n   \
    \         for (int j = i + 1; j < n; j++) {\n                for (int k = j +\
    \ 1; k < n; k++) {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;", "        long[] a = new long[(int)n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n   \
    \         for (int j = i + 1; j < n; j++) {\n                for (int k = j +\
    \ 1; k < n; k++) {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;", "        long[] a = new long[(int)n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n   \
    \         for (int j = i + 1; j < n; j++) {\n                for (int k = j +\
    \ 1; k < n; k++) {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;", "        long[] a = new long[(int)n];\n\
    \        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n  \
    \      }\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n   \
    \         for (int j = i + 1; j < n; j++) {\n                for (int k = j +\
    \ 1; k < n; k++) {\n                    if ((a[i] + a[j] + a[k]) % 3 == 0) {\n\
    \                        count++;\n                    }\n                }\n\
    \            }\n        }\n        return count;"]
stop_tokens:
- "\n    }\n"

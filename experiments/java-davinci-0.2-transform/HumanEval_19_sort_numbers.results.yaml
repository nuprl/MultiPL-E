language: java
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        String[] numsStr\
    \ = new String[numsInt.length];\n        for (int i = 0; i < numsInt.length; i++)\
    \ {\n            switch (numsInt[i]) {\n                case 0:\n            \
    \        numsStr[i] = \"zero\";\n                    break;\n                case\
    \ 1:\n                    numsStr[i] = \"one\";\n                    break;\n\
    \                case 2:\n                    numsStr[i] = \"two\";\n        \
    \            break;\n                case 3:\n                    numsStr[i] =\
    \ \"three\";\n                    break;\n                case 4:\n          \
    \          numsStr[i] = \"four\";\n                    break;\n              \
    \  case 5:\n                    numsStr[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    numsStr[i] = \"six\";\n        \
    \            break;\n                case 7:\n                    numsStr[i] =\
    \ \"seven\";\n                    break;\n                case 8:\n          \
    \          numsStr[\n    }\n    public static void main(String[] args) {\n   \
    \ assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"three\"\
    )).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar6tlj7w.java:81: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpar6tlj7w.java:80: error: not a statement\n                    numsStr[\n\
    \                           ^\n/tmp/tmpar6tlj7w.java:81: error: ';' expected\n\
    \    }\n     ^\n/tmp/tmpar6tlj7w.java:82: error: illegal start of expression\n\
    \    public static void main(String[] args) {\n           ^\n/tmp/tmpar6tlj7w.java:82:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \         ^\n/tmp/tmpar6tlj7w.java:82: error: '.class' expected\n    public static\
    \ void main(String[] args) {\n                                     ^\n/tmp/tmpar6tlj7w.java:82:\
    \ error: ';' expected\n    public static void main(String[] args) {\n        \
    \                                 ^\n/tmp/tmpar6tlj7w.java:90: error: reached\
    \ end of file while parsing\n}\n ^\n/tmp/tmpar6tlj7w.java:91: error: reached end\
    \ of file while parsing\n9 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        return \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"three\"\
    )).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpssc1uh6v.java:19)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp250gk79r.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp250gk79r.java:88: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp250gk79r.java:88: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmp250gk79r.java:96:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp250gk79r.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp250gk79r.java:88: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp250gk79r.java:88: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmp250gk79r.java:96:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ < numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpd4zvet2s.java:18)\n\tat Problem.main(tmpd4zvet2s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String[] numsSorted = new String[nums.length];\n        for (int i =\
    \ 0; i < nums.length; i++) {\n            numsSorted[i] = intToNum(numsInt[i]);\n\
    \        }\n        return String.join(\" \", numsSorted);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpazjbn7_r.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpazjbn7_r.java:23: error: cannot find symbol\n\
    \            numsSorted[i] = intToNum(numsInt[i]);\n                         \
    \   ^\n  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp250gk79r.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp250gk79r.java:88: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp250gk79r.java:88: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmp250gk79r.java:96:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpw_lwhu5s.java:18)\n\tat Problem.main(tmpw_lwhu5s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        int[] nums = new int[10];\n        String[] numsStr = numbers.split(\"\
    \ \");\n        for (String num : numsStr) {\n            switch (num) {\n   \
    \             case \"zero\":\n                    nums[0]++;\n               \
    \     break;\n                case \"one\":\n                    nums[1]++;\n\
    \                    break;\n                case \"two\":\n                 \
    \   nums[2]++;\n                    break;\n                case \"three\":\n\
    \                    nums[3]++;\n                    break;\n                case\
    \ \"four\":\n                    nums[4]++;\n                    break;\n    \
    \            case \"five\":\n                    nums[5]++;\n                \
    \    break;\n                case \"six\":\n                    nums[6]++;\n \
    \                   break;\n                case \"seven\":\n                \
    \    nums[7]++;\n                    break;\n                case \"eight\":\n\
    \                    nums[8]++;\n                    break;\n                case\
    \ \"nine\":\n                    nums[9]++;\n                    break;\n    \
    \        }\n        }\n        StringBuilder sb = new StringBuilder();\n     \
    \   for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < nums[i]; j++)\
    \ {\n                switch (i) {\n                    case 0:\n             \
    \           sb.append(\"zero \");\n                        break;\n          \
    \          case 1:\n                        sb.append(\"one \");\n           \
    \             break;\n                    case 2:\n                        sb.append(\"\
    two \");\n                        break;\n                    case 3:\n      \
    \                  sb.append(\"three \");\n                        break;\n  \
    \                  case 4:\n                        sb.append(\"four \");\n  \
    \                      break;\n                    case 5:\n                 \
    \       sb.append(\"five \");\n                        break;\n              \
    \      case 6:\n                        sb.append(\"six \");\n               \
    \         break;\n                    case 7:\n                        sb.append(\"\
    seven \");\n                        break;\n                    case 8:\n    \
    \                    sb.append(\"eight \");\n                        break;\n\
    \                    case 9:\n                        sb.append(\"nine \");\n\
    \                        break;\n                }\n            }\n        }\n\
    \        return sb.toString().trim();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(nums_int[i]);\n            if\
    \ (i != nums_int.length - 1) {\n                sb.append(\" \");\n          \
    \  }\n        }\n        return sb.toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpycmnv_hp.java:18)\n\tat Problem.main(tmpycmnv_hp.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        // TODO: Implement me\n        return \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp09dpv3q4.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3naqqza4.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp3naqqza4.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convert(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(convert(nums_int[i]));\n    \
    \        if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpczxoop3t.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convert(nums[i]);\n                          ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmpczxoop3t.java:23: error: cannot find symbol\n\
    \            sb.append(convert(nums_int[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3naqqza4.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp3naqqza4.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        return \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"three\"\
    )).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpssc1uh6v.java:19)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] nums2 = new\
    \ String[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n    \
    \        nums2[i] = nums[i];\n        }\n        Arrays.sort(nums2);\n       \
    \ StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < nums2.length;\
    \ i++) {\n            sb.append(nums2[i]);\n            if (i != nums2.length\
    \ - 1) {\n                sb.append(\" \");\n            }\n        }\n      \
    \  return sb.toString();\n    }\n    public static void main(String[] args) {\n\
    \    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"three\"\
    )).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_tx90sx8.java:33)\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        return \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"three\"\
    )).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpssc1uh6v.java:19)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp250gk79r.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp250gk79r.java:88: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp250gk79r.java:88: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmp250gk79r.java:96:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp250gk79r.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp250gk79r.java:88: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp250gk79r.java:88: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmp250gk79r.java:96:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoyj02yt9.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpoyj02yt9.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = convert(nums[i]);\n        }\n        Arrays.sort(nums2);\n \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < nums2.length;\
    \ i++) {\n            sb.append(convert(nums2[i]));\n            if (i != nums2.length\
    \ - 1) {\n                sb.append(\" \");\n            }\n        }\n      \
    \  return sb.toString();\n    }\n    public static void main(String[] args) {\n\
    \    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"three\"\
    )).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9voycq7t.java:18: error: cannot find symbol\n            nums2[i]\
    \ = convert(nums[i]);\n                       ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp9voycq7t.java:23: error: cannot find symbol\n\
    \            sb.append(convert(nums2[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(nums_int[i]);\n            if\
    \ (i != nums_int.length - 1) {\n                sb.append(\" \");\n          \
    \  }\n        }\n        return sb.toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpycmnv_hp.java:18)\n\tat Problem.main(tmpycmnv_hp.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = getNumber(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(getWord(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg5a_3rvp.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = getNumber(nums[i]);\n                         ^\n  symbol:   method getNumber(String)\n\
    \  location: class Problem\n/tmp/tmpg5a_3rvp.java:23: error: cannot find symbol\n\
    \            sb.append(getWord(numsInt[i]));\n                      ^\n  symbol:\
    \   method getWord(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(intToNum(nums_int[i]));\n   \
    \         if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9jhv3kih.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp9jhv3kih.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums_int[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String[] numsSorted = new String[nums.length];\n        for (int i =\
    \ 0; i < nums.length; i++) {\n            numsSorted[i] = intToNum(numsInt[i]);\n\
    \        }\n        return String.join(\" \", numsSorted);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpazjbn7_r.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpazjbn7_r.java:23: error: cannot find symbol\n\
    \            numsSorted[i] = intToNum(numsInt[i]);\n                         \
    \   ^\n  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoyj02yt9.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpoyj02yt9.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3naqqza4.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp3naqqza4.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp250gk79r.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp250gk79r.java:88: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp250gk79r.java:88: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmp250gk79r.java:96:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        return \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"three\"\
    )).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpssc1uh6v.java:19)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String result = \"\";\n        for (int i = 0; i < numsInt.length; i++)\
    \ {\n            result += convertToString(numsInt[i]) + \" \";\n        }\n \
    \       return result.trim();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj4ykmga6.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpj4ykmga6.java:23: error: cannot find symbol\n\
    \            result += convertToString(numsInt[i]) + \" \";\n                \
    \      ^\n  symbol:   method convertToString(int)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] nums2 = new\
    \ String[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n    \
    \        if (nums[i].equals(\"zero\")) {\n                nums2[i] = \"0\";\n\
    \            } else if (nums[i].equals(\"one\")) {\n                nums2[i] =\
    \ \"1\";\n            } else if (nums[i].equals(\"two\")) {\n                nums2[i]\
    \ = \"2\";\n            } else if (nums[i].equals(\"three\")) {\n            \
    \    nums2[i] = \"3\";\n            } else if (nums[i].equals(\"four\")) {\n \
    \               nums2[i] = \"4\";\n            } else if (nums[i].equals(\"five\"\
    )) {\n                nums2[i] = \"5\";\n            } else if (nums[i].equals(\"\
    six\")) {\n                nums2[i] = \"6\";\n            } else if (nums[i].equals(\"\
    seven\")) {\n                nums2[i] = \"7\";\n            } else if (nums[i].equals(\"\
    eight\")) {\n                nums2[i] = \"8\";\n            } else if (nums[i].equals(\"\
    nine\")) {\n                nums2[i] = \"9\";\n            }\n        }\n    \
    \    Arrays.sort(nums2);\n        String[] nums3 = new String[nums.length];\n\
    \        for (int i = 0; i < nums.length; i++) {\n            if (nums2[i].equals(\"\
    0\")) {\n                nums3[i] = \"zero\";\n            } else if (nums2[i].equals(\"\
    1\")) {\n                nums3[i] = \"one\";\n            } else if (nums2[i].equals(\"\
    2\")) {\n                nums3[i] = \"two\";\n            } else if (nums2[i].equals(\"\
    3\")) {\n                nums3[i] = \"three\";\n            } else if (\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwj8p5cwv.java:52: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpwj8p5cwv.java:53: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659798078
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i] + \" \");\n       \
    \ }\n        return sb.toString().trim();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmpasgju1xg.java:18)\n\tat Problem.main(tmpasgju1xg.java:28)\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3naqqza4.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp3naqqza4.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(convertToString(nums_int[i]));\n\
    \            if (i != nums_int.length - 1) {\n                sb.append(\" \"\
    );\n            }\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa899yxae.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convertToInt(nums[i]);\n                          ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpa899yxae.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(nums_int[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(nums2);\n\
    \        String result = \"\";\n        for (int i = 0; i < nums2.length; i++)\
    \ {\n            result += nums2[i] + \" \";\n        }\n        return result.trim();\n\
    \    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmpmrqnvzrv.java:18)\n\tat Problem.main(tmpmrqnvzrv.java:28)\n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpw_lwhu5s.java:18)\n\tat Problem.main(tmpw_lwhu5s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3naqqza4.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp3naqqza4.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpw_lwhu5s.java:18)\n\tat Problem.main(tmpw_lwhu5s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(intToNum(nums_int[i]));\n   \
    \         if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9jhv3kih.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp9jhv3kih.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums_int[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpw_lwhu5s.java:18)\n\tat Problem.main(tmpw_lwhu5s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i < numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpky55uj81.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpky55uj81.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpw_lwhu5s.java:18)\n\tat Problem.main(tmpw_lwhu5s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoyj02yt9.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpoyj02yt9.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpw_lwhu5s.java:18)\n\tat Problem.main(tmpw_lwhu5s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoyj02yt9.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpoyj02yt9.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i < numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl0le0l1p.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpl0le0l1p.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp250gk79r.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp250gk79r.java:88: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp250gk79r.java:88: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmp250gk79r.java:96:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = getInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(getString(numsInt[i]));\n    \
    \        if (i != numsInt.length - 1) {\n                sb.append(\" \");\n \
    \           }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo572svto.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = getInt(nums[i]);\n                         ^\n  symbol:   method getInt(String)\n\
    \  location: class Problem\n/tmp/tmpo572svto.java:23: error: cannot find symbol\n\
    \            sb.append(getString(numsInt[i]));\n                      ^\n  symbol:\
    \   method getString(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        return \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"three\"\
    )).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpssc1uh6v.java:19)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpw_lwhu5s.java:18)\n\tat Problem.main(tmpw_lwhu5s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String[] numsStr = new String[numsInt.length];\n        for (int i =\
    \ 0; i < numsInt.length; i++) {\n            numsStr[i] = intToNum(numsInt[i]);\n\
    \        }\n        return String.join(\" \", numsStr);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9j1mgvil.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp9j1mgvil.java:23: error: cannot find symbol\n\
    \            numsStr[i] = intToNum(numsInt[i]);\n                         ^\n\
    \  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i < numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpky55uj81.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpky55uj81.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums2);\n\
    \        String[] nums3 = new String[nums.length];\n        for (int i = 0; i\
    \ < nums.length; i++) {\n            nums3[i] = intToNum(nums2[i]);\n        }\n\
    \        return String.join(\" \", nums3);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvst6uqio.java:18: error: cannot find symbol\n            nums2[i]\
    \ = numToInt(nums[i]);\n                       ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvst6uqio.java:23: error: cannot find symbol\n\
    \            nums3[i] = intToNum(nums2[i]);\n                       ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        // Your code here\n        return \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpak3bwcd9.java:20)\n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i < numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpky55uj81.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpky55uj81.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(nums2);\n\
    \        String result = \"\";\n        for (int i = 0; i < nums2.length; i++)\
    \ {\n            result += nums2[i] + \" \";\n        }\n        return result.trim();\n\
    \    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmpmrqnvzrv.java:18)\n\tat Problem.main(tmpmrqnvzrv.java:28)\n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3naqqza4.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp3naqqza4.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String result = \"\";\n        for (int i = 0; i < numsInt.length; i++)\
    \ {\n            result += intToNum(numsInt[i]) + \" \";\n        }\n        return\
    \ result.trim();\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbv80jfn4.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpbv80jfn4.java:23: error: cannot find symbol\n\
    \            result += intToNum(numsInt[i]) + \" \";\n                      ^\n\
    \  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     if (nums[i].equals(\"zero\")) {\n                numsInt[i] = 0;\n     \
    \       } else if (nums[i].equals(\"one\")) {\n                numsInt[i] = 1;\n\
    \            } else if (nums[i].equals(\"two\")) {\n                numsInt[i]\
    \ = 2;\n            } else if (nums[i].equals(\"three\")) {\n                numsInt[i]\
    \ = 3;\n            } else if (nums[i].equals(\"four\")) {\n                numsInt[i]\
    \ = 4;\n            } else if (nums[i].equals(\"five\")) {\n                numsInt[i]\
    \ = 5;\n            } else if (nums[i].equals(\"six\")) {\n                numsInt[i]\
    \ = 6;\n            } else if (nums[i].equals(\"seven\")) {\n                numsInt[i]\
    \ = 7;\n            } else if (nums[i].equals(\"eight\")) {\n                numsInt[i]\
    \ = 8;\n            } else if (nums[i].equals(\"nine\")) {\n                numsInt[i]\
    \ = 9;\n            }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++)\
    \ {\n            if (numsInt[i] == 0) {\n                sb.append(\"zero\");\n\
    \            } else if (numsInt[i] == 1) {\n                sb.append(\"one\"\
    );\n            } else if (numsInt[i] == 2) {\n                sb.append(\"two\"\
    );\n            } else if (numsInt[i] == 3) {\n                sb.append(\"three\"\
    );\n            } else if (numsInt[i] == 4) {\n                sb.append(\"four\"\
    );\n            } else if (numsInt[i] == 5)\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqbrb9jv0.java:54: error: illegal start of statement\n    }\n  \
    \  ^\n/tmp/tmpqbrb9jv0.java:55: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(nums2);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums2.length; i++) {\n            sb.append(nums2[i]);\n            sb.append(\"\
    \ \");\n        }\n        return sb.toString().trim();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmpxyhn_xyx.java:18)\n\tat Problem.main(tmpxyhn_xyx.java:29)\n"
  stdout: ''
  timestamp: 1659798037
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp250gk79r.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp250gk79r.java:88: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp250gk79r.java:88: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmp250gk79r.java:96:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = nums[i].equals(\"zero\") ? 0 : nums[i].equals(\"one\") ? 1\
    \ : nums[i].equals(\"two\") ? 2 : nums[i].equals(\"three\") ? 3 : nums[i].equals(\"\
    four\") ? 4 : nums[i].equals(\"five\") ? 5 : nums[i].equals(\"six\") ? 6 : nums[i].equals(\"\
    seven\") ? 7 : nums[i].equals(\"eight\") ? 8 : 9;\n        }\n        Arrays.sort(numsInt);\n\
    \        String[] numsStr = new String[nums.length];\n        for (int i = 0;\
    \ i < nums.length; i++) {\n            numsStr[i] = numsInt[i] == 0 ? \"zero\"\
    \ : numsInt[i] == 1 ? \"one\" : numsInt[i] == 2 ? \"two\" : numsInt[i] == 3 ?\
    \ \"three\" : numsInt[i] == 4 ? \"four\" : numsInt[i] == 5 ? \"five\" : numsInt[i]\
    \ == 6 ? \"six\" : numsInt[i] == 7 ? \"seven\" : numsInt[i] == 8 ? \"eight\" :\
    \ \"nine\";\n        }\n        return String.join(\" \", numsStr);\n    }\n \
    \   public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2umg36s2.java:28)\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String[] numsSorted = new String[nums.length];\n        for (int i =\
    \ 0; i < nums.length; i++) {\n            numsSorted[i] = intToNum(numsInt[i]);\n\
    \        }\n        return String.join(\" \", numsSorted);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpazjbn7_r.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpazjbn7_r.java:23: error: cannot find symbol\n\
    \            numsSorted[i] = intToNum(numsInt[i]);\n                         \
    \   ^\n  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp250gk79r.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp250gk79r.java:88: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp250gk79r.java:88: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmp250gk79r.java:96:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] nums_sorted\
    \ = new String[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n\
    \            nums_sorted[i] = nums[i];\n        }\n        Arrays.sort(nums_sorted,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return numToInt(a) - numToInt(b);\n            }\n   \
    \     });\n        StringBuilder sb = new StringBuilder();\n        for (int i\
    \ = 0; i < nums_sorted.length; i++) {\n            sb.append(nums_sorted[i]);\n\
    \            if (i != nums_sorted.length - 1) {\n                sb.append(\"\
    \ \");\n            }\n        }\n        return sb.toString();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp93d22bac.java:22: error: cannot find symbol\n                return\
    \ numToInt(a) - numToInt(b);\n                       ^\n  symbol: method numToInt(String)\n\
    /tmp/tmp93d22bac.java:22: error: cannot find symbol\n                return numToInt(a)\
    \ - numToInt(b);\n                                     ^\n  symbol: method numToInt(String)\n\
    2 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp250gk79r.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp250gk79r.java:88: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp250gk79r.java:88: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmp250gk79r.java:96:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums2);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums2.length; i++) {\n            sb.append(intToNum(nums2[i]));\n         \
    \   if (i != nums2.length - 1) {\n                sb.append(\" \");\n        \
    \    }\n        }\n        return sb.toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphclfg3n9.java:18: error: cannot find symbol\n            nums2[i]\
    \ = numToInt(nums[i]);\n                       ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmphclfg3n9.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums2[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ < numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpd4zvet2s.java:18)\n\tat Problem.main(tmpd4zvet2s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(intToNum(nums_int[i]));\n   \
    \         if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9jhv3kih.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp9jhv3kih.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums_int[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpw_lwhu5s.java:18)\n\tat Problem.main(tmpw_lwhu5s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i < numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpky55uj81.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpky55uj81.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(nums2);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums2.length; i++) {\n            sb.append(nums2[i]);\n            sb.append(\"\
    \ \");\n        }\n        return sb.toString().trim();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmpxyhn_xyx.java:18)\n\tat Problem.main(tmpxyhn_xyx.java:29)\n"
  stdout: ''
  timestamp: 1659798037
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ nums_int[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    nums_int[i] = 1;\n                    break;\n          \
    \      case \"two\":\n                    nums_int[i] = 2;\n                 \
    \   break;\n                case \"three\":\n                    nums_int[i] =\
    \ 3;\n                    break;\n                case \"four\":\n           \
    \         nums_int[i] = 4;\n                    break;\n                case \"\
    five\":\n                    nums_int[i] = 5;\n                    break;\n  \
    \              case \"six\":\n                    nums_int[i] = 6;\n         \
    \           break;\n                case \"seven\":\n                    nums_int[i]\
    \ = 7;\n                    break;\n                case \"eight\":\n        \
    \            nums_int[i] = 8;\n                    break;\n                case\
    \ \"nine\":\n                    nums_int[i] = 9;\n                    break;\n\
    \            }\n        }\n        Arrays.sort(nums_int);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < nums_int.length; i++)\
    \ {\n            switch (nums_int[i]) {\n                case 0:\n           \
    \         sb.append(\"zero\");\n                    break;\n                case\
    \ 1:\n                    sb.append(\"one\");\n                    break;\n  \
    \              case 2:\n                    sb.append(\"two\");\n            \
    \        break;\n                case 3:\n                    sb.append(\"three\"\
    );\n                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb\n\
    \    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpt5sowe9e.java:83: error: not a statement\n                    sb\n\
    \                    ^\n/tmp/tmpt5sowe9e.java:83: error: ';' expected\n      \
    \              sb\n                      ^\n/tmp/tmpt5sowe9e.java:85: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n3\
    \ errors\n"
  stdout: ''
  timestamp: 1659798078
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String[] numsSorted = new String[nums.length];\n        for (int i =\
    \ 0; i < nums.length; i++) {\n            numsSorted[i] = intToNum(numsInt[i]);\n\
    \        }\n        return String.join(\" \", numsSorted);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpazjbn7_r.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpazjbn7_r.java:23: error: cannot find symbol\n\
    \            numsSorted[i] = intToNum(numsInt[i]);\n                         \
    \   ^\n  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3naqqza4.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp3naqqza4.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpw_lwhu5s.java:18)\n\tat Problem.main(tmpw_lwhu5s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] nums2 = new\
    \ String[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n    \
    \        switch (nums[i]) {\n                case \"zero\":\n                \
    \    nums2[i] = \"0\";\n                    break;\n                case \"one\"\
    :\n                    nums2[i] = \"1\";\n                    break;\n       \
    \         case \"two\":\n                    nums2[i] = \"2\";\n             \
    \       break;\n                case \"three\":\n                    nums2[i]\
    \ = \"3\";\n                    break;\n                case \"four\":\n     \
    \               nums2[i] = \"4\";\n                    break;\n              \
    \  case \"five\":\n                    nums2[i] = \"5\";\n                   \
    \ break;\n                case \"six\":\n                    nums2[i] = \"6\"\
    ;\n                    break;\n                case \"seven\":\n             \
    \       nums2[i] = \"7\";\n                    break;\n                case \"\
    eight\":\n                    nums2[i] = \"8\";\n                    break;\n\
    \                case \"nine\":\n                    nums2[i] = \"9\";\n     \
    \               break;\n            }\n        }\n        Arrays.sort(nums2);\n\
    \        for (int i = 0; i < nums.length; i++) {\n            switch (nums2[i])\
    \ {\n                case \"0\":\n                    nums2[i] = \"zero\";\n \
    \                   break;\n                case \"1\":\n                    nums2[i]\
    \ = \"one\";\n                    break;\n                case \"2\":\n      \
    \              nums2[i] = \"two\";\n                    break;\n             \
    \   case \"3\":\n                    nums2[i] = \"three\";\n                 \
    \   break;\n                case \"4\":\n                    nums2[i] = \"four\"\
    ;\n                    break;\n                case \"5\":\n                 \
    \   nums2[i] = \"five\";\n                    break;\n                case \"\
    6\":\n                    nums2[i] = \"six\";\n                    break;\n  \
    \              case \"7\":\n                    nums2[i] = \"seven\";\n      \
    \              break;\n                case \"8\":\n                    nums2\n\
    \    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmps63jrk16.java:79: error: not a statement\n                    nums2\n\
    \                    ^\n/tmp/tmps63jrk16.java:79: error: ';' expected\n      \
    \              nums2\n                         ^\n/tmp/tmps63jrk16.java:81: error:\
    \ illegal start of expression\n    public static void main(String[] args) {\n\
    \    ^\n3 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        // Your code here\n        return \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpak3bwcd9.java:20)\n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ nums2[i] = 0;\n                    break;\n                case \"one\":\n \
    \                   nums2[i] = 1;\n                    break;\n              \
    \  case \"two\":\n                    nums2[i] = 2;\n                    break;\n\
    \                case \"three\":\n                    nums2[i] = 3;\n        \
    \            break;\n                case \"four\":\n                    nums2[i]\
    \ = 4;\n                    break;\n                case \"five\":\n         \
    \           nums2[i] = 5;\n                    break;\n                case \"\
    six\":\n                    nums2[i] = 6;\n                    break;\n      \
    \          case \"seven\":\n                    nums2[i] = 7;\n              \
    \      break;\n                case \"eight\":\n                    nums2[i] =\
    \ 8;\n                    break;\n                case \"nine\":\n           \
    \         nums2[i] = 9;\n                    break;\n            }\n        }\n\
    \        Arrays.sort(nums2);\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < nums2.length; i++) {\n            switch (nums2[i])\
    \ {\n                case 0:\n                    sb.append(\"zero \");\n    \
    \                break;\n                case 1:\n                    sb.append(\"\
    one \");\n                    break;\n                case 2:\n              \
    \      sb.append(\"two \");\n                    break;\n                case\
    \ 3:\n                    sb.append(\"three \");\n                    break;\n\
    \                case 4:\n                    sb.append(\"four \");\n        \
    \            break;\n                case 5:\n                    sb.append(\"\
    five \");\n                    break;\n                case 6:\n             \
    \       sb.append(\"six \");\n                    break;\n                case\
    \ 7:\n                    sb.append(\"seven \");\n                    break;\n\
    \                case 8:\n                    sb.append(\"eight \");\n       \
    \             break;\n                case 9:\n                    sb.append(\"\
    nine \"\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk7bbowdh.java:83: error: ')' expected\n                    sb.append(\"\
    nine \"\n                                     ^\n/tmp/tmpk7bbowdh.java:85: error:\
    \ illegal start of expression\n    public static void main(String[] args) {\n\
    \    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp250gk79r.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp250gk79r.java:88: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp250gk79r.java:88: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmp250gk79r.java:96:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp250gk79r.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp250gk79r.java:88: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp250gk79r.java:88: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmp250gk79r.java:96:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp250gk79r.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n/tmp/tmp250gk79r.java:88: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n        \
    \   ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void main(String[]\
    \ args) {\n                 ^\n/tmp/tmp250gk79r.java:88: error: '.class' expected\n\
    \    public static void main(String[] args) {\n                              \
    \       ^\n/tmp/tmp250gk79r.java:88: error: ';' expected\n    public static void\
    \ main(String[] args) {\n                                         ^\n/tmp/tmp250gk79r.java:96:\
    \ error: reached end of file while parsing\n}\n ^\n6 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(nums_int[i]);\n            if\
    \ (i != nums_int.length - 1) {\n                sb.append(\" \");\n          \
    \  }\n        }\n        return sb.toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpycmnv_hp.java:18)\n\tat Problem.main(tmpycmnv_hp.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3naqqza4.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp3naqqza4.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        String[] nums_sorted = new String[nums.length];\n        for (int i =\
    \ 0; i < nums.length; i++) {\n            nums_sorted[i] = intToNum(nums_int[i]);\n\
    \        }\n        return String.join(\" \", nums_sorted);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6znpwosf.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp6znpwosf.java:23: error: cannot find symbol\n\
    \            nums_sorted[i] = intToNum(nums_int[i]);\n                       \
    \      ^\n  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoyj02yt9.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpoyj02yt9.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3naqqza4.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp3naqqza4.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3naqqza4.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp3naqqza4.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = toInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(toString(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfehqelkx.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = toInt(nums[i]);\n                         ^\n  symbol:   method toInt(String)\n\
    \  location: class Problem\n/tmp/tmpfehqelkx.java:23: error: method toString in\
    \ class Object cannot be applied to given types;\n            sb.append(toString(numsInt[i]));\n\
    \                      ^\n  required: no arguments\n  found:    int\n  reason:\
    \ actual and formal argument lists differ in length\n2 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpw_lwhu5s.java:18)\n\tat Problem.main(tmpw_lwhu5s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        // TODO: implement me\n        return \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvd2t3ei8.java:20)\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i < numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpky55uj81.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpky55uj81.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpw_lwhu5s.java:18)\n\tat Problem.main(tmpw_lwhu5s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] numsSorted\
    \ = new String[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n\
    \            numsSorted[i] = nums[i];\n        }\n        Arrays.sort(numsSorted,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return getNum(a) - getNum(b);\n            }\n       \
    \ });\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0;\
    \ i < numsSorted.length; i++) {\n            sb.append(numsSorted[i]);\n     \
    \       if (i != numsSorted.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmtsm5nff.java:22: error: cannot find symbol\n                return\
    \ getNum(a) - getNum(b);\n                       ^\n  symbol: method getNum(String)\n\
    /tmp/tmpmtsm5nff.java:22: error: cannot find symbol\n                return getNum(a)\
    \ - getNum(b);\n                                   ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums2);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums2.length; i++) {\n            sb.append(intToNum(nums2[i]));\n         \
    \   if (i < nums2.length - 1) {\n                sb.append(\" \");\n         \
    \   }\n        }\n        return sb.toString();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_p6grhf5.java:18: error: cannot find symbol\n            nums2[i]\
    \ = numToInt(nums[i]);\n                       ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp_p6grhf5.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums2[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] nums2 = new\
    \ String[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n    \
    \        switch (nums[i]) {\n                case \"zero\":\n                \
    \    nums2[i] = \"0\";\n                    break;\n                case \"one\"\
    :\n                    nums2[i] = \"1\";\n                    break;\n       \
    \         case \"two\":\n                    nums2[i] = \"2\";\n             \
    \       break;\n                case \"three\":\n                    nums2[i]\
    \ = \"3\";\n                    break;\n                case \"four\":\n     \
    \               nums2[i] = \"4\";\n                    break;\n              \
    \  case \"five\":\n                    nums2[i] = \"5\";\n                   \
    \ break;\n                case \"six\":\n                    nums2[i] = \"6\"\
    ;\n                    break;\n                case \"seven\":\n             \
    \       nums2[i] = \"7\";\n                    break;\n                case \"\
    eight\":\n                    nums2[i] = \"8\";\n                    break;\n\
    \                case \"nine\":\n                    nums2[i] = \"9\";\n     \
    \               break;\n            }\n        }\n        Arrays.sort(nums2);\n\
    \        for (int i = 0; i < nums.length; i++) {\n            switch (nums2[i])\
    \ {\n                case \"0\":\n                    nums2[i] = \"zero\";\n \
    \                   break;\n                case \"1\":\n                    nums2[i]\
    \ = \"one\";\n                    break;\n                case \"2\":\n      \
    \              nums2[i] = \"two\";\n                    break;\n             \
    \   case \"3\":\n                    nums2[i] = \"three\";\n                 \
    \   break;\n                case \"4\":\n                    nums2[i] = \"four\"\
    ;\n                    break;\n                case \"5\":\n                 \
    \   nums2[i] = \"five\";\n                    break;\n                case \"\
    6\":\n                    nums2[i] = \"six\";\n                    break;\n  \
    \              case \"7\":\n                    nums2[i] = \"seven\";\n      \
    \              break;\n                case \"8\":\n                    nums2\n\
    \    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmps63jrk16.java:79: error: not a statement\n                    nums2\n\
    \                    ^\n/tmp/tmps63jrk16.java:79: error: ';' expected\n      \
    \              nums2\n                         ^\n/tmp/tmps63jrk16.java:81: error:\
    \ illegal start of expression\n    public static void main(String[] args) {\n\
    \    ^\n3 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        // TODO: Implement me\n        return \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp09dpv3q4.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String result = \"\";\n        for (int i = 0; i < numsInt.length; i++)\
    \ {\n            result += intToNum(numsInt[i]) + \" \";\n        }\n        return\
    \ result.trim();\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbv80jfn4.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpbv80jfn4.java:23: error: cannot find symbol\n\
    \            result += intToNum(numsInt[i]) + \" \";\n                      ^\n\
    \  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        return \"\";\n    }\n    public static void main(String[] args) {\n\
    \    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"three\"\
    )).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpssc1uh6v.java:19)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxpr89agz.java:20)\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoyj02yt9.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpoyj02yt9.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        String[] numsSorted\
    \ = new String[nums.length];\n        for (int i = 0; i < numsInt.length; i++)\
    \ {\n            switch (numsInt[i]) {\n                case 0:\n            \
    \        numsSorted[i] = \"zero\";\n                    break;\n             \
    \   case 1:\n                    numsSorted[i] = \"one\";\n                  \
    \  break;\n                case 2:\n                    numsSorted[i] = \"two\"\
    ;\n                    break;\n                case 3:\n                    numsSorted[i]\
    \ = \"three\";\n                    break;\n                case 4:\n        \
    \            numsSorted[i] = \"four\";\n                    break;\n         \
    \       case 5:\n                    numsSorted[i] = \"five\";\n             \
    \       break;\n                case 6:\n                    numsSorted[i] = \"\
    six\";\n                    break;\n                case 7:\n                \
    \    numsSorted[i] = \"seven\";\n                    break;\n                case\n\
    \    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpj3ny27fc.java:80: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpj3ny27fc.java:81: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n2 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     if (nums[i].equals(\"zero\")) {\n                numsInt[i] = 0;\n     \
    \       } else if (nums[i].equals(\"one\")) {\n                numsInt[i] = 1;\n\
    \            } else if (nums[i].equals(\"two\")) {\n                numsInt[i]\
    \ = 2;\n            } else if (nums[i].equals(\"three\")) {\n                numsInt[i]\
    \ = 3;\n            } else if (nums[i].equals(\"four\")) {\n                numsInt[i]\
    \ = 4;\n            } else if (nums[i].equals(\"five\")) {\n                numsInt[i]\
    \ = 5;\n            } else if (nums[i].equals(\"six\")) {\n                numsInt[i]\
    \ = 6;\n            } else if (nums[i].equals(\"seven\")) {\n                numsInt[i]\
    \ = 7;\n            } else if (nums[i].equals(\"eight\")) {\n                numsInt[i]\
    \ = 8;\n            } else if (nums[i].equals(\"nine\")) {\n                numsInt[i]\
    \ = 9;\n            }\n        }\n        Arrays.sort(numsInt);\n        String\
    \ result = \"\";\n        for (int i = 0; i < numsInt.length; i++) {\n       \
    \     if (numsInt[i] == 0) {\n                result += \"zero \";\n         \
    \   } else if (numsInt[i] == 1) {\n                result += \"one \";\n     \
    \       } else if (numsInt[i] == 2) {\n                result += \"two \";\n \
    \           } else if (numsInt[i] == 3) {\n                result += \"three \"\
    ;\n            } else if (numsInt[i] == 4) {\n                result += \"four\
    \ \";\n            } else if (numsInt[i] == 5) {\n                result += \"\
    five \";\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpm70u1f94.java:56: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\
    \tat java.lang.Integer.parseInt(Integer.java:592)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\
    \tat Problem.sortNumbers(tmpw_lwhu5s.java:18)\n\tat Problem.main(tmpw_lwhu5s.java:31)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convert(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(convert(nums_int[i]));\n    \
    \        if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpczxoop3t.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convert(nums[i]);\n                          ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmpczxoop3t.java:23: error: cannot find symbol\n\
    \            sb.append(convert(nums_int[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String[] numsSorted = new String[nums.length];\n        for (int i =\
    \ 0; i < nums.length; i++) {\n            numsSorted[i] = intToNum(numsInt[i]);\n\
    \        }\n        return String.join(\" \", numsSorted);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpazjbn7_r.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpazjbn7_r.java:23: error: cannot find symbol\n\
    \            numsSorted[i] = intToNum(numsInt[i]);\n                         \
    \   ^\n  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] sorted =\
    \ new String[nums.length];\n        int[] nums_int = new int[nums.length];\n \
    \       for (int i = 0; i < nums.length; i++) {\n            nums_int[i] = convert(nums[i]);\n\
    \        }\n        Arrays.sort(nums_int);\n        for (int i = 0; i < nums.length;\
    \ i++) {\n            sorted[i] = convert(nums_int[i]);\n        }\n        return\
    \ String.join(\" \", sorted);\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf_vpsi3t.java:19: error: cannot find symbol\n            nums_int[i]\
    \ = convert(nums[i]);\n                          ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmpf_vpsi3t.java:23: error: cannot find symbol\n\
    \            sorted[i] = convert(nums_int[i]);\n                        ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798079
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        // TODO: Implement me\n        return \"\";\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp09dpv3q4.java:20)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String[] numsSorted = new String[nums.length];\n        for (int i =\
    \ 0; i < nums.length; i++) {\n            numsSorted[i] = intToNum(numsInt[i]);\n\
    \        }\n        return String.join(\" \", numsSorted);\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpazjbn7_r.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpazjbn7_r.java:23: error: cannot find symbol\n\
    \            numsSorted[i] = intToNum(numsInt[i]);\n                         \
    \   ^\n  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String[] numsStr = new String[numsInt.length];\n        for (int i =\
    \ 0; i < numsInt.length; i++) {\n            numsStr[i] = intToNum(numsInt[i]);\n\
    \        }\n        return String.join(\" \", numsStr);\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9j1mgvil.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp9j1mgvil.java:23: error: cannot find symbol\n\
    \            numsStr[i] = intToNum(numsInt[i]);\n                         ^\n\
    \  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(nums2);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums2.length; i++) {\n            sb.append(nums2[i]);\n            sb.append(\"\
    \ \");\n        }\n        return sb.toString().trim();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmpxyhn_xyx.java:18)\n\tat Problem.main(tmpxyhn_xyx.java:29)\n"
  stdout: ''
  timestamp: 1659798037
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoyj02yt9.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpoyj02yt9.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoyj02yt9.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpoyj02yt9.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums);\n\
    \        return String.join(\" \", nums);\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_k_7o72u.java:22)\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(intToNum(nums_int[i]));\n   \
    \         if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9jhv3kih.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp9jhv3kih.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums_int[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3naqqza4.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp3naqqza4.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3naqqza4.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp3naqqza4.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwlu20sr.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvwlu20sr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] nums2 = new\
    \ String[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n    \
    \        if (nums[i].equals(\"zero\")) {\n                nums2[i] = \"0\";\n\
    \            } else if (nums[i].equals(\"one\")) {\n                nums2[i] =\
    \ \"1\";\n            } else if (nums[i].equals(\"two\")) {\n                nums2[i]\
    \ = \"2\";\n            } else if (nums[i].equals(\"three\")) {\n            \
    \    nums2[i] = \"3\";\n            } else if (nums[i].equals(\"four\")) {\n \
    \               nums2[i] = \"4\";\n            } else if (nums[i].equals(\"five\"\
    )) {\n                nums2[i] = \"5\";\n            } else if (nums[i].equals(\"\
    six\")) {\n                nums2[i] = \"6\";\n            } else if (nums[i].equals(\"\
    seven\")) {\n                nums2[i] = \"7\";\n            } else if (nums[i].equals(\"\
    eight\")) {\n                nums2[i] = \"8\";\n            } else if (nums[i].equals(\"\
    nine\")) {\n                nums2[i] = \"9\";\n            }\n        }\n    \
    \    Arrays.sort(nums2);\n        for (int i = 0; i < nums.length; i++) {\n  \
    \          if (nums2[i].equals(\"0\")) {\n                nums2[i] = \"zero\"\
    ;\n            } else if (nums2[i].equals(\"1\")) {\n                nums2[i]\
    \ = \"one\";\n            } else if (nums2[i].equals(\"2\")) {\n             \
    \   nums2[i] = \"two\";\n            } else if (nums2[i].equals(\"3\")) {\n  \
    \              nums2[i] = \"three\";\n            } else if (nums2[i].equals(\"\
    4\")) {\n                nums\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp52_40ael.java:51: error: not a statement\n                nums\n\
    \                ^\n/tmp/tmp52_40ael.java:51: error: ';' expected\n          \
    \      nums\n                    ^\n/tmp/tmp52_40ael.java:53: error: illegal start\
    \ of expression\n    public static void main(String[] args) {\n    ^\n3 errors\n"
  stdout: ''
  timestamp: 1659798035

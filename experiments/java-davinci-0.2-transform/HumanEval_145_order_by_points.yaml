name: HumanEval_145_order_by_points
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Write a function which sorts the given list of integers\n\
  \    // in ascending order according to the sum of their digits.\n    // Note: if\
  \ there are several items with similar sum of their digits,\n    // order them based\
  \ on their index in original list.\n    // For example:\n    // >>> orderByPoints((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l))))\n\
  \    // (new ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l,\
  \ (long)11l)))\n    // >>> orderByPoints((new ArrayList<Long>(Arrays.asList())))\n\
  \    // (new ArrayList<Long>(Arrays.asList()))\n    public static ArrayList<Long>\
  \ orderByPoints(ArrayList<Long> nums) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(orderByPoints((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)11l, (long)-1l, (long)-11l, (long)-12l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)-1l, (long)-11l, (long)1l, (long)-12l, (long)11l)))));\n\
  \    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1234l, (long)423l,\
  \ (long)463l, (long)145l, (long)2l, (long)423l, (long)423l, (long)53l, (long)6l,\
  \ (long)37l, (long)3457l, (long)3l, (long)56l, (long)0l, (long)46l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)0l, (long)2l, (long)3l, (long)6l, (long)53l,\
  \ (long)423l, (long)423l, (long)423l, (long)1234l, (long)145l, (long)37l, (long)46l,\
  \ (long)56l, (long)463l, (long)3457l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList()))).equals((new\
  \ ArrayList<Long>(Arrays.asList()))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)-11l, (long)-32l, (long)43l, (long)54l, (long)-98l, (long)2l, (long)-3l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)-3l, (long)-32l, (long)-98l, (long)-11l, (long)1l,\
  \ (long)2l, (long)43l, (long)54l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l,\
  \ (long)10l, (long)11l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l,\
  \ (long)2l, (long)11l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l,\
  \ (long)9l)))));\n    assert(orderByPoints((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)6l, (long)6l, (long)-76l, (long)-21l, (long)23l, (long)4l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)-76l, (long)-21l, (long)0l, (long)4l, (long)23l,\
  \ (long)6l, (long)6l)))));\n    }\n\n}\n"
completions: ['        return null;', '        return nums;', '        return null;',
  "        // Write your code here\n        return nums;", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        ArrayList<Long> copy = new ArrayList<Long>(nums);\n\
    \        while (copy.size() > 0) {\n            long min = copy.get(0);\n    \
    \        int minIndex = 0;\n            for (int i = 0; i < copy.size(); i++)\
    \ {\n                if (sumDigits(copy.get(i)) < sumDigits(min)) {\n        \
    \            min = copy.get(i);\n                    minIndex = i;\n         \
    \       }\n            }\n            result.add(min);\n            copy.remove(minIndex);\n\
    \        }\n        return result;", '        return nums;', "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        ArrayList<Long> result2 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result3 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result4 = new ArrayList<Long>();\n        ArrayList<Long> result5 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result6 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result7 = new ArrayList<Long>();\n        ArrayList<Long> result8 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result9 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result10 = new ArrayList<Long>();\n        ArrayList<Long> result11 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result12 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result13 = new ArrayList<Long>();\n        ArrayList<Long> result14 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result15 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result16 = new ArrayList<Long>();\n        ArrayList<Long> result17 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result18 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result19 = new ArrayList<Long>();\n        ArrayList<Long> result20 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result21 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result22 = new ArrayList<Long>();\n        ArrayList<Long> result23 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result24 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result25 = new ArrayList<Long>();\n        ArrayList<Long> result26 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result27 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ result28 = new ArrayList<Long>();\n        ArrayList<Long> result29 = new ArrayList<Long>();\n\
    \        ArrayList<Long> result30 = new ArrayList<Long>();\n        Array", '        return
    null;', '        return null;', "        // Write your code here\n        return\
    \ null;", '        return nums;', "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        ArrayList<Long> sorted = new ArrayList<Long>();\n        ArrayList<Long>\
    \ unsorted = new ArrayList<Long>();\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            if (nums.get(i) < 0) {\n                unsorted.add(nums.get(i)\
    \ * -1);\n            } else {\n                unsorted.add(nums.get(i));\n \
    \           }\n        }\n        for (int i = 0; i < unsorted.size(); i++) {\n\
    \            sorted.add(unsorted.get(i));\n        }\n        Collections.sort(sorted);\n\
    \        for (int i = 0; i < sorted.size(); i++) {\n            for (int j = 0;\
    \ j < unsorted.size(); j++) {\n                if (sorted.get(i) == unsorted.get(j))\
    \ {\n                    result.add(nums.get(j));\n                }\n       \
    \     }\n        }\n        return result;", "        // Write your code here\n\
    \        return null;", "        // Write your code here\n        return nums;",
  '        return nums;', '        return null;', "        // Write your code here\n\
    \        return nums;", '        return null;', "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        ArrayList<Long> temp = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp2 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp3 = new ArrayList<Long>();\n        ArrayList<Long> temp4 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp5 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp6 = new ArrayList<Long>();\n        ArrayList<Long> temp7 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp8 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp9 = new ArrayList<Long>();\n        ArrayList<Long> temp10 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp11 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp12 = new ArrayList<Long>();\n        ArrayList<Long> temp13 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp14 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp15 = new ArrayList<Long>();\n        ArrayList<Long> temp16 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp17 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp18 = new ArrayList<Long>();\n        ArrayList<Long> temp19 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp20 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp21 = new ArrayList<Long>();\n        ArrayList<Long> temp22 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp23 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp24 = new ArrayList<Long>();\n        ArrayList<Long> temp25 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp26 = new ArrayList<Long>();\n        ArrayList<Long>\
    \ temp27 = new ArrayList<Long>();\n        ArrayList<Long> temp28 = new ArrayList<Long>();\n\
    \        ArrayList<Long> temp29 = new ArrayList<Long>();\n        ArrayList",
  "        // write your code here\n        return null;"]
stop_tokens:
- "\n    }\n"

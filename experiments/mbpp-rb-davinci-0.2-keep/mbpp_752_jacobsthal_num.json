{
  "name": "mbpp_752_jacobsthal_num",
  "language": "rb",
  "prompt": "# Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...\ndef jacobsthal_num(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_752_jacobsthal_num.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_jacobsthal_num\n    candidate = method(:jacobsthal_num)\n    assert_equal(11, candidate.call(5))\n    assert_equal(1, candidate.call(2))\n    assert_equal(5, candidate.call(4))\n    assert_equal(2731, candidate.call(13))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\nend",
    "    if n == 0\n        return 0\n    elsif n == 1\n        return 1\n    else\n        return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n    end\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "  if n == 0\n    return 0\n  elsif n == 1\n    return 1\n  else\n    return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\n  end\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n-1) + 2*jacobsthal_num(n-2)\nend",
    "    return 0 if n == 0\n    return 1 if n == 1\n    return jacobsthal_num(n-1) + 2 * jacobsthal_num(n-2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return jacobsthal_num(n - 1) + 2 * jacobsthal_num(n - 2)\nend"
  ]
}
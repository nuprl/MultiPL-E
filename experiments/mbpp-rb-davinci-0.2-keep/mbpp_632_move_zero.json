{
  "name": "mbpp_632_move_zero",
  "language": "rb",
  "prompt": "# Write a python function to move all zeroes to the end of the given list.\ndef move_zero(num_list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_632_move_zero.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_move_zero\n    candidate = method(:move_zero)\n    assert_equal([1, 2, 3, 4, 0, 0], candidate.call([1, 0, 2, 0, 3, 4]))\n    assert_equal([2, 3, 2, 4, 5, 0, 0, 0, 0], candidate.call([2, 3, 2, 0, 0, 4, 0, 5, 0]))\n    assert_equal([1, 1, 1, 0, 0], candidate.call([0, 1, 0, 1, 1]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "    num_list.delete(0)\n    num_list.push(0)\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "\tcount = 0\n\tnum_list.each do |num|\n\t\tif num != 0\n\t\t\tnum_list[count] = num\n\t\t\tcount += 1\n\t\tend\n\tend\n\twhile count < num_list.length\n\t\tnum_list[count] = 0\n\t\tcount += 1\n\tend\n\treturn num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Remove zeros from the list\n  num_list.delete(0)\n  # Add zeros to the end of the list\n  num_list.push(0)\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  return non_zero_list + zero_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "    #Remove zeroes from the list\n    num_list.delete(0)\n    #Add zeroes to the end of the list\n    num_list.fill(0, num_list.length, num_list.count(0))\nend",
    "  # write your code here\n  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  non_zero_list.concat(zero_list)\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n      num_list.delete(num)\n    end\n  end\n  num_list.concat(zero_list)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Write your logic here\n  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "\t# Write your logic here\n\tcount = 0\n\tfor i in 0..num_list.length-1\n\t\tif num_list[i] != 0\n\t\t\tnum_list[count] = num_list[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\twhile count < num_list.length\n\t\tnum_list[count] = 0\n\t\tcount += 1\n\tend\n\treturn num_list\nend",
    "  # start writing your code here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |i|\n    if i != 0\n      num_list[count] = i\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # Write your logic here\n  zero_count = 0\n  for i in 0...num_list.length\n    if num_list[i] == 0\n      zero_count += 1\n    end\n  end\n  for i in 0...num_list.length\n    if num_list[i] != 0\n      num_list[i - zero_count] = num_list[i]\n    end\n  end\n  for i in (num_list.length - zero_count)...num_list.length\n    num_list[i] = 0\n  end\n  return num_list\nend",
    "  zero_count = 0\n  num_list.each_with_index do |num, index|\n    if num == 0\n      zero_count += 1\n      num_list.delete_at(index)\n    end\n  end\n  zero_count.times { num_list.push(0) }\n  num_list\nend",
    "    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            zero_list.push(i)\n        else\n            non_zero_list.push(i)\n        end\n    end\n    non_zero_list.concat(zero_list)\nend",
    "  zero_list = []\n  non_zero_list = []\n  for i in num_list\n    if i == 0\n      zero_list.push(i)\n    else\n      non_zero_list.push(i)\n    end\n  end\n  return non_zero_list + zero_list\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0...num_list.length\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "    zero_list = []\n    non_zero_list = []\n    num_list.each do |num|\n        if num == 0\n            zero_list.push(num)\n        else\n            non_zero_list.push(num)\n        end\n    end\n    return non_zero_list + zero_list\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  non_zero_list + zero_list\nend",
    "  # remove all zeros from the list\n  num_list.delete(0)\n  # add zeros to the end of the list\n  num_list.push(0)\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # write your code here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # write your code here\n  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.push(zero_list)\n  num_list.flatten!\nend",
    "    #start writing your code here\n    count = 0\n    num_list.each do |i|\n        if i != 0\n            num_list[count] = i\n            count += 1\n        end\n    end\n    while count < num_list.length\n        num_list[count] = 0\n        count += 1\n    end\n    return num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # Remove zeros from the list\n  num_list.delete(0)\n  # Add zeros to the end of the list\n  num_list.push(0)\nend",
    "  # Remove zeros from the list\n  num_list.delete(0)\n  # Add zeros to the end of the list\n  num_list.push(0)\nend",
    "  # Write your logic here\n  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  non_zero_list.concat(zero_list)\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  non_zero_list.concat(zero_list)\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  return non_zero_list + zero_list\nend",
    "  # Remove all zeros from the list\n  num_list.delete(0)\n  # Add zeros to the end of the list\n  num_list.fill(0, num_list.length, num_list.count(0))\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  non_zero_list.push(zero_list)\n  non_zero_list.flatten\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # Remove zeros from the list\n  num_list.delete(0)\n  # Add zeros to the end of the list\n  num_list.fill(0, num_list.length, num_list.count(0))\nend",
    "  # Remove all zeros from the list\n  num_list.delete(0)\n  # Append zeros to the end of the list\n  num_list.fill(0, num_list.length, num_list.count(0))\nend",
    "  # Remove zeros from the list\n  num_list.delete(0)\n  # Add zeros to the end of the list\n  num_list.fill(0, num_list.length, num_list.count(0))\nend",
    "  num_list.each_with_index do |num, index|\n    if num == 0\n      num_list.delete_at(index)\n      num_list.push(0)\n    end\n  end\n  num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.push(zero_list)\n  num_list.flatten\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "    # Remove zeros from the list\n    num_list.delete(0)\n    # Add zeros to the end of the list\n    num_list.fill(0, num_list.length...num_list.length + num_list.count(0))\nend",
    "  #start writing your code here\n  count = 0\n  num_list.each do |i|\n    if i != 0\n      num_list[count] = i\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Remove zeros from the list\n  num_list.delete(0)\n  # Add zeros to the end of the list\n  num_list.push(0)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # write your code here\n  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # Write your logic here\n  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # write your code here\n  count = 0\n  num_list.each do |num|\n    if num == 0\n      count += 1\n    end\n  end\n  num_list.delete(0)\n  count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # Remove zeros from the list\n  num_list.delete(0)\n  # Add zeros to the end of the list\n  num_list.push(0)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "    #Remove zeros from the list\n    num_list.delete(0)\n    #Add zeros to the end of the list\n    num_list.fill(0, num_list.length...num_list.length+2)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    else\n      non_zero_list << num\n    end\n  end\n  non_zero_list + zero_list\nend",
    "  # Write your logic here\n  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    else\n      non_zero_list << num\n    end\n  end\n  non_zero_list + zero_list\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # write your code here\n  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    else\n      non_zero_list << num\n    end\n  end\n  non_zero_list + zero_list\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  return non_zero_list + zero_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # write your code here\n  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  # write your code here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0...num_list.length\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # num_list.delete(0)\n  # num_list.push(0)\n  # num_list\n  num_list.reject! { |num| num == 0 }\n  num_list.push(0)\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0...num_list.length\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Write your logic here\n  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  # write your code here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Write your logic here\n  zeros = 0\n  num_list.each do |num|\n    if num == 0\n      zeros += 1\n    end\n  end\n  num_list.delete(0)\n  zeros.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # Remove zeros from the list\n  num_list.delete(0)\n  # Add zeros to the end of the list\n  num_list.push(0)\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Remove zeroes from the list\n  num_list.delete(0)\n  # Add zeroes to the end of the list\n  num_list.push(0)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # Remove zeros from the list\n  num_list.delete(0)\n  # Add zeros to the end of the list\n  num_list.push(0)\nend",
    "    # Write your logic here\n    count = 0\n    for i in 0..num_list.length-1\n        if num_list[i] != 0\n            num_list[count] = num_list[i]\n            count += 1\n        end\n    end\n    while count < num_list.length\n        num_list[count] = 0\n        count += 1\n    end\n    return num_list\nend",
    "  # write your code here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # write your code here\n  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  return non_zero_list + zero_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\n  return num_list\nend",
    "    #Remove zeros\n    num_list.delete(0)\n    #Add zeros\n    num_list.fill(0, num_list.length...num_list.length+2)\nend",
    "  # Write your logic here\n  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Remove zeros from the list\n  num_list.delete(0)\n  # Add zeros to the end of the list\n  num_list.fill(0, num_list.length, num_list.count(0))\nend",
    "  # Remove zeros from the list\n  num_list.delete(0)\n  # Add zeros to the end of the list\n  num_list.fill(0, num_list.length, num_list.count(0))\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # write your code here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "    # Remove zeros from the list\n    num_list.delete(0)\n    # Add zeros to the end of the list\n    num_list.fill(0, num_list.length, num_list.count(0))\nend",
    "  # Remove zeros from the list\n  num_list.delete(0)\n  # Add zeros to the end of the list\n  num_list.push(0)\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  non_zero_list.concat(zero_list)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # Write your logic here\n  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  non_zero_list + zero_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # write your code here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  non_zero_list.concat(zero_list)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  non_zero_list.concat(zero_list)\nend",
    "  # write your code here\n  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  # write your code here\n  num_list.delete(0)\n  num_list.push(0)\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.concat(zero_list)\nend",
    "  # Write your logic here\n  count=0\n  for i in 0..num_list.length-1\n    if num_list[i]!=0\n      num_list[count]=num_list[i]\n      count+=1\n    end\n  end\n  while count<num_list.length\n    num_list[count]=0\n    count+=1\n  end\n  return num_list\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\n  num_list\nend",
    "\tcount = 0\n\tnum_list.each do |num|\n\t\tif num != 0\n\t\t\tnum_list[count] = num\n\t\t\tcount += 1\n\t\tend\n\tend\n\twhile count < num_list.length\n\t\tnum_list[count] = 0\n\t\tcount += 1\n\tend\n\treturn num_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list << num\n    else\n      non_zero_list << num\n    end\n  end\n  non_zero_list + zero_list\nend",
    "  # Remove all zeros from the list\n  num_list.delete(0)\n  # Add them back to the end of the list\n  num_list.push(0)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # Write your logic here\n  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  non_zero_list.concat(zero_list)\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0...num_list.length\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            zero_list.push(i)\n        else\n            non_zero_list.push(i)\n        end\n    end\n    return non_zero_list + zero_list\nend",
    "\tcount = 0\n\tfor i in 0..num_list.length-1\n\t\tif num_list[i] != 0\n\t\t\tnum_list[count] = num_list[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\twhile count < num_list.length\n\t\tnum_list[count] = 0\n\t\tcount += 1\n\tend\n\treturn num_list\nend\nprint move_zero([0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4])\nprint \"\\n\"",
    "  # Write your logic here\n  count = 0\n  for i in 0...num_list.length\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # write your code here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n      num_list.delete(num)\n    end\n  end\n  num_list.concat(zero_list)\nend",
    "  # Write your logic here\n  i=0\n  while i<num_list.length\n    if num_list[i]==0\n      num_list.delete_at(i)\n      num_list.push(0)\n    else\n      i+=1\n    end\n  end\n  return num_list\nend",
    "    #Remove zeros from the list\n    num_list.delete(0)\n    #Add zeros to the end of the list\n    num_list.fill(0, num_list.length...num_list.length+2)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "\tcount = 0\n\tnum_list.each do |num|\n\t\tif num != 0\n\t\t\tnum_list[count] = num\n\t\t\tcount += 1\n\t\tend\n\tend\n\twhile count < num_list.length\n\t\tnum_list[count] = 0\n\t\tcount += 1\n\tend\n\treturn num_list\nend",
    "  # write your code here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # write your code here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "    zero_list = []\n    non_zero_list = []\n    num_list.each do |num|\n        if num == 0\n            zero_list.push(num)\n        else\n            non_zero_list.push(num)\n        end\n    end\n    return non_zero_list + zero_list\nend",
    "  # Write your logic here\n  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num == 0\n      count += 1\n    end\n  end\n  num_list.delete(0)\n  count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "    count = 0\n    num_list.each do |num|\n        if num != 0\n            num_list[count] = num\n            count += 1\n        end\n    end\n    while count < num_list.length\n        num_list[count] = 0\n        count += 1\n    end\n    return num_list\nend\nnum_list = [0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]\nprint move_zero(num_list)",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "    #Remove zeros\n    num_list.delete(0)\n    #Add zeros\n    num_list.fill(0, num_list.length...num_list.length + num_list.count(0))\nend",
    "  # Remove the zeros from the list\n  num_list.delete(0)\n  # Append the zeros to the end of the list\n  num_list.push(0)\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "    # Write your logic here\n    count = 0\n    num_list.each do |num|\n        if num != 0\n            num_list[count] = num\n            count += 1\n        end\n    end\n    while count < num_list.length\n        num_list[count] = 0\n        count += 1\n    end\n    return num_list\nend",
    "  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Write your logic here\n  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # Write your logic here\n  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.push(zero_list)\n  num_list.flatten!\nend",
    "  # write your code here\n  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.each_with_index do |num, index|\n    if num == 0\n      num_list.delete_at(index)\n      num_list.push(0)\n    end\n  end\n  num_list\nend",
    "  zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    end\n  end\n  num_list.delete(0)\n  num_list.push(zero_list)\n  num_list.flatten!\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # Write your logic here\n  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  return num_list\nend",
    "  # write your code here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  # write your code here\n  zero_list = []\n  non_zero_list = []\n  num_list.each do |i|\n    if i == 0\n      zero_list.push(i)\n    else\n      non_zero_list.push(i)\n    end\n  end\n  non_zero_list.concat(zero_list)\nend",
    "  num_list.each_with_index do |num, index|\n    if num == 0\n      num_list.delete_at(index)\n      num_list.push(0)\n    end\n  end\n  num_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  num_list\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  num_list.delete(0)\n  num_list.push(0)\nend",
    "  # Write your logic here\n  zero_count = 0\n  num_list.each do |num|\n    if num == 0\n      zero_count += 1\n    end\n  end\n  num_list.delete(0)\n  zero_count.times do\n    num_list.push(0)\n  end\n  num_list\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Remove zeros from the list\n  num_list.delete(0)\n  # Add zeros to the end of the list\n  num_list.push(0)\nend",
    "  zero_list = []\n  non_zero_list = []\n  num_list.each do |num|\n    if num == 0\n      zero_list.push(num)\n    else\n      non_zero_list.push(num)\n    end\n  end\n  non_zero_list.concat(zero_list)\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num != 0\n      num_list[count] = num\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Write your logic here\n  count = 0\n  for i in 0..num_list.length-1\n    if num_list[i] != 0\n      num_list[count] = num_list[i]\n      count += 1\n    end\n  end\n  while count < num_list.length\n    num_list[count] = 0\n    count += 1\n  end\n  return num_list\nend",
    "  # Write your logic here\n  count = 0\n  num_list.each do |num|\n    if num == 0\n      count += 1\n    end\n  end\n  num_list.delete(0)\n  count.times do\n    num_list.push(0)\n  end\n  num_list\nend"
  ]
}
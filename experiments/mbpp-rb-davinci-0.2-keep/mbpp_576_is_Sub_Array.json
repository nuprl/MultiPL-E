{
  "name": "mbpp_576_is_Sub_Array",
  "language": "rb",
  "prompt": "# Write a python function to check whether a list is sublist of another or not.\ndef is_Sub_Array(a, b)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_Sub_Array\n    candidate = method(:is_Sub_Array)\n    assert_equal(false, candidate.call([1, 4, 3, 5], [1, 2]))\n    assert_equal(true, candidate.call([1, 2, 1], [1, 2, 1]))\n    assert_equal(false, candidate.call([1, 0, 2, 2], [2, 2, 0]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  a.each_with_index do |x, i|\n    return true if x == b[0] && a[i..i+b.length-1] == b\n  end\n  false\nend",
    "  a.each_with_index do |x, i|\n    return true if a[i, b.size] == b\n  end\n  false\nend",
    "  a.each_with_index do |e, i|\n    return true if a[i, b.length] == b\n  end\n  false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.length]\n    end\n  end\n  false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "    for i in 0..a.length-1\n        for j in 0..b.length-1\n            if a[i] == b[j]\n                return true\n            end\n        end\n    end\n    return false\nend",
    "  if a.size < b.size\n    return false\n  end\n  for i in 0...a.size\n    if a[i] == b[0]\n      for j in 0...b.size\n        if a[i + j] != b[j]\n          break\n        end\n        if j == b.size - 1\n          return true\n        end\n      end\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.size]\n    end\n  end\n  false\nend",
    "  b.each_with_index do |x, i|\n    if x == a[0]\n      return true if a == b[i, a.size]\n    end\n  end\n  false\nend",
    "  b.each do |i|\n    return false if a.index(i).nil?\n  end\n  true\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..(b.size - a.size)\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "    a.each_index do |i|\n        if a[i] == b[0]\n            if a[i..i+b.length-1] == b\n                return true\n            end\n        end\n    end\n    return false\nend",
    "  b.each_with_index do |e, i|\n    return false if e != a[i]\n  end\n  true\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..b.size - a.size\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..b.size-1\n        if b[i] == a[0]\n            j = 1\n            while j < a.size\n                if b[i+j] != a[j]\n                    break\n                end\n                j += 1\n            end\n            if j == a.size\n                return true\n            end\n        end\n    end\n    return false\nend",
    "  b.each do |i|\n    if a.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  b.each do |i|\n    return false unless a.include?(i)\n  end\n  true\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..b.size - a.size\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.length]\n    end\n  end\n  false\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..(b.size - a.size)\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  a.each_with_index do |e, i|\n    return true if a[i, b.size] == b\n  end\n  false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..b.size-a.size\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each_with_index do |e, i|\n    if e != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.length]\n    end\n  end\n  false\nend",
    "  b.each do |i|\n    return false unless a.include?(i)\n  end\n  true\nend",
    "  a.each do |i|\n    return true if a.include?(i)\n  end\n  return false\nend",
    "  a.each_with_index do |x, i|\n    return true if a[i, b.length] == b\n  end\n  false\nend",
    "  a.each_index do |i|\n    return true if a[i] == b[0] && a[i, b.length] == b\n  end\n  false\nend",
    "  b.each_index do |i|\n    return false if a[i] != b[i]\n  end\n  true\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.size]\n    end\n  end\n  false\nend",
    "  a.each_with_index do |x, i|\n    return true if a[i, b.size] == b\n  end\n  false\nend",
    "  b.each do |i|\n    return false unless a.include?(i)\n  end\n  true\nend",
    "  a.each_index do |i|\n    return true if a[i] == b[0] && a[i..-1].join.include?(b.join)\n  end\n  false\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..b.size-a.size\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  a.each do |i|\n    if b.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "    c = []\n    for i in 0...a.length\n        if a[i] == b[0]\n            for j in 0...b.length\n                if a[i+j] == b[j]\n                    c.push(a[i+j])\n                else\n                    break\n                end\n            end\n        end\n    end\n    if c == b\n        return true\n    else\n        return false\n    end\nend",
    "  b.each do |x|\n    return false if !a.include?(x)\n  end\n  return true\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.length]\n    end\n  end\n  false\nend",
    "  if a.length > b.length\n    return false\n  end\n  for i in 0..b.length-a.length\n    if a == b[i, a.length]\n      return true\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.size]\n    end\n  end\n  false\nend",
    "    if a.length > b.length\n        return false\n    end\n    for i in 0..b.length-a.length\n        if a == b[i, a.length]\n            return true\n        end\n    end\n    return false\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..(b.size - a.size)\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "    if a.size > b.size\n        return false\n    end\n    i = 0\n    while i < b.size\n        if a[0] == b[i]\n            j = 0\n            while j < a.size\n                if a[j] != b[i+j]\n                    break\n                end\n                j += 1\n            end\n            if j == a.size\n                return true\n            end\n        end\n        i += 1\n    end\n    return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..(b.size - a.size)\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  b.each do |i|\n    return false if !a.include?(i)\n  end\n  true\nend",
    "  a.each_with_index do |e, i|\n    if e == b[0]\n      return true if a[i..i+b.length-1] == b\n    end\n  end\n  return false\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..b.size-a.size\n        if a == b[i..i+a.size-1]\n            return true\n        end\n    end\n    return false\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..b.size - a.size\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  if a.size == b.size\n    return a == b\n  end\n  for i in 0..(b.size - a.size)\n    if a == b.slice(i, a.size)\n      return true\n    end\n  end\n  return false\nend",
    "    for i in 0..(b.length - a.length)\n        if a == b[i, a.length]\n            return true\n        end\n    end\n    return false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.length]\n    end\n  end\n  false\nend",
    "    if a.length > b.length\n        return false\n    end\n    for i in 0..b.length - a.length\n        if a == b[i, a.length]\n            return true\n        end\n    end\n    return false\nend",
    "  a.each_with_index do |element, index|\n    if element == b[0]\n      return true if b == a[index..index + b.length - 1]\n    end\n  end\n  false\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..(b.size - a.size)\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..(b.size - a.size)\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |x, i|\n    return false if x != b[i]\n  end\n  return true\nend",
    "  a.each_with_index do |x, i|\n    return true if a[i, b.size] == b\n  end\n  false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a.slice(i, b.length)\n    end\n  end\n  false\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..(b.size - a.size)\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  b.each do |i|\n    return false unless a.include?(i)\n  end\n  true\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..b.size-a.size\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  a.each_index do |i|\n    if a[i] == b[0]\n      return true if a[i, b.length] == b\n    end\n  end\n  false\nend",
    "  for i in 0..a.length-1\n    if a[i] == b[0]\n      for j in 0..b.length-1\n        if a[i+j] != b[j]\n          break\n        end\n      end\n      return true\n    end\n  end\n  return false\nend",
    "    if a.length > b.length\n        return false\n    end\n    for i in 0..(b.length - a.length)\n        if a == b[i, a.length]\n            return true\n        end\n    end\n    return false\nend",
    "  b.each do |i|\n    if a.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..(b.size - a.size)\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  if a.size < b.size\n    return false\n  end\n  for i in 0..a.size-b.size\n    if a[i, b.size] == b\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size < b.size\n    return false\n  end\n  for i in 0..a.size - b.size\n    if a[i, b.size] == b\n      return true\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.length]\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if a[i, b.length] == b\n    end\n  end\n  false\nend",
    "  a.each_with_index do |x, i|\n    return true if a[i, b.length] == b\n  end\n  false\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..b.size-a.size\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  b.each do |i|\n    return false unless a.include?(i)\n  end\n  true\nend",
    "  a.each_with_index do |x, i|\n    return true if a[i..-1] == b[0..(b.length - i - 1)]\n  end\n  false\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..b.size-a.size\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  for i in 0..a.length-1\n    for j in 0..b.length-1\n      if a[i] == b[j]\n        return true\n      end\n    end\n  end\n  return false\nend",
    "    if a.length > b.length\n        return false\n    end\n    for i in 0..a.length-1\n        if a[i] != b[i]\n            return false\n        end\n    end\n    return true\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..(b.size - a.size)\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  a.each_with_index do |e, i|\n    return true if e == b[0] && a[i, b.length] == b\n  end\n  false\nend",
    "  b.each do |i|\n    return false if !a.include?(i)\n  end\n  return true\nend",
    "    if a.length < b.length\n        return false\n    end\n    for i in 0..a.length-b.length\n        j = 0\n        while j < b.length\n            if a[i+j] != b[j]\n                break\n            end\n            j += 1\n        end\n        if j == b.length\n            return true\n        end\n    end\n    return false\nend",
    "  a.each_index do |i|\n    return true if a[i] == b[0] && a[i, b.size] == b\n  end\n  false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..(b.size - a.size)\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |e, i|\n    return true if a[i..-1] == b[0..-i-1]\n  end\n  false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..b.size-a.size\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "    if a.length > b.length\n        return false\n    else\n        for i in 0..a.length-1\n            if a[i] != b[i]\n                return false\n            end\n        end\n        return true\n    end\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..(b.size - a.size)\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..b.size - a.size\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.size]\n    end\n  end\n  false\nend",
    "  a.each_with_index do |x, i|\n    return false if x != b[i]\n  end\n  true\nend",
    "    if a.empty?\n        return true\n    end\n    if b.empty?\n        return false\n    end\n    if a.first == b.first\n        return is_Sub_Array(a[1..-1], b[1..-1])\n    else\n        return is_Sub_Array(a, b[1..-1])\n    end\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.length]\n    end\n  end\n  false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.length]\n    end\n  end\n  false\nend",
    "  b.each do |i|\n    if a.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size < b.size\n    return false\n  end\n  for i in 0..a.size-b.size\n    if a[i, b.size] == b\n      return true\n    end\n  end\n  return false\nend",
    "  # a.each_with_index do |x, i|\n  #   if x == b[0]\n  #     return true if a[i, b.length] == b\n  #   end\n  # end\n  # false\n  a.join.include?(b.join)\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.size]\n    end\n  end\n  false\nend",
    "  a.each_with_index do |e, i|\n    return false if e != b[i]\n  end\n  true\nend",
    "  return true if a.empty?\n  return false if b.empty?\n  return true if a == b\n  return false if a.length > b.length\n  is_Sub_Array(a, b[1..-1]) || is_Sub_Array(a, b[0..-2])\nend",
    "  b.each_index do |i|\n    return true if a == b[i..i+a.length-1]\n  end\n  false\nend",
    "  a.each_with_index do |x, i|\n    return false if x != b[i]\n  end\n  true\nend",
    "  b.each do |i|\n    if a.include?(i)\n      return true\n    end\n  end\n  return false\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0...a.size\n        if a[i] != b[i]\n            return false\n        end\n    end\n    return true\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0...a.size\n        if a[i] != b[i]\n            return false\n        end\n    end\n    return true\nend",
    "    if a.length > b.length\n        return false\n    end\n    for i in 0..b.length - a.length\n        if a == b[i, a.length]\n            return true\n        end\n    end\n    return false\nend",
    "  b.each do |i|\n    return true if a.include?(i)\n  end\n  false\nend",
    "  b.each_index do |i|\n    return true if a == b[i, a.length]\n  end\n  false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each_with_index do |value, index|\n    if value != b[index]\n      return false\n    end\n  end\n  return true\nend",
    "  b.each_index do |i|\n    return false if a[i] != b[i]\n  end\n  true\nend",
    "    for i in 0...a.length\n        if a[i] == b[0]\n            for j in 0...b.length\n                if a[i+j] != b[j]\n                    break\n                end\n            end\n        end\n    end\nend",
    "    if a.length > b.length\n        return false\n    end\n    for i in 0..b.length-a.length\n        if a == b[i, a.length]\n            return true\n        end\n    end\n    return false\nend",
    "  a.each_with_index do |x, i|\n    return true if a[i..-1] == b[0..(b.length - i - 1)]\n  end\n  false\nend",
    "  b.each_with_index do |value, index|\n    return false if value != a[index]\n  end\n  true\nend",
    "  b.each_with_index do |e, i|\n    return false if e != a[i]\n  end\n  true\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..b.size - a.size\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  b.each do |x|\n    if a.include?(x)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "    for i in 0..a.length\n        if a[i] == b[0]\n            for j in 0..b.length\n                if a[i+j] != b[j]\n                    break\n                end\n                if j == b.length-1\n                    return true\n                end\n            end\n        end\n    end\n    return false\nend",
    "  a.each_with_index do |i, index|\n    if i == b[0]\n      return true if b == a[index, b.length]\n    end\n  end\n  false\nend",
    "  b.each_with_index do |e, i|\n    if e == a[0]\n      return true if a == b[i, a.size]\n    end\n  end\n  false\nend",
    "    return true if a == b\n    return false if a.length > b.length\n    for i in 0..(b.length - a.length)\n        return true if a == b[i, a.length]\n    end\n    return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..b.size-a.size\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size < b.size\n    return false\n  end\n  a.each_with_index do |x, i|\n    if x == b[0]\n      if a[i, b.size] == b\n        return true\n      end\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..b.size - a.size\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.size]\n    end\n  end\n  false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.size]\n    end\n  end\n  false\nend",
    "  a.each_index do |i|\n    if a[i] == b[0]\n      j = 1\n      while j < b.length\n        if a[i + j] != b[j]\n          break\n        end\n        j += 1\n      end\n      if j == b.length\n        return true\n      end\n    end\n  end\n  return false\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..b.size-a.size\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  a.each_index do |i|\n    if a[i] == b[0]\n      return true if b == a[i, b.length]\n    end\n  end\n  false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      b.delete_at(b.index(i))\n    else\n      return false\n    end\n  end\n  return true\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.length]\n    end\n  end\n  false\nend",
    "  if a.size < b.size\n    return false\n  end\n  for i in 0..a.size-b.size\n    if a[i, b.size] == b\n      return true\n    end\n  end\n  return false\nend",
    "  b.each_index do |i|\n    return false if a[i] != b[i]\n  end\n  true\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..b.size-a.size\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  b.each do |i|\n    return false if !a.include?(i)\n  end\n  return true\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..(b.size - a.size)\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..(b.size - a.size)\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |x, i|\n    return false if x != b[i]\n  end\n  return true\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  b.each do |i|\n    return false unless a.include?(i)\n  end\n  true\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..(b.size - a.size)\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  a.each_with_index do |x, i|\n    return true if x == b[0] && a[i, b.length] == b\n  end\n  false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.length]\n    end\n  end\n  false\nend",
    "  a.each_with_index do |value, index|\n    if value == b[0]\n      return true if b == a[index, b.length]\n    end\n  end\n  return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..(b.size - a.size)\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "    for i in 0...a.length\n        if a[i] == b[0]\n            for j in 0...b.length\n                if a[i+j] != b[j]\n                    break\n                end\n            end\n            return true\n        end\n    end\n    return false\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..(b.size - a.size)\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  b.each do |i|\n    return false if !a.include?(i)\n  end\n  return true\nend",
    "  a.each_with_index do |x, i|\n    return true if x == b[0] && a[i..i+b.length-1] == b\n  end\n  false\nend",
    "  a.each_with_index do |e, i|\n    if e == b[0]\n      return true if b == a[i, b.length]\n    end\n  end\n  false\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i..i+b.length-1]\n    end\n  end\n  return false\nend",
    "  b.each do |i|\n    return false unless a.include?(i)\n  end\n  true\nend",
    "  b.each_with_index do |i, index|\n    if i == a[0]\n      return true if a == b[index, a.length]\n    end\n  end\n  false\nend",
    "  b.each do |i|\n    if a.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  return true if a == b\n  return false if a.empty? || b.empty?\n  a.each_with_index do |e, i|\n    return true if e == b[0] && is_Sub_Array(a[i..-1], b[1..-1])\n  end\n  false\nend",
    "  if a.size > b.size\n    return false\n  end\n  a.each do |i|\n    if b.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  b.each_index do |i|\n    return true if a == b[i..i+a.length-1]\n  end\n  false\nend",
    "  a.each_with_index do |x, i|\n    return true if a[i, b.length] == b\n  end\n  false\nend",
    "  b.each do |i|\n    return false unless a.include?(i)\n  end\n  true\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.length]\n    end\n  end\n  false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..(b.size - a.size)\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  b.each_index do |i|\n    return false if a[i] != b[i]\n  end\n  true\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.size]\n    end\n  end\n  false\nend",
    "  b.each_with_index do |e, i|\n    return false if a[i] != e\n  end\n  true\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..b.size-a.size\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..(b.size - a.size)\n    if a == b[i, a.size]\n      return true\n    end\n  end\n  return false\nend",
    "  b.each_with_index do |x, i|\n    return false if x != a[i]\n  end\n  true\nend",
    "    for i in 0..a.length-1\n        for j in 0..b.length-1\n            if a[i] == b[j]\n                return true\n            end\n        end\n    end\n    return false\nend",
    "  b.each_with_index do |x, i|\n    return false if a[i] != x\n  end\n  return true\nend",
    "  for i in 0..a.length-1\n    for j in 0..b.length-1\n      if a[i] == b[j]\n        return true\n      end\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |e, i|\n    return false if e != b[i]\n  end\n  return true\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      return true if b == a[i, b.length]\n    end\n  end\n  false\nend",
    "  a.each_with_index do |x, i|\n    return true if a[i, b.size] == b\n  end\n  false\nend",
    "  if a.size > b.size\n    return false\n  end\n  if a.empty?\n    return true\n  end\n  if a[0] == b[0]\n    return is_Sub_Array(a[1..-1], b[1..-1])\n  else\n    return is_Sub_Array(a, b[1..-1])\n  end\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "    for i in 0...a.length\n        if a[i] == b[0]\n            for j in 0...b.length\n                if a[i+j] != b[j]\n                    break\n                end\n            end\n            return true\n        end\n    end\n    return false\nend",
    "  if a.size > b.size\n    return false\n  end\n  for i in 0..(a.size - 1)\n    if a[i] != b[i]\n      return false\n    end\n  end\n  return true\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..b.size-a.size\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  b.each_with_index do |e, i|\n    return false if e != a[i]\n  end\n  true\nend",
    "  b.each_index do |i|\n    return false if a[i] != b[i]\n  end\n  true\nend",
    "  a.each_with_index do |x, i|\n    if x == b[0]\n      if a[i, b.length] == b\n        return true\n      end\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |x, i|\n    return true if a[i..-1] == b[0..-i-1]\n  end\n  false\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..(b.size - a.size)\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  b.each_with_index do |x, i|\n    return false if x != a[i]\n  end\n  true\nend",
    "  if a.size < b.size\n    return false\n  end\n  for i in 0..a.size-1\n    if a[i] == b[0]\n      j = 1\n      while j < b.size\n        if a[i+j] != b[j]\n          break\n        end\n        j += 1\n      end\n      if j == b.size\n        return true\n      end\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |x, i|\n    return true if a[i, b.size] == b\n  end\n  false\nend",
    "  b.each_with_index do |e, i|\n    return false if e != a[i]\n  end\n  return true\nend",
    "    if a.size > b.size\n        return false\n    end\n    for i in 0..b.size-a.size\n        if a == b[i, a.size]\n            return true\n        end\n    end\n    return false\nend",
    "  b.each_index do |i|\n    return true if a == b[i..i+a.length-1]\n  end\n  return false\nend",
    "  a.each_index do |i|\n    if a[i] == b[0]\n      return true if a[i..i+b.length-1] == b\n    end\n  end\n  return false\nend",
    "  a.each_with_index do |x, i|\n    return true if a[i, b.size] == b\n  end\n  false\nend",
    "  b.each do |i|\n    if a.include?(i)\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  b.each_index do |i|\n    return false if a[i] != b[i]\n  end\n  true\nend",
    "    if a.length > b.length\n        return false\n    end\n    for i in 0..b.length-a.length\n        if a == b[i, a.length]\n            return true\n        end\n    end\n    return false\nend",
    "  b.each do |x|\n    return true if a.include?(x)\n  end\n  false\nend",
    "  if b.size > a.size\n    return false\n  end\n  if a.empty?\n    return false\n  end\n  if b.empty?\n    return true\n  end\n  if a.first == b.first\n    return is_Sub_Array(a[1..-1], b[1..-1])\n  else\n    return is_Sub_Array(a[1..-1], b)\n  end\nend"
  ]
}
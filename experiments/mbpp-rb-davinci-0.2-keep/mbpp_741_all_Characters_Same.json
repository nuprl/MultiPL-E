{
  "name": "mbpp_741_all_Characters_Same",
  "language": "rb",
  "prompt": "# Write a python function to check whether all the characters are same or not.\ndef all_Characters_Same(s)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_741_all_Characters_Same.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_all_Characters_Same\n    candidate = method(:all_Characters_Same)\n    assert_equal(false, candidate.call(\"python\"))\n    assert_equal(true, candidate.call(\"aaa\"))\n    assert_equal(false, candidate.call(\"data\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        return all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend\nputs all_Characters_Same(\"aaa\")\nputs all_Characters_Same(\"abc\")\nputs all_Characters_Same(\"bbb\")\nputs all_Characters_Same(\"\")",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-1\n        if s[0] != s[i]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        if s[0] == s[1]\n            all_Characters_Same(s[1..-1])\n        else\n            return false\n        end\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        for i in 0..s.length-2\n            if s[i] != s[i+1]\n                return false\n            end\n        end\n        return true\n    end\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char.with_index do |c, i|\n    if c != s[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char do |c|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    return s.split('').uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  for i in 0..s.length-2\n    if s[i] != s[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  else\n    s.each_char do |c|\n      if c != s[0]\n        return false\n      end\n    end\n    return true\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s[0] == s[-1]\n        return true\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char.with_index do |c,i|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        for i in 0..s.length-2\n            if s[i] != s[i+1]\n                return false\n            end\n        end\n        return true\n    end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        return all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char do |c|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        return s.split('').uniq.length == 1\n    end\nend",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  else\n    s.each_char.with_index do |c, i|\n      if c != s[0]\n        return false\n      end\n    end\n    return true\n  end\nend",
    "    if s.length > 1\n        if s[0] == s[1]\n            all_Characters_Same(s[1..-1])\n        else\n            return false\n        end\n    else\n        return true\n    end\nend\nputs all_Characters_Same(\"aaabbb\")\nputs all_Characters_Same(\"aaabbbccc\")\nputs all_Characters_Same(\"aaaaaa\")\nputs all_Characters_Same(\"aaaa\")\nputs all_Characters_Same(\"a\")\nputs all_Characters_Same(\"\")",
    "    if s.length == 1\n        return true\n    end\n    s.each_char do |c|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        return all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend\nputs all_Characters_Same(\"aaa\")\nputs all_Characters_Same(\"abc\")",
    "  s.chars.uniq.length == 1\nend",
    "    if s.length == 1\n        return true\n    else\n        s.each_char do |c|\n            if c != s[0]\n                return false\n            end\n        end\n        return true\n    end\nend",
    "  if s.length == 1\n    return true\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    else\n        if s[0] == s[1]\n            all_Characters_Same(s[1..-1])\n        else\n            return false\n        end\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  s.chars.uniq.length == 1\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        s.each_char do |x|\n            if x != s[0]\n                return false\n            end\n        end\n        return true\n    end\nend",
    "    s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    s.each_char do |c|\n      if c != s[0]\n        return false\n      end\n    end\n    return true\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-1\n        if s[i] != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        return all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "    if s.length == 0\n        return true\n    end\n    for i in 0..s.length-1\n        if s[0] != s[i]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        return all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        for i in 0..s.length-2\n            if s[i] != s[i+1]\n                return false\n            end\n        end\n        return true\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char do |c|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        for i in 0..s.length-2\n            if s[i] != s[i+1]\n                return false\n            end\n        end\n        return true\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend\nputs all_Characters_Same(\"aaa\")\nputs all_Characters_Same(\"abc\")",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char.with_index do |char, index|\n    if char != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend\nputs all_Characters_Same(\"a\")\nputs all_Characters_Same(\"aaa\")\nputs all_Characters_Same(\"abc\")\nputs all_Characters_Same(\"aaaa\")",
    "  if s.length == 1\n    return true\n  end\n  for i in 0..s.length-2\n    if s[i] != s[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    return s.length == 1 || s.split('').uniq.length == 1\nend",
    "    if s.length == 1\n        return true\n    else\n        for i in 0..s.length-2\n            if s[i] != s[i+1]\n                return false\n            end\n        end\n        return true\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0...s.length\n        if s[i] != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char.with_index do |c, i|\n    if c != s[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char do |c|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        return all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    s.chars.each do |c|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    s.chars.uniq.length == 1\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    s = s[1..-1]\n    all_Characters_Same(s)\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        return all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    else\n        if s[0] == s[1]\n            return all_Characters_Same(s[1..-1])\n        else\n            return false\n        end\n    end\nend",
    "  if s.length == 1\n    return true\n  end\n  s.chars.uniq.length == 1\nend",
    "  if s.length == 0\n    return true\n  end\n  for i in 0..s.length-2\n    if s[i] != s[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char do |c|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |c|\n    if c != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-1\n        if s[0] != s[i]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  end\n  for i in 0..s.length-2\n    if s[i] != s[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "    if s.length == 1\n        return true\n    else\n        for i in 0..s.length-2\n            if s[i] != s[i+1]\n                return false\n            end\n        end\n        return true\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  else\n    return s.split('').uniq.length == 1\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        for i in 0..s.length-2\n            if s[i] != s[i+1]\n                return false\n            end\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        for i in 0..s.length-2\n            if s[i] != s[i+1]\n                return false\n            end\n        end\n        return true\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0...s.length\n        if s[i] != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char.with_index do |char, index|\n        if index == 0\n            next\n        end\n        if char != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "  s.split(\"\").uniq.length == 1\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char do |c|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0...s.length-1\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend\nputs all_Characters_Same(\"aaaa\")\nputs all_Characters_Same(\"aaaab\")",
    "  if s.length == 1\n    return true\n  end\n  s.each_char do |c|\n    if c != s[0]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    else\n        s.each_char.with_index do |char, index|\n            if char != s[index+1]\n                return false\n            end\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        return all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "    return s.chars.uniq.length == 1\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend\nputs all_Characters_Same(\"aaaa\")\nputs all_Characters_Same(\"abc\")",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend\nputs all_Characters_Same(\"aaaa\")\nputs all_Characters_Same(\"abcd\")",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        for i in 0..s.length-2\n            if s[i] != s[i+1]\n                return false\n            end\n        end\n    end\n    return true\nend\nputs all_Characters_Same(\"aaaa\")\nputs all_Characters_Same(\"abc\")",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char do |char|\n        if char != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend\nputs all_Characters_Same(\"aaa\")\nputs all_Characters_Same(\"abc\")",
    "    if s.length == 1\n        return true\n    else\n        if s[0] == s[1]\n            return all_Characters_Same(s[1..-1])\n        else\n            return false\n        end\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        s.each_char do |c|\n            if c != s[0]\n                return false\n            end\n        end\n        return true\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char do |c|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        for i in 0..s.length-2\n            if s[i] != s[i+1]\n                return false\n            end\n        end\n        return true\n    end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char do |c|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char do |c|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char do |c|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend\nputs all_Characters_Same(\"aaa\")\nputs all_Characters_Same(\"abc\")\nputs all_Characters_Same(\"\")",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend\nputs all_Characters_Same(\"aaaaaa\")\nputs all_Characters_Same(\"abc\")\nputs all_Characters_Same(\"a\")",
    "    if s.length == 1\n        return true\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend\nputs all_Characters_Same(\"aaa\")\nputs all_Characters_Same(\"abc\")\nputs all_Characters_Same(\"a\")",
    "    if s.length == 1\n        return true\n    else\n        for i in 0..s.length-1\n            if s[i] != s[0]\n                return false\n            end\n        end\n        return true\n    end\nend\ns = gets\nputs all_Characters_Same(s)",
    "    if s.length > 1\n        if s[0] == s[1]\n            all_Characters_Same(s[1..-1])\n        else\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        return all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        return all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        return all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s.length == 0\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        return s.split(\"\").uniq.length == 1\n    end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    return all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        return all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0...s.length\n        if s[i] != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      return all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "    return s.length == s.count(s[0])\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char do |c|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        return all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend\nputs all_Characters_Same(\"aaa\")\nputs all_Characters_Same(\"abc\")",
    "  s.chars.uniq.length == 1\nend",
    "  if s.length == 1\n    return true\n  end\n  for i in 0..s.length-2\n    if s[i] != s[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "  if s.length == 1\n    return true\n  else\n    if s[0] == s[1]\n      all_Characters_Same(s[1..-1])\n    else\n      return false\n    end\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-1\n        if s[0] != s[i]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend\nputs all_Characters_Same(\"aaa\")\nputs all_Characters_Same(\"abc\")\nputs all_Characters_Same(\"\")",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char do |c|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    if s[0] == s[1]\n        return all_Characters_Same(s[1..-1])\n    else\n        return false\n    end\nend",
    "  if s.length == 1\n    return true\n  end\n  if s[0] == s[1]\n    all_Characters_Same(s[1..-1])\n  else\n    return false\n  end\nend",
    "  if s.length == 1\n    return true\n  else\n    return false\n  end\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    else\n        for i in 0...s.length-1\n            if s[i] != s[i+1]\n                return false\n            end\n        end\n        return true\n    end\nend",
    "    if s.length == 1\n        return true\n    end\n    s.each_char do |c|\n        if c != s[0]\n            return false\n        end\n    end\n    return true\nend",
    "    if s.length == 1\n        return true\n    end\n    for i in 0..s.length-2\n        if s[i] != s[i+1]\n            return false\n        end\n    end\n    return true\nend\nputs all_Characters_Same(\"aaaaa\")\nputs all_Characters_Same(\"abcde\")",
    "    if s.length == 1\n        return true\n    else\n        if s[0] == s[1]\n            return all_Characters_Same(s[1..-1])\n        else\n            return false\n        end\n    end\nend"
  ]
}
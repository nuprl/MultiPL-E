{
  "name": "mbpp_425_count_element_in_list",
  "language": "rb",
  "prompt": "# Write a function to count the number of sublists containing a particular element.\ndef count_element_in_list(list1, x)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_425_count_element_in_list.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_count_element_in_list\n    candidate = method(:count_element_in_list)\n    assert_equal(3, candidate.call([[1, 3], [5, 7], [1, 11], [1, 15, 7]], 1))\n    assert_equal(3, candidate.call([[\"A\", \"B\"], [\"A\", \"C\"], [\"A\", \"D\", \"E\"], [\"B\", \"C\", \"D\"]], \"A\"))\n    assert_equal(1, candidate.call([[\"A\", \"B\"], [\"A\", \"C\"], [\"A\", \"D\", \"E\"], [\"B\", \"C\", \"D\"]], \"E\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  count = 0\n  list1.each do |sublist|\n    sublist.each do |element|\n      if element == x\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  count = 0\n  list1.each do |element|\n    if element.include?(x)\n      count += 1\n    end\n  end\n  count\nend",
    "  list1.count { |sublist| sublist.include?(x) }\nend",
    "  count = 0\n  list1.each do |sublist|\n    count += 1 if sublist.include?(x)\n  end\n  count\nend",
    "  count = 0\n  list1.each do |sublist|\n    count += 1 if sublist.include?(x)\n  end\n  count\nend",
    "  count = 0\n  list1.each do |sublist|\n    if sublist.include?(x)\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  list1.each do |i|\n    if i.include?(x)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  list1.each do |sublist|\n    count += 1 if sublist.include?(x)\n  end\n  count\nend",
    "  list1.count { |sublist| sublist.include?(x) }\nend",
    "  count = 0\n  list1.each do |element|\n    if element.class == Array\n      count += count_element_in_list(element, x)\n    else\n      count += 1 if element == x\n    end\n  end\n  count\nend",
    "  count = 0\n  list1.each do |sublist|\n    count += 1 if sublist.include?(x)\n  end\n  count\nend",
    "  count = 0\n  list1.each do |sublist|\n    count += 1 if sublist.include?(x)\n  end\n  count\nend",
    "  list1.count { |sublist| sublist.include?(x) }\nend",
    "  list1.count { |list| list.include?(x) }\nend",
    "  count = 0\n  list1.each do |list|\n    if list.include?(x)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  list1.each do |i|\n    if i.include?(x)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  list1.each do |sublist|\n    if sublist.include?(x)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  list1.each do |i|\n    if i.include?(x)\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  list1.each do |sublist|\n    sublist.each do |element|\n      if element == x\n        count += 1\n      end\n    end\n  end\n  count\nend",
    "  list1.count { |sublist| sublist.include?(x) }\nend"
  ]
}
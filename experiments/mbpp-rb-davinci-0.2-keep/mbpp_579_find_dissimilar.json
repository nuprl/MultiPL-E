{
  "name": "mbpp_579_find_dissimilar",
  "language": "rb",
  "prompt": "# Write a function to find the dissimilar elements in the given two tuples.\ndef find_dissimilar(test_tup1, test_tup2)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_579_find_dissimilar.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_dissimilar\n    candidate = method(:find_dissimilar)\n    assert_equal([3, 6, 7, 10], candidate.call([3, 4, 5, 6], [5, 7, 4, 10]))\n    assert_equal([1, 4, 7, 9], candidate.call([1, 2, 3, 4], [7, 2, 3, 9]))\n    assert_equal([34, 36, 11, 25], candidate.call([21, 11, 25, 26], [26, 34, 21, 36]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  return test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts test_tup1\n  puts test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.reject { |x| test_tup2.include?(x) }\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  puts \"#{test_tup1} #{test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1.join(',')} and #{test_tup2.join(',')}\"\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  test_tup1 + test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup1 + test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"The dissimilar elements in the given two tuples are #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"The dissimilar elements in the given two tuples are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  return test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"The dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele) == false\n      puts ele\n    end\n  end\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"The dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts test_tup2\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  return test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x) == false\n      puts x\n    end\n  end\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts test_tup1\n  puts test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts test_tup2\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"The dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1 & test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup1 + test_tup2\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are: #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  test_tup2\nend",
    "  puts \"The dissimilar elements in the given two tuples are: \"\n  puts test_tup1 - test_tup2\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  return test_tup2\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  puts \"Dissimilar elements in the given tuples are: #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup1 + test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n      test_tup1.delete(x)\n    end\n  end\n  puts test_tup1.to_s + test_tup2.to_s\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  test_tup1 + test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.reject { |e| test_tup2.include?(e) } + test_tup2.reject { |e| test_tup1.include?(e) }\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup2\nend",
    "  puts \"Dissimilar elements in the given two tuples are: #{(test_tup1 + test_tup2).uniq - (test_tup1 & test_tup2)}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  print test_tup1 + test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x) == false\n      puts x\n    end\n  end\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts test_tup1\n  puts test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  return test_tup1, test_tup2\nend",
    "  test_tup1.uniq.concat(test_tup2.uniq) - (test_tup1 & test_tup2)\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      puts x\n    end\n  end\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.select {|x| test_tup2.include?(x) == false}\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"The dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts test_tup1.concat(test_tup2)\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts test_tup1\n  puts test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are: #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are: #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are: #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend\ntest_tup1 = [1, 2, 3, 4, 5]\ntest_tup2 = [1, 2, 3, 4, 5, 6, 7]\nfind_dissimilar(test_tup1, test_tup2)",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"The dissimilar elements are: #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  puts test_tup1 - test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts test_tup1\n  puts test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup1 + test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are: #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are: #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n      test_tup1.delete(x)\n    end\n  end\n  puts test_tup1\n  puts test_tup2\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts test_tup1\n  puts test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts test_tup2\nend\ntest_tup1 = [1, 2, 3, 4, 5, 6, 7, 8, 9]\ntest_tup2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nfind_dissimilar(test_tup1, test_tup2)",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x) == false\n      puts x\n    end\n  end\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.reject { |x| test_tup2.include?(x) }\nend",
    "  test_tup1.each do |e|\n    if test_tup2.include?(e)\n      test_tup1.delete(e)\n      test_tup2.delete(e)\n    end\n  end\n  puts test_tup1.to_s\n  puts test_tup2.to_s\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"The dissimilar elements are: #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n    end\n  end\n  return test_tup1\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are : #{test_tup1 + test_tup2}\"\nend",
    "    test_tup1.each do |x|\n        if test_tup2.include?(x)\n            test_tup2.delete(x)\n        end\n    end\n    return test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x) == false\n      puts x\n    end\n  end\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts test_tup2\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1.join(', ')} and #{test_tup2.join(', ')}\"\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements are: #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are: #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"The dissimilar elements are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are: #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  return test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup2}\"\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  return test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      next\n    else\n      puts i\n    end\n  end\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  return test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      puts x\n    end\n  end\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  puts \"The dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  puts \"The dissimilar elements in the given two tuples are:\"\n  puts test_tup1 - test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  puts \"The dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  return test_tup1, test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements in the given tuples are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  test_tup2\nend",
    "  return test_tup1.to_a - test_tup2.to_a\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts test_tup1\n  puts test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts test_tup2\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  test_tup1 + test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  test_tup1.concat(test_tup2)\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.reject { |x| test_tup2.include?(x) }\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"The dissimilar elements are: #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |tup1|\n    if test_tup2.include?(tup1)\n      test_tup1.delete(tup1)\n      test_tup2.delete(tup1)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  return test_tup2\nend",
    "  (test_tup1 - test_tup2) | (test_tup2 - test_tup1)\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n    end\n  end\n  return test_tup1\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n    end\n  end\n  puts test_tup1\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      return x\n    end\n  end\nend",
    "  test_tup1.each do |ele|\n    if test_tup2.include?(ele)\n      test_tup1.delete(ele)\n      test_tup2.delete(ele)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1} and #{test_tup2}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements are #{test_tup1.concat(test_tup2)}\"\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  test_tup1\nend",
    "  test_tup1.reject { |x| test_tup2.include?(x) }\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n    end\n  end\n  puts test_tup1\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      test_tup1.delete(x)\n      test_tup2.delete(x)\n    end\n  end\n  puts test_tup1\n  puts test_tup2\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x)\n      puts \"Dissimilar element is #{x}\"\n    end\n  end\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup2.delete(i)\n    end\n  end\n  test_tup2\nend",
    "  test_tup1.each do |i|\n    if test_tup2.include?(i)\n      test_tup1.delete(i)\n      test_tup2.delete(i)\n    end\n  end\n  puts \"Dissimilar elements in the given two tuples are: #{test_tup1 + test_tup2}\"\nend",
    "  test_tup1.each do |x|\n    if test_tup2.include?(x) == false\n      puts x\n    end\n  end\nend"
  ]
}
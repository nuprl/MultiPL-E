{
  "name": "mbpp_165_count_char_position",
  "language": "rb",
  "prompt": "# Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).\ndef count_char_position(str1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_165_count_char_position.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_count_char_position\n    candidate = method(:count_char_position)\n    assert_equal(2, candidate.call(\"xbcefg\"))\n    assert_equal(3, candidate.call(\"ABcED\"))\n    assert_equal(5, candidate.call(\"AbgdeF\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  count = 0\n  str1.downcase.split(\"\").each_with_index do |char, index|\n    if char == (\"abcdefghijklmnopqrstuvwxyz\"[index])\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, i|\n    if char == ('a'..'z').to_a[i]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  alphabet = ('a'..'z').to_a\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == alphabet[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == (index + 97).chr\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase.chars.count { |c| c == c.ord.chr }\nend",
    "  str1.downcase.chars.count { |c| c == c.ord - 96 }\nend",
    "  count = 0\n  str1.chars.each_with_index do |char, index|\n    if char.downcase == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, i|\n    count += 1 if char == ('a'..'z').to_a[i]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase.chars.select.with_index { |char, index| char == ('a'..'z').to_a[index] }.count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == (\"a\"..\"z\").to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1 = str1.downcase\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == (\"abcdefghijklmnopqrstuvwxyz\"[index])\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase.chars.count { |c| c == c.ord.chr }\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |c, i|\n    count += 1 if c == ('a'..'z').to_a[i]\n  end\n  count\nend",
    "  str1.downcase.chars.count { |char| char == char.ord.chr }\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase.chars.select { |char| char == char.ord.chr }.count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.chars.each_with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.split(\"\").each_with_index do |char, index|\n    if char == (\"abcdefghijklmnopqrstuvwxyz\".split(\"\")[index])\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == (\"a\"..\"z\").to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase.chars.select.with_index { |char, index| char == ('a'..'z').to_a[index] }.count\nend",
    "  str1.downcase.chars.select.with_index { |char, index| char == ('a'..'z').to_a[index] }.length\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char do |char|\n    count += 1 if char == (\"a\"..\"z\").to_a[str1.index(char)]\n  end\n  count\nend",
    "  str1.downcase.chars.count { |c| c == c.ord - 96 }\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase.chars.count { |char| char == char.ord.chr }\nend",
    "  str1.downcase.chars.count { |c| c == c.ord - 96 }\nend",
    "  str1.gsub!(/[^a-zA-Z]/, '')\n  count = 0\n  str1.downcase.split('').each_with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == (index + 97).chr\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == (\"a\"..\"z\").to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase.chars.count { |char| char == char.ord.chr }\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, i|\n    count += 1 if char == (\"a\"..\"z\").to_a[i]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  alphabet = ('a'..'z').to_a\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if alphabet.index(char) == index\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase.chars.select.with_index { |char, index| char == ('a'..'z').to_a[index] }.count\nend",
    "  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char.downcase == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase.chars.count { |char| char.ord - 97 == str1.downcase.index(char) }\nend",
    "  count = 0\n  str1.downcase.chars.each_with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.chars.each_with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase.chars.count { |c| c == c.ord - 96 }\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == (\"a\"..\"z\").to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  alphabet = ('a'..'z').to_a\n  count = 0\n  str1.downcase.chars.each_with_index do |char, index|\n    count += 1 if alphabet.index(char) == index\n  end\n  count\nend",
    "  str1.downcase.chars.select.with_index { |char, index| char == ('a'..'z').to_a[index] }.count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase.chars.select.with_index { |char, index| char == ('a'..'z').to_a[index] }.count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase.chars.select.with_index { |c, i| c == ('a'..'z').to_a[i] }.size\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.gsub!(/[^a-z]/i, '')\n  str1.length\nend",
    "  count = 0\n  str1.downcase.chars.each_with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    if char == (\"a\"..\"z\").to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == (\"a\"..\"z\").to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.chars.each_with_index do |char, index|\n    if char == (\"a\"..\"z\").to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == (\"abcdefghijklmnopqrstuvwxyz\"[index])\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == (\"a\"..\"z\").to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1 = str1.downcase\n  count = 0\n  str1.each_char do |char|\n    if char.ord >= 97 && char.ord <= 122\n      count += 1 if char.ord == 97 + str1.index(char)\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1 = str1.downcase\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == (\"abcdefghijklmnopqrstuvwxyz\"[index])\n      count += 1\n    end\n  end\n  return count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  for i in 0..str1.length-1\n    if str1[i] == (\"abcdefghijklmnopqrstuvwxyz\"[i])\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  str1.downcase.chars.each_with_index do |char, index|\n    count += 1 if char == (\"a\"..\"z\").to_a[index]\n  end\n  count\nend",
    "  str1.gsub(/[^a-z]/i, '').chars.count { |char| char.downcase == char.downcase.ord - 96 }\nend",
    "  count = 0\n  str1.downcase.each_char.with_index { |char, index| count += 1 if char == ('a'..'z').to_a[index] }\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.chars.each_with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.chars.each_with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase.chars.count { |char| char == char.ord - 96 }\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  str1.gsub!(/[^a-z]/, '')\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == (\"a\"..\"z\").to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase.chars.each_with_index.count { |char, index| char == (index + 97).chr }\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.chars.each_with_index do |char, index|\n    count += 1 if char == (\"a\"..\"z\").to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == (index + 97).chr\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.chars.each_with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.split(\"\").each_with_index do |char, index|\n    if char == (\"a\"..\"z\").to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase.chars.select.with_index { |char, index| char == (\"a\"..\"z\").to_a[index] }.count\nend",
    "  count = 0\n  str1.downcase.split('').each_with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == (\"a\"..\"z\").to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.gsub!(/[^a-z]/i, '')\n  str1.length\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase.chars.count { |c| c == c.ord.chr }\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == (\"a\"..\"z\").to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  alphabet = ('a'..'z').to_a\n  str1.each_char.with_index do |char, index|\n    if alphabet.index(char) == index\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.split('').each_with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == (\"a\"..\"z\").to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase.chars.count { |c| c == c.ord.chr }\nend",
    "  str1 = str1.downcase\n  alphabet = ('a'..'z').to_a\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if alphabet.index(char) == index\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  count = 0\n  str1.downcase.each_char.with_index do |char, index|\n    count += 1 if char == ('a'..'z').to_a[index]\n  end\n  count\nend",
    "  str1.downcase!\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char == ('a'..'z').to_a[index]\n      count += 1\n    end\n  end\n  count\nend",
    "  str1.downcase.chars.select { |char| char.ord - 96 == str1.downcase.index(char) + 1 }.count\nend"
  ]
}
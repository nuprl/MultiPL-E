{
  "name": "mbpp_558_digit_distance_nums",
  "language": "rb",
  "prompt": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |x, i|\n    sum += (x.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.zip(n2).map { |x, y| (x.to_i - y.to_i).abs }.sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.map! { |n| n.to_i }\n  n2.map! { |n| n.to_i }\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  i = 0\n  while i < n1.length\n    sum += (n1[i].to_i - n2[i].to_i).abs\n    i += 1\n  end\n  sum\nend",
    "  # convert both numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # make sure both strings are the same length\n  if n1.length > n2.length\n    n2 = n2.rjust(n1.length, \"0\")\n  elsif n2.length > n1.length\n    n1 = n1.rjust(n2.length, \"0\")\n  end\n  # convert both strings to arrays of integers\n  n1 = n1.split(\"\").map { |i| i.to_i }\n  n2 = n2.split(\"\").map { |i| i.to_i }\n  # subtract each element of n2 from each element of n1\n  n1.zip(n2).map { |i, j| i - j }.sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.map! { |num| num.to_i }\n  n2.map! { |num| num.to_i }\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend"
  ]
}
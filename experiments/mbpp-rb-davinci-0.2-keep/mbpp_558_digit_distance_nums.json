{
  "name": "mbpp_558_digit_distance_nums",
  "language": "rb",
  "prompt": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |x, i|\n    sum += (x.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.zip(n2).map { |x, y| (x.to_i - y.to_i).abs }.sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.map! { |n| n.to_i }\n  n2.map! { |n| n.to_i }\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  i = 0\n  while i < n1.length\n    sum += (n1[i].to_i - n2[i].to_i).abs\n    i += 1\n  end\n  sum\nend",
    "  # convert both numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # make sure both strings are the same length\n  if n1.length > n2.length\n    n2 = n2.rjust(n1.length, \"0\")\n  elsif n2.length > n1.length\n    n1 = n1.rjust(n2.length, \"0\")\n  end\n  # convert both strings to arrays of integers\n  n1 = n1.split(\"\").map { |i| i.to_i }\n  n2 = n2.split(\"\").map { |i| i.to_i }\n  # subtract each element of n2 from each element of n1\n  n1.zip(n2).map { |i, j| i - j }.sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.map! { |num| num.to_i }\n  n2.map! { |num| num.to_i }\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1_digits = n1.to_s.split('').map(&:to_i)\n  n2_digits = n2.to_s.split('').map(&:to_i)\n  n1_digits.zip(n2_digits).map { |n1, n2| (n1 - n2).abs }.reduce(:+)\nend",
    "  # convert numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # convert strings to arrays\n  n1 = n1.split('')\n  n2 = n2.split('')\n  # find the difference between the two arrays\n  diff = n1 - n2\n  # convert the difference array to integers\n  diff = diff.map(&:to_i)\n  # sum the integers in the difference array\n  diff.sum\nend",
    "  # convert to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # make sure they are the same length\n  if n1.length > n2.length\n    n2 = n2.rjust(n1.length, '0')\n  elsif n2.length > n1.length\n    n1 = n1.rjust(n2.length, '0')\n  end\n  # convert back to integers\n  n1 = n1.to_i\n  n2 = n2.to_i\n  # split into arrays\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  # find the difference between each digit\n  diff = []\n  n1.each_with_index do |num, i|\n    diff << (num.to_i - n2[i].to_i).abs\n  end\n  # return the sum of the differences\n  diff.inject(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.length.times do |i|\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  # convert to string\n  # split into array\n  # iterate through array\n  # subtract each element from the other\n  # add the difference to a sum\n  # return the sum\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, i|\n    sum += (num.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |n, i|\n    sum += (n.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  # convert to string\n  # split into array\n  # map to integer\n  # zip\n  # map to difference\n  # sum\n  n1.to_s.split('').map(&:to_i).zip(n2.to_s.split('').map(&:to_i)).map { |a, b| (a - b).abs }.sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.map! { |x| x.to_i }\n  n2.map! { |x| x.to_i }\n  n1.zip(n2).map { |x, y| (x - y).abs }.inject(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n,i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  # convert numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # convert strings to arrays\n  n1 = n1.split('')\n  n2 = n2.split('')\n  # convert arrays to integers\n  n1 = n1.map(&:to_i)\n  n2 = n2.map(&:to_i)\n  # find the difference between each digit\n  diff = []\n  n1.each_with_index do |num, index|\n    diff << (num - n2[index]).abs\n  end\n  # return the sum of the differences\n  diff.reduce(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  # convert numbers to strings\n  # split strings into arrays\n  # map arrays to integers\n  # subtract arrays\n  # map arrays to absolute values\n  # sum array\n  n1.to_s.split('').map(&:to_i).zip(n2.to_s.split('').map(&:to_i)).map { |x, y| (x - y).abs }.sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  (n1 - n2).abs.to_s.split('').map(&:to_i).inject(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  # convert to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # make sure they are the same length\n  if n1.length > n2.length\n    n2 = n2.rjust(n1.length, '0')\n  elsif n2.length > n1.length\n    n1 = n1.rjust(n2.length, '0')\n  end\n  # iterate through each digit, subtract, and add to sum\n  sum = 0\n  n1.length.times do |i|\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  # Convert numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # Create a variable to hold the sum of the differences\n  sum = 0\n  # Iterate through the strings\n  n1.length.times do |i|\n    # Add the absolute value of the difference between the digits to the sum\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  # Return the sum\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  # convert numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # make sure n1 is the longer string\n  if n1.length < n2.length\n    n1, n2 = n2, n1\n  end\n  # add zeros to the end of n2 to make it the same length as n1\n  n2 = n2.rjust(n1.length, \"0\")\n  # split the strings into arrays\n  n1 = n1.split(\"\")\n  n2 = n2.split(\"\")\n  # iterate through the arrays and subtract the numbers\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  return sum\nend",
    "  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |a, b| (a - b).abs }.sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  # convert numbers to string\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # convert strings to arrays\n  n1 = n1.split('')\n  n2 = n2.split('')\n  # convert arrays to integers\n  n1 = n1.map { |x| x.to_i }\n  n2 = n2.map { |x| x.to_i }\n  # find the difference between each digit\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  a = n1.to_s.split('').map(&:to_i)\n  b = n2.to_s.split('').map(&:to_i)\n  c = a.zip(b).map { |x, y| (x - y).abs }\n  c.reduce(:+)\nend",
    "    n1 = n1.to_s.split('').map(&:to_i)\n    n2 = n2.to_s.split('').map(&:to_i)\n    sum = 0\n    n1.each_with_index do |num, i|\n        sum += (num - n2[i]).abs\n    end\n    sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend",
    "  # convert to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # make sure they are the same length\n  n1 = n1.rjust(n2.length, '0') if n1.length < n2.length\n  n2 = n2.rjust(n1.length, '0') if n2.length < n1.length\n  # split into arrays\n  n1 = n1.split('')\n  n2 = n2.split('')\n  # iterate through arrays, subtracting each element\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |x, i|\n    sum += (x.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, index|\n    sum += (num.to_i - n2_arr[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1_digits = n1.to_s.chars.map(&:to_i)\n  n2_digits = n2.to_s.chars.map(&:to_i)\n  n1_digits.zip(n2_digits).map { |n1, n2| (n1 - n2).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, idx|\n    sum += (num - n2[idx]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.map! { |x| x.to_i }\n  n2.map! { |x| x.to_i }\n  sum = 0\n  if n1.length > n2.length\n    n1.each_with_index do |x, i|\n      sum += (x - n2[i]).abs\n    end\n  else\n    n2.each_with_index do |x, i|\n      sum += (x - n1[i]).abs\n    end\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1.to_s.split('').map(&:to_i).zip(n2.to_s.split('').map(&:to_i)).map { |x, y| (x - y).abs }.reduce(:+)\nend",
    "  # convert to string\n  # split into array\n  # map to int\n  # zip\n  # map to abs\n  # sum\n  n1.to_s.split('').map(&:to_i).zip(n2.to_s.split('').map(&:to_i)).map { |pair| (pair[0] - pair[1]).abs }.sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, i|\n    sum += (num.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  # convert to string, then split into array of chars\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  # convert to ints\n  n1_arr.map! { |char| char.to_i }\n  n2_arr.map! { |char| char.to_i }\n  # find the difference between each digit\n  diff_arr = []\n  n1_arr.each_with_index do |n1_digit, i|\n    diff_arr << (n1_digit - n2_arr[i]).abs\n  end\n  # sum the differences\n  diff_arr.reduce(:+)\nend",
    "  # Convert both numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # Set the length of the shorter string to a variable\n  length = n1.length < n2.length ? n1.length : n2.length\n  # Set the sum to 0\n  sum = 0\n  # Loop through the length of the shorter string\n  length.times do |i|\n    # Add the absolute value of the difference between the characters at the same index in each string to the sum\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  # Return the sum\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_index do |i|\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  # convert to strings\n  n1 = n1.to_s\n  n2 = n2.to_s",
    "  # convert numbers to strings\n  num1 = n1.to_s\n  num2 = n2.to_s\n  # convert strings to arrays\n  num1_array = num1.split('')\n  num2_array = num2.split('')\n  # compare the arrays and find the difference between each digit\n  difference = num1_array.zip(num2_array).map { |x, y| (x.to_i - y.to_i).abs }\n  # sum the differences\n  difference.inject(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  return sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  distance = 0\n  n1.each_with_index do |num, index|\n    distance += (num - n2[index]).abs\n  end\n  distance\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |x, y| (x - y).abs }.sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  # convert to string\n  # split into array of chars\n  # map to integers\n  # zip with other array\n  # map to abs difference\n  # reduce to sum\n  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |a, b| (a - b).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, idx|\n    sum += (num - n2[idx]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  if n1.length > n2.length\n    n2.each_with_index do |n, i|\n      sum += (n1[i].to_i - n.to_i).abs\n    end\n  else\n    n1.each_with_index do |n, i|\n      sum += (n2[i].to_i - n.to_i).abs\n    end\n  end\n  sum\nend",
    "  # convert numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # convert strings to arrays\n  n1 = n1.split('')\n  n2 = n2.split('')\n  # convert strings to integers\n  n1 = n1.map(&:to_i)\n  n2 = n2.map(&:to_i)\n  # find the difference between each digit\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |a, b| (a - b).abs }.sum\nend",
    "  n1_array = n1.to_s.split('')\n  n2_array = n2.to_s.split('')\n  sum = 0\n  n1_array.each_with_index do |num, index|\n    sum += (num.to_i - n2_array[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "    n1 = n1.to_s.split('')\n    n2 = n2.to_s.split('')\n    sum = 0\n    for i in 0...n1.length\n        sum += (n1[i].to_i - n2[i].to_i).abs\n    end\n    return sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend",
    "  n1_digits = n1.to_s.split('').map(&:to_i)\n  n2_digits = n2.to_s.split('').map(&:to_i)\n  n1_digits.zip(n2_digits).map { |a, b| (a - b).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1_digits = n1.to_s.split('').map(&:to_i)\n  n2_digits = n2.to_s.split('').map(&:to_i)\n  n1_digits.zip(n2_digits).map { |pair| (pair[0] - pair[1]).abs }.reduce(:+)\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |n, i|\n    sum += (n.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend",
    "  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend"
  ]
}
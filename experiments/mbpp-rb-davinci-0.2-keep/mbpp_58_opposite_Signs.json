{
  "name": "mbpp_58_opposite_Signs",
  "language": "rb",
  "prompt": "# Write a python function to check whether the given two integers have opposite sign or not.\ndef opposite_Signs(x, y)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_58_opposite_Signs.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_opposite_Signs\n    candidate = method(:opposite_Signs)\n    assert_equal(true, candidate.call(1, -2))\n    assert_equal(false, candidate.call(3, 2))\n    assert_equal(false, candidate.call(-10, -10))\n    assert_equal(true, candidate.call(-2, 2))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    if x < 0 && y > 0\n        return true\n    elsif x > 0 && y < 0\n        return true\n    else\n        return false\n    end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    return true\n  else\n    return false\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if (x ^ y) < 0\n    puts \"Signs are opposite\"\n  else\n    puts \"Signs are not opposite\"\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "    if x*y < 0\n        return true\n    else\n        return false\n    end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    return true\n  else\n    return false\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    return true\n  else\n    return false\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    return true\n  else\n    return false\n  end\nend",
    "  return true if (x < 0 && y > 0) || (x > 0 && y < 0)\n  false\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    return true\n  else\n    return false\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    return true\n  else\n    return false\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend\nopposite_Signs(1, -1)\nopposite_Signs(1, 1)",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"Yes\"\n  else\n    puts \"No\"\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    return true\n  else\n    return false\n  end\nend",
    "  if (x < 0 && y > 0) || (x > 0 && y < 0)\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend"
  ]
}
{
  "name": "mbpp_293_otherside_rightangle",
  "language": "rb",
  "prompt": "# Write a function to find the third side of a right angled triangle.\ndef otherside_rightangle(w, h)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_293_otherside_rightangle.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_otherside_rightangle\n    candidate = method(:otherside_rightangle)\n    assert_equal(10.63014581273465, candidate.call(7, 8))\n    assert_equal(5, candidate.call(3, 4))\n    assert_equal(16.55294535724685, candidate.call(7, 15))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  return Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  w**2 + h**2\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  return Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  return Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  w**2 + h**2\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  return Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  return Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend",
    "  Math.sqrt(w**2 + h**2)\nend"
  ]
}
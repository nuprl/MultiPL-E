{
  "name": "mbpp_626_triangle_area",
  "language": "rb",
  "prompt": "# Write a python function to find the area of the largest triangle that can be inscribed in a semicircle with a given radius.\ndef triangle_area(r)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_626_triangle_area.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_triangle_area\n    candidate = method(:triangle_area)\n    assert_equal(nil, candidate.call(-1))\n    assert_equal(0, candidate.call(0))\n    assert_equal(4, candidate.call(2))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "  (Math.sqrt(3)/4)*r*r\nend",
    "  return (r**2 * Math.sqrt(3))/4\nend",
    "  (Math.sqrt(3)/4)*(r**2)\nend",
    "\treturn (Math.sqrt(3)/4)*(r**2)\nend",
    "  return (Math::PI * r**2) / 2\nend",
    "\tarea = (3.14 * r * r) / 2\n\treturn area\nend",
    "\treturn (3.14*r*r)/2\nend\nputs triangle_area(5)",
    "  return (Math.sqrt(3)/4)*r*r\nend",
    "\tarea = (Math.sqrt(3)/4)*(r**2)\n\treturn area\nend",
    "  area = (Math.sqrt(3)/4) * (r**2)\n  return area\nend",
    "  return (3.14 * r * r) / 2\nend",
    "  return (Math.sqrt(3)/4)*(r**2)\nend",
    "    return (Math::PI * r * r) / 2\nend",
    "  return (Math.sqrt(3)/4)*(r**2)\nend",
    "    return (3.14*r*r)/2\nend",
    "  return (3.14*r*r)/2\nend",
    "  return (Math.sqrt(3)/4)*(r**2)\nend",
    "  area = (Math.sqrt(3)/4) * (r**2)\n  return area\nend",
    "  # area = (r**2 * sqrt(3))/4\n  area = (r**2 * Math.sqrt(3))/4\n  return area\nend"
  ]
}
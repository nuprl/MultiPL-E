{
  "name": "mbpp_605_prime_num",
  "language": "rb",
  "prompt": "# Write a function to check if the given integer is a prime number.\ndef prime_num(num)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_605_prime_num.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_prime_num\n    candidate = method(:prime_num)\n    assert_equal(true, candidate.call(13))\n    assert_equal(true, candidate.call(7))\n    assert_equal(false, candidate.call(-1010))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..(num-1)\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each { |i| return false if num % i == 0 }\n  true\nend",
    "  return false if num <= 1\n  Math.sqrt(num).to_i.downto(2).each {|i| return false if num % i == 0}\n  true\nend",
    "  return false if num <= 1\n  Math.sqrt(num).to_i.downto(2).each {|i| return false if num % i == 0}\n  true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num < 2\n    return false\n  end",
    "  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num < 2\n    return false\n  end",
    "  if num < 2\n    return false\n  end\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num/2\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..(num-1)\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num).to_i).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num/2\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num < 2\n    return false\n  end\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num-1).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num < 2\n    return false\n  end\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num <= 1\n    return false\n  elsif num <= 3\n    return true\n  elsif num % 2 == 0 || num % 3 == 0\n    return false\n  end",
    "  (2..num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num == 1\n  (2..num/2).none? { |i| num % i == 0 }\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    (2..num/2).each do |i|\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    (2..num/2).each do |i|\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if num == 1\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num < 2\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num < 2\n    return false\n  end\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num <= 1\n  Math.sqrt(num).to_i.downto(2).each {|i| return false if num % i == 0}\n  true\nend",
    "  if num < 2\n    return false\n  end\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  true\nend",
    "  if num == 0 || num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    (2..num-1).each do |i|\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if num <= 1\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  true\nend",
    "  if num < 2\n    return false\n  end\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 0 || num == 1\n    return false\n  end",
    "  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  true\nend",
    "  if num == 1\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num/2).none? { |i| num % i == 0 }\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    for i in 2..num-1\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if num < 2\n    return false\n  end\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  elsif num % 2 == 0\n    return false\n  else\n    for i in 2..num-1\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    (2..num/2).each do |i|\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if num < 2\n    return false\n  end\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2...num).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num == 0 || num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    (2..num/2).none? { |i| num % i == 0 }\n  end\nend",
    "  if num < 2\n    return false\n  end\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2...num).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num <= 1\n    return false\n  end",
    "  (2..num/2).none?{|i| num % i == 0}\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    (2..num-1).each do |i|\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..(num-1)\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num/2).none? { |i| num % i == 0 }\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num-1).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num == 2\n    return true\n  elsif num % 2 == 0\n    return false\n  else\n    (3..Math.sqrt(num)).step(2) do |i|\n      if num % i == 0\n        return false\n      end\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    (2..num-1).each do |i|\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num <= 1\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    for i in 2..num-1\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..(num-1)\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  true\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  if num == 2\n    return true\n  end\n  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each { |i| return false if num % i == 0 }\n  true\nend",
    "  if num == 1\n    return false\n  end\n  i = 2\n  while i < num\n    if num % i == 0\n      return false\n    end\n    i += 1\n  end\n  return true\nend",
    "  if num <= 1\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    (2..num/2).each do |i|\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..(num - 1)\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num < 2\n    return false\n  end\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num == 1\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..(num - 1)\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..(num - 1)\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2...num).each { |i| return false if num % i == 0 }\n  true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  elsif num % 2 == 0\n    return false\n  else\n    i = 3\n    while i < num\n      if num % i == 0\n        return false\n      end\n      i += 2\n    end\n    return true\n  end\nend",
    "  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num == 1\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 2\n    return true\n  end\n  if num % 2 == 0\n    return false\n  end\n  i = 3\n  while i < num\n    if num % i == 0\n      return false\n    end\n    i += 2\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num <= 1\n  Math.sqrt(num).to_i.downto(2).each {|i| return false if num % i == 0}\n  true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    (2..num-1).each do |i|\n      if num % i == 0\n        return false\n      end\n    end\n  end\n  return true\nend",
    "  return false if num == 1\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num == 2\n    return true\n  elsif num % 2 == 0\n    return false\n  else\n    (3..num-1).each do |i|\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..(num-1)\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num <= 1\n    return false\n  end",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num <= 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num/2).none? { |i| num % i == 0 }\nend",
    "  return false if num < 2\n  (2...num).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num < 2\n    return false\n  end\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    for i in 2..(num - 1)\n      if num % i == 0\n        return false\n      end\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num/2\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  if num == 2\n    return true\n  end\n  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num < 2\n    return false\n  end\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2..num/2).none? { |i| num % i == 0 }\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    (2..num-1).each do |i|\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  (2..num-1).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  return false if num < 2\n  (2..num/2).none? { |i| num % i == 0 }\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num/2\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num <= 1\n  Math.sqrt(num).to_i.downto(2).each {|i| return false if num % i == 0}\n  true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  return false if num <= 1\n  Math.sqrt(num).to_i.downto(2).each {|i| return false if num % i == 0}\n  true\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    (2..num/2).none?{|i| num % i == 0}\n  end\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  end\n  (2..(num - 1)).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    for i in 2..(num-1)\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if num <= 1\n    return false\n  end\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..(num-1)\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2...num).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num <= 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num < 2\n    return false\n  end\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    (2..num/2).none? { |i| num % i == 0 }\n  end\nend",
    "  if num == 1\n    return false\n  end\n  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num/2).none? { |i| num % i == 0 }\nend",
    "  if num <= 1\n    return false\n  end\n  i = 2\n  while i < num\n    if num % i == 0\n      return false\n    end\n    i += 1\n  end\n  return true\nend",
    "  if num < 2\n    return false\n  end\n  (2..Math.sqrt(num)).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num < 2\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num < 2\n    return false\n  end\n  (2..(num - 1)).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    (2..num-1).each do |i|\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..(num-1)\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2..num/2).none? {|i| num % i == 0}\nend",
    "  (2..num/2).none? { |i| num % i == 0 }\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..(num-1)\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num <= 1\n    return false\n  end\n  for i in 2..(num - 1)\n    if (num % i) == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 0 || num == 1\n    return false\n  end",
    "  if num <= 1\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num <= 1\n    return false\n  end\n  for i in 2..(num - 1)\n    if (num % i) == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  return false if num < 2\n  (2...num).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    for i in 2..(num-1)\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    (2..num/2).none? { |i| num % i == 0 }\n  end\nend",
    "  return false if num < 2\n  (2..Math.sqrt(num)).each do |i|\n    return false if num % i == 0\n  end\n  true\nend",
    "  return false if num < 2\n  (2..num/2).none? { |i| num % i == 0 }\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    (2..num/2).each do |i|\n      if num % i == 0\n        return false\n      end\n    end\n    return true\n  end\nend",
    "  if num < 2\n    return false\n  end\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  true\nend",
    "  return false if num < 2\n  (2...num).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  true\nend",
    "  if num == 1\n    return false\n  end\n  for i in 2..(num-1)\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num <= 1\n    return false\n  end\n  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num < 2\n    return false\n  end\n  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  true\nend",
    "  return false if num <= 1\n  Math.sqrt(num).to_i.downto(2).each {|i| return false if num % i == 0}\n  true\nend",
    "  if num == 1\n    return false\n  elsif num == 2\n    return true\n  else\n    for i in 2..num-1\n      if num % i == 0\n        return false\n      end\n    end\n  end\n  return true\nend",
    "  if num == 2\n    return true\n  end\n  if num % 2 == 0\n    return false\n  end\n  (3..Math.sqrt(num)).step(2) do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  if num == 1\n    return false\n  end\n  (2..num-1).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  true\nend",
    "  if num == 0 || num == 1\n    return false\n  end\n  for i in 2..num-1\n    if num % i == 0\n      return false\n    end\n  end\n  return true\nend",
    "  (2..num/2).each do |i|\n    if num % i == 0\n      return false\n    end\n  end\n  true\nend"
  ]
}
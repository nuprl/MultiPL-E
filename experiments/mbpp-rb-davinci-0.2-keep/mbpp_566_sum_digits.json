{
  "name": "mbpp_566_sum_digits",
  "language": "rb",
  "prompt": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_566_sum_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  n.to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  n.to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  n.to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  n.to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  n.to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  n.to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  n.to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  n.to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  n.to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  n.to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  n.to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  n.to_s.split('').map(&:to_i).reduce(:+)\nend",
    "  n.to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend",
    "  n.to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  n.to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  n.to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  n.to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  n.to_s.chars.map(&:to_i).reduce(:+)\nend",
    "  n.to_s.chars.map(&:to_i).reduce(:+)\nend"
  ]
}
{
  "name": "mbpp_763_find_min_diff",
  "language": "rb",
  "prompt": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_763_find_min_diff.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp75z_9w4i\nStarted\n.\nFinished in 0.00040526 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2467.55 tests/s, 7402.66 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpq_ucpspw\nStarted\n.\nFinished in 0.000407718 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2452.68 tests/s, 7358.03 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpocqn0leo\nStarted\n.\nFinished in 0.000414513 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2412.47 tests/s, 7237.41 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1..n-1).each do |i|\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpnmj1s3aj\nStarted\n.\nFinished in 0.000403118 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2480.66 tests/s, 7441.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = arr[i+1] - arr[i]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiirrgeq7\nStarted\n.\nFinished in 0.000403497 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2478.33 tests/s, 7435.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqyh5yedw\nStarted\n.\nFinished in 0.000402287 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2485.79 tests/s, 7457.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    min_diff = [min_diff, arr[i+1]-arr[i]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkkjddh_u\nStarted\n.\nFinished in 0.000436567 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2290.60 tests/s, 6871.80 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    min_diff = [min_diff, arr[i+1] - arr[i]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeattjf_k\nStarted\n.\nFinished in 0.000417392 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2395.83 tests/s, 7187.49 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpjeb6b_bo\nStarted\n.\nFinished in 0.000412922 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2421.76 tests/s, 7265.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = arr[i+1] - arr[i]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpot1j1lld\nStarted\n.\nFinished in 0.000413148 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2420.44 tests/s, 7261.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp75z_9w4i\nStarted\n.\nFinished in 0.00040526 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2467.55 tests/s, 7402.66 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpq_ucpspw\nStarted\n.\nFinished in 0.000407718 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2452.68 tests/s, 7358.03 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp4vu0c8a\nStarted\n.\nFinished in 0.000408165 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2449.99 tests/s, 7349.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbikyzwb5\nStarted\n.\nFinished in 0.000414096 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2414.90 tests/s, 7244.70 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp75z_9w4i\nStarted\n.\nFinished in 0.00040526 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2467.55 tests/s, 7402.66 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1...n).each do |i|\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdo9q3nzd\nStarted\n.\nFinished in 0.000561067 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1782.32 tests/s, 5346.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < diff\n      diff = arr[i] - arr[i - 1]\n    end\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpy5yrsrcz\nStarted\n.\nFinished in 0.000411919 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2427.66 tests/s, 7282.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  (1..n-1).each do |i|\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxebon7dc\nStarted\n.\nFinished in 0.000432615 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2311.52 tests/s, 6934.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min\n      min = arr[i] - arr[i - 1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzaf0gcgq\nStarted\n.\nFinished in 0.000507064 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1972.14 tests/s, 5916.41 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    min_diff = [min_diff, arr[i] - arr[i - 1]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpfa133xe_\nStarted\n.\nFinished in 0.000438642 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2279.76 tests/s, 6839.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    diff = arr[i] - arr[i-1]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2vau_36k\nStarted\n.\nFinished in 0.000477314 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2095.06 tests/s, 6285.17 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqyh5yedw\nStarted\n.\nFinished in 0.000402287 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2485.79 tests/s, 7457.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpq_ucpspw\nStarted\n.\nFinished in 0.000407718 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2452.68 tests/s, 7358.03 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1...n).each do |i|\n    min_diff = [min_diff, arr[i] - arr[i - 1]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp8304o5za\nStarted\n.\nFinished in 0.000524657 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1906.01 tests/s, 5718.02 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpy3n1shg7\nStarted\n.\nFinished in 0.000471001 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2123.14 tests/s, 6369.41 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpwxaxkimx\nStarted\n.\nFinished in 0.000454008 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2202.60 tests/s, 6607.81 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz0s4tgci\nStarted\n.\nFinished in 0.000457598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2185.32 tests/s, 6555.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpe51nh5o_\nStarted\n.\nFinished in 0.000640206 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1562.00 tests/s, 4685.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz0s4tgci\nStarted\n.\nFinished in 0.000457598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2185.32 tests/s, 6555.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    min_diff = [min_diff, arr[i+1] - arr[i]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeattjf_k\nStarted\n.\nFinished in 0.000417392 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2395.83 tests/s, 7187.49 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz0s4tgci\nStarted\n.\nFinished in 0.000457598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2185.32 tests/s, 6555.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbikyzwb5\nStarted\n.\nFinished in 0.000414096 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2414.90 tests/s, 7244.70 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz0s4tgci\nStarted\n.\nFinished in 0.000457598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2185.32 tests/s, 6555.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpe51nh5o_\nStarted\n.\nFinished in 0.000640206 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1562.00 tests/s, 4685.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = arr[i+1] - arr[i]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiirrgeq7\nStarted\n.\nFinished in 0.000403497 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2478.33 tests/s, 7435.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in (1..n-1)\n    if (arr[i] - arr[i-1]) < diff\n      diff = arr[i] - arr[i-1]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpgfcndc97\nStarted\n.\nFinished in 0.000474472 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2107.61 tests/s, 6322.82 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqyh5yedw\nStarted\n.\nFinished in 0.000402287 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2485.79 tests/s, 7457.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    min_diff = [min_diff, arr[i+1] - arr[i]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeattjf_k\nStarted\n.\nFinished in 0.000417392 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2395.83 tests/s, 7187.49 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpe51nh5o_\nStarted\n.\nFinished in 0.000640206 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1562.00 tests/s, 4685.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # sort the array\n  arr.sort!\n  # initialize difference as infinite\n  diff = 10**9\n  # find the min diff by comparing adjacent\n  # pairs in sorted array\n  (0...n-1).each do |i|\n    diff = [diff, arr[i+1]-arr[i]].min\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpt0rutyyn\nStarted\n.\nFinished in 0.000495097 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2019.81 tests/s, 6059.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = arr[i+1] - arr[i]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiirrgeq7\nStarted\n.\nFinished in 0.000403497 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2478.33 tests/s, 7435.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7zrl013\nStarted\n.\nFinished in 0.00046487 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2151.14 tests/s, 6453.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpjeb6b_bo\nStarted\n.\nFinished in 0.000412922 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2421.76 tests/s, 7265.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1...n).each do |i|\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdo9q3nzd\nStarted\n.\nFinished in 0.000561067 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1782.32 tests/s, 5346.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz0s4tgci\nStarted\n.\nFinished in 0.000457598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2185.32 tests/s, 6555.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1...n).each do |i|\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdo9q3nzd\nStarted\n.\nFinished in 0.000561067 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1782.32 tests/s, 5346.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if (arr[i+1] - arr[i]) < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpig2adg9p\nStarted\n.\nFinished in 0.000490645 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2038.13 tests/s, 6114.40 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min\n      min = arr[i] - arr[i - 1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzaf0gcgq\nStarted\n.\nFinished in 0.000507064 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1972.14 tests/s, 5916.41 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = arr[i+1] - arr[i]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiirrgeq7\nStarted\n.\nFinished in 0.000403497 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2478.33 tests/s, 7435.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbikyzwb5\nStarted\n.\nFinished in 0.000414096 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2414.90 tests/s, 7244.70 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz0s4tgci\nStarted\n.\nFinished in 0.000457598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2185.32 tests/s, 6555.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in (1...n)\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7dcfqgn0\nStarted\n.\nFinished in 0.000483889 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2066.59 tests/s, 6199.77 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpe51nh5o_\nStarted\n.\nFinished in 0.000640206 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1562.00 tests/s, 4685.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqyh5yedw\nStarted\n.\nFinished in 0.000402287 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2485.79 tests/s, 7457.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbikyzwb5\nStarted\n.\nFinished in 0.000414096 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2414.90 tests/s, 7244.70 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1...n).each do |i|\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzbnjrrgk\nStarted\n.\nFinished in 0.00048541 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2060.11 tests/s, 6180.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # sort the array\n  arr.sort!\n  # initialize difference as infinite\n  diff = 10**9\n  # find the min diff by comparing adjacent pairs in sorted array\n  (n-1).times do |i|\n    if (arr[i+1] - arr[i]) < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpjd93pu5h\nStarted\n.\nFinished in 0.000482437 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2072.81 tests/s, 6218.43 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqyh5yedw\nStarted\n.\nFinished in 0.000402287 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2485.79 tests/s, 7457.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # sort the array\n  arr.sort!\n  # initialize difference as infinite\n  diff = 10**9\n  # find the min diff by comparing adjacent pairs in sorted array\n  (n-1).times do |i|\n    diff = [diff, arr[i+1]-arr[i]].min\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsu3nb_sl\nStarted\n.\nFinished in 0.000551187 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1814.27 tests/s, 5442.80 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 0..n-2\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkmq5fiir\nStarted\n.\nFinished in 0.000454029 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2202.50 tests/s, 6607.51 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if (arr[i+1] - arr[i]) < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpig2adg9p\nStarted\n.\nFinished in 0.000490645 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2038.13 tests/s, 6114.40 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7zrl013\nStarted\n.\nFinished in 0.00046487 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2151.14 tests/s, 6453.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpq_ucpspw\nStarted\n.\nFinished in 0.000407718 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2452.68 tests/s, 7358.03 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7zrl013\nStarted\n.\nFinished in 0.00046487 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2151.14 tests/s, 6453.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpq_ucpspw\nStarted\n.\nFinished in 0.000407718 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2452.68 tests/s, 7358.03 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in (1..n-1)\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1ywykcuo\nStarted\n.\nFinished in 0.000482814 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2071.19 tests/s, 6213.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # sort the array\n  arr.sort!\n  # initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (n-1).times do |i|\n    if (arr[i+1] - arr[i]) < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  # return min diff\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpfez6g4ol\nStarted\n.\nFinished in 0.000458579 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2180.65 tests/s, 6541.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpjeb6b_bo\nStarted\n.\nFinished in 0.000412922 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2421.76 tests/s, 7265.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp4vu0c8a\nStarted\n.\nFinished in 0.000408165 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2449.99 tests/s, 7349.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz0s4tgci\nStarted\n.\nFinished in 0.000457598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2185.32 tests/s, 6555.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp75z_9w4i\nStarted\n.\nFinished in 0.00040526 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2467.55 tests/s, 7402.66 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqyh5yedw\nStarted\n.\nFinished in 0.000402287 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2485.79 tests/s, 7457.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort the array\n  arr.sort!\n  # Initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (n-1).times do |i|\n    if (arr[i+1] - arr[i]) < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  # Return min diff\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbje6f2yb\nStarted\n.\nFinished in 0.000493843 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2024.94 tests/s, 6074.81 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmprnc6v_8q\nStarted\n.\nFinished in 0.000486332 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2056.21 tests/s, 6168.63 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbikyzwb5\nStarted\n.\nFinished in 0.000414096 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2414.90 tests/s, 7244.70 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqyh5yedw\nStarted\n.\nFinished in 0.000402287 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2485.79 tests/s, 7457.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min\n      min = arr[i] - arr[i - 1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzaf0gcgq\nStarted\n.\nFinished in 0.000507064 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1972.14 tests/s, 5916.41 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp75z_9w4i\nStarted\n.\nFinished in 0.00040526 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2467.55 tests/s, 7402.66 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    min = [min, arr[i+1] - arr[i]].min\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplm6b7nsu\nStarted\n.\nFinished in 0.000417915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2392.83 tests/s, 7178.49 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = arr[i+1] - arr[i]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpot1j1lld\nStarted\n.\nFinished in 0.000413148 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2420.44 tests/s, 7261.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # sort the array\n  arr.sort!\n  # initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (n-1).times do |i|\n    if (arr[i+1] - arr[i]) < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  # return min diff\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpfez6g4ol\nStarted\n.\nFinished in 0.000458579 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2180.65 tests/s, 6541.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = arr[i+1] - arr[i]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiirrgeq7\nStarted\n.\nFinished in 0.000403497 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2478.33 tests/s, 7435.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz0s4tgci\nStarted\n.\nFinished in 0.000457598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2185.32 tests/s, 6555.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in (1..n-1)\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpnd54y0yg\nStarted\n.\nFinished in 0.000410071 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2438.60 tests/s, 7315.81 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if (arr[i+1] - arr[i]) < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpig2adg9p\nStarted\n.\nFinished in 0.000490645 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2038.13 tests/s, 6114.40 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if (arr[i+1] - arr[i]) < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpt7bmjl5d\nStarted\n.\nFinished in 0.00041794 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2392.69 tests/s, 7178.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 0...n-1\n    if arr[i+1] - arr[i] < diff\n      diff = arr[i+1] - arr[i]\n    end\n  end\n  return diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpq9ittz5p\nStarted\n.\nFinished in 0.00068379 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1462.44 tests/s, 4387.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    diff = arr[i] - arr[i - 1]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6kwjjaaz\nStarted\n.\nFinished in 0.000409374 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2442.75 tests/s, 7328.26 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # sort the array\n  arr.sort!\n  # initialize difference as infinite\n  diff = 10**9\n  # find the min diff by comparing adjacent\n  # pairs in sorted array\n  (0...n-1).each do |i|\n    diff = [diff, arr[i+1]-arr[i]].min\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpt0rutyyn\nStarted\n.\nFinished in 0.000495097 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2019.81 tests/s, 6059.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbikyzwb5\nStarted\n.\nFinished in 0.000414096 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2414.90 tests/s, 7244.70 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    min_diff = [min_diff, arr[i+1] - arr[i]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeattjf_k\nStarted\n.\nFinished in 0.000417392 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2395.83 tests/s, 7187.49 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_0jg_rkw\nStarted\n.\nFinished in 0.000406055 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2462.72 tests/s, 7388.16 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqyh5yedw\nStarted\n.\nFinished in 0.000402287 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2485.79 tests/s, 7457.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    min_diff = [min_diff, arr[i+1] - arr[i]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeattjf_k\nStarted\n.\nFinished in 0.000417392 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2395.83 tests/s, 7187.49 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if (arr[i+1] - arr[i]) < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpig2adg9p\nStarted\n.\nFinished in 0.000490645 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2038.13 tests/s, 6114.40 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqyh5yedw\nStarted\n.\nFinished in 0.000402287 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2485.79 tests/s, 7457.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp75z_9w4i\nStarted\n.\nFinished in 0.00040526 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2467.55 tests/s, 7402.66 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    min_diff = [min_diff, arr[i+1] - arr[i]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeattjf_k\nStarted\n.\nFinished in 0.000417392 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2395.83 tests/s, 7187.49 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp8pnghl5i\nStarted\n.\nFinished in 0.000410516 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2435.96 tests/s, 7307.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1..n-1).each do |i|\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpnmj1s3aj\nStarted\n.\nFinished in 0.000403118 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2480.66 tests/s, 7441.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpjeb6b_bo\nStarted\n.\nFinished in 0.000412922 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2421.76 tests/s, 7265.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqyh5yedw\nStarted\n.\nFinished in 0.000402287 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2485.79 tests/s, 7457.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp7zrl013\nStarted\n.\nFinished in 0.00046487 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2151.14 tests/s, 6453.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    min_diff = [min_diff, arr[i] - arr[i - 1]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpfa133xe_\nStarted\n.\nFinished in 0.000438642 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2279.76 tests/s, 6839.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp75z_9w4i\nStarted\n.\nFinished in 0.00040526 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2467.55 tests/s, 7402.66 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz0s4tgci\nStarted\n.\nFinished in 0.000457598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2185.32 tests/s, 6555.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    min_diff = [min_diff, arr[i+1] - arr[i]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeattjf_k\nStarted\n.\nFinished in 0.000417392 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2395.83 tests/s, 7187.49 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    min_diff = [min_diff, arr[i+1] - arr[i]].min\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeattjf_k\nStarted\n.\nFinished in 0.000417392 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2395.83 tests/s, 7187.49 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqyh5yedw\nStarted\n.\nFinished in 0.000402287 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2485.79 tests/s, 7457.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "Loaded suite /tmp/tmpvw_m_riv\nStarted\nE\n===============================================================================\nError: test_find_min_diff(TestHumanEval):\n  NoMethodError: undefined method `-' for nil:NilClass\n  \n      if arr[i+1] - arr[i] < min_diff\n                  ^\n/tmp/tmpvw_m_riv.rb:6:in `block in find_min_diff'\n/tmp/tmpvw_m_riv.rb:5:in `each'\n/tmp/tmpvw_m_riv.rb:5:in `find_min_diff'\n/tmp/tmpvw_m_riv.rb:16:in `call'\n/tmp/tmpvw_m_riv.rb:16:in `test_find_min_diff'\n     13: class TestHumanEval < Test::Unit::TestCase\n     14:   def test_find_min_diff\n     15:     candidate = method(:find_min_diff)\n  => 16:     assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n     17:     assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n     18:     assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n     19:   end\n===============================================================================\n\nFinished in 0.001825438 seconds.\n-------------------------------------------------------------------------------\n1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n547.81 tests/s, 0.00 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpwxaxkimx\nStarted\n.\nFinished in 0.000454008 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2202.60 tests/s, 6607.81 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1..n-1).each do |i|\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpm4iilr2d\nStarted\n.\nFinished in 0.000403932 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2475.66 tests/s, 7426.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "Loaded suite /tmp/tmpir2gnbi0\nStarted\nE\n===============================================================================\nError: test_find_min_diff(TestHumanEval):\n  NoMethodError: undefined method `-' for nil:NilClass\n  \n      if arr[i+1] - arr[i] < min\n                  ^\n/tmp/tmpir2gnbi0.rb:6:in `block in find_min_diff'\n/tmp/tmpir2gnbi0.rb:5:in `each'\n/tmp/tmpir2gnbi0.rb:5:in `find_min_diff'\n/tmp/tmpir2gnbi0.rb:16:in `call'\n/tmp/tmpir2gnbi0.rb:16:in `test_find_min_diff'\n     13: class TestHumanEval < Test::Unit::TestCase\n     14:   def test_find_min_diff\n     15:     candidate = method(:find_min_diff)\n  => 16:     assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n     17:     assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n     18:     assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n     19:   end\n===============================================================================\n\nFinished in 0.001842121 seconds.\n-------------------------------------------------------------------------------\n1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n542.85 tests/s, 0.00 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz0s4tgci\nStarted\n.\nFinished in 0.000457598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2185.32 tests/s, 6555.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpjeb6b_bo\nStarted\n.\nFinished in 0.000412922 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2421.76 tests/s, 7265.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpe51nh5o_\nStarted\n.\nFinished in 0.000640206 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1562.00 tests/s, 4685.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz0s4tgci\nStarted\n.\nFinished in 0.000457598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2185.32 tests/s, 6555.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpjeb6b_bo\nStarted\n.\nFinished in 0.000412922 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2421.76 tests/s, 7265.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmprnqqld4j\nStarted\n.\nFinished in 0.000401479 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2490.79 tests/s, 7472.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz0s4tgci\nStarted\n.\nFinished in 0.000457598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2185.32 tests/s, 6555.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    diff = arr[i] - arr[i - 1]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6kwjjaaz\nStarted\n.\nFinished in 0.000409374 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2442.75 tests/s, 7328.26 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = [diff, arr[i+1] - arr[i]].min\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpwav57cl1\nStarted\n.\nFinished in 0.00039636 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2522.96 tests/s, 7568.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmprnc6v_8q\nStarted\n.\nFinished in 0.000486332 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2056.21 tests/s, 6168.63 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    min_diff = [min_diff, arr[i+1] - arr[i]].min\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp183bjdzz\nStarted\n.\nFinished in 0.000388861 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2571.61 tests/s, 7714.84 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if (arr[i+1] - arr[i]) < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpt7bmjl5d\nStarted\n.\nFinished in 0.00041794 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2392.69 tests/s, 7178.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = arr[i+1] - arr[i]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpot1j1lld\nStarted\n.\nFinished in 0.000413148 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2420.44 tests/s, 7261.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # code here\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min\n      min = arr[i] - arr[i - 1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp4hzsz5wa\nStarted\n.\nFinished in 0.000421134 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2374.54 tests/s, 7123.62 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbikyzwb5\nStarted\n.\nFinished in 0.000414096 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2414.90 tests/s, 7244.70 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min\n      min = arr[i] - arr[i - 1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzaf0gcgq\nStarted\n.\nFinished in 0.000507064 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1972.14 tests/s, 5916.41 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmprnqqld4j\nStarted\n.\nFinished in 0.000401479 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2490.79 tests/s, 7472.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp4vu0c8a\nStarted\n.\nFinished in 0.000408165 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2449.99 tests/s, 7349.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz0s4tgci\nStarted\n.\nFinished in 0.000457598 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2185.32 tests/s, 6555.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqyh5yedw\nStarted\n.\nFinished in 0.000402287 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2485.79 tests/s, 7457.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min\n      min = arr[i] - arr[i - 1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzaf0gcgq\nStarted\n.\nFinished in 0.000507064 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1972.14 tests/s, 5916.41 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1...n).each do |i|\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdo9q3nzd\nStarted\n.\nFinished in 0.000561067 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1782.32 tests/s, 5346.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  # Sort the array in ascending order\n  arr.sort!\n  # Initialize difference as infinite\n  diff = 10**9\n  # Find the min diff by comparing adjacent\n  # pairs in sorted array\n  (0...n-1).each do |i|\n    diff = [diff, arr[i+1]-arr[i]].min\n  end\n  diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp3450ig9a\nStarted\n.\nFinished in 0.000412517 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2424.14 tests/s, 7272.43 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "Loaded suite /tmp/tmpir2gnbi0\nStarted\nE\n===============================================================================\nError: test_find_min_diff(TestHumanEval):\n  NoMethodError: undefined method `-' for nil:NilClass\n  \n      if arr[i+1] - arr[i] < min\n                  ^\n/tmp/tmpir2gnbi0.rb:6:in `block in find_min_diff'\n/tmp/tmpir2gnbi0.rb:5:in `each'\n/tmp/tmpir2gnbi0.rb:5:in `find_min_diff'\n/tmp/tmpir2gnbi0.rb:16:in `call'\n/tmp/tmpir2gnbi0.rb:16:in `test_find_min_diff'\n     13: class TestHumanEval < Test::Unit::TestCase\n     14:   def test_find_min_diff\n     15:     candidate = method(:find_min_diff)\n  => 16:     assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n     17:     assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n     18:     assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n     19:   end\n===============================================================================\n\nFinished in 0.001842121 seconds.\n-------------------------------------------------------------------------------\n1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n542.85 tests/s, 0.00 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpqyh5yedw\nStarted\n.\nFinished in 0.000402287 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2485.79 tests/s, 7457.36 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  (1...n).each do |i|\n    min = [min, arr[i] - arr[i - 1]].min\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp3y3axz6s\nStarted\n.\nFinished in 0.000410407 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2436.61 tests/s, 7309.82 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpe51nh5o_\nStarted\n.\nFinished in 0.000640206 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1562.00 tests/s, 4685.99 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1...n).each do |i|\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdo9q3nzd\nStarted\n.\nFinished in 0.000561067 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1782.32 tests/s, 5346.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    diff = arr[i] - arr[i - 1]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6kwjjaaz\nStarted\n.\nFinished in 0.000409374 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2442.75 tests/s, 7328.26 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = arr[i+1] - arr[i]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiirrgeq7\nStarted\n.\nFinished in 0.000403497 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2478.33 tests/s, 7435.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "Loaded suite /tmp/tmpvw_m_riv\nStarted\nE\n===============================================================================\nError: test_find_min_diff(TestHumanEval):\n  NoMethodError: undefined method `-' for nil:NilClass\n  \n      if arr[i+1] - arr[i] < min_diff\n                  ^\n/tmp/tmpvw_m_riv.rb:6:in `block in find_min_diff'\n/tmp/tmpvw_m_riv.rb:5:in `each'\n/tmp/tmpvw_m_riv.rb:5:in `find_min_diff'\n/tmp/tmpvw_m_riv.rb:16:in `call'\n/tmp/tmpvw_m_riv.rb:16:in `test_find_min_diff'\n     13: class TestHumanEval < Test::Unit::TestCase\n     14:   def test_find_min_diff\n     15:     candidate = method(:find_min_diff)\n  => 16:     assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n     17:     assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n     18:     assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n     19:   end\n===============================================================================\n\nFinished in 0.001825438 seconds.\n-------------------------------------------------------------------------------\n1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n547.81 tests/s, 0.00 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpwxaxkimx\nStarted\n.\nFinished in 0.000454008 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2202.60 tests/s, 6607.81 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmprnqqld4j\nStarted\n.\nFinished in 0.000401479 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2490.79 tests/s, 7472.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min\n      min = arr[i] - arr[i - 1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzaf0gcgq\nStarted\n.\nFinished in 0.000507064 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1972.14 tests/s, 5916.41 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  return min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmprnqqld4j\nStarted\n.\nFinished in 0.000401479 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2490.79 tests/s, 7472.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min\n      min = arr[i] - arr[i-1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp4vu0c8a\nStarted\n.\nFinished in 0.000408165 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2449.99 tests/s, 7349.97 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i - 1]) < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpjeb6b_bo\nStarted\n.\nFinished in 0.000412922 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2421.76 tests/s, 7265.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min\n      min = arr[i] - arr[i - 1]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzaf0gcgq\nStarted\n.\nFinished in 0.000507064 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1972.14 tests/s, 5916.41 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp75z_9w4i\nStarted\n.\nFinished in 0.00040526 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2467.55 tests/s, 7402.66 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    diff = arr[i+1] - arr[i]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiirrgeq7\nStarted\n.\nFinished in 0.000403497 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2478.33 tests/s, 7435.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp1u3r7s4n\nStarted\n.\nFinished in 0.000408571 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2447.56 tests/s, 7342.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    if (arr[i] - arr[i-1]) < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpocqn0leo\nStarted\n.\nFinished in 0.000414513 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2412.47 tests/s, 7237.41 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1..n-1\n    if arr[i] - arr[i-1] < min_diff\n      min_diff = arr[i] - arr[i-1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpecqh7hc8\nStarted\n.\nFinished in 0.000407256 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2455.46 tests/s, 7366.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n\n    diff = arr[i] - arr[i - 1]\n    if diff < min_diff\n      min_diff = diff\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123190,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6kwjjaaz\nStarted\n.\nFinished in 0.000409374 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2442.75 tests/s, 7328.26 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min\n      min = arr[i+1] - arr[i]\n    end\n  end\n  min\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510249,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpq_ucpspw\nStarted\n.\nFinished in 0.000407718 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2452.68 tests/s, 7358.03 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  (1...n).each do |i|\n    if arr[i] - arr[i - 1] < min_diff\n      min_diff = arr[i] - arr[i - 1]\n    end\n  end\n  min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1665510250,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdo9q3nzd\nStarted\n.\nFinished in 0.000561067 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1782.32 tests/s, 5346.95 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/\ndef find_min_diff(arr, n)\n  arr.sort!\n  min_diff = arr[1] - arr[0]\n  for i in 1...n-1\n    if arr[i+1] - arr[i] < min_diff\n      min_diff = arr[i+1] - arr[i]\n    end\n  end\n  return min_diff\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_find_min_diff\n    candidate = method(:find_min_diff)\n    assert_equal(1, candidate.call([1, 5, 3, 19, 18, 25], 6))\n    assert_equal(1, candidate.call([4, 3, 2, 6], 4))\n    assert_equal(4, candidate.call([30, 5, 20, 9], 4))\n  end\nend\n",
      "timestamp": 1666123189,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpwxaxkimx\nStarted\n.\nFinished in 0.000454008 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2202.60 tests/s, 6607.81 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
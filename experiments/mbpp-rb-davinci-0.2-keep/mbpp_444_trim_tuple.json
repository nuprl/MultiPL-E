{
  "name": "mbpp_444_trim_tuple",
  "language": "rb",
  "prompt": "# Write a function to trim each tuple by k in the given tuple list.\ndef trim_tuple(test_list, k)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_444_trim_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_trim_tuple\n    candidate = method(:trim_tuple)\n    assert_equal(\"[(2,), (9,), (2,), (2,)]\", candidate.call([[5, 3, 2, 1, 4], [3, 4, 9, 2, 1], [9, 1, 2, 3, 5], [4, 8, 2, 1, 7]], 2))\n    assert_equal(\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\", candidate.call([[5, 3, 2, 1, 4], [3, 4, 9, 2, 1], [9, 1, 2, 3, 5], [4, 8, 2, 1, 7]], 1))\n    assert_equal(\"[(8, 4), (8, 12), (1, 7), (6, 9)]\", candidate.call([[7, 8, 4, 9], [11, 8, 12, 4], [4, 1, 7, 8], [3, 6, 9, 7]], 1))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "    test_list.map { |x| x.slice(0...k) }\nend",
    "    test_list.map { |x| x[0..k-1] }\nend",
    "  test_list.map { |x| x[0..k - 1] }\nend",
    "  test_list.map { |tuple| tuple[0..k-1] }\nend",
    "    test_list.map { |x| x.slice(0, k) }\nend",
    "  test_list.map { |x| x[0..k - 1] }\nend",
    "  test_list.map { |x| x[0..k-1] }\nend",
    "  test_list.map { |tuple| tuple[0..k-1] }\nend",
    "  test_list.map { |x| x[0..k - 1] }\nend",
    "    test_list.map { |x| x[0..k-1] }\nend",
    "  test_list.map { |tuple| tuple.map { |x| x - k } }\nend",
    "  test_list.map { |elem| elem[0..k-1] }\nend",
    "    test_list.map{|i| i.slice(0, k)}\nend",
    "    return test_list.map { |x| x[0..k-1] + x[k+1..-1] }\nend",
    "  test_list.map { |tuple| tuple[0..k] }\nend",
    "",
    "  test_list.map { |tuple| tuple.map { |elem| elem - k } }\nend",
    "  test_list.map { |x| x[0..k-1] }\nend",
    "    test_list.map { |tuple| tuple.map { |elem| elem - k } }\nend",
    "  test_list.map { |tuple| tuple.slice(0, k) }\nend"
  ]
}
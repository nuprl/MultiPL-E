{
  "name": "mbpp_557_toggle_string",
  "language": "rb",
  "prompt": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_557_toggle_string.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpu3il24zn\nStarted\n.\nFinished in 0.000667125 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1498.97 tests/s, 4496.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  toggled_string = \"\"\n  string.each_char do |char|\n    if char == char.upcase\n      toggled_string << char.downcase\n    else\n      toggled_string << char.upcase\n    end\n  end\n  toggled_string\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpysjq84vo\nStarted\n.\nFinished in 0.000383864 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2605.09 tests/s, 7815.27 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.chars.map { |char| char.match(/[a-z]/) ? char.upcase : char.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpy064qqfd\nStarted\n.\nFinished in 0.000374331 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2671.43 tests/s, 8014.30 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n\tstring.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2nd9da7r\nStarted\n.\nFinished in 0.000373807 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2675.18 tests/s, 8025.53 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.chars.map { |char| char =~ /[a-z]/ ? char.upcase : char.downcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmppues0geh\nStarted\n.\nFinished in 0.000417944 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2392.67 tests/s, 7178.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  toggled_string = \"\"\n  string.each_char do |char|\n    if char =~ /[a-z]/\n      toggled_string << char.upcase\n    elsif char =~ /[A-Z]/\n      toggled_string << char.downcase\n    else\n      toggled_string << char\n    end\n  end\n  toggled_string\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1666123855,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkhvwnig1\nStarted\n.\nFinished in 0.000391451 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2554.60 tests/s, 7663.79 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpu3il24zn\nStarted\n.\nFinished in 0.000667125 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1498.97 tests/s, 4496.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase }.join\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1666123854,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpu3il24zn\nStarted\n.\nFinished in 0.000667125 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1498.97 tests/s, 4496.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n  string.swapcase\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbny__7_d\nStarted\n.\nFinished in 0.000363766 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2749.02 tests/s, 8247.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
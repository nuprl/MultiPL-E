{
  "name": "mbpp_108_merge_sorted_list",
  "language": "rb",
  "prompt": "# Write a function to merge three lists into a single sorted list.\ndef merge_sorted_list(num1, num2, num3)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_108_merge_sorted_list.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_merge_sorted_list\n    candidate = method(:merge_sorted_list)\n    assert_equal([4, 5, 11, 15, 19, 20, 24, 24, 25, 25, 26, 29, 48, 54, 56, 110, 154, 233], candidate.call([25, 24, 15, 4, 5, 29, 110], [19, 20, 11, 56, 25, 233, 154], [24, 26, 54, 48]))\n    assert_equal([1, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 11, 12], candidate.call([1, 3, 5, 6, 8, 9], [2, 5, 7, 11], [1, 4, 7, 8, 12]))\n    assert_equal([1, 2, 3, 4, 7, 8, 9, 9, 9, 10, 12, 14, 14, 18, 22, 25, 25, 35, 41, 50, 58, 61, 65, 74, 75, 85], candidate.call([18, 14, 10, 9, 8, 7, 9, 3, 2, 4, 1], [25, 35, 22, 85, 14, 65, 75, 25, 58], [12, 74, 9, 50, 61, 41]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  nums = [num1, num2, num3]\n  nums.flatten!\n  nums.sort!\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1 = num1.sort\n  num2 = num2.sort\n  num3 = num3.sort\n  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  # num1.concat(num2).concat(num3).sort\n  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  sorted_list = []\n  sorted_list << num1 << num2 << num3\n  sorted_list.flatten!.sort!\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  nums = []\n  nums << num1 << num2 << num3\n  nums.flatten.sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1 = num1.sort\n  num2 = num2.sort\n  num3 = num3.sort\n  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  # num1.concat(num2).concat(num3).sort\n  # num1.concat(num2).concat(num3).sort_by { |num| num }\n  # num1.concat(num2).concat(num3).sort_by(&:to_i)\n  # num1.concat(num2).concat(num3).sort_by(&:to_f)\n  # num1.concat(num2).concat(num3).sort_by(&:to_r)\n  # num1.concat(num2).concat(num3).sort_by(&:to_c)\n  # num1.concat(num2).concat(num3).sort_by(&:to_s)\n  # num1.concat(num2).concat(num3).sort_by(&:to_sym)\n  # num1.concat(num2).concat(num3).sort_by(&:to_a)\n  # num1.concat(num2).concat(num3).sort_by(&:to_h)\n  # num1.concat(num2).concat(num3).sort_by(&:to_proc)\n  # num1.concat(num2).concat(num3).sort_by(&:to_regexp)\n  # num1.concat(num2).concat(num3).sort_by(&:to_hash)\n  # num1.concat(num2).concat(num3).sort_by(&:to_range)\n  # num1.concat(num2).concat(num3).sort_by(&:to_exception)\n  # num1.concat(num2).concat(num3).sort_by(&:to_time)\n  # num1.concat(num2).concat(num3).sort_by(&:to_date)\n  # num1.concat(num2).concat(num3).sort_by(&:to_datetime)\n  # num1.concat(num2).concat(num3).sort_by(&:to_rational)\n  #",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1 = num1.sort\n  num2 = num2.sort\n  num3 = num3.sort\n  new_list = num1 + num2 + num3\n  new_list.sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num_array = [num1, num2, num3]\n  num_array.flatten!\n  num_array.sort!\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  # num1.concat(num2).concat(num3).sort\n  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num = num1 + num2 + num3\n  num.sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  # num1.concat(num2).concat(num3).sort\n  num1.concat(num2).concat(num3).sort!\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  sorted_list = []\n  sorted_list << num1 << num2 << num3\n  sorted_list.flatten!.sort!\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1 = num1.sort\n  num2 = num2.sort\n  num3 = num3.sort\n  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  nums = [num1, num2, num3]\n  nums.flatten.sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  arr = []\n  arr << num1 << num2 << num3\n  arr.flatten!.sort!\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend",
    "  num1.concat(num2).concat(num3).sort\nend"
  ]
}
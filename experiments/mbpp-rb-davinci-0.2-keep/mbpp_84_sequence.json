{
  "name": "mbpp_84_sequence",
  "language": "rb",
  "prompt": "# Write a function to find the nth number in the newman conway sequence.\ndef sequence(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_84_sequence.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sequence\n    candidate = method(:sequence)\n    assert_equal(6, candidate.call(10))\n    assert_equal(1, candidate.call(2))\n    assert_equal(2, candidate.call(3))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n-1)) + sequence(n-sequence(n-1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n-1)) + sequence(n-sequence(n-1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n - 1)) + sequence(n - sequence(n - 1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n - 1)) + sequence(n - sequence(n - 1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n - 1)) + sequence(n - sequence(n - 1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n-1)) + sequence(n-sequence(n-1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n-1)) + sequence(n-sequence(n-1))\nend",
    "  if n == 1 || n == 2\n    return 1\n  else\n    return sequence(sequence(n - 1)) + sequence(n - sequence(n - 1))\n  end\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n - 1)) + sequence(n - sequence(n - 1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n - 1)) + sequence(n - sequence(n - 1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(n - 1) + sequence(n - sequence(n - 1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n - 1)) + sequence(n - sequence(n - 1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n - 1)) + sequence(n - sequence(n - 1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n - 1)) + sequence(n - sequence(n - 1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n - 1)) + sequence(n - sequence(n - 1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n - 1)) + sequence(n - sequence(n - 1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n - 1)) + sequence(n - sequence(n - 1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n - 1)) + sequence(n - sequence(n - 1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n-1)) + sequence(n-sequence(n-1))\nend",
    "  return 1 if n == 1 || n == 2\n  sequence(sequence(n - 1)) + sequence(n - sequence(n - 1))\nend"
  ]
}
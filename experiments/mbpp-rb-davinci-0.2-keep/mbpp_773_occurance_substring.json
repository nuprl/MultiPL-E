{
  "name": "mbpp_773_occurance_substring",
  "language": "rb",
  "prompt": "# Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\ndef occurance_substring(text, pattern)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_773_occurance_substring.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_occurance_substring\n    candidate = method(:occurance_substring)\n    assert_equal([\"python\", 0, 6], candidate.call(\"python programming, python language\", \"python\"))\n    assert_equal([\"programming\", 7, 18], candidate.call(\"python programming,programming language\", \"programming\"))\n    assert_equal([\"language\", 31, 39], candidate.call(\"python programming,programming language\", \"language\"))\n    assert_equal(nil, candidate.call(\"c++ programming, c++ language\", \"python\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  if text.include?(pattern)\n    puts \"The pattern #{pattern} occurs in the string #{text} at position #{text.index(pattern)}\"\n  else\n    puts \"The pattern #{pattern} does not occur in the string #{text}\"\n  end\nend",
    "  text.scan(/#{pattern}/).size\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.count(pattern) == 0",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true",
    "  if text.include?(pattern)\n    return text.index(pattern)\n  else\n    return nil\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length > 100_000\n  return nil if pattern.length > 100_000",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == pattern.length && text != pattern",
    "  text.scan(/#{pattern}/).size\nend",
    "  if text.include?(pattern)\n    return text.index(pattern)\n  else\n    return nil\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.size < pattern.size\n  return nil if pattern.size == 0\n  return nil if text.size == 0",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  if text.include?(pattern)\n    puts \"The pattern #{pattern} is found in the text #{text} at position #{text.index(pattern)}\"\n  else\n    puts \"The pattern #{pattern} is not found in the text #{text}\"\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.length < pattern.length\n  return nil if pattern.length == 0",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil unless text.include?(pattern)\n  text.scan(/#{pattern}/).size\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil unless text.include?(pattern)\n  text.split(pattern).map.with_index { |_, i| i }.map { |i| i * (pattern.length + 1) }\nend",
    "  if text.include?(pattern)\n    return text.index(pattern)\n  else\n    return nil\n  end\nend",
    "  text.scan(/#{pattern}/).size\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.length < pattern.length\n  return nil if text.length == 0 || pattern.length == 0\n  return nil if text.nil? || pattern.nil?\n  return nil if text.class != String || pattern.class != String\n  return nil if text.include?(\" \") || pattern.include?(\" \")\n  return nil if text.include?(\"\\n\") || pattern.include?(\"\\n\")\n  return nil if text.include?(\"\\t\") || pattern.include?(\"\\t\")\n  return nil if text.include?(\"\\r\") || pattern.include?(\"\\r\")\n  return nil if text.include?(\"\\v\") || pattern.include?(\"\\v\")\n  return nil if text.include?(\"\\f\") || pattern.include?(\"\\f\")\n  return nil if text.include?(\"\\b\") || pattern.include?(\"\\b\")\n  return nil if text.include?(\"\\a\") || pattern.include?(\"\\a\")\n  return nil if text.include?(\"\\e\") || pattern.include?(\"\\e\")\n  return nil if text.include?(\"\\s\") || pattern.include?(\"\\s\")\n  return nil if text.include?(\"\\0\") || pattern.include?(\"\\0\")\n  return nil if text.include?(\"\\x0\") || pattern.include?(\"\\x0\")\n  return nil if text.include?(\"\\x1\") || pattern.include?(\"\\x1\")\n  return nil if text.include?(\"\\x2\") || pattern.include?(\"\\x2\")\n  return nil if text.include?(\"\\x3\") || pattern.include?(\"\\x3\")\n  return nil if text.include?(\"\\x4\") || pattern.include?(\"\\x4\")\n  return nil if text.include?(\"\\x5\") || pattern.include?(\"\\x5\")\n  return nil if text.include?(\"\\x6\") || pattern.include?(\"\\x6\")\n  return nil if text.include?(\"\\x7\") || pattern.include?(\"\\x7\")\n  return nil if text.include?(\"\\x8\") || pattern.include?(\"\\x",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if pattern.length == 1",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  text.scan(/#{pattern}/).size\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) == nil",
    "  if text.include?(pattern)\n    return text.index(pattern)\n  else\n    return nil\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  if text.include?(pattern)\n    puts \"The pattern #{pattern} occurs at position #{text.index(pattern)}\"\n  else\n    puts \"The pattern #{pattern} does not occur in the text\"\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.include?(pattern) == false\n  text.index(pattern)\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  text.scan(/#{pattern}/).size\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?",
    "  if text.include?(pattern)\n    return text.index(pattern)\n  else\n    return nil\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  text.scan(/#{pattern}/).size\nend",
    "  text.scan(/#{pattern}/i).size\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == 1 && pattern.length == 1 && text != pattern\n  return nil if pattern.length == 1 && text.length > 1 && !text.include?(pattern)\n  return nil if pattern.length > 1 && !text.include?(pattern)",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil unless text.include?(pattern)\n  text.scan(/#{pattern}/).count\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if pattern.length == 1 && text.length == 1 && text[0] != pattern[0]\n  return nil if pattern.length == 1 && text.length > 1 && !text.include?(pattern[0])\n  return nil if pattern.length > 1 && !text.include?(pattern)\n  return nil if pattern.length > 1 && text.include?(pattern) && text.index(pattern) == nil\n  return nil if pattern.length > 1 && text.include?(pattern) && text.index(pattern) != nil && text.index(pattern) == 0 && text[0] != pattern[0]\n  return nil if pattern.length > 1 && text.include?(pattern) && text.index(pattern) != nil && text.index(pattern) > 0 && text[text.index(pattern) - 1] != pattern[0]\n  return nil if pattern.length > 1 && text.include?(pattern) && text.index(pattern) != nil && text.index(pattern) > 0 && text[text.index(pattern) - 1] == pattern[0] && text[text.index(pattern) - 1] == pattern[0] && text[text.index(pattern) + pattern.length - 1] != pattern[pattern.length - 1]\n  return nil if pattern.length > 1 && text.include?(pattern) && text.index(pattern) != nil && text.index(pattern) > 0 && text[text.index(pattern) - 1] == pattern[0] && text[text.index(pattern) - 1] == pattern[0] && text[text.index(pattern) + pattern.length - 1] == pattern[pattern.length - 1] && text[text.index(pattern) + pattern.length] != pattern[0]\n  return nil if pattern.length > 1 && text.include?(pattern) && text.index(pattern) != nil && text.index(pattern) > 0 && text[text.index(pattern) - 1] == pattern[0] && text[text.index(pattern) - 1]",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if pattern.length == 1 && text.length == 1 && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == 1 && pattern.length == 1 && text != pattern",
    "  # Write your code here\n  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.size < pattern.size\n  return nil if text.size == pattern.size && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length",
    "  if text.include?(pattern)\n    return text.index(pattern)\n  else\n    return nil\n  end\nend",
    "  # Write your code here\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) == nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length / 2\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length / 2 && text.index(pattern) == text.length / 2 - 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length / 2 && text.index(pattern) == text.length / 2 - 1 && text.index(pattern) == text.length / 2",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true",
    "  # TODO: implement this method\n  return nil if text.nil? || text.empty? || pattern.nil? || pattern.empty?\n  text.scan(/#{pattern}/).size\nend",
    "  if text.include?(pattern)\n    return text.index(pattern)\n  else\n    return nil\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.length < pattern.length\n  return nil if text.length == 0 || pattern.length == 0\n  return nil if text.nil? || pattern.nil?\n  return nil if text.class != String || pattern.class != String\n  return nil if text.empty? || pattern.empty?\n  return nil if text.include?(pattern) == false\n  return nil if text.count(pattern) == 0\n  return nil if text.count(pattern) == 1 && text.index(pattern) == nil\n  return nil if text.count(pattern) == 1 && text.index(pattern) == 0\n  return nil if text.count(pattern) == 1 && text.index(pattern) == text.length - 1\n  return nil if text.count(pattern) == 1 && text.index(pattern) == text.length - 2\n  return nil if text.count(pattern) == 1 && text.index(pattern) == text.length - 3\n  return nil if text.count(pattern) == 1 && text.index(pattern) == text.length - 4\n  return nil if text.count(pattern) == 1 && text.index(pattern) == text.length - 5\n  return nil if text.count(pattern) == 1 && text.index(pattern) == text.length - 6\n  return nil if text.count(pattern) == 1 && text.index(pattern) == text.length - 7\n  return nil if text.count(pattern) == 1 && text.index(pattern) == text.length - 8\n  return nil if text.count(pattern) == 1 && text.index(pattern) == text.length - 9\n  return nil if text.count(pattern) == 1 && text.index(pattern) == text.length - 10\n  return nil if text.count(pattern) == 1 && text.index(pattern) == text.length - 11\n  return nil if text.count(pattern) == 1 && text.index(pattern) == text.length - 12\n  return nil if text.count(pattern) == 1 && text.index(pattern) == text.length - 13\n  return nil if text.count(pattern) == 1 && text.index(pattern) == text.length - 14\n  return nil if",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil unless text.include?(pattern)\n  text.split(pattern).length - 1\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.size < pattern.size\n  return nil if text.size == pattern.size && text != pattern\n  return nil if text.size == pattern.size && text == pattern\n  return nil if text.size > pattern.size && text.include?(pattern) == false\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true\n  return nil if text.size > pattern.size && text.include?(pattern) == true",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  if text.include?(pattern)\n    puts \"The pattern #{pattern} is found in the text #{text} at position #{text.index(pattern)}\"\n  else\n    puts \"No match found\"\n  end\nend",
    "  if text.include?(pattern)\n    puts \"The pattern #{pattern} occurs in the text at position #{text.index(pattern)}\"\n  else\n    puts \"There is no match\"\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if !text.include?(pattern)",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if pattern.length == 1",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?",
    "  # Write your code here\n  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil unless text.include?(pattern)\n  text.scan(/#{pattern}/).count\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  # TODO: Write your code here\n  return nil if text.nil? || pattern.nil? || text.empty? || pattern.empty?",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.size < pattern.size\n  return nil if text.size == pattern.size && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil unless text.include?(pattern)\n  text.scan(/#{pattern}/).size\nend",
    "  return nil unless text.include?(pattern)\n  text.scan(pattern).size\nend",
    "  if text.include?(pattern)\n    return text.index(pattern)\n  else\n    return nil\n  end\nend",
    "  if text.include?(pattern)\n    puts \"The pattern #{pattern} occurs in the text #{text} at position #{text.index(pattern)}\"\n  else\n    puts \"The pattern #{pattern} does not occur in the text #{text}\"\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) == nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length / 2\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length / 2 && text.index(pattern) == text.length / 2 + 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length / 2 && text.index(pattern) == text.length / 2 + 1 && text.index(pattern) == text.length / 2",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  if text.include?(pattern)\n    text.index(pattern)\n  else\n    nil\n  end\nend",
    "  text.scan(/#{pattern}/).size\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if !text.is_a?(String) || !pattern.is_a?(String)",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) == nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 1\n  return nil",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  if text.include?(pattern)\n    puts \"The pattern #{pattern} is found in the text #{text} at position #{text.index(pattern)}\"\n  else\n    puts \"No match found\"\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if pattern.length == 1",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length < 1 || pattern.length < 1",
    "  return nil if text.length < pattern.length\n  return nil if text.length == 0 || pattern.length == 0\n  return nil if text.nil? || pattern.nil?\n  return nil if text.class != String || pattern.class != String\n  return nil if text.empty? || pattern.empty?\n  return nil if text.include?(pattern) == false\n  return nil if text.include?(pattern) == true\n  return nil if text.include?(pattern) == nil\n  return nil if text.include?(pattern) == 0\n  return nil if text.include?(pattern) == 1\n  return nil if text.include?(pattern) == 2\n  return nil if text.include?(pattern) == 3\n  return nil if text.include?(pattern) == 4\n  return nil if text.include?(pattern) == 5\n  return nil if text.include?(pattern) == 6\n  return nil if text.include?(pattern) == 7\n  return nil if text.include?(pattern) == 8\n  return nil if text.include?(pattern) == 9\n  return nil if text.include?(pattern) == 10\n  return nil if text.include?(pattern) == 11\n  return nil if text.include?(pattern) == 12\n  return nil if text.include?(pattern) == 13\n  return nil if text.include?(pattern) == 14\n  return nil if text.include?(pattern) == 15\n  return nil if text.include?(pattern) == 16\n  return nil if text.include?(pattern) == 17\n  return nil if text.include?(pattern) == 18\n  return nil if text.include?(pattern) == 19\n  return nil if text.include?(pattern) == 20\n  return nil if text.include?(pattern) == 21\n  return nil if text.include?(pattern) == 22\n  return nil if text.include?(pattern) == 23\n  return nil if text.include?(pattern) == 24\n  return nil if text.include?(pattern) == 25\n  return nil if text.include?(pattern) == 26\n  return nil if text.include?(pattern) == 27\n  return nil if text",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  # Write your code here\n  if text.include?(pattern)\n    return text.index(pattern)\n  else\n    return nil\n  end\nend",
    "  # TODO: implement this method\n  if text.include?(pattern)\n    return text.index(pattern)\n  else\n    return nil\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.length < pattern.length\n  return nil if pattern.length == 0\n  return nil if text.length == 0",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  # Write your code here\n  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  if text.include?(pattern)\n    text.scan(/#{pattern}/).count\n  else\n    nil\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?",
    "  if text.include?(pattern)\n    puts \"The pattern #{pattern} occurs in the text #{text} at position #{text.index(pattern)}\"\n  else\n    puts \"The pattern #{pattern} does not occur in the text #{text}\"\n  end\nend",
    "  return text.scan(/#{pattern}/).length\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  # Write your code here\n  return nil if text.nil? || text.empty? || pattern.nil? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.count(pattern) == 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.count(pattern) > 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.count(pattern) > 1 && text.index(pattern) == 0\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.count(pattern) > 1 && text.index(pattern) > 0\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.count(pattern) > 1 && text.index(pattern) > 0 && text.index(pattern) == text.length - pattern.length\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.count(pattern) > 1 && text.index(pattern) > 0 && text.index(pattern) != text.length - pattern.length\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.count(pattern) > 1 && text.index(pattern) > 0 && text.index(pattern) != text.length - pattern.length && text.index(pattern) == text.rindex(pattern)\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.count(pattern) > 1 && text.index(pattern) > 0 && text.index(pattern) != text.length - pattern.length && text.index(pattern) != text.rindex(pattern)\n",
    "  if text.include?(pattern)\n    return text.index(pattern)\n  else\n    return nil\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if pattern.length == 1",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) == nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length / 2\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length / 2 && text.index(pattern) == text.length / 2 + 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length / 2 && text.index(pattern) == text.length / 2 + 1 && text.index(pattern) == text.length / 2",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length",
    "  text.scan(/#{pattern}/).size\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  if text.include?(pattern)\n    puts \"The pattern #{pattern} is in the text #{text} at position #{text.index(pattern)}\"\n  else\n    puts \"The pattern #{pattern} is not in the text #{text}\"\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  if text.include?(pattern)\n    puts \"The pattern #{pattern} occurs in the text #{text} at position #{text.index(pattern)}\"\n  else\n    puts \"The pattern #{pattern} does not occur in the text #{text}\"\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.length < pattern.length\n  return nil if text.length == 0 || pattern.length == 0\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) == nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 2\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 2 && text.index(pattern) == text.length - 3\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 2 && text.index(pattern) == text.length - 3 && text.index(pattern) == text.length - 4\n ",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  if text.include?(pattern)\n    return text.index(pattern)\n  else\n    return nil\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  if text.include?(pattern)\n    puts \"The pattern #{pattern} occurs in the text #{text} at position #{text.index(pattern)}\"\n  else\n    puts \"The pattern #{pattern} does not occur in the text #{text}\"\n  end\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if pattern.length == 1 && text.length == 1 && text != pattern\n  return nil if pattern.length == 1 && text.length == 1 && text == pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) == nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern, text.index(pattern) + 1) == nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern, text.index(pattern) + 1) != nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern, text.index(pattern) + 1) != nil && text.index(pattern, text.index(pattern) + 1) == text.index(pattern) + 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern, text.index(pattern) + 1) != nil && text.index(pattern, text.index(pattern) + 1) != text.index(pattern) + 1\n  return nil if text.length > pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  # your code here\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if pattern.length > text.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if !text.is_a?(String) || !pattern.is_a?(String)",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length > pattern.length && !text.include?(pattern)",
    "  # Write your code here\n  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern",
    "  # Write your code here\n  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false\n  return nil if text.length > pattern.length && text.include?(pattern) == true\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) == nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 2\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 2 && text.index(pattern) == text.length - 3\n  return nil if text.length > pattern.length && text.include?(pattern) == true && text.index(pattern) != nil && text.index(pattern) == 0 && text.index(pattern) == text.length - 1 && text.index(pattern) == text.length - 2 && text.index(pattern) == text.length - 3 && text.index(pattern) == text.",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.length < pattern.length\n  return nil if text.length == 0 || pattern.length == 0\n  return nil if text.nil? || pattern.nil?\n  return nil if text.class != String || pattern.class != String\n  return nil if text.empty? || pattern.empty?\n  return nil if text.strip.empty? || pattern.strip.empty?\n  return nil if text.strip.nil? || pattern.strip.nil?\n  return nil if text.strip.class != String || pattern.strip.class != String\n  return nil if text.strip.length == 0 || pattern.strip.length == 0\n  return nil if text.strip.length < pattern.strip.length\n  return nil if text.strip.length == pattern.strip.length && text.strip != pattern.strip\n  return nil if text.strip.length > pattern.strip.length && !text.strip.include?(pattern.strip)\n  return nil if text.strip.length > pattern.strip.length && text.strip.include?(pattern.strip) && text.strip.count(pattern.strip) == 1\n  return nil if text.strip.length > pattern.strip.length && text.strip.include?(pattern.strip) && text.strip.count(pattern.strip) > 1 && text.strip.index(pattern.strip) == text.strip.rindex(pattern.strip)\n  return nil if text.strip.length > pattern.strip.length && text.strip.include?(pattern.strip) && text.strip.count(pattern.strip) > 1 && text.strip.index(pattern.strip) != text.strip.rindex(pattern.strip) && text.strip.index(pattern.strip) == text.strip.rindex(pattern.strip) - pattern.strip.length + 1\n  return nil if text.strip.length > pattern.strip.length && text.strip.include?(pattern.strip) && text.strip.count(pattern.strip) > 1 && text.strip.index(pattern.strip) != text.strip.rindex(pattern.strip) && text.strip.index(pattern.strip) != text.strip.rindex(pattern.strip) - pattern.strip.length + 1",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.length < pattern.length",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.length < pattern.length\n  return nil if text.scan(pattern).empty?\n  text.scan(pattern).map { |x| text.index(x) }\nend",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern\n  return nil if text.length == pattern.length && text == pattern\n  return nil if text.length > pattern.length && text.include?(pattern) == false",
    "  return nil if text.nil? || pattern.nil?\n  return nil if text.empty? || pattern.empty?\n  return nil if text.length < pattern.length\n  return nil if text.length == pattern.length && text != pattern"
  ]
}
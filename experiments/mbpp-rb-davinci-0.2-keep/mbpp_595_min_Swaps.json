{
  "name": "mbpp_595_min_Swaps",
  "language": "rb",
  "prompt": "# Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.\ndef min_Swaps(str1, str2)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_595_min_Swaps.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_min_Swaps\n    candidate = method(:min_Swaps)\n    assert_equal(1, candidate.call(\"1101\", \"1110\"))\n    assert_equal(\"Not Possible\", candidate.call(\"111\", \"000\"))\n    assert_equal(\"Not Possible\", candidate.call(\"111\", \"110\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  count = 0\n  for i in 0..str1.length-1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0111\")",
    "  count = 0\n  for i in 0..str1.length-1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count/2\nend\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"10011\", \"11100\")",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend\nputs min_Swaps(\"11001\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps(\"11\", \"11\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps(\"11000\", \"00111\")",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "  count = 0\n  str1.each_char.with_index do |char, index|\n    if char != str2[index]\n      count += 1\n    end\n  end\n  return count / 2\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"100\", \"001\")\nputs min_Swaps(\"10101\", \"10101\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps(\"11000\", \"00111\")",
    "  count = 0\n  str1.each_char.with_index do |char, index|\n    if char != str2[index]\n      count += 1\n    end\n  end\n  return count\nend\nputs min_Swaps(\"11100\", \"11100\")\nputs min_Swaps(\"11100\", \"01000\")\nputs min_Swaps(\"11100\", \"11111\")\nputs min_Swaps(\"11100\", \"00000\")",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0110\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"1011\")\nputs min_Swaps(\"1101\", \"1101\")",
    "  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char != str2[index]\n  end\n  count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0101\")",
    "    count = 0\n    str1.each_char.with_index do |char, i|\n        if char != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    str1.each_char.with_index do |char, index|\n        if char != str2[index]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11001\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps(\"11001\", \"01111\")\nputs min_Swaps(\"10011\", \"11100\")\nputs min_Swaps(\"11100\", \"10011\")\nputs min_Swaps(\"11100\", \"11100\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps
    "    count = 0\n    for i in 0..str1.length - 1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend",
    "\tcount = 0\n\tfor i in 0...str1.length\n\t\tif str1[i] != str2[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "    count = 0\n    for i in 0..(str1.length - 1)\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count / 2\nend\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"11100\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"11010101\", \"01010101\")\nputs min_Swaps(\"110101",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend",
    "  count = 0\n  i = 0\n  while i < str1.length\n    if str1[i] != str2[i]\n      count += 1\n    end\n    i += 1\n  end\n  return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1011\", \"0100\")\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"10011\", \"10100\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")",
    "  count = 0\n  for i in 0...str1.length\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "    count = 0\n    str1.each_char.with_index do |c, i|\n        if c != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps(\"1110010101100110110100010101011111101010010100101011101101010101\", \"10101010101101011010101010101101010101010110101101010101010101010\")",
    "    count = 0\n    str1.each_char.with_index do |char, index|\n        if char != str2[index]\n            count += 1\n        end\n    end\n    return count\nend",
    "    if str1.length != str2.length\n        return -1\n    end\n    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0110\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"1111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "  # Write your code here\n  count = 0\n  for i in 0..str1.length-1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count/2\nend",
    "  # Write your code here\n  count = 0\n  str1.each_char.with_index do |char, index|\n    if char != str2[index]\n      count += 1\n    end\n  end\n  count / 2\nend",
    "    count = 0\n    if str1.length == str2.length\n        for i in 0..str1.length\n            if str1[i] != str2[i]\n                count += 1\n            end\n        end\n        return count/2\n    else\n        return -1\n    end\nend\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nputs min_Swaps(\"110101\", \"110101\")\nput",
    "    if str1.length != str2.length\n        return -1\n    end\n    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps(\"11000\", \"00111\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11001\", \"11100\")",
    "    count = 0\n    str1.each_char.with_index do |char, index|\n        if char != str2[index]\n            count += 1\n        end\n    end\n    return count\nend",
    "  count = 0\n  str1.each_char.with_index do |char, index|\n    count += 1 if char != str2[index]\n  end\n  count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"1110\")\nputs min_Swaps(\"1101\", \"0110\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"1101\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"11001\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11001\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps(\"11\", \"11\")\nputs min_Swaps(\"000\", \"111\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"11100\")",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "  count = 0\n  for i in 0..str1.length-1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "    if str1.length != str2.length\n        return -1\n    end\n    count = 0\n    for i in 0..str1.length - 1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "  count = 0\n  for i in 0..str1.length\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  str1.each_char.with_index do |char, index|\n    if char != str2[index]\n      count += 1\n    end\n  end\n  return count / 2\nend",
    "    count = 0\n    str1.each_char.with_index do |char, index|\n        if char != str2[index]\n            count += 1\n        end\n    end\n    return count\nend",
    "  count = 0\n  for i in 0...str1.length\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps
    "  str1 = str1.split('')\n  str2 = str2.split('')\n  count = 0\n  for i in 0..str1.length-1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count/2\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"100\", \"001\")\nputs min_Swaps(\"10101\", \"11100\")\nputs min_Swaps(\"000\", \"111\")",
    "  count = 0\n  for i in 0..str1.length\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "\tcount = 0\n\tfor i in 0..str1.length-1\n\t\tif str1[i] != str2[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0101\")",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    str1.each_char.with_index do |char, index|\n        if char != str2[index]\n            count += 1\n        end\n    end\n    return count\nend",
    "  count = 0\n  for i in 0..str1.length-1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"100\", \"001\")\nputs min_Swaps(\"10101\", \"11010\")\nputs min_Swaps(\"000\", \"111\")",
    "  count = 0\n  for i in 0..str1.length-1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"10101\", \"11011\")\nputs min_Swaps(\"11100\", \"01111\")\nputs min_Swaps(\"10011\", \"11001\")",
    "  count = 0\n  for i in 0..str1.length-1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  str1.each_char.with_index do |char, index|\n    if char != str2[index]\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  str1.each_char.with_index do |char, index|\n    if char != str2[index]\n      count += 1\n    end\n  end\n  count / 2\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"10111\", \"11101\")",
    "  count = 0\n  for i in 0..str1.length\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    i = 0\n    while i < str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n        i += 1\n    end\n    return count\nend",
    "    count = 0\n    str1.each_char.with_index do |char, index|\n        if char != str2[index]\n            count += 1\n        end\n    end\n    return count\nend",
    "  count = 0\n  for i in 0..str1.length\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  str1.each_char.with_index do |char, index|\n    if char != str2[index]\n      count += 1\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  str1.each_char.with_index do |char, index|\n    if char != str2[index]\n      count += 1\n    end\n  end\n  return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count / 2\nend\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps(\"111001011\", \"011001011\")",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    str1.each_char.with_index do |char, index|\n        if char != str2[index]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11",
    "  count = 0\n  for i in 0..str1.length-1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps
    "    count = 0\n    str1.each_char.with_index do |char, index|\n        if char != str2[index]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"10011\", \"11001\")",
    "    # Write your code here\n    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend",
    "\tcount = 0\n\tfor i in 0..str1.length\n\t\tif str1[i] != str2[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count/2\nend",
    "    # Write your code here\n    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0101\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"1101\",",
    "    count = 0\n    str1.each_char.with_index do |char, index|\n        if char != str2[index]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "  count = 0\n  for i in 0..str1.length - 1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count / 2\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "  count = 0\n  for i in 0..str1.length\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  str1.each_char.with_index do |char, idx|\n    if char != str2[idx]\n      count += 1\n    end\n  end\n  count / 2\nend",
    "  count = 0\n  for i in 0..str1.length-1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  for i in 0..str1.length\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"10011\", \"11100\")\nputs min_Swaps(\"11010101\", \"01010101\")",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"10011\", \"11100\")\nputs min_Swaps(\"1101\", \"0111\")\nputs min_Swaps(\"10011\", \"11100\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend\nputs min_Swaps(\"11101\", \"10101\")\nputs min_Swaps(\"10011\", \"11100\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "  count = 0\n  for i in 0..str1.length-1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count/2\nend",
    "    count = 0\n    str1.each_char.with_index do |char, index|\n        if char != str2[index]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    str1.each_char.with_index do |char, index|\n        if char != str2[index]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"0101\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend",
    "  # write your code here\n  count = 0\n  for i in 0..str1.length-1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count/2\nend",
    "  count = 0\n  str1.each_char.with_index do |char, index|\n    if char != str2[index]\n      count += 1\n    end\n  end\n  return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"11101\", \"11111\")\nputs min_Swaps(\"11101\", \"11011\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length - 1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "  count = 0\n  for i in 0..str1.length\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  for i in 0..str1.length-1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count/2\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"10011\", \"11100\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend",
    "  count = 0\n  str1.each_char.with_index do |char, index|\n    if char != str2[index]\n      count += 1\n    end\n  end\n  return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "  count = 0\n  str1.each_char.with_index do |char, i|\n    count += 1 if char != str2[i]\n  end\n  count / 2\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11001\", \"01101\")\nputs min_Swaps(\"10011\", \"11100\")\nputs min_Swaps(\"11111\", \"11111\")",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"11100\")",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "  count = 0\n  for i in 0..str1.length-1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "\tcount = 0\n\tfor i in 0..str1.length-1\n\t\tif str1[i] != str2[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "  count = 0\n  i = 0\n  while i < str1.length\n    if str1[i] != str2[i]\n      count += 1\n    end\n    i += 1\n  end\n  return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend",
    "    count = 0\n    str1.each_char.with_index do |char, index|\n        if char != str2[index]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps(\"1110010101100110110100010101011111101010010100101\", \"1101110100111010110111010111101100100101010111100\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend",
    "\tcount = 0\n\tfor i in 0..str1.length-1\n\t\tif str1[i] != str2[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    str1.each_char.with_index do |char, index|\n        if char != str2[index]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11001\")",
    "    count = 0\n    str1.each_char.with_index do |char, index|\n        if char != str2[index]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"01100\")\nputs min_Swaps(\"1101\", \"1101\")",
    "\tcount = 0\n\tfor i in 0..str1.length-1\n\t\tif str1[i] != str2[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "    count = 0\n    str1.each_char.with_index do |char, index|\n        if char != str2[index]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend\nputs min_Swaps(\"1101\", \"0101\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"11100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"11100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"11100\")\nputs min_Swaps(\"1101\", \"0101\")\nputs min_Swaps(\"10011\", \"11100\")",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps(\"1110010101100110110100010101011111101010010100101011101\", \"11011101100000010101110111010010011010100110110110010101\")",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps(\"11000\", \"00111\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "  count = 0\n  for i in 0..str1.length\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nstr1 = \"11001\"\nstr2 = \"11111\"\nputs min_Swaps(str1, str2)",
    "  # if str1.length != str2.length\n  #   return -1\n  # end\n  count = 0\n  for i in 0..str1.length-1\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "\tcount = 0\n\tfor i in 0..str1.length-1\n\t\tif str1[i] != str2[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "  count = 0\n  str1.each_char.with_index do |char, index|\n    if char != str2[index]\n      count += 1\n    end\n  end\n  count / 2\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"1101\", \"0111\")",
    "  count = 0\n  for i in 0...str1.length\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  str1.each_char.with_index do |char, i|\n    if char != str2[i]\n      count += 1\n    end\n  end\n  return count / 2\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "\tcount = 0\n\tfor i in 0..str1.length-1\n\t\tif str1[i] != str2[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0...str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11000\")\nputs min_Swaps(\"10011\", \"11100\")\nputs min_Swaps(\"10011\", \"11111\")\nputs min_Swaps(\"10011\", \"11011\")\nputs min_Swaps(\"10011\", \"11010\")\nputs min_Swaps(\"10011\", \"11110\")\nputs min_Swaps(\"10011\", \"11101\")\nputs min_Swaps(\"10011\", \"10111\")\nputs min_Swaps(\"10011\", \"10110\")\nputs min_Swaps(\"10011\", \"11011\")\nputs min_Swaps(\"10011\", \"11100\")\nputs min_Swaps(\"10011\", \"11101\")\nputs min_Swaps(\"10011\", \"11110\")\nputs min_Swaps(\"10011\", \"11111\")\nputs min_Swaps(\"10011\", \"11000\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11010\")\nputs min_Swaps(\"10011\", \"11011\")\nputs min_Swaps(\"10011\", \"11100\")\nputs min_Swaps(\"10011\", \"11101\")\nputs min_Swaps(\"10011\", \"11110\")\nputs min_Swaps(\"10011\", \"11111\")\nputs min_Swaps(\"10011\", \"11000\")\nputs min_Swaps(\"10011\", \"11001\")\nputs min_Swaps(\"10011\", \"11010\")\nputs min_Swaps(\"10011\", \"11011\")\nputs min_Swaps(\"10011\", \"11100\")\nputs min_Swaps(\"10011\", \"11101\")\nputs min_Swaps(\"10011\", \"11110\")\nputs min_Swaps(\"10011\", \"11111\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11101\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps(\"11100101011001101101000101010111111010140100101111100110001011011110110111001111101011011110101010101\", \"10101010110110110110110110101101111111110111110101111110110101010111111111111111010101111010101010101\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11001\", \"01111\")\nputs min_Swaps(\"11001\", \"01001\")\nputs min_Swaps(\"11001\", \"11001\")\nputs min_Swaps(\"11001\", \"11101\")",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend",
    "  count = 0\n  str1.each_char.with_index do |char, index|\n    if char != str2[index]\n      count += 1\n    end\n  end\n  puts count\nend",
    "    # Write your code here\n    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count/2\nend",
    "  count = 0\n  for i in 0..str1.length\n    if str1[i] != str2[i]\n      count += 1\n    end\n  end\n  return count\nend\nputs min_Swaps('1101', '0101')\nputs min_Swaps('100', '001')\nputs min_Swaps('10101', '11100')\nputs min_Swaps('000', '111')",
    "    count = 0\n    for i in 0..str1.length-1\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11100\", \"01111\")\nputs min_Swaps(\"11100\", \"11111\")\nputs min_Swaps(\"11100\", \"11000\")",
    "    count = 0\n    for i in 0..str1.length\n        if str1[i] != str2[i]\n            count += 1\n        end\n    end\n    return count\nend\nputs min_Swaps(\"11001\", \"01111\")\nputs min_Swaps(\"1100\", \"1001\")\nputs min_Swaps(\"11001\", \"01111\")\nputs min_Swaps(\"10011001\", \"01100101\")"
  ]
}
{
  "name": "mbpp_97_frequency_lists",
  "language": "rb",
  "prompt": "# Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.\ndef frequency_lists(list1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_97_frequency_lists.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_frequency_lists\n    candidate = method(:frequency_lists)\n    assert_equal({1 => 1, 2 => 3, 3 => 1, 4 => 1, 5 => 2, 6 => 1, 7 => 1, 8 => 1, 9 => 1}, candidate.call([[1, 2, 3, 2], [4, 5, 6, 2], [7, 8, 9, 5]]))\n    assert_equal({1 => 1, 2 => 1, 3 => 1, 4 => 1, 5 => 1, 6 => 1, 7 => 1, 8 => 1, 9 => 1, 10 => 1, 11 => 1, 12 => 1}, candidate.call([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]))\n    assert_equal({20 => 2, 30 => 2, 40 => 2, 17 => 1, 18 => 1, 16 => 1, 14 => 1, 13 => 1, 10 => 1}, candidate.call([[20, 30, 40, 17], [18, 16, 14, 13], [10, 20, 30, 40]]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  # create a hash to store the frequency of each element\n  frequency = Hash.new(0)\n  # iterate through the list and count the frequency of each element\n  list1.each do |element|\n    frequency[element] += 1\n  end\n  # return the hash\n  frequency\nend",
    "  frequency = Hash.new(0)\n  list1.each { |element| frequency[element] += 1 }\n  frequency\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  # create a new hash\n  hash = Hash.new(0)\n  # iterate over the list\n  list1.each do |element|\n    # increment the value of the key by 1\n    hash[element] += 1\n  end\n  # return the hash\n  hash\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  return freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten!\n  list1.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.group_by(&:itself).map{|k,v| [k, v.count]}.to_h\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  freq_hash = Hash.new(0)\n  list1.flatten.each { |x| freq_hash[x] += 1 }\n  freq_hash\nend",
    "  frequency_hash = Hash.new(0)\n  list1.each do |element|\n    frequency_hash[element] += 1\n  end\n  return frequency_hash\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  list1.flatten!\n  list1.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  return freq\nend",
    "  frequency = Hash.new(0)\n  list1.each do |element|\n    frequency[element] += 1\n  end\n  frequency\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  frequency = Hash.new(0)\n  list1.each { |word| frequency[word] += 1 }\n  return frequency\nend",
    "  # create a new hash\n  freq = Hash.new(0)\n  # iterate over each element in the list\n  list1.each do |element|\n    # increment the hash value for each element by 1\n    freq[element] += 1\n  end\n  # return the hash\n  freq\nend",
    "  frequency = Hash.new(0)\n  list1.each { |element| frequency[element] += 1 }\n  frequency\nend",
    "  list1.flatten!\n  list1.uniq!\n  list1.each_with_object({}) do |item, hash|\n    hash[item] = list1.count(item)\n  end\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  frequency = Hash.new(0)\n  list1.each { |word| frequency[word] += 1 }\n  return frequency\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  return freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each do |element|\n    freq[element] += 1\n  end\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each do |x|\n    freq[x] += 1\n  end\n  return freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  # create a hash to store the frequency of each element\n  frequency = Hash.new(0)\n  # iterate through the list\n  list1.each do |element|\n    # increment the frequency of each element\n    frequency[element] += 1\n  end\n  # return the hash\n  frequency\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  frequency = Hash.new(0)\n  list1.each { |word| frequency[word] += 1 }\n  frequency\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  frequency = Hash.new(0)\n  list1.each { |element| frequency[element] += 1 }\n  frequency\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  frequency = Hash.new(0)\n  list1.flatten.each { |element| frequency[element] += 1 }\n  frequency\nend",
    "  frequency = Hash.new(0)\n  list1.each do |item|\n    frequency[item] += 1\n  end\n  frequency\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  return freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.group_by {|x| x}.map {|k,v| [k, v.length]}.to_h\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  dict = {}\n  list1.each do |x|\n    if dict.has_key?(x)\n      dict[x] += 1\n    else\n      dict[x] = 1\n    end\n  end\n  dict\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  # create a new hash\n  hash = Hash.new(0)\n  # iterate through the list\n  list1.each do |element|\n    # add the element to the hash as a key and increment the value by 1\n    hash[element] += 1\n  end\n  # return the hash\n  hash\nend",
    "  freq = Hash.new(0)\n  list1.each do |element|\n    freq[element] += 1\n  end\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  frequency = Hash.new(0)\n  list1.each { |element| frequency[element] += 1 }\n  frequency\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.group_by { |e| e }.map { |k, v| [k, v.size] }.to_h\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  list1.flatten.group_by(&:itself).map{|k,v| [k, v.count]}.to_h\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  return freq\nend",
    "  freq = Hash.new(0)\n  list1.each do |x|\n    freq[x] += 1\n  end\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  list1.flatten!\n  list1.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each do |item|\n    freq[item] += 1\n  end\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each do |x|\n    freq[x] += 1\n  end\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  dict = {}\n  list1.flatten.each do |i|\n    dict[i] = list1.flatten.count(i)\n  end\n  dict\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten!\n  list1.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  frequency = Hash.new(0)\n  list1.each { |element| frequency[element] += 1 }\n  frequency\nend",
    "  # create a new hash\n  freq = Hash.new(0)\n  # iterate through the list\n  list1.each do |list|\n    # iterate through each list\n    list.each do |element|\n      # add the element to the hash\n      freq[element] += 1\n    end\n  end\n  # return the hash\n  freq\nend",
    "  freq_hash = Hash.new(0)\n  list1.each do |item|\n    freq_hash[item] += 1\n  end\n  freq_hash\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h, v| h[v] += 1; h }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.group_by{|x| x}.map{|k,v| [k, v.count]}.to_h\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  frequency = Hash.new(0)\n  list1.each { |element| frequency[element] += 1 }\n  frequency\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  return freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  frequency = Hash.new(0)\n  list1.each { |word| frequency[word] += 1 }\n  frequency\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  frequency = Hash.new(0)\n  list1.each { |element| frequency[element] += 1 }\n  frequency\nend",
    "  list1.flatten!\n  frequency = Hash.new(0)\n  list1.each { |word| frequency[word] += 1 }\n  frequency\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  frequency = Hash.new(0)\n  list1.each do |element|\n    frequency[element] += 1\n  end\n  frequency\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.flatten.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |x| freq[x] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  frequency = Hash.new(0)\n  list1.each { |element| frequency[element] += 1 }\n  frequency\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h, v| h[v] += 1; h }\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  frequency = Hash.new(0)\n  list1.each { |word| frequency[word] += 1 }\n  frequency\nend",
    "  frequency = Hash.new(0)\n  list1.each { |element| frequency[element] += 1 }\n  return frequency\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word, counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten!\n  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  freq_hash = {}\n  list1.each do |element|\n    if freq_hash.has_key?(element)\n      freq_hash[element] += 1\n    else\n      freq_hash[element] = 1\n    end\n  end\n  freq_hash\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  # Create a new hash\n  hash = Hash.new(0)\n  # Iterate through the list\n  list1.each do |element|\n    # Increment the value of the hash key by 1\n    hash[element] += 1\n  end\n  # Return the hash\n  hash\nend",
    "  freq = Hash.new(0)\n  list1.each { |element| freq[element] += 1 }\n  freq\nend",
    "  list1.flatten.group_by{|x| x}.map{|k,v| [k,v.count]}.to_h\nend",
    "  list1.flatten.inject(Hash.new(0)) { |h,v| h[v] += 1; h }\nend",
    "  list1.flatten!\n  freq = Hash.new(0)\n  list1.each { |word| freq[word] += 1 }\n  freq\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend",
    "  list1.flatten.each_with_object(Hash.new(0)) { |word,counts| counts[word] += 1 }\nend"
  ]
}
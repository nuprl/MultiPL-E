{
  "name": "mbpp_437_remove_odd",
  "language": "rb",
  "prompt": "# Write a function to remove odd characters in a string.\ndef remove_odd(str1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_437_remove_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_remove_odd\n    candidate = method(:remove_odd)\n    assert_equal(\"yhn\", candidate.call(\"python\"))\n    assert_equal(\"rga\", candidate.call(\"program\"))\n    assert_equal(\"agae\", candidate.call(\"language\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, \"\")\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.gsub(/[13579]/, '')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.delete('^a-zA-Z0-9')\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend",
    "  str1.chars.select.with_index { |_, i| i.even? }.join\nend"
  ]
}
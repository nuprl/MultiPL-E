{
  "name": "mbpp_461_upper_ctr",
  "language": "rb",
  "prompt": "# Write a python function to count the upper case characters in a given string.\ndef upper_ctr(str)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_461_upper_ctr.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_upper_ctr\n    candidate = method(:upper_ctr)\n    assert_equal(1, candidate.call(\"PYthon\"))\n    assert_equal(1, candidate.call(\"BigData\"))\n    assert_equal(0, candidate.call(\"program\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  count = 0\n  str.each_char do |ch|\n    count += 1 if ch.upcase == ch\n  end\n  count\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  count = 0\n  str.each_char do |char|\n    count += 1 if char.upcase == char\n  end\n  count\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  return str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  count = 0\n  str.each_char do |c|\n    count += 1 if c =~ /[A-Z]/\n  end\n  count\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  count = 0\n  str.each_char do |char|\n    count += 1 if char.upcase == char\n  end\n  count\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  count = 0\n  str.each_char do |c|\n    count += 1 if c.upcase == c\n  end\n  count\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  return str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  ctr = 0\n  str.each_char do |char|\n    if char.upcase == char\n      ctr += 1\n    end\n  end\n  ctr\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  count = 0\n  str.each_char do |char|\n    count += 1 if char =~ /[A-Z]/\n  end\n  count\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  count = 0\n  str.each_char do |ch|\n    count += 1 if ch =~ /[A-Z]/\n  end\n  count\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.scan(/[A-Z]/).count\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.scan(/[A-Z]/).count\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "\tctr = 0\n\tstr.each_char do |c|\n\t\tif c =~ /[A-Z]/\n\t\t\tctr += 1\n\t\tend\n\tend\n\treturn ctr\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count('A-Z')\nend",
    "  str.count(\"A-Z\")\nend",
    "  str.count(\"A-Z\")\nend",
    "\tstr.count(\"A-Z\")\nend"
  ]
}
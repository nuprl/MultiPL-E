{
  "name": "mbpp_431_common_element",
  "language": "rb",
  "prompt": "# Write a function that takes two lists and returns true if they have at least one common element.\ndef common_element(list1, list2)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_431_common_element.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_common_element\n    candidate = method(:common_element)\n    assert_equal(true, candidate.call([1, 2, 3, 4, 5], [5, 6, 7, 8, 9]))\n    assert_equal(nil, candidate.call([1, 2, 3, 4, 5], [6, 7, 8, 9]))\n    assert_equal(true, candidate.call([\"a\", \"b\", \"c\"], [\"d\", \"b\", \"e\"]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  list1.each do |element|\n    if list2.include?(element)\n      return true\n    end\n  end\n  return false\nend",
    "  list1.each do |element|\n    return true if list2.include?(element)\n  end\n  false\nend",
    "  list1.each do |element|\n    if list2.include?(element)\n      return true\n    end\n  end\n  return false\nend",
    "  list1.each do |element|\n    if list2.include?(element)\n      return true\n    end\n  end\n  return false\nend",
    "  list1.each do |element|\n    if list2.include?(element)\n      return true\n    end\n  end\n  return false\nend",
    "  list1.each do |element|\n    if list2.include?(element)\n      return true\n    end\n  end\n  return false\nend",
    "  list1.each do |element|\n    if list2.include?(element)\n      return true\n    end\n  end\n  return false\nend",
    "  list1.each do |element|\n    return true if list2.include?(element)\n  end\n  false\nend",
    "  list1.each do |element|\n    if list2.include?(element)\n      return true\n    end\n  end\n  return false\nend",
    "  list1.each do |element|\n    if list2.include?(element)\n      return true\n    end\n  end\n  return false\nend",
    "  list1.each do |element|\n    if list2.include?(element)\n      return true\n    end\n  end\n  return false\nend",
    "  list1.each do |element|\n    if list2.include?(element)\n      return true\n    end\n  end\n  return false\nend",
    "  list1.each do |element|\n    return true if list2.include?(element)\n  end\n  false\nend",
    "  list1.each do |element|\n    list2.each do |element2|\n      if element == element2\n        return true\n      end\n    end\n  end\n  return false\nend",
    "  list1.each do |element|\n    if list2.include?(element)\n      return true\n    end\n  end\n  return false\nend",
    "  list1.each do |element|\n    if list2.include?(element)\n      return true\n    end\n  end\n  return false\nend",
    "  list1.each do |element|\n    if list2.include?(element)\n      return true\n    end\n  end\n  return false\nend",
    "  list1.each do |element|\n    return true if list2.include?(element)\n  end\n  false\nend",
    "  list1.each do |element|\n    if list2.include?(element)\n      return true\n    end\n  end\n  return false\nend",
    "  list1.each do |element|\n    if list2.include?(element)\n      return true\n    end\n  end\n  return false\nend"
  ]
}
{
  "name": "mbpp_126_sum",
  "language": "rb",
  "prompt": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_126_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a do\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp58fx46ki\nStarted\n.\nFinished in 0.00040588 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2463.78 tests/s, 7391.35 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.prime_division\n  e = d.flatten\n  f = e.inject(:+)\n  return f\nend\nputs sum(12, 24)\nputs sum(15, 25)\nputs sum(10, 30)\nputs sum(18, 24)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "/tmp/tmpi6fea8rj.rb:4:in `sum': undefined method `prime_division' for 12:Integer (NoMethodError)\n\n  d = c.prime_division\n       ^^^^^^^^^^^^^^^\n\tfrom /tmp/tmpi6fea8rj.rb:9:in `<main>'\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.divisors\n  d.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "Loaded suite /tmp/tmpilthb5t8\nStarted\nE\n===============================================================================\nError: test_sum(TestHumanEval):\n  NoMethodError: undefined method `divisors' for 5:Integer\n  \n    d = c.divisors\n         ^^^^^^^^^\n/tmp/tmpilthb5t8.rb:4:in `sum'\n/tmp/tmpilthb5t8.rb:11:in `call'\n/tmp/tmpilthb5t8.rb:11:in `test_sum'\n      8: class TestHumanEval < Test::Unit::TestCase\n      9:   def test_sum\n     10:     candidate = method(:sum)\n  => 11:     assert_equal(6, candidate.call(10, 15))\n     12:     assert_equal(93, candidate.call(100, 150))\n     13:     assert_equal(3, candidate.call(4, 6))\n     14:   end\n===============================================================================\n\nFinished in 0.005404544 seconds.\n-------------------------------------------------------------------------------\n1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n185.03 tests/s, 0.00 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.to_s.split('').map(&:to_i)\n  e = d.inject(0) { |sum, x| sum + x }\n  puts e\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "Loaded suite /tmp/tmpuyv1jc5x\nStarted\n5\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmpuyv1jc5x.rb:12:in `test_sum'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:   def test_sum\n     11:     candidate = method(:sum)\n  => 12:     assert_equal(6, candidate.call(10, 15))\n     13:     assert_equal(93, candidate.call(100, 150))\n     14:     assert_equal(3, candidate.call(4, 6))\n     15:   end\n<6> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.007378871 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n135.52 tests/s, 135.52 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "18\nLoaded suite /tmp/tmpo2_jsmhr\nStarted\n.\nFinished in 0.00043956 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2275.00 tests/s, 6825.01 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpj95mhijo\nStarted\n.\nFinished in 0.000604143 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1655.24 tests/s, 4965.71 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpj95mhijo\nStarted\n.\nFinished in 0.000604143 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1655.24 tests/s, 4965.71 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    sum += i if a % i == 0 && b % i == 0\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd7_hs80z\nStarted\n.\nFinished in 0.000601016 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1663.85 tests/s, 4991.55 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = 1\n  d = 0\n  while c <= a\n    if a % c == 0 && b % c == 0\n      d += c\n    end\n    c += 1\n  end\n  return d\nend\nputs sum(10, 20)\nputs sum(10, 30)\nputs sum(20, 30)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "18\n18\n18\nLoaded suite /tmp/tmps1s23t4j\nStarted\n.\nFinished in 0.000438438 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2280.82 tests/s, 6842.47 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.to_s.split('')\n  e = d.map(&:to_i)\n  f = e.inject(0){|sum,x| sum + x }\n  return f\nend\nputs sum(12, 24)\nputs sum(10, 20)\nputs sum(15, 25)\nputs sum(20, 30)\nputs sum(30, 40)\nputs sum(40, 50)\nputs sum(50, 60)\nputs sum(60, 70)\nputs sum(70, 80)\nputs sum(80, 90)\nputs sum(90, 100)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "3\n1\n5\n1\n1\n1\n1\n1\n1\n1\n1\nLoaded suite /tmp/tmpyjk7mgk9\nStarted\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmpyjk7mgk9.rb:24:in `test_sum'\n     21: class TestHumanEval < Test::Unit::TestCase\n     22:   def test_sum\n     23:     candidate = method(:sum)\n  => 24:     assert_equal(6, candidate.call(10, 15))\n     25:     assert_equal(93, candidate.call(100, 150))\n     26:     assert_equal(3, candidate.call(4, 6))\n     27:   end\n<6> expected but was\n<5>\n===============================================================================\n\nFinished in 0.006773453 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n147.64 tests/s, 147.64 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum = sum + i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl5bvs5s3\nStarted\n.\nFinished in 0.00066285 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1508.64 tests/s, 4525.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum = sum + i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl5bvs5s3\nStarted\n.\nFinished in 0.00066285 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1508.64 tests/s, 4525.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  sum = 0\n  for i in 1..c\n    if c % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(12, 24)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "28\nLoaded suite /tmp/tmp1wpuvc7k\nStarted\n.\nFinished in 0.000474211 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2108.77 tests/s, 6326.30 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0sgsuszy\nStarted\n.\nFinished in 0.000696522 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1435.70 tests/s, 4307.11 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 15)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "6\nLoaded suite /tmp/tmps4p8vu29\nStarted\n.\nFinished in 0.000466683 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2142.78 tests/s, 6428.35 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.prime_division\n  e = d.map { |x| x[0]**(x[1]+1)-1 }\n  f = e.map { |x| x/(x-1) }\n  g = f.reduce(:*)\n  return g\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "Loaded suite /tmp/tmpj1yf229l\nStarted\nE\n===============================================================================\nError: test_sum(TestHumanEval):\n  NoMethodError: undefined method `prime_division' for 5:Integer\n  \n    d = c.prime_division\n         ^^^^^^^^^^^^^^^\n/tmp/tmpj1yf229l.rb:4:in `sum'\n/tmp/tmpj1yf229l.rb:14:in `call'\n/tmp/tmpj1yf229l.rb:14:in `test_sum'\n     11: class TestHumanEval < Test::Unit::TestCase\n     12:   def test_sum\n     13:     candidate = method(:sum)\n  => 14:     assert_equal(6, candidate.call(10, 15))\n     15:     assert_equal(93, candidate.call(100, 150))\n     16:     assert_equal(3, candidate.call(4, 6))\n     17:   end\n===============================================================================\n\nFinished in 0.007411341 seconds.\n-------------------------------------------------------------------------------\n1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.93 tests/s, 0.00 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(12, 24)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "28\nLoaded suite /tmp/tmpkjqa0fvj\nStarted\n.\nFinished in 0.000480277 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2082.13 tests/s, 6246.40 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  sum = 0\n  for i in 1..c\n    if c % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nputs sum(20, 30)\nputs sum(30, 40)\nputs sum(40, 50)\nputs sum(50, 60)\nputs sum(60, 70)\nputs sum(70, 80)\nputs sum(80, 90)\nputs sum(90, 100)\nputs sum(100, 110)\nputs sum(110, 120)\nputs sum(120, 130)\nputs sum(130, 140)\nputs sum(140, 150)\nputs sum(150, 160)\nputs sum(160, 170)\nputs sum(170, 180)\nputs sum(180, 190)\nputs sum(190, 200)\nputs sum(200, 210)\nputs sum(210, 220)\nputs sum(220, 230)\nputs sum(230, 240)\nputs sum(240, 250)\nputs sum(250, 260)\nputs sum(260, 270)\nputs sum(270, 280)\nputs sum(280, 290)\nputs sum(290, 300)\nputs sum(300, 310)\nputs sum(310, 320)\nputs sum(320, 330)\nputs sum(330, 340)\nputs sum(340, 350)\nputs sum(350, 360)\nputs sum(360, 370)\nputs sum(370, 380)\nputs sum(380, 390)\nputs sum(390, 400)\nputs sum(400, 410)\nputs sum(410, 420)\nputs sum(420, 430)\nputs sum(430, 440)\nputs sum(440, 450)\nputs sum(450, 460)\nputs sum(460, 470)\nputs sum(470, 480)\nputs sum(480, 490)\nputs sum(490, 500)\nputs sum(500, 510)\nputs sum(510, 520)\nputs sum\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124242,
      "stdout": "18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n18\n",
      "stderr": "/tmp/tmpc495bzo5.rb:2:in `sum': wrong number of arguments (given 0, expected 2) (ArgumentError)\n\tfrom /tmp/tmpc495bzo5.rb:63:in `<main>'\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    sum += i if a % i == 0 && b % i == 0\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd7_hs80z\nStarted\n.\nFinished in 0.000601016 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1663.85 tests/s, 4991.55 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpifdl73z4\nStarted\n.\nFinished in 0.000642897 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1555.46 tests/s, 4666.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpj95mhijo\nStarted\n.\nFinished in 0.000604143 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1655.24 tests/s, 4965.71 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0sgsuszy\nStarted\n.\nFinished in 0.000696522 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1435.70 tests/s, 4307.11 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = 1\n  d = 0\n  while c <= a\n    if a % c == 0 && b % c == 0\n      d += c\n    end\n    c += 1\n  end\n  return d\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpv1vsdojm\nStarted\n.\nFinished in 0.000704226 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1420.00 tests/s, 4260.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpifdl73z4\nStarted\n.\nFinished in 0.000642897 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1555.46 tests/s, 4666.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nputs sum(20, 30)\nputs sum(40, 50)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "18\n18\n18\nLoaded suite /tmp/tmp4ab5nw0f\nStarted\n.\nFinished in 0.000505588 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1977.90 tests/s, 5933.69 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpj95mhijo\nStarted\n.\nFinished in 0.000604143 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1655.24 tests/s, 4965.71 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.to_s.split('').map(&:to_i)\n  d.inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "Loaded suite /tmp/tmpzj3q77lk\nStarted\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmpzj3q77lk.rb:11:in `test_sum'\n      8: class TestHumanEval < Test::Unit::TestCase\n      9:   def test_sum\n     10:     candidate = method(:sum)\n  => 11:     assert_equal(6, candidate.call(10, 15))\n     12:     assert_equal(93, candidate.call(100, 150))\n     13:     assert_equal(3, candidate.call(4, 6))\n     14:   end\n<6> expected but was\n<5>\n===============================================================================\n\nFinished in 0.007164687 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.57 tests/s, 139.57 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpj95mhijo\nStarted\n.\nFinished in 0.000604143 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1655.24 tests/s, 4965.71 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if (a % i == 0) && (b % i == 0)\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp3_ggcxe\nStarted\n.\nFinished in 0.00070235 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1423.79 tests/s, 4271.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0sgsuszy\nStarted\n.\nFinished in 0.000696522 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1435.70 tests/s, 4307.11 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a do\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp58fx46ki\nStarted\n.\nFinished in 0.00040588 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2463.78 tests/s, 7391.35 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  sum = 0\n  for i in 1..c\n    if c % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(12, 24)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "28\nLoaded suite /tmp/tmp1wpuvc7k\nStarted\n.\nFinished in 0.000474211 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2108.77 tests/s, 6326.30 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  i = 1\n  sum = 0\n  while i <= a && i <= b\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n    i += 1\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzn3kxbjk\nStarted\n.\nFinished in 0.000491952 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2032.72 tests/s, 6098.16 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "18\nLoaded suite /tmp/tmpo2_jsmhr\nStarted\n.\nFinished in 0.00043956 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2275.00 tests/s, 6825.01 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n    sum = 0\n    for i in 1..a\n        if a % i == 0 and b % i == 0\n            sum += i\n        end\n    end\n    return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp_xi4fgn3\nStarted\n.\nFinished in 0.000663658 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1506.80 tests/s, 4520.40 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.to_s.split('').map(&:to_i).inject(:+)\n  puts \"Sum of common divisors of #{a} and #{b} is #{d}\"\nend\nsum(12, 24)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "Sum of common divisors of 12 and 24 is 3\nLoaded suite /tmp/tmp8ofdav2_\nStarted\nSum of common divisors of 10 and 15 is 5\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmp8ofdav2_.rb:12:in `test_sum'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:   def test_sum\n     11:     candidate = method(:sum)\n  => 12:     assert_equal(6, candidate.call(10, 15))\n     13:     assert_equal(93, candidate.call(100, 150))\n     14:     assert_equal(3, candidate.call(4, 6))\n     15:   end\n<6> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.006872167 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n145.51 tests/s, 145.51 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpj95mhijo\nStarted\n.\nFinished in 0.000604143 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1655.24 tests/s, 4965.71 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0sgsuszy\nStarted\n.\nFinished in 0.000696522 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1435.70 tests/s, 4307.11 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  i = 1\n  sum = 0\n  while i <= a && i <= b\n    if a % i == 0 && b % i == 0\n      sum = sum + i\n    end\n    i = i + 1\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpw4dmm_a_\nStarted\n.\nFinished in 0.000702837 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1422.81 tests/s, 4268.42 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nputs sum(20, 30)\nputs sum(40, 50)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "18\n18\n18\nLoaded suite /tmp/tmp4ab5nw0f\nStarted\n.\nFinished in 0.000505588 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1977.90 tests/s, 5933.69 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nputs sum(20, 30)\nputs sum(30, 40)\nputs sum(40, 50)\nputs sum(50, 60)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "18\n18\n18\n18\n18\nLoaded suite /tmp/tmpzakq5pr3\nStarted\n.\nFinished in 0.000490205 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.96 tests/s, 6119.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.to_s.split('').map(&:to_i)\n  d.sum\nend\nsum(12, 24)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "Loaded suite /tmp/tmpkib6lxio\nStarted\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmpkib6lxio.rb:12:in `test_sum'\n      9: class TestHumanEval < Test::Unit::TestCase\n     10:   def test_sum\n     11:     candidate = method(:sum)\n  => 12:     assert_equal(6, candidate.call(10, 15))\n     13:     assert_equal(93, candidate.call(100, 150))\n     14:     assert_equal(3, candidate.call(4, 6))\n     15:   end\n<6> expected but was\n<5>\n===============================================================================\n\nFinished in 0.007084413 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n141.15 tests/s, 141.15 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    sum += i if a % i == 0 && b % i == 0\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd7_hs80z\nStarted\n.\nFinished in 0.000601016 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1663.85 tests/s, 4991.55 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nputs sum(20, 30)\nputs sum(30, 40)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "18\n18\n18\nLoaded suite /tmp/tmpmyrfn_5h\nStarted\n.\nFinished in 0.000411604 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2429.52 tests/s, 7288.56 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nputs sum(20, 30)\nputs sum(30, 40)\nputs sum(40, 50)\nputs sum(50, 60)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "18\n18\n18\n18\n18\nLoaded suite /tmp/tmpzakq5pr3\nStarted\n.\nFinished in 0.000490205 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2039.96 tests/s, 6119.89 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nputs sum(20, 30)\nputs sum(30, 40)\nputs sum(40, 50)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "18\n18\n18\n18\nLoaded suite /tmp/tmpt7pcvo4y\nStarted\n.\nFinished in 0.000428103 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2335.89 tests/s, 7007.66 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = (1..c).select { |i| c % i == 0 }\n  d.inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpfizra95y\nStarted\n.\nFinished in 0.000515652 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1939.29 tests/s, 5817.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpj95mhijo\nStarted\n.\nFinished in 0.000604143 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1655.24 tests/s, 4965.71 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "18\nLoaded suite /tmp/tmpo2_jsmhr\nStarted\n.\nFinished in 0.00043956 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2275.00 tests/s, 6825.01 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum = sum + i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl5bvs5s3\nStarted\n.\nFinished in 0.00066285 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1508.64 tests/s, 4525.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0sgsuszy\nStarted\n.\nFinished in 0.000696522 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1435.70 tests/s, 4307.11 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nputs sum(10, 30)\nputs sum(10, 40)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "18\n18\n18\nLoaded suite /tmp/tmpratba1sk\nStarted\n.\nFinished in 0.000442152 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2261.67 tests/s, 6785.00 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "18\nLoaded suite /tmp/tmpo2_jsmhr\nStarted\n.\nFinished in 0.00043956 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2275.00 tests/s, 6825.01 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = (1..c).select { |x| c % x == 0 }\n  d.inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp8h2_h1dt\nStarted\n.\nFinished in 0.000530483 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1885.07 tests/s, 5655.22 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  i = 1\n  sum = 0\n  while i <= a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n    i += 1\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp67o6nigg\nStarted\n.\nFinished in 0.00079817 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1252.87 tests/s, 3758.60 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a%i == 0 && b%i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp4tdy0ukk\nStarted\n.\nFinished in 0.000407482 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2454.10 tests/s, 7362.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0sgsuszy\nStarted\n.\nFinished in 0.000696522 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1435.70 tests/s, 4307.11 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.to_s.split('').map(&:to_i).inject(:+)\n  puts \"The sum of common divisors of #{a} and #{b} is #{d}\"\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "Loaded suite /tmp/tmp9rbmeqgg\nStarted\nThe sum of common divisors of 10 and 15 is 5\nF\n===============================================================================\nFailure: test_sum(TestHumanEval)\n/tmp/tmp9rbmeqgg.rb:11:in `test_sum'\n      8: class TestHumanEval < Test::Unit::TestCase\n      9:   def test_sum\n     10:     candidate = method(:sum)\n  => 11:     assert_equal(6, candidate.call(10, 15))\n     12:     assert_equal(93, candidate.call(100, 150))\n     13:     assert_equal(3, candidate.call(4, 6))\n     14:   end\n<6> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.006271526 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n159.45 tests/s, 159.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a do\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp58fx46ki\nStarted\n.\nFinished in 0.00040588 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2463.78 tests/s, 7391.35 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum = sum + i\n    end\n  end\n  return sum\nend\nputs sum(10, 20)\nputs sum(20, 30)\nputs sum(30, 40)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "18\n18\n18\nLoaded suite /tmp/tmp7469ahog\nStarted\n.\nFinished in 0.000419241 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2385.26 tests/s, 7155.79 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  (1..a).select { |i| a % i == 0 && b % i == 0 }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7md0yh1u\nStarted\n.\nFinished in 0.000535728 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1866.62 tests/s, 5599.86 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0sgsuszy\nStarted\n.\nFinished in 0.000696522 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1435.70 tests/s, 4307.11 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum = sum + i\n    end\n  end\n  return sum\nend\nputs sum(10, 15)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "6\nLoaded suite /tmp/tmptv64lxye\nStarted\n.\nFinished in 0.000406459 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2460.27 tests/s, 7380.82 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = a.gcd(b)\n  d = c.prime_division\n  e = d.map { |x| x[0]**(x[1]+1)-1 }\n  f = e.map { |x| x/(x.to_s[0].to_i) }\n  g = f.reduce(:*)\n  return g\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "Loaded suite /tmp/tmpo60f65wq\nStarted\nE\n===============================================================================\nError: test_sum(TestHumanEval):\n  NoMethodError: undefined method `prime_division' for 5:Integer\n  \n    d = c.prime_division\n         ^^^^^^^^^^^^^^^\n/tmp/tmpo60f65wq.rb:4:in `sum'\n/tmp/tmpo60f65wq.rb:14:in `call'\n/tmp/tmpo60f65wq.rb:14:in `test_sum'\n     11: class TestHumanEval < Test::Unit::TestCase\n     12:   def test_sum\n     13:     candidate = method(:sum)\n  => 14:     assert_equal(6, candidate.call(10, 15))\n     15:     assert_equal(93, candidate.call(100, 150))\n     16:     assert_equal(3, candidate.call(4, 6))\n     17:   end\n===============================================================================\n\nFinished in 0.006784919 seconds.\n-------------------------------------------------------------------------------\n1 tests, 0 assertions, 0 failures, 1 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n147.39 tests/s, 0.00 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  c = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      c += i\n    end\n  end\n  return c\nend\nputs sum(10, 20)\nputs sum(20, 30)\nputs sum(30, 40)\nputs sum(40, 50)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "18\n18\n18\n18\nLoaded suite /tmp/tmpszwdzvff\nStarted\n.\nFinished in 0.000403946 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2475.58 tests/s, 7426.74 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum = sum + i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl5bvs5s3\nStarted\n.\nFinished in 0.00066285 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1508.64 tests/s, 4525.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  i = 1\n  sum = 0\n  while i <= a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n    i += 1\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmphiihudj0\nStarted\n.\nFinished in 0.000457617 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2185.23 tests/s, 6555.70 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0sgsuszy\nStarted\n.\nFinished in 0.000696522 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1435.70 tests/s, 4307.11 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0sgsuszy\nStarted\n.\nFinished in 0.000696522 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1435.70 tests/s, 4307.11 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nputs sum(10, 15)\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "6\nLoaded suite /tmp/tmps4p8vu29\nStarted\n.\nFinished in 0.000466683 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2142.78 tests/s, 6428.35 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpj95mhijo\nStarted\n.\nFinished in 0.000604143 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1655.24 tests/s, 4965.71 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  i = 1\n  sum = 0\n  while i <= a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n    i += 1\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp67o6nigg\nStarted\n.\nFinished in 0.00079817 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1252.87 tests/s, 3758.60 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  (1..a).each do |i|\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpifdl73z4\nStarted\n.\nFinished in 0.000642897 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1555.46 tests/s, 4666.38 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0sgsuszy\nStarted\n.\nFinished in 0.000696522 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1435.70 tests/s, 4307.11 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1665517112,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl1lu_0yl\nStarted\n.\nFinished in 0.000404104 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2474.61 tests/s, 7423.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n  sum = 0\n  for i in 1..a\n    if a % i == 0 and b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
      "timestamp": 1666124243,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0sgsuszy\nStarted\n.\nFinished in 0.000696522 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1435.70 tests/s, 4307.11 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_572_two_unique_nums",
  "language": "rb",
  "prompt": "# Write a python function to remove duplicate numbers from a given number of lists.\ndef two_unique_nums(nums)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_572_two_unique_nums.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_two_unique_nums\n    candidate = method(:two_unique_nums)\n    assert_equal([1, 4, 5], candidate.call([1, 2, 3, 2, 3, 4, 5]))\n    assert_equal([1, 3, 4, 5], candidate.call([1, 2, 3, 2, 4, 5]))\n    assert_equal([1, 2, 3, 4, 5], candidate.call([1, 2, 3, 4, 5]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  nums.uniq\nend",
    "  nums.uniq\nend",
    "  nums.uniq\nend",
    "  nums.uniq\nend",
    "  nums.uniq.length == 2\nend",
    "  nums.uniq\nend",
    "  nums.uniq\nend",
    "  nums.uniq.length == 2\nend",
    "  nums.uniq.length == 2\nend",
    "  nums.uniq.length == 2\nend",
    "  nums.uniq\nend",
    "  nums.uniq\nend",
    "  nums.uniq\nend",
    "  nums.uniq\nend",
    "  nums.uniq\nend",
    "  nums.uniq\nend",
    "  nums.uniq\nend",
    "  nums.uniq.length == 2\nend",
    "  nums.uniq\nend",
    "  nums.uniq.length == 2\nend"
  ]
}
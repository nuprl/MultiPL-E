{
  "name": "mbpp_400_extract_freq",
  "language": "rb",
  "prompt": "# Write a function to extract the number of unique tuples in the given list.\ndef extract_freq(test_list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_400_extract_freq.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_extract_freq\n    candidate = method(:extract_freq)\n    assert_equal(3, candidate.call([[3, 4], [1, 2], [4, 3], [5, 6]]))\n    assert_equal(4, candidate.call([[4, 15], [2, 3], [5, 4], [6, 7]]))\n    assert_equal(4, candidate.call([[5, 16], [2, 3], [6, 5], [6, 9]]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  freq = Hash.new(0)\n  test_list.each { |tuple| freq[tuple] += 1 }\n  freq.keys\nend",
    "  freq = Hash.new(0)\n  test_list.each { |tuple| freq[tuple] += 1 }\n  freq\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  # write your code here\n  test_list.uniq.count\nend",
    "  test_list.uniq.length\nend",
    "    test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "    test_list.uniq.count\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.count\nend",
    "  freq = Hash.new(0)\n  test_list.each { |v| freq[v] += 1 }\n  freq.keys\nend",
    "  test_list.uniq.length\nend",
    "  freq = Hash.new(0)\n  test_list.each { |tuple| freq[tuple] += 1 }\n  freq.keys\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  freq = Hash.new(0)\n  test_list.each { |tuple| freq[tuple] += 1 }\n  freq.keys\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  freq = Hash.new(0)\n  test_list.each { |tuple| freq[tuple] += 1 }\n  freq\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "    freq = Hash.new(0)\n    test_list.each do |tuple|\n        freq[tuple] += 1\n    end\n    return freq\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "    freq_hash = Hash.new(0)\n    test_list.each do |i|\n        freq_hash[i] += 1\n    end\n    return freq_hash.length\nend",
    "  test_list.uniq.count\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  freq = Hash.new(0)\n  test_list.each do |i|\n    freq[i] += 1\n  end\n  freq.each do |k,v|\n    puts \"#{k} - #{v}\"\n  end\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.size\nend",
    "  test_list.uniq.count\nend",
    "  test_list.uniq.count\nend",
    "  test_list.uniq.length\nend",
    "  # write your code here\n  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "    freq = Hash.new(0)\n    test_list.each do |tuple|\n        freq[tuple] += 1\n    end\n    return freq\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  freq = Hash.new(0)\n  test_list.each { |e| freq[e] += 1 }\n  freq.keys\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "    test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  freq = Hash.new(0)\n  test_list.each { |v| freq[v] += 1 }\n  freq.each { |k, v| puts \"#{k} => #{v}\" }\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  # write your code here\n  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  # write your code here\n  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.count\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.count\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  # write your code here\n  test_list.uniq.length\nend",
    "    # write your code here\n    test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  freq = Hash.new(0)\n  test_list.each { |x| freq[x] += 1 }\n  freq.each { |k, v| puts \"#{k} : #{v}\" }\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  freq = Hash.new(0)\n  test_list.each { |tuple| freq[tuple] += 1 }\n  freq\nend",
    "  # write your code here\n  test_list.uniq.count\nend",
    "    # write your code here\n    test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  freq = Hash.new(0)\n  test_list.each { |tuple| freq[tuple] += 1 }\n  freq\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  freq = Hash.new(0)\n  test_list.each { |x| freq[x] += 1 }\n  freq.each { |k, v| puts \"#{k} #{v}\" }\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  # write your code here\n  test_list.uniq.length\nend",
    "  test_list.uniq.count\nend",
    "    # your code here\n    test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  # write your code here\n  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  return test_list.uniq.length\nend",
    "    # write your code here\n    test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  freq = Hash.new(0)\n  test_list.each do |tuple|\n    freq[tuple] += 1\n  end\n  freq.keys\nend",
    "  freq = Hash.new(0)\n  test_list.each do |tuple|\n    freq[tuple] += 1\n  end\n  return freq\nend",
    "  # write your code here\n  test_list.uniq.length\nend",
    "    freq = Hash.new(0)\n    test_list.each { |x| freq[x] += 1 }\n    freq.each { |k, v| puts \"#{k} #{v}\" }\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "    test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "    test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.count\nend",
    "  test_list.uniq.size\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  # write your code here\n  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "    # write your code here\n    test_list.uniq.length\nend",
    "  freq_hash = Hash.new(0)\n  test_list.each { |tuple| freq_hash[tuple] += 1 }\n  freq_hash\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  freq = Hash.new(0)\n  test_list.each { |v| freq[v] += 1 }\n  freq.keys\nend",
    "  test_list.uniq.count\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  freq = Hash.new(0)\n  test_list.each do |i|\n    freq[i] += 1\n  end\n  freq.values.uniq.sort\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "    # write your code here\n    test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend",
    "  test_list.uniq.length\nend"
  ]
}
{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "rb",
  "prompt": "# Write a function to sum all amicable numbers from 1 to a specified number.\ndef amicable_numbers_sum(limit)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_amicable_numbers_sum\n    candidate = method(:amicable_numbers_sum)\n    assert_equal(504, candidate.call(999))\n    assert_equal(31626, candidate.call(9999))\n    assert_equal(0, candidate.call(99))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  sum = 0\n  (1..limit).each do |num|\n    sum += num if amicable_number?(num)\n  end\n  sum\nend",
    "  sum = 0\n  (1..limit).each do |num|\n    sum += num if amicable_number?(num)\n  end\n  sum\nend",
    "  sum = 0\n  (1..limit).each do |num|\n    sum += num if amicable?(num)\n  end\n  sum\nend",
    "  amicable_numbers = []\n  (1..limit).each do |num|\n    amicable_numbers << num if amicable_number?(num)\n  end\n  amicable_numbers.inject(:+)\nend",
    "  sum = 0\n  (1..limit).each do |num|\n    sum += num if amicable_number?(num)\n  end\n  sum\nend",
    "  sum = 0\n  (1..limit).each do |x|\n    sum += x if amicable_numbers?(x)\n  end\n  sum\nend",
    "  sum = 0\n  (1..limit).each do |num|\n    sum += num if amicable_numbers?(num)\n  end\n  sum\nend",
    "  amicable_numbers = []\n  (1..limit).each do |num|\n    amicable_numbers << num if amicable_number?(num)\n  end\n  amicable_numbers.inject(:+)\nend",
    "  amicable_numbers = []\n  (1..limit).each do |num|\n    amicable_numbers << num if amicable_number?(num)\n  end\n  amicable_numbers.inject(:+)\nend",
    "  sum = 0\n  (1..limit).each do |i|\n    sum += i if amicable_number?(i)\n  end\n  sum\nend",
    "  sum = 0\n  (1..limit).each do |num|\n    sum += num if amicable_number?(num)\n  end\n  sum\nend",
    "  sum = 0\n  (1..limit).each do |num|\n    sum += num if amicable_number?(num)\n  end\n  sum\nend",
    "  sum = 0\n  (1..limit).each do |num|\n    sum += num if amicable_number?(num)\n  end\n  sum\nend",
    "  sum = 0\n  (1..limit).each do |num|\n    sum += num if amicable_number?(num)\n  end\n  sum\nend",
    "  (1..limit).select { |n| amicable?(n) }.reduce(:+)\nend",
    "  sum = 0\n  (1..limit).each do |num|\n    sum += num if amicable?(num)\n  end\n  sum\nend",
    "  sum = 0\n  (1..limit).each do |num|\n    sum += num if amicable_number?(num)\n  end\n  sum\nend",
    "  sum = 0\n  (1..limit).each do |i|\n    sum += i if amicable_number?(i)\n  end\n  sum\nend",
    "  sum = 0\n  (1..limit).each do |num|\n    sum += num if amicable?(num)\n  end\n  sum\nend",
    "  sum = 0\n  (1..limit).each do |num|\n    sum += num if amicable_number?(num)\n  end\n  sum\nend"
  ]
}
{
  "name": "mbpp_126_sum",
  "language": "rb",
  "prompt": "# Write a python function to find the sum of common divisors of two given numbers.\ndef sum(a, b)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_126_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum\n    candidate = method(:sum)\n    assert_equal(6, candidate.call(10, 15))\n    assert_equal(93, candidate.call(100, 150))\n    assert_equal(3, candidate.call(4, 6))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  sum = 0\n  for i in 1..a do\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  c = a.gcd(b)\n  d = c.prime_division\n  e = d.flatten\n  f = e.inject(:+)\n  return f\nend\nputs sum(12, 24)\nputs sum(15, 25)\nputs sum(10, 30)\nputs sum(18, 24)",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  c = a.gcd(b)\n  d = c.divisors\n  d.sum\nend",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  c = a.gcd(b)\n  d = c.to_s.split('').map(&:to_i)\n  e = d.inject(0) { |sum, x| sum + x }\n  puts e\nend",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend",
    "  sum = 0\n  for i in 1..a\n    if a % i == 0 && b % i == 0\n      sum += i\n    end\n  end\n  return sum\nend"
  ]
}
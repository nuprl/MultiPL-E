{
  "name": "mbpp_72_dif_Square",
  "language": "rb",
  "prompt": "# Write a python function to check whether the given number can be represented as the difference of two squares or not.\ndef dif_Square(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_72_dif_Square.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_dif_Square\n    candidate = method(:dif_Square)\n    assert_equal(true, candidate.call(5))\n    assert_equal(false, candidate.call(10))\n    assert_equal(true, candidate.call(15))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  if (n**0.5)%1==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(25)\nputs dif_Square(26)",
    "  for i in 1..n\n    for j in 1..n\n      if i**2 - j**2 == n\n        return True\n      end\n    end\n  end\n  return False\nend",
    "    if n%2==0\n        return true\n    else\n        return false\n    end\nend\ndif_Square(25)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tif n < 0\n\t\treturn false\n\tend\n\tfor i in 1..n\n\t\tfor j in 1..n\n\t\t\tif i*i - j*j == n\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "  if n%4==0\n    puts \"Yes\"\n  else\n    puts \"No\"\n  end\nend\ndif_Square(4)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  if n % 4 == 0\n    return true\n  else\n    return false\n  end\nend",
    "\tif n%4 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(8)\nputs dif_Square(7)",
    "  if n<0\n    return false\n  else\n    return true\n  end\nend\nputs dif_Square(9)\nputs dif_Square(16)\nputs dif_Square(25)\nputs dif_Square(36)\nputs dif_Square(49)\nputs dif_Square(64)\nputs dif_Square(81)\nputs dif_Square(100)\nputs dif_Square(121)\nputs dif_Square(144)\nputs dif_Square(169)\nputs dif_Square(196)\nputs dif_Square(225)\nputs dif_Square(256)\nputs dif_Square(289)\nputs dif_Square(324)\nputs dif_Square(361)\nputs dif_Square(400)\nputs dif_Square(441)\nputs dif_Square(484)\nputs dif_Square(529)\nputs dif_Square(576)\nputs dif_Square(625)\nputs dif_Square(676)\nputs dif_Square(729)\nputs dif_Square(784)\nputs dif_Square(841)\nputs dif_Square(900)\nputs dif_Square(961)\nputs dif_Square(1024)\nputs dif_Square(1089)\nputs dif_Square(1156)\nputs dif_Square(1225)\nputs dif_Square(1296)\nputs dif_Square(1369)\nputs dif_Square(1444)\nputs dif_Square(1521)\nputs dif_Square(1600)\nputs dif_Square(1681)\nputs dif_Square(1764)\nputs dif_Square(1849)\nputs dif_Square(1936)\nputs dif_Square(2025)\nputs dif_Square(2116)\nputs dif_Square(2209)\nputs dif_Square(2304)\nputs dif_Square(2401)\nput",
    "\tif n%2==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(10)\nputs dif_Square(11)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(8)\nputs dif_Square(5)",
    "    if n%4==0\n        return true\n    else\n        return false\n    end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "\tif n%2==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(10)\nputs dif_Square(11)",
    "  sqrt = Math.sqrt(n).to_i\n  for i in 1..sqrt\n    for j in i..sqrt\n      if i*i - j*j == n\n        return True\n      end\n    end\n  end\n  return False\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(10)\nputs dif_Square(50)",
    "\tif n%4 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(16)\nputs dif_Square(25)",
    "\tif n%2 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  if n<0\n    return false\n  end\n  if n==0\n    return true\n  end\n  i=1\n  while i*i<=n\n    j=1\n    while j*j<=n\n      if i*i-j*j==n\n        return true\n      end\n      j+=1\n    end\n    i+=1\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(-1)\nputs dif_Square(26)",
    "\tif n<0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_",
    "  if n%2==0\n    return true\n  else\n    return false\n  end\nend",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(54)\nputs dif_Square(55)\nputs dif_",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(10)\nputs dif_Square(20)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "    if (Math.sqrt(n).to_i)**2 == n\n        return true\n    else\n        return false\n    end\nend\nputs dif_Square(25)\nputs dif_Square(24)",
    "  if n % 4 == 0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\ndif_Square(4)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(68)\nputs dif_Square(69)\nputs dif_Square(72)\nputs dif_Square(73)\nputs dif_Square(76)\nputs dif_Square(77)\nputs dif_Square(80)\nputs dif_Square(81)\nputs dif_Square(84)\nputs dif_Square(85)\nputs dif_Square(88)\nputs dif_Square(89)\nputs dif_Square(92)\nputs dif_Square(93)\nputs dif_Square(96)\nputs dif_Square(97)\nputs dif_Square(",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(16)\nputs dif_Square(25)\nputs dif_Square(36)\nputs dif_Square(49)\nputs dif_Square(64)\nputs dif_Square(81)\nputs dif_Square(100)\nputs dif_Square(121)\nputs dif_Square(144)\nputs dif_Square(169)\nputs dif_Square(196)\nputs dif_Square(225)\nputs dif_Square(256)\nputs dif_Square(289)\nputs dif_Square(324)\nputs dif_Square(361)\nputs dif_Square(400)\nputs dif_Square(441)\nputs dif_Square(484)\nputs dif_Square(529)\nputs dif_Square(576)\nputs dif_Square(625)\nputs dif_Square(676)\nputs dif_Square(729)\nputs dif_Square(784)\nputs dif_Square(841)\nputs dif_Square(900)\nputs dif_Square(961)\nputs dif_Square(1024)\nputs dif_Square(1089)\nputs dif_Square(1156)\nputs dif_Square(1225)\nputs dif_Square(1296)\nputs dif_Square(1369)\nputs dif_Square(1444)\nputs dif_Square(1521)\nputs dif_Square(1600)\nputs dif_Square(1681)\nputs dif_Square(1764)\nputs dif_Square(1849)\nputs dif_Square(1936)\nputs dif_Square(2025)\nputs dif_Square(2116)\nputs dif_Square(2209)\nputs dif_Square(2304",
    "    if n<0\n        return false\n    end\n    if n==0\n        return true\n    end\n    i=1\n    while i*i<n\n        j=i+1\n        while j*j<=n\n            if i*i+j*j==n\n                return true\n            end\n            j+=1\n        end\n        i+=1\n    end\n    return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(1)\nputs dif_Square(2)\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(68)\nputs dif_Square(69)\nputs dif_Square(72)\nputs dif_Square(73)\nputs dif_Square(76)\nputs dif_Square(77)\nputs dif_Square(80)\nputs dif_Square(81)\nputs dif_Square(84)\nputs dif_Square(85)\nputs dif_Square(88)\nputs dif_Square(89)\nputs dif_Square(92)\nputs dif_Square(93)\nputs dif_Square(96)\nputs dif_Square(97)\nputs dif_Square(",
    "  if n < 0\n    return false\n  end\n  if n == 0\n    return true\n  end\n  i = 1\n  while i * i <= n\n    j = 1\n    while j * j <= n\n      if (i * i - j * j) == n\n        return true\n      end\n      j += 1\n    end\n    i += 1\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(24)\nputs dif_Square(0)\nputs dif_Square(1)\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(9)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(54)\nputs dif_Square(55)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(58)\nputs dif_Square",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(68)\nputs dif_Square(69)\nputs dif_Square(72)\nputs dif_Square(73)\nputs dif_Square(76)\nputs dif_Square(77)\nputs dif_Square(80)\nputs dif_Square(81)\nputs dif_Square(84)\nputs dif_Square(85)\nputs dif_Square(88)\nputs dif_Square(89)\nputs dif_Square(92)\nputs dif_Square(93)\nputs dif_Square(96)\nputs dif_Square(97)\nputs dif_",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(12)\nputs dif_Square(13)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(16)\nputs dif_Square(15)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(12)\nputs dif_Square(13)",
    "\tif n%4 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(16)\nputs dif_Square(25)",
    "    if n%4==0\n        return true\n    else\n        return false\n    end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "    if n<0\n        return false\n    end\n    sqrt = Math.sqrt(n).to_i\n    for i in 1..sqrt\n        j = Math.sqrt(n - i*i).to_i\n        if (i*i + j*j) == n\n            return true\n        end\n    end\n    return false\nend\nputs dif_Square(10)\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(-1)",
    "  if n<0\n    return false\n  end\n  i=1\n  while i*i<=n\n    j=1\n    while j*j<=n\n      if (i*i)-(j*j)==n\n        return true\n      end\n      j+=1\n    end\n    i+=1\n  end\n  return false\nend\nputs dif_Square(5)\nputs dif_Square(10)\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(-1)\nputs dif_Square(-5)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_Square(",
    "  if n < 0\n    return false\n  end\n  while n % 4 == 0\n    n = n / 4\n  end\n  if n % 8 == 7\n    return true\n  end\n  return false\nend\nputs dif_Square(8)\nputs dif_Square(12)\nputs dif_Square(9)\nputs dif_Square(16)\nputs dif_Square(25)\nputs dif_Square(24)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(54)\nputs dif_Square(55)\nputs dif_Square(56)",
    "  if n < 0\n    return false\n  end\n  if n == 0\n    return true\n  end\n  i = 1\n  while i * i < n\n    j = 1\n    while j * j < n\n      if (i * i) - (j * j) == n\n        return true\n      end\n      j += 1\n    end\n    i += 1\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(100)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "  if n<0\n    return false\n  end\n  sqrt_n = Math.sqrt(n).to_i\n  for i in 1..sqrt_n\n    if i*i == n\n      return true\n    end\n  end\n  return false\nend",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "  if n%2==0\n    return true\n  else\n    return false\n  end\nend",
    "  if n%2 == 0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(10)\nputs dif_Square(11)",
    "  if n % 4 == 0\n    return true\n  else\n    return false\n  end\nend",
    "  if n < 0\n    return false\n  end\n  sqrt = Math.sqrt(n).to_i\n  for i in 1..sqrt\n    if i * i == n\n      return true\n    end\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(24)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(54)\nputs dif_Square(55)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(58)\nputs dif_Square(59)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(62)\nputs dif_Square(63)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(66)\nputs dif_Square(67)\nputs dif_Square(68)\n",
    "  if n%2==0\n    return true\n  else\n    return false\n  end\nend\ndif_Square(4)",
    "\tif (n%2==0)\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "\tif (n < 0)\n\t\treturn false\n\tend\n\ti = 1\n\twhile (i * i < n)\n\t\tj = 1\n\t\twhile (j * j < n)\n\t\t\tif ((i * i - j * j) == n)\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tj += 1\n\t\tend\n\t\ti += 1\n\tend\n\treturn false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(10)\nputs dif_Square(50)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(68)\nputs dif_Square(69)\nputs dif_Square(72)\nputs dif_Square(73)\nputs dif_Square(76)\nputs dif_Square(77)\nputs dif_Square(80)\nputs dif_Square(81)\nputs dif_Square(84)\nputs dif_Square(85)\nputs dif_Square(88)\nputs dif_Square(89)\nputs dif_Square(92)\nputs dif_Square(93)\nputs dif_Square(96)\nputs dif_Square(97)\nputs dif_Square(",
    "  if n < 0\n    return false\n  end\n  sqrt = Math.sqrt(n)\n  if sqrt == sqrt.to_i\n    return true\n  end\n  return false\nend",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_",
    "  if n<0\n    return false\n  end\n  i=1\n  while i*i<=n\n    j=1\n    while j*j<=n\n      if i*i-j*j==n\n        return true\n      end\n      j+=1\n    end\n    i+=1\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(26)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "  if n%2==0\n    return true\n  else\n    return false\n  end\nend\ndif_Square(12)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(3)",
    "  if n < 0\n    return false\n  end\n  i = 1\n  while i * i < n\n    j = 1\n    while j * j < n\n      if (i * i - j * j) == n\n        return true\n      end\n      j += 1\n    end\n    i += 1\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(10)\nputs dif_Square(0)\nputs dif_Square(-1)",
    "\ta = Math.sqrt(n).to_i\n\tif a*a == n\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(25)\nputs dif_Square(24)",
    "    if n%2==0\n        return true\n    else\n        return false\n    end\nend\nputs dif_Square(10)\nputs dif_Square(11)",
    "  if n<0\n    return false\n  end\n  if n==0\n    return true\n  end\n  i=1\n  while i*i<=n\n    j=1\n    while j*j<=n\n      if (i*i)-(j*j)==n\n        return true\n      end\n      j+=1\n    end\n    i+=1\n  end\n  return false\nend\nputs dif_Square(5)\nputs dif_Square(4)\nputs dif_Square(0)\nputs dif_Square(-1)\nputs dif_Square(25)\nputs dif_Square(1)\nputs dif_Square(24)\nputs dif_Square(16)\nputs dif_Square(9)\nputs dif_Square(8)\nputs dif_Square(7)\nputs dif_Square(6)\nputs dif_Square(3)\nputs dif_Square(2)\nputs dif_Square(1)\nputs dif_Square(0)\nputs dif_Square(-1)\nputs dif_Square(-2)\nputs dif_Square(-3)\nputs dif_Square(-4)\nputs dif_Square(-5)\nputs dif_Square(-6)\nputs dif_Square(-7)\nputs dif_Square(-8)\nputs dif_Square(-9)\nputs dif_Square(-10)\nputs dif_Square(-11)\nputs dif_Square(-12)\nputs dif_Square(-13)\nputs dif_Square(-14)\nputs dif_Square(-15)\nputs dif_Square(-16)\nputs dif_Square(-17)\nputs dif_Square(-18)\nputs dif_Square(-19)\nputs dif_Square(-20)\nputs dif_Square(-21)\nputs dif_Square(-22)\nputs dif_Square(-23)\nputs dif_Square(-24)\nputs dif_Square(-25)\nputs d",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "  if n<0\n    return false\n  end\n  for i in 1..n\n    for j in 1..n\n      if i*i-j*j==n\n        return true\n      end\n    end\n  end\n  return false\nend\ndif_Square(25)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(68)\nputs dif_Square(69)\nputs dif_Square(72)\nputs dif_Square(73)\nputs dif_Square(76)\nputs dif_Square(77)\nputs dif_Square(80)\nputs dif_Square(81)\nputs dif_Square(84)\nputs dif_Square(85)\nputs dif_Square(88)\nputs dif_Square(89)\nputs dif_Square(92)\nputs dif_Square(93)\nputs dif_Square(96)\nputs dif_Square(97)\nputs dif_",
    "  if n%2==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(9)\nputs dif_Square(10)",
    "\tif n%4 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(10)\nputs dif_Square(20)\nputs dif_Square(30)\nputs dif_Square(40)\nputs dif_Square(50)\nputs dif_Square(60)\nputs dif_Square(70)\nputs dif_Square(80)\nputs dif_Square(90)\nputs dif_Square(100)",
    "  if n<0\n    return false\n  end\n  if Math.sqrt(n)==Math.sqrt(n).to_i\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(25)\nputs dif_Square(24)",
    "    if (n**0.5)%1==0\n        return true\n    else\n        return false\n    end\nend\ndif_Square(25)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\ndif_Square(4)",
    "  if n%2==0\n    return true\n  else\n    return false\n  end\nend\ndif_Square(16)",
    "  if (Math.sqrt(n)).to_i == Math.sqrt(n)\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(25)\nputs dif_Square(24)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_Square(",
    "  if n%2==0\n    return true\n  else\n    return false\n  end\nend\ndif_Square(12)",
    "    if n<0\n        return false\n    end\n    if n==0\n        return true\n    end\n    i=1\n    while i*i<=n\n        j=1\n        while j*j<=n\n            if i*i-j*j==n\n                return true\n            end\n            j+=1\n        end\n        i+=1\n    end\n    return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(-1)",
    "    if n<0\n        return false\n    end\n    if Math.sqrt(n)%1==0\n        return true\n    else\n        return false\n    end\nend\nputs dif_Square(25)\nputs dif_Square(26)",
    "\tif n<0\n\t\treturn false\n\tend\n\tfor i in 0..n\n\t\tfor j in 0..n\n\t\t\tif i*i-j*j==n\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(-1)\nputs dif_Square(26)\nputs dif_Square(100)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "\tif n%4 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(16)\nputs dif_Square(15)",
    "    if (n**0.5)%1==0\n        return true\n    else\n        return false\n    end\nend\nputs dif_Square(25)\nputs dif_Square(24)\nputs dif_Square(26)",
    "  if n<0\n    return false\n  else\n    return true\n  end\nend\ndif_Square(5)",
    "  if n%2 == 0\n    return true\n  else\n    return false\n  end\nend",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend",
    "\tif (n**0.5)%1 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(12)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(20)\nputs dif_Square(25)\nputs dif_Square(28)\nputs dif_Square(32)\nputs dif_Square(36)\nputs dif_Square(40)\nputs dif_Square(45)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(52)\nputs dif_Square(56)\nputs dif_Square(60)\nputs dif_Square(64)\nputs dif_Square(68)\nputs dif_Square(72)\nputs dif_Square(75)\nputs dif_Square(76)\nputs dif_Square(80)\nputs dif_Square(84)\nputs dif_Square(88)\nputs dif_Square(92)\nputs dif_Square(96)\nputs dif_Square(100)\nputs dif_Square(104)\nputs dif_Square(108)\nputs dif_Square(112)\nputs dif_Square(116)\nputs dif_Square(120)\nputs dif_Square(124)\nputs dif_Square(128)\nputs dif_Square(132)\nputs dif_Square(136)\nputs dif_Square(140)\nputs dif_Square(144)\nputs dif_Square(148)\nputs dif_Square(152)\nputs dif_Square(156)\nputs dif_Square(160)\nputs dif_Square(164)\nputs dif_Square(168)\nputs dif_Square(172)\nputs dif_Square(",
    "  if n % 4 == 0\n    return true\n  else\n    return false\n  end\nend",
    "\tif (n**0.5)%1==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(9)\nputs dif_Square(16)\nputs dif_Square(25)",
    "  if n<0\n    return false\n  end\n  for i in 1..n\n    for j in 1..n\n      if (i*i-j*j)==n\n        return true\n      end\n    end\n  end\n  return false\nend",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "  if (n**0.5)%1 == 0\n    return true\n  else\n    return false\n  end\nend",
    "  if n < 0\n    return false\n  end\n  i = 1\n  while i * i < n\n    j = 1\n    while j * j < n\n      if (i * i - j * j) == n\n        return true\n      end\n      j += 1\n    end\n    i += 1\n  end\n  return false\nend\nputs dif_Square(5)\nputs dif_Square(10)\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(-1)\nputs dif_Square(-5)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(54)\nputs dif_Square(55)\nputs dif_",
    "\tif n % 4 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  sqrt = Math.sqrt(n).to_i\n  for i in 1..sqrt\n    for j in 1..sqrt\n      if i*i - j*j == n\n        return True\n      end\n    end\n  end\n  return False\nend",
    "\tif (n**0.5)%1==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(25)\nputs dif_Square(26)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_Square(",
    "  if n<0\n    return false\n  else\n    for i in 1..n\n      for j in 1..n\n        if i*i-j*j==n\n          return true\n        end\n      end\n    end\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(24)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(54)\nputs dif_Square(55)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(58)\nputs dif_Square(59)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(62)\nputs dif_Square(63)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(66)\nputs dif_Square(67)\nputs dif_Square(68",
    "\tif n%2==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "\tif n<0\n\t\treturn false\n\tend\n\tif n==0\n\t\treturn true\n\tend\n\tfor i in 1..n\n\t\tfor j in 1..n\n\t\t\tif i*i-j*j==n\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(1)\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(16)\nputs dif_Square(15)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend",
    "\tif n<0\n\t\treturn false\n\tend\n\tfor i in 1..n/2\n\t\tif i*i == n\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nputs dif_Square(25)\nputs dif_Square(24)",
    "  if n < 0\n    return false\n  end\n  if n == 0\n    return true\n  end\n  i = 1\n  while i * i < n\n    j = 1\n    while j * j < n\n      if i * i - j * j == n\n        return true\n      end\n      j += 1\n    end\n    i += 1\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(-16)\nputs dif_Square(30)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(16)\nputs dif_Square(25)",
    "  if n < 0\n    return false\n  end\n  if n == 0\n    return true\n  end\n  i = 1\n  while i * i <= n\n    j = 1\n    while j * j <= n\n      if i * i - j * j == n\n        return true\n      end\n      j += 1\n    end\n    i += 1\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(1)\nputs dif_Square(2)\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40",
    "\tif n<0\n\t\treturn false\n\tend\n\tfor i in 1..n/2\n\t\tif i*i==n\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nputs dif_Square(25)\nputs dif_Square(24)\nputs dif_Square(26)",
    "  if n < 0\n    return false\n  end\n  if n == 0\n    return true\n  end\n  i = 1\n  while i * i < n\n    j = 1\n    while j * j <= n\n      if (i * i - j * j) == n\n        return true\n      end\n      j += 1\n    end\n    i += 1\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(10)\nputs dif_Square(0)\nputs dif_Square(1)\nputs dif_Square(26)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(68)\nputs dif_Square(69)\nputs dif_Square(72)\nputs dif_Square(73)\nputs dif_Square(76)\nputs dif_Square(77)\nputs dif_Square(80)\nputs dif_Square(81)\nputs dif_Square(84)\nputs dif_Square(85)\nputs dif_Square(88)\nputs dif_Square(89)\nputs dif_Square(92)\nputs dif_Square(93)\nputs dif_Square(96)\nputs dif_Square(97)\nputs dif_Square(",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(68)\nputs dif_Square(69)\nputs dif_Square(72)\nputs dif_Square(73)\nputs dif_Square(76)\nputs dif_Square(77)\nputs dif_Square(80)\nputs dif_Square(81)\nputs dif_Square(84)\nputs dif_Square(85)\nputs dif_Square(88)\nputs dif_Square(89)\nputs dif_Square(92)\nputs dif_Square(93)\nputs dif_Square(96)\nputs dif_Square(97)\nputs dif_",
    "  if n%2==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(8)\nputs dif_Square(9)",
    "\tif n%2==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(16)\nputs dif_Square(25)",
    "\tif n % 4 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_Square(",
    "  if n < 0\n    return false\n  end\n  if n == 0\n    return true\n  end\n  i = 1\n  while i * i <= n\n    j = 1\n    while j * j <= n\n      if i * i - j * j == n\n        return true\n      end\n      j += 1\n    end\n    i += 1\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(10)\nputs dif_Square(0)\nputs dif_Square(-1)",
    "  if n%2==0\n    return true\n  else\n    return false\n  end\nend\ndif_Square(16)",
    "\tif n<0\n\t\treturn false\n\tend\n\tfor i in 1..n\n\t\tfor j in 1..n\n\t\t\tif i*i-j*j==n\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(54)\nputs dif_Square(55)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(58)\nputs dif_Square(59)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(62)\nputs dif_Square(63)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(66)\nputs dif_Square(67)\nputs dif_Square(68)\nput",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(68)\nputs dif_Square(69)\nputs dif_Square(72)\nputs dif_Square(73)\nputs dif_Square(76)\nputs dif_Square(77)\nputs dif_Square(80)\nputs dif_Square(81)\nputs dif_Square(84)\nputs dif_Square(85)\nputs dif_Square(88)\nputs dif_Square(89)\nputs dif_Square(92)\nputs dif_Square(93)\nputs dif_Square(96)\nputs dif_Square(97)\nputs dif_Square(",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(68)\nputs dif_Square(69)\nputs dif_Square(72)\nputs dif_Square(73)\nputs dif_Square(76)\nputs dif_Square(77)\nputs dif_Square(80)\nputs dif_Square(81)\nputs dif_Square(84)\nputs dif_Square(85)\nputs dif_Square(88)\nputs dif_Square(89)\nputs dif_Square(92)\nputs dif_Square(93)\nputs dif_Square(96)\nputs dif_Square(97)\nputs dif_",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(8)\nputs dif_Square(9)",
    "  if n % 4 == 0\n    return true\n  else\n    return false\n  end\nend",
    "  if n<0\n    return false\n  end\n  while n%4==0\n    n=n/4\n  end\n  if n%8==7\n    return true\n  else\n    return false\n  end\nend",
    "\tif n < 0\n\t\treturn false\n\tend\n\ti = 1\n\twhile i * i <= n\n\t\tj = 1\n\t\twhile j * j <= n\n\t\t\tif (i * i - j * j) == n\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tj += 1\n\t\tend\n\t\ti += 1\n\tend\n\treturn false\nend",
    "\tif n%4==0\n\t\tputs \"True\"\n\telse\n\t\tputs \"False\"\n\tend\nend\nputs \"Enter the number\"\nn=gets.chomp.to_i\ndif_Square(n)",
    "    if n%4==0\n        return true\n    else\n        return false\n    end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "  if n<0\n    return false\n  end\n  if n==0\n    return true\n  end\n  i=1\n  while i*i<n\n    j=1\n    while j*j<n\n      if i*i-j*j==n\n        return true\n      end\n      j+=1\n    end\n    i+=1\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(1)\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(9)\nputs dif_Square(16)\nputs dif_Square(25)\nputs dif_Square(36)\nputs dif_Square(49)\nputs dif_Square(64)\nputs dif_Square(81)\nputs dif_Square(100)\nputs dif_Square(121)\nputs dif_Square(144)\nputs dif_Square(169)\nputs dif_Square(196)\nputs dif_Square(225)\nputs dif_Square(256)\nputs dif_Square(289)\nputs dif_Square(324)\nputs dif_Square(361)\nputs dif_Square(400)\nputs dif_Square(441)\nputs dif_Square(484)\nputs dif_Square(529)\nputs dif_Square(576)\nputs dif_Square(625)\nputs dif_Square(676)\nputs dif_Square(729)\nputs dif_Square(784)\nputs dif_Square(841)\nputs dif_Square(900)\nputs dif_Square(961)\nputs dif_Square(1024)\nputs dif_Square(1089)\nputs dif_Square(1156)\nputs dif_Square(1225)\nputs dif_Square(1296)\nputs dif_Square(1369)\nput",
    "  if n.to_s.split('').include?('-')\n    n = n.to_s.split('').delete('-').join('').to_i\n  end\n  for i in 1..n\n    for j in 1..n\n      if i*i - j*j == n\n        return true\n      end\n    end\n  end\n  return false\nend\nputs dif_Square(9)\nputs dif_Square(16)\nputs dif_Square(25)\nputs dif_Square(4)\nputs dif_Square(3)\nputs dif_Square(-4)\nputs dif_Square(-3)\nputs dif_Square(-16)\nputs dif_Square(-25)\nputs dif_Square(-9)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(3)",
    "  if n<0\n    return false\n  end\n  if n==0\n    return true\n  end\n  i=1\n  while i*i<=n\n    j=1\n    while j*j<=n\n      if (i*i)-(j*j)==n\n        return true\n      end\n      j+=1\n    end\n    i+=1\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(10)\nputs dif_Square(0)\nputs dif_Square(-1)\nputs dif_Square(26)",
    "\tif n<0\n\t\treturn false\n\tend\n\tfor i in 1..n\n\t\tfor j in 1..n\n\t\t\tif i*i-j*j==n\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(10)\nputs dif_Square(0)\nputs dif_Square(-1)\nputs dif_Square(-25)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  if n<0\n    return false\n  end\n  if n==0\n    return true\n  end\n  i=1\n  while i*i<=n\n    j=1\n    while j*j<=n\n      if i*i-j*j==n\n        return true\n      end\n      j+=1\n    end\n    i+=1\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(-1)\nputs dif_Square(26)",
    "  if n < 0\n    return false\n  end\n  i = 1\n  while i**2 < n\n    j = 1\n    while j**2 < n\n      if i**2 - j**2 == n\n        return true\n      end\n      j += 1\n    end\n    i += 1\n  end\n  return false\nend",
    "\tif n<0\n\t\treturn false\n\tend\n\tfor i in 1..n\n\t\tfor j in 1..n\n\t\t\tif i*i-j*j==n\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nputs dif_Square(9)\nputs dif_Square(8)\nputs dif_Square(10)\nputs dif_Square(25)\nputs dif_Square(24)\nputs dif_Square(26)\nputs dif_Square(0)\nputs dif_Square(-1)\nputs dif_Square(-2)\nputs dif_Square(-3)\nputs dif_Square(-4)\nputs dif_Square(-5)\nputs dif_Square(-6)\nputs dif_Square(-7)\nputs dif_Square(-8)\nputs dif_Square(-9)\nputs dif_Square(-10)\nputs dif_Square(-11)\nputs dif_Square(-12)\nputs dif_Square(-13)\nputs dif_Square(-14)\nputs dif_Square(-15)\nputs dif_Square(-16)\nputs dif_Square(-17)\nputs dif_Square(-18)\nputs dif_Square(-19)\nputs dif_Square(-20)\nputs dif_Square(-21)\nputs dif_Square(-22)\nputs dif_Square(-23)\nputs dif_Square(-24)\nputs dif_Square(-25)\nputs dif_Square(-26)\nputs dif_Square(-27)\nputs dif_Square(-28)\nputs dif_Square(-29)\nputs dif_Square(-30)\nputs dif_Square(-31)\nputs dif_Square(-32)\nputs dif_Square(-33)\nputs dif_Square(-34)\nputs dif_Square(-35)\nputs dif_Square(-36)\nputs dif_Square(-37)\nput",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(68)\nputs dif_Square(69)\nputs dif_Square(72)\nputs dif_Square(73)\nputs dif_Square(76)\nputs dif_Square(77)\nputs dif_Square(80)\nputs dif_Square(81)\nputs dif_Square(84)\nputs dif_Square(85)\nputs dif_Square(88)\nputs dif_Square(89)\nputs dif_Square(92)\nputs dif_Square(93)\nputs dif_Square(96)\nputs dif_Square(97)\nputs dif_",
    "\tfor i in 1..n\n\t\tfor j in 1..n\n\t\t\tif i*i - j*j == n\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nputs dif_Square(5)\nputs dif_Square(6)",
    "\tif n % 4 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tif n<0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(-4)",
    "\tif n<0\n\t\treturn false\n\tend\n\tfor i in 1..n\n\t\tfor j in 1..n\n\t\t\tif i*i-j*j==n\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(10)\nputs dif_Square(26)",
    "\tif n<0\n\t\treturn false\n\telse\n\t\tfor i in 1..n\n\t\t\tfor j in 1..n\n\t\t\t\tif i*i-j*j==n\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(10)\nputs dif_Square(0)\nputs dif_Square(-1)\nputs dif_Square(-4)\nputs dif_Square(-9)\nputs dif_Square(-16)\nputs dif_Square(-25)\nputs dif_Square(-36)\nputs dif_Square(-49)\nputs dif_Square(-64)\nputs dif_Square(-81)\nputs dif_Square(-100)\nputs dif_Square(-121)\nputs dif_Square(-144)\nputs dif_Square(-169)\nputs dif_Square(-196)\nputs dif_Square(-225)\nputs dif_Square(-256)\nputs dif_Square(-289)\nputs dif_Square(-324)\nputs dif_Square(-361)\nputs dif_Square(-400)\nputs dif_Square(-441)\nputs dif_Square(-484)\nputs dif_Square(-529)\nputs dif_Square(-576)\nputs dif_Square(-625)\nputs dif_Square(-676)\nputs dif_Square(-729)\nputs dif_Square(-784)\nputs dif_Square(-841)\nputs dif_Square(-900)\nputs dif_Square(-961)\nputs dif_Square(-1024)\nputs dif_Square(-1089)\nputs dif_Square(-1156)\nputs dif_Square(-1225)\nputs dif_Square(-1296)\nputs dif_Square(-1369)\nputs dif_Square(-1444)\nputs d",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "  if n < 0\n    return false\n  end\n  while n % 4 == 0\n    n = n / 4\n  end\n  if n % 8 == 7\n    return true\n  end\n  return false\nend",
    "  if n < 0\n    return false\n  end\n  while n % 4 == 0\n    n = n / 4\n  end\n  if n % 8 == 7\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(54)\nputs dif_Square(55)\nputs dif_Square(56)\nputs dif_Square",
    "  if n%2==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(10)\nputs dif_Square(11)",
    "    if n % 4 == 0\n        return true\n    else\n        return false\n    end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "\tif n<0\n\t\treturn false\n\tend\n\tfor i in 1..n\n\t\tfor j in 1..n\n\t\t\tif i*i-j*j==n\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(-1)",
    "  if n < 0\n    return false\n  end\n  while n % 4 == 0\n    n = n / 4\n  end\n  if n % 8 == 7\n    return true\n  end\n  return false\nend\nputs dif_Square(6)\nputs dif_Square(4)\nputs dif_Square(9)\nputs dif_Square(16)\nputs dif_Square(25)\nputs dif_Square(36)\nputs dif_Square(49)\nputs dif_Square(64)\nputs dif_Square(81)\nputs dif_Square(100)\nputs dif_Square(121)\nputs dif_Square(144)\nputs dif_Square(169)\nputs dif_Square(196)\nputs dif_Square(225)\nputs dif_Square(256)\nputs dif_Square(289)\nputs dif_Square(324)\nputs dif_Square(361)\nputs dif_Square(400)\nputs dif_Square(441)\nputs dif_Square(484)\nputs dif_Square(529)\nputs dif_Square(576)\nputs dif_Square(625)\nputs dif_Square(676)\nputs dif_Square(729)\nputs dif_Square(784)\nputs dif_Square(841)\nputs dif_Square(900)\nputs dif_Square(961)\nputs dif_Square(1024)\nputs dif_Square(1089)\nputs dif_Square(1156)\nputs dif_Square(1225)\nputs dif_Square(1296)\nputs dif_Square(1369)\nputs dif_Square(1444)\nputs dif_Square(1521)\nputs dif_Square(1600)\nputs dif_Square(1681)\nputs dif_Square(1764)\nputs dif_Square(1849)\nputs dif_Square(1936)\nputs dif_Square",
    "  sqrt_n = Math.sqrt(n).to_i\n  for i in 1..sqrt_n\n    j = Math.sqrt(n + i * i).to_i\n    if i * i + j * j == n\n      return True\n    end\n  end\n  return False\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(10)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(54)\nputs dif_Square(55)\nputs dif_Square(",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "  if n < 0\n    return false\n  end\n  sqrt = Math.sqrt(n).to_i\n  for i in 1..sqrt\n    j = Math.sqrt(n - i*i).to_i\n    if i*i + j*j == n\n      return true\n    end\n  end\n  return false\nend",
    "\tif n<0\n\t\treturn false\n\tend\n\tfor i in 1..n\n\t\tfor j in 1..n\n\t\t\tif i*i-j*j==n\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(10)\nputs dif_Square(50)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "  if n<0\n    return false\n  end\n  if Math.sqrt(n)%1==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(0)\nputs dif_Square(-1)",
    "\tif n%2==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_",
    "\tif n<0\n\t\treturn false\n\telse\n\t\tfor i in 1..n\n\t\t\tfor j in 1..n\n\t\t\t\tif i*i-j*j==n\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nputs dif_Square(5)\nputs dif_Square(6)",
    "  if n<0\n    puts \"False\"\n  else\n    for i in 1..n\n      for j in 1..n\n        if i**2-j**2==n\n          puts \"True\"\n          return\n        end\n      end\n    end\n    puts \"False\"\n  end\nend\ndif_Square(10)\ndif_Square(25)\ndif_Square(24)",
    "\tif n<0\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend\nputs dif_Square(5)\nputs dif_Square(-5)\nputs dif_Square(0)",
    "  if n % 4 == 0\n    return true\n  else\n    return false\n  end\nend",
    "  if n % 4 == 0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(25)\nputs dif_Square(24)\nputs dif_Square(26)",
    "  if n < 0\n    return false\n  end\n  sqrt = Math.sqrt(n).to_i\n  for i in 0..sqrt\n    for j in 0..sqrt\n      if i*i - j*j == n\n        return true\n      end\n    end\n  end\n  return false\nend\nputs dif_Square(5)\nputs dif_Square(10)\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(-1)",
    "\tif n % 4 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  if n < 0\n    return false\n  end\n  i = 1\n  while i * i <= n\n    j = 1\n    while j * j <= n\n      if (i * i - j * j) == n\n        return true\n      end\n      j += 1\n    end\n    i += 1\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(24)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(54)\nputs dif_Square(55)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(58)\nputs dif_Square(59)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(62)\nputs dif_Square(63)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(66)",
    "  if n < 0\n    return false\n  end\n  if n == 0\n    return true\n  end\n  i = 1\n  while i * i < n\n    j = 1\n    while j * j < n\n      if i * i - j * j == n\n        return true\n      end\n      j += 1\n    end\n    i += 1\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(1)\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41",
    "  if n < 0\n    return false\n  end\n  if Math.sqrt(n) == Math.sqrt(n).to_i\n    return true\n  end\n  return false\nend",
    "  if n == 0\n    return true\n  end\n  if n < 0\n    n = -n\n  end\n  i = 1\n  while i * i <= n\n    j = Math.sqrt(n - (i * i)).to_i\n    if (i * i + j * j) == n\n      return true\n    end\n    i += 1\n  end\n  return false\nend\nputs dif_Square(0)\nputs dif_Square(1)\nputs dif_Square(2)\nputs dif_Square(3)\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square",
    "  if n%2==0\n    return true\n  else\n    return false\n  end\nend\ndif_Square(10)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(16)\nputs dif_Square(25)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(16)\nputs dif_Square(15)",
    "\tif n<0\n\t\treturn false\n\tend\n\tfor i in 1..n\n\t\tif i*i>n\n\t\t\treturn false\n\t\telsif i*i==n\n\t\t\treturn true\n\t\tend\n\tend\nend\nputs dif_Square(25)\nputs dif_Square(24)\nputs dif_Square(26)\nputs dif_Square(0)\nputs dif_Square(-1)\nputs dif_Square(1)\nputs dif_Square(4)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_",
    "\tif n%2==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(7)\nputs dif_Square(6)",
    "  if (n % 4 == 0)\n    return true\n  else\n    return false\n  end\nend",
    "    if n%2==0\n        return true\n    else\n        return false\n    end\nend\nputs dif_Square(10)\nputs dif_Square(11)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(16)\nputs dif_Square(25)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "  if n%2==0\n    return true\n  else\n    return false\n  end\nend\ndif_Square(6)",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "\tif n<0\n\t\treturn false\n\tend\n\tfor i in 1..n\n\t\tfor j in 1..n\n\t\t\tif i*i-j*j==n\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(54)\nputs dif_Square(55)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(58)\nputs dif_Square(59)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(62)\nputs dif_Square(63)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(66)\nputs dif_Square(67)\nputs dif_Square(68)\nput",
    "  if n<0\n    return false\n  end\n  while n%2==0\n    n=n/2\n  end\n  if n%2==1\n    return true\n  end\nend",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "    if n<0\n        return false\n    end\n    if n==0\n        return true\n    end\n    i=1\n    while i*i<=n\n        j=1\n        while j*j<=n\n            if i*i-j*j==n\n                return true\n            end\n            j+=1\n        end\n        i+=1\n    end\n    return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(0)\nputs dif_Square(1)\nputs dif_Square(2)\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square",
    "    if n < 0\n        return false\n    end\n    sqrt = Math.sqrt(n).to_i\n    for i in 1..sqrt\n        j = Math.sqrt(n - i*i).to_i\n        if i*i + j*j == n\n            return true\n        end\n    end\n    return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(10)\nputs dif_Square(26)",
    "\tif n < 0\n\t\treturn false\n\tend\n\tfor i in 1..n\n\t\tfor j in 1..n\n\t\t\tif i*i - j*j == n\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nputs dif_Square(25)\nputs dif_Square(26)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(6)\nputs dif_Square(7)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(10)\nputs dif_Square(11)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(14)\nputs dif_Square(15)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(18)\nputs dif_Square(19)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(22)\nputs dif_Square(23)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(26)\nputs dif_Square(27)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(30)\nputs dif_Square(31)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(34)\nputs dif_Square(35)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(38)\nputs dif_Square(39)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(42)\nputs dif_Square(43)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(46)\nputs dif_Square(47)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(50)\nputs dif_Square(51)\nputs dif_",
    "  if n%4==0\n    return true\n  else\n    return false\n  end\nend\nputs dif_Square(4)\nputs dif_Square(5)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(68)\nputs dif_Square(69)\nputs dif_Square(72)\nputs dif_Square(73)\nputs dif_Square(76)\nputs dif_Square(77)\nputs dif_Square(80)\nputs dif_Square(81)\nputs dif_Square(84)\nputs dif_Square(85)\nputs dif_Square(88)\nputs dif_Square(89)\nputs dif_Square(92)\nputs dif_Square(93)\nputs dif_Square(96)\nputs dif_Square(97)\nputs dif_",
    "  sqrt = Math.sqrt(n).to_i\n  for i in 1..sqrt\n    j = Math.sqrt(n + i*i).to_i\n    if i*i + j*j == n\n      return true\n    end\n  end\n  return false\nend\nputs dif_Square(25)\nputs dif_Square(3)\nputs dif_Square(10)\nputs dif_Square(50)",
    "\tif n%4==0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nputs dif_Square(4)\nputs dif_Square(5)\nputs dif_Square(8)\nputs dif_Square(9)\nputs dif_Square(12)\nputs dif_Square(13)\nputs dif_Square(16)\nputs dif_Square(17)\nputs dif_Square(20)\nputs dif_Square(21)\nputs dif_Square(24)\nputs dif_Square(25)\nputs dif_Square(28)\nputs dif_Square(29)\nputs dif_Square(32)\nputs dif_Square(33)\nputs dif_Square(36)\nputs dif_Square(37)\nputs dif_Square(40)\nputs dif_Square(41)\nputs dif_Square(44)\nputs dif_Square(45)\nputs dif_Square(48)\nputs dif_Square(49)\nputs dif_Square(52)\nputs dif_Square(53)\nputs dif_Square(56)\nputs dif_Square(57)\nputs dif_Square(60)\nputs dif_Square(61)\nputs dif_Square(64)\nputs dif_Square(65)\nputs dif_Square(68)\nputs dif_Square(69)\nputs dif_Square(72)\nputs dif_Square(73)\nputs dif_Square(76)\nputs dif_Square(77)\nputs dif_Square(80)\nputs dif_Square(81)\nputs dif_Square(84)\nputs dif_Square(85)\nputs dif_Square(88)\nputs dif_Square(89)\nputs dif_Square(92)\nputs dif_Square(93)\nputs dif_Square(96)\nputs dif_Square(97)\nputs dif_"
  ]
}
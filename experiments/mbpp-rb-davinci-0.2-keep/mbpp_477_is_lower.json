{
  "name": "mbpp_477_is_lower",
  "language": "rb",
  "prompt": "# Write a python function to convert the given string to lower case.\ndef is_lower(string)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_477_is_lower.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_lower\n    candidate = method(:is_lower)\n    assert_equal(\"invalid\", candidate.call(\"InValid\"))\n    assert_equal(\"true\", candidate.call(\"TruE\"))\n    assert_equal(\"sentence\", candidate.call(\"SenTenCE\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "\tstring.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    puts \"String is lowercase\"\n  else\n    puts \"String is not lowercase\"\n  end\nend"
  ]
}
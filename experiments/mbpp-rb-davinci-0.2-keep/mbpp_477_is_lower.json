{
  "name": "mbpp_477_is_lower",
  "language": "rb",
  "prompt": "# Write a python function to convert the given string to lower case.\ndef is_lower(string)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_477_is_lower.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_is_lower\n    candidate = method(:is_lower)\n    assert_equal(\"invalid\", candidate.call(\"InValid\"))\n    assert_equal(\"true\", candidate.call(\"TruE\"))\n    assert_equal(\"sentence\", candidate.call(\"SenTenCE\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "\tstring.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    puts \"String is lowercase\"\n  else\n    puts \"String is not lowercase\"\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend\nputs is_lower(\"HELLO\")",
    "  if string == string.downcase\n    puts \"The string is already in lower case\"\n  else\n    puts string.downcase\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    puts \"String is in lower case\"\n  else\n    puts \"String is not in lower case\"\n  end\nend",
    "  if string == string.downcase\n    puts \"String is already in lower case\"\n  else\n    puts string.downcase\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "    string.downcase\nend",
    "  if string == string.downcase\n    puts \"The given string is in lower case\"\n  else\n    puts \"The given string is not in lower case\"\n  end\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase == string\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string.length == 0\n    return string\n  end\n  if string[0] >= 'A' && string[0] <= 'Z'\n    string[0] = string[0].downcase\n  end\n  return string[0] + is_lower(string[1..-1])\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    puts \"The given string is in lower case\"\n  else\n    puts \"The given string is not in lower case\"\n  end\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend\nputs is_lower(\"HELLO\")\nputs is_lower(\"hello\")",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    puts \"String is already in lower case\"\n  else\n    puts \"String is not in lower case\"\n  end\nend",
    "  if string == string.downcase\n    puts \"String is already in lower case\"\n  else\n    puts string.downcase\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    puts \"String is already in lower case\"\n  else\n    puts \"String is not in lower case\"\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "\tif string == string.downcase\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string.length > 0\n    string.downcase\n  else\n    string\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  return string.downcase\nend",
    "  if string == string.downcase\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend\nputs is_lower(\"HELLO\")\nputs is_lower(\"hello\")",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend\nputs is_lower(\"HELLO\")",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string.downcase == string\n    return true\n  else\n    return false\n  end\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend",
    "    if string == string.downcase\n        puts \"True\"\n    else\n        puts \"False\"\n    end\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend\nis_lower(\"Hello\")\nis_lower(\"hello\")",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase == string\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  string.downcase\nend",
    "  if string == string.downcase\n    return true\n  else\n    return false\n  end\nend"
  ]
}
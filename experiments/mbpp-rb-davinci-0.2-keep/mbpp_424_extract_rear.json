{
  "name": "mbpp_424_extract_rear",
  "language": "rb",
  "prompt": "# Write a function to extract only the rear index element of each string in the given tuple.\ndef extract_rear(test_tuple)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_424_extract_rear.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_extract_rear\n    candidate = method(:extract_rear)\n    assert_equal([\"s\", \"r\", \"s\"], candidate.call([\"Mers\", \"for\", \"Vers\"]))\n    assert_equal([\"e\", \"r\", \"e\"], candidate.call([\"Avenge\", \"for\", \"People\"]))\n    assert_equal([\"a\", \"t\", \"o\"], candidate.call([\"Gotta\", \"get\", \"go\"]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map{|x| x[-1]}\nend\ntest_tuple = [\"Python\", \"PHP\", \"Java\", \"C#\"]\nprint extract_rear(test_tuple)",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "    rear_index = test_tuple.map { |x| x[-1] }\n    return rear_index\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map {|x| x[-1]}\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  result = []\n  test_tuple.each do |str|\n    result << str[-1]\n  end\n  result\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map{|x| x[-1]}\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "    test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map{|x| x[-1]}\nend\ntest_tuple = [\"Python\", \"PHP\", \"JavaScript\", \"Java\"]\nprint extract_rear(test_tuple)",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |e| e[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map{|x| x[-1]}\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |e| e[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.each do |str|\n    puts str[-1]\n  end\nend\nextract_rear(test_tuple)",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.each do |str|\n    puts str[-1]\n  end\nend\nextract_rear(test_tuple)",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |e| e[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  # write your code here\n  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map {|x| x[-1]}\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map {|i| i[-1]}\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |x| x[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend",
    "  test_tuple.map { |str| str[-1] }\nend"
  ]
}
{
  "name": "mbpp_222_check_type",
  "language": "rb",
  "prompt": "# Write a function to check if all the elements in tuple have same data type or not.\ndef check_type(test_tuple)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_222_check_type.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_check_type\n    candidate = method(:check_type)\n    assert_equal(true, candidate.call([5, 6, 7, 3, 5, 6]))\n    assert_equal(false, candidate.call([1, 2, \"4\"]))\n    assert_equal(true, candidate.call([3, 2, 1, 4, 5]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  test_tuple.each do |i|\n    if test_tuple[0].class != i.class\n      return false\n    end\n  end\n  true\nend",
    "  test_tuple.each do |i|\n    if test_tuple[0].class != i.class\n      return false\n    end\n  end\n  return true\nend",
    "  test_tuple.each do |i|\n    if test_tuple[0].class != i.class\n      return false\n    end\n  end\n  return true\nend",
    "  test_tuple.each do |x|\n    if test_tuple[0].class != x.class\n      return false\n    end\n  end\n  return true\nend",
    "  test_tuple.each do |i|\n    if test_tuple[0].class == i.class\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  test_tuple.each do |i|\n    if test_tuple[0].class != i.class\n      return false\n    end\n  end\n  return true\nend",
    "  test_tuple.all? { |elem| elem.is_a?(test_tuple[0].class) }\nend",
    "  test_tuple.each do |i|\n    if test_tuple[0].class != i.class\n      return false\n    end\n  end\n  return true\nend",
    "  test_tuple.each do |i|\n    if test_tuple[0].class != i.class\n      return false\n    end\n  end\n  return true\nend",
    "  test_tuple.each do |i|\n    if test_tuple[0].class != i.class\n      return false\n    end\n  end\n  return true\nend",
    "  test_tuple.each do |i|\n    if test_tuple[0].class != i.class\n      return false\n    end\n  end\n  return true\nend",
    "  test_tuple.each do |i|\n    if test_tuple[0].class == i.class\n      puts \"True\"\n    else\n      puts \"False\"\n    end\n  end\nend\ncheck_type([1,2,3])\ncheck_type([\"a\",\"b\",\"c\"])\ncheck_type([1,\"a\",3])",
    "  test_tuple.each do |x|\n    if test_tuple[0].class != x.class\n      return false\n    end\n  end\n  return true\nend",
    "  test_tuple.each do |x|\n    return false if test_tuple[0].class != x.class\n  end\n  true\nend",
    "  test_tuple.each do |i|\n    if test_tuple[0].class != i.class\n      return false\n    end\n  end\n  return true\nend",
    "  test_tuple.each do |i|\n    if test_tuple[0].class != i.class\n      return false\n    end\n  end\n  return true\nend",
    "  test_tuple.each do |i|\n    if test_tuple[0].class != i.class\n      return false\n    end\n  end\n  return true\nend",
    "  test_tuple.each do |i|\n    if test_tuple[0].class != i.class\n      return false\n    end\n  end\n  return true\nend",
    "  test_tuple.each do |i|\n    if test_tuple[0].class != i.class\n      return false\n    end\n  end\n  return true\nend",
    "  test_tuple.each do |i|\n    if test_tuple[0].class != i.class\n      return false\n    end\n  end\n  return true\nend"
  ]
}
{
  "name": "mbpp_430_parabola_directrix",
  "language": "rb",
  "prompt": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b.to_f / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp2n313cme\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp2n313cme.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-0.3>\n\ndiff:\n? -198\n?  0.3\n?  ???\n===============================================================================\n\nFinished in 0.006057865 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.07 tests/s, 165.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(c - b**2 / (4 * a)) / a\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpj6heq7il\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpj6heq7il.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007432501 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.54 tests/s, 134.54 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  # y = -(a/b)x - (c/b)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmpnkuhww9o.rb:33: class definition in method body\nclass TestHumanEval < Test::Unit::TestCase\n^~~~~~~~~~~~~~~~~~~\n/tmp/tmpnkuhww9o.rb:40: syntax error, unexpected end-of-input, expecting `end'\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -c / b\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpc01dhpu1\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpc01dhpu1.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.008374707 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n119.41 tests/s, 119.41 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  # TODO: Return the directrix of a parabola defined by the equation:\n  # y = ax^2 + bx + c\n  return (-b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123498,
      "stdout": "Loaded suite /tmp/tmp5nwh2oso\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5nwh2oso.rb:11:in `test_parabola_directrix'\n      8: class TestHumanEval < Test::Unit::TestCase\n      9:   def test_parabola_directrix\n     10:     candidate = method(:parabola_directrix)\n  => 11:     assert_equal(-198, candidate.call(5, 3, 2))\n     12:     assert_equal(-2336, candidate.call(9, 8, 4))\n     13:     assert_equal(-130, candidate.call(2, 4, 6))\n     14:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006190502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n161.54 tests/s, 161.54 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -c / b\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpc01dhpu1\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpc01dhpu1.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.008374707 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n119.41 tests/s, 119.41 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b.to_f / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp2n313cme\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp2n313cme.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-0.3>\n\ndiff:\n? -198\n?  0.3\n?  ???\n===============================================================================\n\nFinished in 0.006057865 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.07 tests/s, 165.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4 * a * c) / (4 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpp9h1hfmi\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpp9h1hfmi.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007608324 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n131.43 tests/s, 131.43 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  # Write your code here.\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123498,
      "stdout": "Loaded suite /tmp/tmpnt0jxcah\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpnt0jxcah.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.006177282 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n161.88 tests/s, 161.88 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b.to_f / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp2n313cme\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp2n313cme.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-0.3>\n\ndiff:\n? -198\n?  0.3\n?  ???\n===============================================================================\n\nFinished in 0.006057865 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.07 tests/s, 165.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  return -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp6bhkf2ly\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp6bhkf2ly.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007442124 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.37 tests/s, 134.37 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  # TODO: return the directrix\n  -c/b\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123498,
      "stdout": "Loaded suite /tmp/tmpimxcax8b\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpimxcax8b.rb:10:in `test_parabola_directrix'\n      7: class TestHumanEval < Test::Unit::TestCase\n      8:   def test_parabola_directrix\n      9:     candidate = method(:parabola_directrix)\n  => 10:     assert_equal(-198, candidate.call(5, 3, 2))\n     11:     assert_equal(-2336, candidate.call(9, 8, 4))\n     12:     assert_equal(-130, candidate.call(2, 4, 6))\n     13:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.00625497 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n159.87 tests/s, 159.87 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  return -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123498,
      "stdout": "Loaded suite /tmp/tmpxtae0uat\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpxtae0uat.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005946339 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n168.17 tests/s, 168.17 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b.to_f / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp2n313cme\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp2n313cme.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-0.3>\n\ndiff:\n? -198\n?  0.3\n?  ???\n===============================================================================\n\nFinished in 0.006057865 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.07 tests/s, 165.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  # Your code here\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpa12u4zi5\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpa12u4zi5.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<nil>\n===============================================================================\n\nFinished in 0.007262102 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n137.70 tests/s, 137.70 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  return -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmp6bhkf2ly\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp6bhkf2ly.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007442124 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.37 tests/s, 134.37 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  # y = -(a/b)x - (c/b)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)(y - (c/b))\n  # x = -(b/a)(y + (c/b))\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b/a)y - (c/a)\n  # x = -(b\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmpxm7i9zwv.rb:33: class definition in method body\nclass TestHumanEval < Test::Unit::TestCase\n^~~~~~~~~~~~~~~~~~~\n/tmp/tmpxm7i9zwv.rb:40: syntax error, unexpected end-of-input, expecting `end'\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b/(2*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpe6m6pial\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpe6m6pial.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007147711 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n139.90 tests/s, 139.90 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c) / (4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp201a5jpp\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp201a5jpp.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005798759 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n172.45 tests/s, 172.45 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(c - b**2 / (4 * a)) / a\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpj6heq7il\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpj6heq7il.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007432501 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.54 tests/s, 134.54 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b**2 - 4*a*c)/(4*a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmpkbf0epdv\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpkbf0epdv.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.005892319 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n169.71 tests/s, 169.71 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b.to_f / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp2n313cme\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp2n313cme.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-0.3>\n\ndiff:\n? -198\n?  0.3\n?  ???\n===============================================================================\n\nFinished in 0.006057865 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.07 tests/s, 165.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -b / (2 * a)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp5zr0km_z\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp5zr0km_z.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.006044315 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.44 tests/s, 165.44 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(c - b**2 / (4 * a)) / a\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1666123496,
      "stdout": "Loaded suite /tmp/tmpj6heq7il\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmpj6heq7il.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-1>\n\ndiff:\n? -198\n===============================================================================\n\nFinished in 0.007432501 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n134.54 tests/s, 134.54 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b.to_f / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp2n313cme\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp2n313cme.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<-0.3>\n\ndiff:\n? -198\n?  0.3\n?  ???\n===============================================================================\n\nFinished in 0.006057865 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n165.07 tests/s, 165.07 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a function to find the directrix of a parabola.\ndef parabola_directrix(a, b, c)\n  -(b / (2 * a))\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_parabola_directrix\n    candidate = method(:parabola_directrix)\n    assert_equal(-198, candidate.call(5, 3, 2))\n    assert_equal(-2336, candidate.call(9, 8, 4))\n    assert_equal(-130, candidate.call(2, 4, 6))\n  end\nend\n",
      "timestamp": 1665510398,
      "stdout": "Loaded suite /tmp/tmp_937l22u\nStarted\nF\n===============================================================================\nFailure: test_parabola_directrix(TestHumanEval)\n/tmp/tmp_937l22u.rb:9:in `test_parabola_directrix'\n      6: class TestHumanEval < Test::Unit::TestCase\n      7:   def test_parabola_directrix\n      8:     candidate = method(:parabola_directrix)\n  =>  9:     assert_equal(-198, candidate.call(5, 3, 2))\n     10:     assert_equal(-2336, candidate.call(9, 8, 4))\n     11:     assert_equal(-130, candidate.call(2, 4, 6))\n     12:   end\n<-198> expected but was\n<0>\n===============================================================================\n\nFinished in 0.005770502 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n173.30 tests/s, 173.30 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
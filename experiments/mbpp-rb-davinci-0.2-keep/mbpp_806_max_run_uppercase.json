{
  "name": "mbpp_806_max_run_uppercase",
  "language": "rb",
  "prompt": "# Write a function to find maximum run of uppercase characters in the given string.\ndef max_run_uppercase(test_str)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_806_max_run_uppercase.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_max_run_uppercase\n    candidate = method(:max_run_uppercase)\n    assert_equal(5, candidate.call(\"GeMKSForGERksISBESt\"))\n    assert_equal(6, candidate.call(\"PrECIOusMOVemENTSYT\"))\n    assert_equal(4, candidate.call(\"GooGLEFluTTER\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  count = 0\n  max_count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      count += 1\n    else\n      count = 0\n    end\n    max_count = count if count > max_count\n  end\n  max_count\nend",
    "  test_str.chars.chunk { |c| c.upcase == c }.max_by { |k, v| v.size }.last.size\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.match(/[A-Z]/)\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.split('').each do |c|\n    if c == c.upcase\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      count += 1\n      max_count = count if count > max_count\n    else\n      count = 0\n    end\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      count += 1\n    else\n      max_count = count if count > max_count\n      count = 0\n    end\n  end\n  max_count = count if count > max_count\n  max_count\nend",
    "  test_str.chars.chunk { |c| c.upcase == c }.map { |c, a| a.size }.max\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      count += 1\n      max_count = count if count > max_count\n    else\n      count = 0\n    end\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.match(/[A-Z]/)\n      count += 1\n      max_count = count if count > max_count\n    else\n      count = 0\n    end\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  test_str.chars.chunk { |c| c.upcase == c }.map { |k, v| v.join }.max_by(&:length)\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  test_str.split('').each_with_index.map do |char, index|\n    if char == char.upcase\n      test_str.split('')[index..-1].join('').split('').take_while { |char| char == char.upcase }.count\n    end\n  end.compact.max\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  test_str.chars.chunk { |c| c == c.upcase }.map { |k, v| v.join }.max_by(&:length)\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      count += 1\n      max_count = count if count > max_count\n    else\n      count = 0\n    end\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  test_str.chars.chunk { |c| c.upcase == c }.map { |c, a| a.join }.max_by(&:length)\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      run += 1\n    else\n      max_run = run if run > max_run\n      run = 0\n    end\n  end\n  max_run = run if run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      run += 1\n    else\n      run = 0\n    end\n    max_run = run if run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  test_str.chars.chunk(&:upcase).max_by { |_, v| v.size }.first\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  test_str.chars.chunk_while { |a, b| a.upcase == b.upcase }.map { |a| a.join }.max_by(&:length)\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.match(/[A-Z]/)\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      count += 1\n      max_count = count if count > max_count\n    else\n      count = 0\n    end\n  end\n  max_count\nend",
    "  max_run = 0\n  run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      run += 1\n    else\n      run = 0\n    end\n    max_run = run if run > max_run\n  end\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      count += 1\n    else\n      count = 0\n    end\n    max_count = count if count > max_count\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      count += 1\n    else\n      count = 0\n    end\n    max_count = count if count > max_count\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  # your code here\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.match(/[A-Z]/)\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      count += 1\n    else\n      count = 0\n    end\n    max_count = count if count > max_count\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.match(/[A-Z]/)\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  test_str.chars.chunk{|c| c.upcase == c}.map{|k,v| v.size}.max\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  test_str.split(\"\").map {|x| x.ord}.select {|x| x >= 65 && x <= 90}.length\nend",
    "  test_str.chars.chunk_while { |i, j| i.upcase == j.upcase }.map(&:join).max_by(&:size)\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0",
    "  test_str.chars.chunk_while { |a, b| a.upcase == b.upcase }.max_by(&:size).join\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      run += 1\n    else\n      run = 0\n    end\n    max_run = run if run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  count = 0\n  max_count = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      count += 1\n    else\n      count = 0\n    end\n    max_count = count if count > max_count\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  test_str.chars.chunk(&:upcase).max_by { |_, chunk| chunk.size }.first\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.match(/[A-Z]/)\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  test_str.chars.each_with_object([]) do |char, arr|\n    if char == char.upcase\n      arr << char\n    else\n      arr << char\n      arr << ' '\n    end\n  end.join.split.map(&:length).max\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      if current_run > max_run\n        max_run = current_run\n      end\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      run += 1\n    else\n      max_run = run if run > max_run\n      run = 0\n    end\n  end\n  max_run = run if run > max_run\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_count = 0\n  current_count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_count += 1\n      max_count = current_count if current_count > max_count\n    else\n      current_count = 0\n    end\n  end\n  max_count\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      count += 1\n    else\n      count = 0\n    end\n    max_count = count if count > max_count\n  end\n  max_count\nend",
    "  max_run = 0\n  run = 0\n  test_str.chars.each do |char|\n    if char == char.upcase\n      run += 1\n    else\n      run = 0\n    end\n    max_run = run if run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_count = 0\n  current_count = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_count += 1\n      max_count = current_count if current_count > max_count\n    else\n      current_count = 0\n    end\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      count += 1\n    else\n      count = 0\n    end\n    max_count = count if count > max_count\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.chars.each do |char|\n    if char == char.upcase\n      count += 1\n    else\n      count = 0\n    end\n    max_count = count if count > max_count\n  end\n  max_count\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      count += 1\n      max_count = count if count > max_count\n    else\n      count = 0\n    end\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      max_run = current_run if current_run > max_run\n      current_run = 0\n    end\n  end\n  max_run = current_run if current_run > max_run\n  max_run\nend",
    "  # Write your code here\n  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char =~ /[A-Z]/\n      count += 1\n    else\n      max_count = count if count > max_count\n      count = 0\n    end\n  end\n  max_count = count if count > max_count\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.chars.each do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_count = 0\n  count = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      count += 1\n      max_count = count if count > max_count\n    else\n      count = 0\n    end\n  end\n  max_count\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char == char.upcase\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n      max_run = current_run if current_run > max_run\n    else\n      current_run = 0\n    end\n  end\n  max_run\nend",
    "  count = 0\n  max = 0\n  test_str.chars.each do |char|\n    if char == char.upcase\n      count += 1\n      max = count if count > max\n    else\n      count = 0\n    end\n  end\n  max\nend",
    "  max_run = 0\n  current_run = 0\n  test_str.each_char do |char|\n    if char.upcase == char\n      current_run += 1\n    else\n      current_run = 0\n    end\n    max_run = current_run if current_run > max_run\n  end\n  max_run\nend"
  ]
}
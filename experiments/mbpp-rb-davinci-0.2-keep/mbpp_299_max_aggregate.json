{
  "name": "mbpp_299_max_aggregate",
  "language": "rb",
  "prompt": "# Write a function to calculate the maximum aggregate from the list of tuples.\ndef max_aggregate(stdata)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_299_max_aggregate.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_max_aggregate\n    candidate = method(:max_aggregate)\n    assert_equal([\"Juan Whelan\", 212], candidate.call([[\"Juan Whelan\", 90], [\"Sabah Colley\", 88], [\"Peter Nichols\", 7], [\"Juan Whelan\", 122], [\"Sabah Colley\", 84]]))\n    assert_equal([\"Juan Whelan\", 72], candidate.call([[\"Juan Whelan\", 50], [\"Sabah Colley\", 48], [\"Peter Nichols\", 37], [\"Juan Whelan\", 22], [\"Sabah Colley\", 14]]))\n    assert_equal([\"Sabah Colley\", 70], candidate.call([[\"Juan Whelan\", 10], [\"Sabah Colley\", 20], [\"Peter Nichols\", 30], [\"Juan Whelan\", 40], [\"Sabah Colley\", 50]]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |x| x[1] }\nend",
    "  stdata.max_by {|x| x[1]}\nend",
    "  stdata.max_by {|x| x[1]}\nend",
    "  stdata.max_by {|_,_,agg| agg}\nend",
    "  stdata.max_by {|x| x[1] + x[2] + x[3]}\nend",
    "  stdata.max_by { |_, _, _, _, aggr| aggr }\nend",
    "  # YOUR CODE HERE\n  max = 0\n  stdata.each do |st|\n    if st[1] > max\n      max = st[1]\n    end\n  end\n  max\nend",
    "  stdata.max_by { |x| x[1] }\nend",
    "  # YOUR CODE HERE\n  max = 0\n  stdata.each do |x|\n    if x[1] + x[2] + x[3] > max\n      max = x[1] + x[2] + x[3]\n    end\n  end\n  return max\nend",
    "  stdata.max_by {|_, _, _, agg| agg}\nend",
    "  stdata.max_by { |
    "  stdata.max_by { |_, _, _, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by {|x| x[1]}\nend",
    "  stdata.max_by { |
    "  stdata.max_by { |x| x[1] }\nend",
    "  stdata.max_by { |
    "  stdata.map {|x| x[1]}.max\nend",
    "  stdata.max_by {|x| x[1]}\nend",
    "  # YOUR CODE HERE\n  max_score = 0\n  stdata.each do |student|\n    if student[1] + student[2] + student[3] > max_score\n      max_score = student[1] + student[2] + student[3]\n    end\n  end\n  return max_score\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, _, _, aggr| aggr }\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by { |_, _, _, _, agg| agg }\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.map {|x| x[1]}.max\nend",
    "  stdata.max_by { |x| x[1] + x[2] }\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by {|_,_,agg| agg}\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |x| x[1] }\nend",
    "  stdata.max_by {|k,v| v}.last\nend",
    "  stdata.map{|x| x[1]}.max\nend",
    "  stdata.map {|x| x[1]}.max\nend",
    "  stdata.max_by { |x| x[1] + x[2] + x[3] }\nend",
    "  stdata.max_by { |_, _, _, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, _, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.map{|x| x[1]}.max\nend",
    "  stdata.max_by { |
    "  stdata.max_by { |_, _, aggregate| aggregate }\nend",
    "  stdata.max_by { |_, _, _, _, agg| agg }\nend",
    "  stdata.map { |
    "  stdata.max_by { |
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by { |_, _, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.map{|k,v| v.inject(:+)}.max\nend",
    "  # YOUR CODE HERE\n  max = 0\n  stdata.each do |student|\n    if student[1] + student[2] + student[3] > max\n      max = student[1] + student[2] + student[3]\n    end\n  end\n  return max\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by { |_, _, _, agg| agg }\nend",
    "  stdata.map{|x| x[1]}.max\nend",
    "  stdata.max_by { |
    "  stdata.max_by {|_, _, _, _, agg| agg}\nend",
    "  stdata.max_by {|k,v| v}\nend",
    "  stdata.max_by { |
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.map{|x| x[1]}.max\nend",
    "  stdata.max_by{|k,v| v}\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by {|x| x[1]}[1]\nend",
    "  stdata.max_by { |_, _, aggregate| aggregate }\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by {|k,v| v}\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by { |_, _, _, _, agg| agg }\nend",
    "  stdata.max_by { |x| x[1] }\nend",
    "  stdata.max_by { |
    "  stdata.max_by { |_, _, _, agg| agg }\nend",
    "  stdata.map{|x| x[1]}.max\nend",
    "  stdata.max_by{|x| x[1]}\nend",
    "  stdata.map { |x| x.inject(:+) }.max\nend",
    "  stdata.max_by { |x| x[1] }\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by { |k, v| v }\nend",
    "  stdata.max_by { |
    "  stdata.map {|x| x[1]}.max\nend",
    "  stdata.max_by { |
    "  stdata.max_by { |_, _, aggregate| aggregate }\nend",
    "  stdata.max_by { |
    "  stdata.max_by { |
    "  stdata.max_by { |_, _, _, agg| agg }\nend",
    "  stdata.map{|x| x[1]}.max\nend",
    "  stdata.max_by { |_, _, _, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, _, _, agg| agg }\nend",
    "  stdata.max_by {|k,v| v}\nend",
    "  stdata.max_by { |_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _,",
    "  stdata.max_by { |_, _, _, agg| agg }\nend",
    "  # YOUR CODE HERE\n  max = 0\n  stdata.each do |student|\n    if student[1] + student[2] + student[3] > max\n      max = student[1] + student[2] + student[3]\n    end\n  end\n  max\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, _, agg| agg }\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by { |_, _, aggregate| aggregate }\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.map{|x| x[1]}.max\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.map{|x| x[1]}.max\nend",
    "  stdata.max_by { |_, _, agg| agg }[2]\nend",
    "  stdata.map{|k,v| v.inject(:+)}.max\nend",
    "  stdata.max_by { |x| x[1] }\nend",
    "  stdata.max_by {|x| x[1]}\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by { |_, _, _, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, _, aggregate| aggregate }\nend",
    "  stdata.max_by { |_, _, _, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, aggregate| aggregate }[2]\nend",
    "  stdata.max_by { |
    "  stdata.max_by { |_, _, _, aggregate| aggregate }\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.map{|x| x[1]}.max\nend",
    "  stdata.map { |k, v| v.reduce(:+) }.max\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  max = 0\n  stdata.each do |st|\n    if st[:aggregate] > max\n      max = st[:aggregate]\n    end\n  end\n  max\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |
    "  max = 0\n  stdata.each do |st|\n    if st[:aggregate] > max\n      max = st[:aggregate]\n    end\n  end\n  max\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  max = 0\n  stdata.each do |x|\n    if x[:aggregate] > max\n      max = x[:aggregate]\n    end\n  end\n  return max\nend",
    "  stdata.max_by {|x| x[1] + x[2] + x[3]}\nend",
    "  stdata.max_by {|x| x[1]}\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.map {|x| x[1]}.max\nend",
    "  # YOUR CODE HERE\n  max = 0\n  stdata.each do |student|\n    if student[1] > max\n      max = student[1]\n    end\n  end\n  max\nend",
    "  stdata.max_by { |_, _, _, _, agg| agg }[4]\nend",
    "  max = 0\n  stdata.each do |st|\n    if st[:aggregate] > max\n      max = st[:aggregate]\n    end\n  end\n  max\nend",
    "  stdata.max_by {|k,v| v}\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by{|x| x[1]}.max\nend",
    "  stdata.max_by { |x| x[1] }\nend",
    "  stdata.max_by { |
    "  stdata.max_by {|x| x[1]}\nend",
    "  stdata.max_by { |
    "  stdata.max_by { |_, _, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, _, ag| ag }\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by { |x| x[1] + x[2] }\nend",
    "  stdata.max_by {|k,v| v}\nend",
    "  stdata.map{|x| x[1]+x[2]+x[3]}.max\nend",
    "  stdata.max_by {|x| x[1]}\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by{|k,v| v}.last\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _,",
    "  stdata.map{|x| x[1]}.max\nend",
    "  stdata.max_by { |
    "  stdata.map{|x| x[1]}.max\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by { |_, _, _, _, aggregate| aggregate }\nend",
    "  stdata.max_by { |_, _, _, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by{|x| x[1]}[1]\nend",
    "  max_agg = 0\n  stdata.each do |st|\n    if st[:aggregate] > max_agg\n      max_agg = st[:aggregate]\n    end\n  end\n  return max_agg\nend",
    "  stdata.max_by { |_, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _,",
    "  # YOUR CODE HERE\n  max = 0\n  stdata.each do |data|\n    if data[:aggregate] > max\n      max = data[:aggregate]\n    end\n  end\n  max\nend",
    "  # YOUR CODE HERE\n  max = 0\n  stdata.each do |x|\n    if x[2] > max\n      max = x[2]\n    end\n  end\n  return max\nend",
    "  stdata.max_by { |
    "  stdata.map{|x| x[1]}.max\nend",
    "  stdata.max_by{|x| x[1]}\nend",
    "  max_aggregate = 0\n  stdata.each do |student|\n    aggregate = student[:physics] + student[:chemistry] + student[:biology]\n    if aggregate > max_aggregate\n      max_aggregate = aggregate\n    end\n  end\n  return max_aggregate\nend",
    "  stdata.max_by { |_, _, _, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, _, _, agg| agg }\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.map { |k, v| v.inject(:+) }.max\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, _, _, _, _, aggregate| aggregate }\nend",
    "  stdata.max_by {|x| x[1] + x[2] + x[3]}\nend",
    "  stdata.max_by { |x| x[1] }\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by {|x| x[1]}\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  max_aggregate = 0\n  stdata.each do |st|\n    aggregate = st[1] + st[2] + st[3] + st[4]\n    if aggregate > max_aggregate\n      max_aggregate = aggregate\n    end\n  end\n  max_aggregate\nend",
    "  stdata.max_by {|k,v| v}\nend",
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by { |
    "  stdata.max_by { |_, _, agg| agg }\nend",
    "  stdata.max_by { |
    "  stdata.map { |x| x[1] }.max\nend",
    "  stdata.max_by { |_, _, aggregate| aggregate }\nend",
    "  stdata.max_by {|k,v| v}\nend",
    "  stdata.max_by { |_, _, agg| agg }\nend"
  ]
}
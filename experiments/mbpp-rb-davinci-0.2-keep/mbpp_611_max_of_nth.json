{
  "name": "mbpp_611_max_of_nth",
  "language": "rb",
  "prompt": "# Write a function which given a matrix represented as a list of lists returns the max of the n'th column.\ndef max_of_nth(test_list, n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_611_max_of_nth.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_max_of_nth\n    candidate = method(:max_of_nth)\n    assert_equal(19, candidate.call([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2))\n    assert_equal(10, candidate.call([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1))\n    assert_equal(11, candidate.call([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |list| list[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  max = test_list[0][n]\n  test_list.each do |sub_array|\n    if sub_array[n] > max\n      max = sub_array[n]\n    end\n  end\n  max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map {|x| x[n]}.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map{|x| x[n]}.max\nend",
    "  max = 0\n  test_list.each do |row|\n    if row[n] > max\n      max = row[n]\n    end\n  end\n  return max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |sublist| sublist[n] }.max\nend",
    "  max = test_list[0][n]\n  test_list.each do |sublist|\n    if sublist[n] > max\n      max = sublist[n]\n    end\n  end\n  return max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  max = test_list[0][n]\n  test_list.each do |sub_list|\n    if sub_list[n] > max\n      max = sub_list[n]\n    end\n  end\n  return max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map{|x| x[n]}.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map {|x| x[n]}.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  max = test_list[0][n]\n  test_list.each do |sub_list|\n    if sub_list[n] > max\n      max = sub_list[n]\n    end\n  end\n  max\nend",
    "  max_value = 0\n  test_list.each do |row|\n    if row[n] > max_value\n      max_value = row[n]\n    end\n  end\n  return max_value\nend",
    "  test_list.map {|x| x[n]}.max\nend",
    "  # test_list.map { |x| x[n] }.max\n  test_list.map(&:max)\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  max = test_list[0][n]\n  test_list.each do |list|\n    if list[n] > max\n      max = list[n]\n    end\n  end\n  return max\nend",
    "  test_list.map {|x| x[n]}.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  max = 0\n  test_list.each do |sub_list|\n    if sub_list[n] > max\n      max = sub_list[n]\n    end\n  end\n  max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sub_arr| sub_arr[n] }.max\nend",
    "  test_list.map { |sublist| sublist[n] }.max\nend",
    "  max = 0\n  test_list.each do |row|\n    if row[n] > max\n      max = row[n]\n    end\n  end\n  return max\nend",
    "  max = 0\n  test_list.each do |row|\n    if row[n] > max\n      max = row[n]\n    end\n  end\n  return max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  # your code here\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  max = test_list[0][n]\n  test_list.each do |row|\n    if row[n] > max\n      max = row[n]\n    end\n  end\n  return max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |sublist| sublist[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sublist| sublist[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  max = test_list[0][n]\n  test_list.each do |sub_list|\n    if sub_list[n] > max\n      max = sub_list[n]\n    end\n  end\n  max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  max = test_list[0][n]\n  test_list.each do |row|\n    if row[n] > max\n      max = row[n]\n    end\n  end\n  return max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  max = 0\n  test_list.each do |x|\n    if x[n] > max\n      max = x[n]\n    end\n  end\n  return max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map {|x| x[n]}.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  # your code here\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map {|x| x[n]}.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |sub_array| sub_array[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map {|x| x[n]}.max\nend",
    "  max = test_list[0][n]\n  test_list.each do |row|\n    if row[n] > max\n      max = row[n]\n    end\n  end\n  max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map {|x| x[n]}.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map {|x| x[n]}.max\nend",
    "  test_list.map {|x| x[n]}.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  # test_list.map { |x| x[n] }.max\n  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  max_value = 0\n  test_list.each do |sub_list|\n    if sub_list[n] > max_value\n      max_value = sub_list[n]\n    end\n  end\n  return max_value\nend",
    "  test_list.map {|x| x[n]}.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |sublist| sublist[n] }.max\nend",
    "  max = test_list[0][n]\n  test_list.each do |row|\n    if row[n] > max\n      max = row[n]\n    end\n  end\n  return max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |sub_list| sub_list[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  max = test_list[0][n]\n  test_list.each do |row|\n    if row[n] > max\n      max = row[n]\n    end\n  end\n  max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map {|x| x[n]}.max\nend",
    "  test_list.map {|x| x[n]}.max\nend",
    "  # your code here\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  max = test_list[0][n]\n  test_list.each do |sub_list|\n    if sub_list[n] > max\n      max = sub_list[n]\n    end\n  end\n  max\nend",
    "  max = test_list[0][n]\n  test_list.each do |sub_list|\n    if sub_list[n] > max\n      max = sub_list[n]\n    end\n  end\n  return max\nend",
    "  test_list.map {|x| x[n]}.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  max = test_list[0][n]\n  test_list.each do |row|\n    if row[n] > max\n      max = row[n]\n    end\n  end\n  max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  test_list.map { |row| row[n] }.max\nend",
    "  max = test_list[0][n]\n  test_list.each do |sublist|\n    if sublist[n] > max\n      max = sublist[n]\n    end\n  end\n  return max\nend",
    "  max = test_list[0][n]\n  test_list.each do |x|\n    if x[n] > max\n      max = x[n]\n    end\n  end\n  return max\nend",
    "  test_list.map {|x| x[n]}.max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  max = 0\n  test_list.each do |row|\n    if row[n] > max\n      max = row[n]\n    end\n  end\n  return max\nend",
    "  test_list.map { |x| x[n] }.max\nend",
    "  max = test_list[0][n]\n  test_list.each do |sub_list|\n    if sub_list[n] > max\n      max = sub_list[n]\n    end\n  end\n  return max\nend",
    "  test_list.map {|x| x[n]}.max\nend"
  ]
}
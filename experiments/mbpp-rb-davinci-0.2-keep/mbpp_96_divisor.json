{
  "name": "mbpp_96_divisor",
  "language": "rb",
  "prompt": "# Write a python function to find the number of divisors of a given integer.\ndef divisor(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_96_divisor.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisor\n    candidate = method(:divisor)\n    assert_equal(4, candidate.call(15))\n    assert_equal(6, candidate.call(12))\n    assert_equal(3, candidate.call(9))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  divisors = []\n  for i in 1..n\n    if n % i == 0\n      divisors << i\n    end\n  end\n  return divisors.length\nend",
    "  count = 0\n  (1..n).each do |i|\n    count += 1 if n % i == 0\n  end\n  count\nend",
    "  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  (1..n).select { |i| n % i == 0 }.count\nend",
    "  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  (1..n).each do |i|\n    count += 1 if n % i == 0\n  end\n  count\nend",
    "  (1..n).select { |i| n % i == 0 }\nend",
    "  (1..n).select { |i| n % i == 0 }.count\nend",
    "  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  for i in 1..n\n    if n%i == 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  (1..n).each do |i|\n    if n % i == 0\n      count += 1\n    end\n  end\n  count\nend",
    "  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  (1..n).select { |i| n % i == 0 }.size\nend",
    "  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  for i in 1..n\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\nend"
  ]
}
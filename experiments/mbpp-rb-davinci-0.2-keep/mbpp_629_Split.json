{
  "name": "mbpp_629_Split",
  "language": "rb",
  "prompt": "# Write a python function to find even numbers from a list of numbers.\ndef Split(list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_629_Split.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_Split\n    candidate = method(:Split)\n    assert_equal([2, 4], candidate.call([1, 2, 3, 4, 5]))\n    assert_equal([4, 6, 8, 0], candidate.call([4, 5, 6, 7, 8, 0, 1]))\n    assert_equal([8, 12], candidate.call([8, 12, 15, 19]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  return list.select { |a| a % 2 == 0 }\nend",
    "  list.select {|num| num.even?}\nend",
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend\nSplit([1,2,3,4,5,6,7,8,9,10])",
    "  list.each do |x|\n    if x % 2 == 0\n      puts x\n    end\n  end\nend",
    "  return list.select {|x| x%2==0}\nend",
    "    list.select(&:even?)\nend",
    "  list.select {|x| x % 2 == 0}\nend",
    "  return list.select { |num| (num % 2).zero? }\nend",
    "  list.select(&:even?)\nend",
    "    list.each do |x|\n        if x%2==0\n            puts x\n        end\n    end\nend\nSplit([1,2,3,4,5,6,7,8,9,10])",
    "  list.each do |x|\n    if x % 2 == 0\n      puts x\n    end\n  end\nend",
    "  list.each do |num|\n    if num % 2 == 0\n      puts num\n    end\n  end\nend",
    "  list.each do |num|\n    if num % 2 == 0\n      puts num\n    end\n  end\nend",
    "  even = []\n  odd = []\n  list.each do |num|\n    if num % 2 == 0\n      even << num\n    else\n      odd << num\n    end\n  end\n  return even, odd\nend",
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend\nSplit([1,2,3,4,5,6,7,8,9,10])",
    "  list.select { |x| x % 2 == 0 }\nend",
    "  list.each do |num|\n    if num % 2 == 0\n      puts num\n    end\n  end\nend",
    "  list.select(&:even?)\nend",
    "  return list.select { |a| a % 2 == 0 }\nend",
    "  even = []\n  odd = []\n  list.each do |x|\n    if x % 2 == 0\n      even << x\n    else\n      odd << x\n    end\n  end\n  puts \"Even numbers are #{even}\"\n  puts \"Odd numbers are #{odd}\"\nend",
    "  return list.select { |a| a % 2 == 0 }\nend",
    "    list.each do |i|\n        if i%2==0\n            puts i\n        end\n    end\nend\nSplit([1,2,3,4,5,6,7,8,9])",
    "  list.select { |num| num.even? }\nend",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  return even, odd\nend",
    "    list.each do |i|\n        if i % 2 == 0\n            puts i\n        end\n    end\nend",
    "  list.select { |num| num.even? }\nend",
    "  list.select(&:even?)\nend",
    "  list.select {|x| x % 2 == 0}\nend\nlist = [1,2,3,4,5,6,7,8,9,10]\nputs Split(list)",
    "    list.each do |x|\n        if x % 2 == 0\n            puts x\n        end\n    end\nend",
    "  list.select { |num| num.even? }\nend",
    "    list.each do |i|\n        if i%2==0\n            puts i\n        end\n    end\nend",
    "  list.select(&:even?)\nend",
    "  list.select(&:even?)\nend",
    "  even = []\n  odd = []\n  list.each do |num|\n    if num % 2 == 0\n      even.push(num)\n    else\n      odd.push(num)\n    end\n  end\n  return even, odd\nend",
    "  even_list = []\n  odd_list = []\n  list.each do |num|\n    if num % 2 == 0\n      even_list.push(num)\n    else\n      odd_list.push(num)\n    end\n  end\n  puts \"Even numbers: #{even_list}\"\n  puts \"Odd numbers: #{odd_list}\"\nend",
    "  list.select(&:even?)\nend",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  return even, odd\nend\nlist = [1,2,3,4,5,6,7,8,9,10]\neven, odd = Split(list)\nputs \"Even numbers are #{even}\"\nputs \"Odd numbers are #{odd}\"",
    "  list.select {|num| num.even?}\nend",
    "  list.select { |x| x % 2 == 0 }\nend",
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend\nSplit([1,2,3,4,5,6,7,8,9,10])",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  return even, odd\nend",
    "  list.each do |i|\n    if i % 2 == 0\n      puts i\n    end\n  end\nend",
    "  list.select {|num| num.even?}\nend",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i%2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  puts \"Even numbers are: #{even}\"\n  puts \"Odd numbers are: #{odd}\"\nend",
    "    list.select {|x| x%2==0}\nend",
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend",
    "    list.each do |i|\n        if i%2 == 0\n            puts i\n        end\n    end\nend",
    "  list.select {|x| x.even?}\nend",
    "  list.each do |num|\n    if num % 2 == 0\n      puts num\n    end\n  end\nend",
    "  list.select(&:even?)\nend",
    "  list.each do |num|\n    if num % 2 == 0\n      puts num\n    end\n  end\nend",
    "  return list.select {|num| num % 2 == 0}\nend",
    "  list.select(&:even?)\nend",
    "  return list.select { |num| num.even? }\nend\nlist = [1,2,3,4,5,6,7,8,9,10]\nprint Split(list)",
    "  even = []\n  odd = []\n  list.each do |x|\n    if x % 2 == 0\n      even << x\n    else\n      odd << x\n    end\n  end\n  return even, odd\nend",
    "  even = []\n  odd = []\n  list.each do |x|\n    if x % 2 == 0\n      even.push(x)\n    else\n      odd.push(x)\n    end\n  end\n  puts \"Even numbers are #{even}\"\n  puts \"Odd numbers are #{odd}\"\nend\nSplit([1,2,3,4,5,6,7,8,9])",
    "  even_list = []\n  odd_list = []\n  list.each do |num|\n    if num % 2 == 0\n      even_list.push(num)\n    else\n      odd_list.push(num)\n    end\n  end\n  return even_list, odd_list\nend",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even << i\n    else\n      odd << i\n    end\n  end\n  puts \"Even Numbers: #{even}\"\n  puts \"Odd Numbers: #{odd}\"\nend",
    "    list.each do |i|\n        if i%2==0\n            puts i\n        end\n    end\nend\nSplit([1,2,3,4,5,6,7,8,9])",
    "  list.each do |i|\n    if i % 2 == 0\n      puts i\n    end\n  end\nend",
    "  list.select(&:even?)\nend",
    "  list.each do |i|\n    if i%2 == 0\n      puts i\n    end\n  end\nend\nSplit([1,2,3,4,5,6,7,8,9,10])",
    "  list.each do |num|\n    if num % 2 == 0\n      puts num\n    end\n  end\nend",
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend\nSplit([1,2,3,4,5,6,7,8,9])",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  return even, odd\nend",
    "  return list.select { |a| a % 2 == 0 }\nend",
    "  return list.select{|x| x%2==0}\nend",
    "  list.select { |num| num.even? }\nend",
    "  list.select { |x| x.even? }\nend",
    "  list.select { |x| x.even? }\nend",
    "  list.select(&:even?)\nend",
    "  return list.select(&:even?)\nend",
    "  list.select(&:even?)\nend",
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend",
    "  even_list = []\n  odd_list = []\n  list.each do |i|\n    if i % 2 == 0\n      even_list.push(i)\n    else\n      odd_list.push(i)\n    end\n  end\n  return even_list, odd_list\nend",
    "    list.each do |i|\n        if i % 2 == 0\n            puts i\n        end\n    end\nend",
    "  list.each do |i|\n    if i % 2 == 0\n      puts i\n    end\n  end\nend",
    "  return list.select { |num| num.even? }\nend",
    "    list.select(&:even?)\nend",
    "  even = []\n  odd = []\n  list.each do |num|\n    if num % 2 == 0\n      even << num\n    else\n      odd << num\n    end\n  end\n  return even, odd\nend",
    "    list.select {|x| x%2 == 0}\nend",
    "  return list.select {|num| num % 2 == 0}\nend",
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend\nSplit([1,2,3,4,5,6,7,8,9,10])",
    "  list.select { |num| num.even? }\nend",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  puts \"Even numbers are #{even}\"\n  puts \"Odd numbers are #{odd}\"\nend",
    "  list.select(&:even?)\nend",
    "  return list.select { |a| a % 2 == 0 }\nend",
    "  even = []\n  odd = []\n  list.each do |num|\n    if num % 2 == 0\n      even << num\n    else\n      odd << num\n    end\n  end\n  return even, odd\nend",
    "  return list.select { |a| a % 2 == 0 }\nend",
    "    list.select {|x| x%2 == 0}\nend",
    "  list.select { |num| num % 2 == 0 }\nend",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  return even, odd\nend",
    "  list.select {|x| x%2==0}\nend",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  puts \"Even numbers are #{even}\"\n  puts \"Odd numbers are #{odd}\"\nend",
    "  even = []\n  odd = []\n  list.each do |num|\n    if num % 2 == 0\n      even << num\n    else\n      odd << num\n    end\n  end\n  return even, odd\nend",
    "  list.select(&:even?)\nend",
    "  list.each do |i|\n    if i%2 == 0\n      puts i\n    end\n  end\nend",
    "  list.select { |x| x % 2 == 0 }\nend",
    "  list.select { |x| x.even? }\nend",
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend",
    "  return list.select {|num| num % 2 == 0}\nend",
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend",
    "  list.each do |x|\n    if x % 2 == 0\n      puts x\n    end\n  end\nend\nSplit([1,2,3,4,5,6,7,8,9,10])",
    "  return list.select {|x| x % 2 == 0}\nend",
    "  list.select { |num| num.even? }\nend",
    "  list.select(&:even?)\nend",
    "  return list.select { |num| num % 2 == 0 }\nend",
    "  list.select {|x| x % 2 == 0}\nend",
    "  list.select {|num| num.even?}\nend",
    "  list.select { |x| x % 2 == 0 }\nend",
    "  even = []\n  odd = []\n  list.each do |num|\n    if num % 2 == 0\n      even.push(num)\n    else\n      odd.push(num)\n    end\n  end\n  puts \"Even numbers are #{even}\"\n  puts \"Odd numbers are #{odd}\"\nend",
    "  list.select { |num| num.even? }\nend",
    "  list.select(&:even?)\nend",
    "  list.select { |e| e.even? }\nend",
    "  list.select { |a| a % 2 == 0 }\nend",
    "  return list.select {|num| num.even?}\nend",
    "  list.select { |num| num.even? }\nend",
    "    list.select {|x| x % 2 == 0}\nend",
    "  return list.select {|num| num % 2 == 0}\nend",
    "  list.each do |i|\n    if i%2 == 0\n      puts i\n    end\n  end\nend",
    "  list.each do |x|\n    if x % 2 == 0\n      puts x\n    end\n  end\nend",
    "  list.select(&:even?)\nend",
    "  list.select { |num| num.even? }\nend",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  return even, odd\nend",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  return even, odd\nend",
    "  list.select { |num| num.even? }\nend",
    "  list.select { |num| num.even? }\nend",
    "  return list.select { |a| a % 2 == 0 }\nend",
    "  list.select { |num| num.even? }\nend",
    "  list.each do |x|\n    if x%2 == 0\n      puts x\n    end\n  end\nend",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  return even, odd\nend",
    "  list.select { |i| i % 2 == 0 }\nend",
    "  list.select(&:even?)\nend",
    "  list.select(&:even?)\nend",
    "  list.each do |i|\n    if i%2 == 0\n      puts i\n    end\n  end\nend",
    "  list.select { |num| num.even? }\nend",
    "  even = []\n  odd = []\n  list.each do |num|\n    if num % 2 == 0\n      even.push(num)\n    else\n      odd.push(num)\n    end\n  end\n  return even, odd\nend",
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend",
    "  return list.select {|num| num.even?}\nend",
    "  list.select(&:even?)\nend",
    "  return list.select { |num| num.even? }\nend",
    "  list.each do |i|\n    if i % 2 == 0\n      puts i\n    end\n  end\nend",
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend\nSplit([1,2,3,4,5,6,7,8,9,10])",
    "  list.select(&:even?)\nend",
    "  return list.select {|x| x % 2 == 0}\nend",
    "  list.select { |i| i.even? }\nend",
    "  return list.select {|num| num.even?}\nend",
    "  even = []\n  odd = []\n  list.each do |number|\n    if number % 2 == 0\n      even << number\n    else\n      odd << number\n    end\n  end\n  return even, odd\nend",
    "  list.select { |x| x % 2 == 0 }\nend",
    "    list.select { |x| x%2 == 0 }\nend",
    "  list.select { |num| num.even? }\nend",
    "  list.each do |i|\n    if i % 2 == 0\n      puts i\n    end\n  end\nend",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  return even, odd\nend",
    "  even = []\n  odd = []\n  list.each do |num|\n    if num % 2 == 0\n      even.push(num)\n    else\n      odd.push(num)\n    end\n  end\n  return even, odd\nend",
    "  list.select { |num| num.even? }\nend",
    "  list.select { |num| num.even? }\nend",
    "  list.select(&:even?)\nend",
    "  even = []\n  odd = []\n  list.each do |num|\n    if num % 2 == 0\n      even.push(num)\n    else\n      odd.push(num)\n    end\n  end\n  return even, odd\nend",
    "  list.each do |i|\n    if i%2 == 0\n      puts i\n    end\n  end\nend",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  return even, odd\nend",
    "  list.each do |i|\n    if i % 2 == 0\n      puts i\n    end\n  end\nend",
    "    list.each do |i|\n        if i%2==0\n            puts i\n        end\n    end\nend",
    "  list.select { |x| x % 2 == 0 }\nend",
    "    list.select { |num| num % 2 == 0 }\nend",
    "  list.select { |num| num.even? }\nend",
    "  list.each do |i|\n    if i%2 == 0\n      puts i\n    end\n  end\nend",
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend\nSplit([1,2,3,4,5,6,7,8,9])",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i%2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  return even, odd\nend",
    "  list.select(&:even?)\nend",
    "  even = []\n  odd = []\n  list.each do |i|\n    if i % 2 == 0\n      even.push(i)\n    else\n      odd.push(i)\n    end\n  end\n  return even, odd\nend",
    "  list.select { |num| num.even? }\nend",
    "  list.select(&:even?)\nend",
    "  list.select(&:even?)\nend",
    "  list.select{|x| x%2==0}\nend",
    "  list.select { |x| x % 2 == 0 }\nend",
    "  list.select(&:even?)\nend",
    "  list.each do |i|\n    if i % 2 == 0\n      puts i\n    end\n  end\nend",
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend",
    "  list.each do |i|\n    if i % 2 == 0\n      puts i\n    end\n  end\nend",
    "  list.select { |num| num.even? }\nend",
    "  list.select { |num| num.even? }\nend",
    "    list.select {|num| num % 2 == 0}\nend",
    "  list.select {|x| x.even?}\nend",
    "  return list.select {|x| x%2 == 0}\nend",
    "    return list.select {|a| a%2==0}\nend",
    "  list.each do |i|\n    if i%2==0\n      puts i\n    end\n  end\nend\nlist=[1,2,3,4,5,6,7,8,9,10]\nSplit(list)",
    "  list.select { |x| x.even? }\nend",
    "  list.each do |i|\n    if i % 2 == 0\n      puts i\n    end\n  end\nend",
    "  list.select { |x| x.even? }\nend",
    "  list.each do |num|\n    if num % 2 == 0\n      puts num\n    end\n  end\nend",
    "    list.each do |x|\n        if x % 2 == 0\n            puts x\n        end\n    end\nend",
    "  list.select {|a| a % 2 == 0}\nend",
    "  list.select { |x| x % 2 == 0 }\nend",
    "  list.select { |num| num.even? }\nend",
    "  list.select {|x| x % 2 == 0}\nend",
    "  list.select { |num| num.even? }\nend",
    "    list.each do |i|\n        if i%2 == 0\n            puts i\n        end\n    end\nend\nlist = [1,2,3,4,5,6,7,8,9,10]\nSplit(list)",
    "  list.select(&:even?)\nend",
    "  list.select { |x| x % 2 == 0 }\nend",
    "  return list.select {|x| x%2==0}\nend"
  ]
}
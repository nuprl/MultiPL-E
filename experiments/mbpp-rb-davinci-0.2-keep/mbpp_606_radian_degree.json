{
  "name": "mbpp_606_radian_degree",
  "language": "rb",
  "prompt": "# Write a function to convert degrees to radians.\ndef radian_degree(degree)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_606_radian_degree.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_radian_degree\n    candidate = method(:radian_degree)\n    assert_equal(1.5707963267948966, candidate.call(90))\n    assert_equal(1.0471975511965976, candidate.call(60))\n    assert_equal(2.0943951023931953, candidate.call(120))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend",
    "  degree * Math::PI / 180\nend"
  ]
}
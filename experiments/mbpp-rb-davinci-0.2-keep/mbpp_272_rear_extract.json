{
  "name": "mbpp_272_rear_extract",
  "language": "rb",
  "prompt": "# Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple.\ndef rear_extract(test_list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_272_rear_extract.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_rear_extract\n    candidate = method(:rear_extract)\n    assert_equal([21, 20, 19], candidate.call([[1, \"Rash\", 21], [2, \"Varsha\", 20], [3, \"Kil\", 19]]))\n    assert_equal([36, 25, 45], candidate.call([[1, \"Sai\", 36], [2, \"Ayesha\", 25], [3, \"Salman\", 45]]))\n    assert_equal([14, 36, 56], candidate.call([[1, \"Sudeep\", 14], [2, \"Vandana\", 36], [3, \"Dawood\", 56]]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  test_list.map { |tuple| tuple[1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  # Your code here\n  test_list.map { |tuple| tuple[1] }\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[-1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  test_list.map { |tuple| tuple[1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  return test_list.map { |tuple| tuple[-1] }\nend",
    "  test_list.map { |tuple| tuple[1] }\nend",
    "  test_list.map {|x| x[-1]}\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple.last\n  end\n  rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[1] }\nend",
    "  test_list.map { |x| x[-1] }\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[-1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[-1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  test_list.map { |x| x[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  test_list.map { |x| x[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "\tnew_list = []\n\ttest_list.each do |tuple|\n\t\tnew_list << tuple[-1]\n\tend\n\treturn new_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  # Your code here\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  # Write your code here\n  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[-1]\n  end\n  return rear_list\nend",
    "  test_list.map { |x| x[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  # Your code here\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |x|\n    rear_list << x[1]\n  end\n  rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  # Your code here\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[1] }\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map {|tuple| tuple[-1]}\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  return test_list.map { |tuple| tuple[-1] }\nend",
    "\trear_list = []\n\ttest_list.each do |tuple|\n\t\trear_list << tuple[1]\n\tend\n\treturn rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  # Write your code here\n  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  test_list.map { |tuple| tuple[1] }\nend",
    "  # Code here\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  test_list.map { |x| x[1] }\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  test_list.map { |x| x.last }\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  test_list.map {|x| x[-1]}\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  new_list = []\n  test_list.each do |tuple|\n    new_list << tuple[-1]\n  end\n  return new_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  test_list.map { |tuple| tuple[1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "\trear_list = []\n\ttest_list.each do |tuple|\n\t\trear_list << tuple[1]\n\tend\n\treturn rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple.last\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[-1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[-1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  test_list.map { |tuple| tuple[1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[-1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[-1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  test_list.map { |x| x[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[-1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list.push(tuple[1])\n  end\n  return rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend",
    "  test_list.map { |tuple| tuple[-1] }\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple.last\n  end\n  rear_list\nend",
    "  rear_list = []\n  test_list.each do |tuple|\n    rear_list << tuple[1]\n  end\n  rear_list\nend"
  ]
}
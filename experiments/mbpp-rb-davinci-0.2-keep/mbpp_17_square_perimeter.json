{
  "name": "mbpp_17_square_perimeter",
  "language": "rb",
  "prompt": "# Write a function that returns the perimeter of a square given its side length as input.\ndef square_perimeter(a)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_17_square_perimeter.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_square_perimeter\n    candidate = method(:square_perimeter)\n    assert_equal(40, candidate.call(10))\n    assert_equal(20, candidate.call(5))\n    assert_equal(16, candidate.call(4))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  return a * 4\nend",
    "  return a * 4\nend",
    "  return a * 4\nend",
    "  return a * 4\nend",
    "  a * 4\nend",
    "  a * 4\nend",
    "  a * 4\nend",
    "  a * 4\nend",
    "  return a * 4\nend",
    "  a * 4\nend",
    "  a * 4\nend",
    "  a * 4\nend",
    "  a * 4\nend",
    "  a * 4\nend",
    "  a * 4\nend",
    "  a * 4\nend",
    "  return a * 4\nend",
    "  a * 4\nend",
    "  a * 4\nend",
    "  return a * 4\nend"
  ]
}
{
  "name": "mbpp_227_min_of_three",
  "language": "rb",
  "prompt": "# Write a function to find minimum of three numbers.\ndef min_of_three(a, b, c)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_227_min_of_three.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_min_of_three\n    candidate = method(:min_of_three)\n    assert_equal(0, candidate.call(10, 20, 0))\n    assert_equal(15, candidate.call(19, 15, 18))\n    assert_equal(-30, candidate.call(-10, -20, -30))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend",
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend",
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend",
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend",
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend",
    "  if a < b && a < c\n    a\n  elsif b < a && b < c\n    b\n  else\n    c\n  end\nend",
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend",
    "  if a < b && a < c\n    a\n  elsif b < a && b < c\n    b\n  else\n    c\n  end\nend",
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend",
    "  min = a\n  if b < min\n    min = b\n  end\n  if c < min\n    min = c\n  end\n  return min\nend",
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend",
    "  if a < b && a < c\n    a\n  elsif b < a && b < c\n    b\n  else\n    c\n  end\nend",
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend",
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend",
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend",
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend",
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend",
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend",
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend",
    "  if a < b && a < c\n    return a\n  elsif b < a && b < c\n    return b\n  else\n    return c\n  end\nend"
  ]
}
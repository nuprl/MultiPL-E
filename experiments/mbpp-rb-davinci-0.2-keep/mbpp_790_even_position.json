{
  "name": "mbpp_790_even_position",
  "language": "rb",
  "prompt": "# Write a python function to check whether every even index contains even numbers of a given list.\ndef even_position(nums)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_790_even_position.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_even_position\n    candidate = method(:even_position)\n    assert_equal(false, candidate.call([3, 2, 1]))\n    assert_equal(false, candidate.call([1, 2, 3]))\n    assert_equal(true, candidate.call([2, 1, 4]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  nums.each_with_index.all? { |num, index| num.even? if index.even? }\nend",
    "  nums.each_with_index do |num, index|\n    return false if index.even? && num.odd?\n  end\n  true\nend",
    "  nums.each_with_index do |num, index|\n    if index.even? && num.even?\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  nums.each_with_index.all? { |num, index| num.even? && index.even? }\nend",
    "  nums.each_with_index.all? { |num, i| num.even? if i.even? }\nend",
    "  nums.each_with_index do |num, index|\n    if index.even? && num.even?\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  nums.each_with_index do |num, index|\n    if index.even? && num.even?\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  nums.each_with_index.all? { |num, i| num.even? if i.even? }\nend",
    "  for i in 0..nums.length-1\n    if i%2==0\n      if nums[i]%2!=0\n        return false\n      end\n    end\n  end\n  return true\nend",
    "  nums.each_with_index do |num, index|\n    if index.even? && num.even?\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  nums.each_with_index do |num, index|\n    if index.even? && num.odd?\n      return false\n    end\n  end\n  return true\nend",
    "  nums.each_with_index do |num, index|\n    if index.even? && num.even?\n      puts \"#{num} is at even position\"\n    end\n  end\nend",
    "  nums.each_with_index do |num, i|\n    if i.even? && num.even?\n      puts \"#{num} is at even position\"\n    end\n  end\nend",
    "  nums.each_with_index do |num, index|\n    if index.even? && num.even?\n      return true\n    end\n  end\n  return false\nend",
    "  nums.each_with_index.all? { |num, i| num.even? if i.even? }\nend",
    "  nums.each_with_index do |num, index|\n    if index.even? && num.even?\n      return true\n    else\n      return false\n    end\n  end\nend",
    "  nums.each_with_index.all? { |num, index| num.even? if index.even? }\nend",
    "  nums.each_with_index { |num, index| return false if index.even? && num.odd? }\n  true\nend",
    "  nums.each_with_index.all? { |num, index| num.even? if index.even? }\nend",
    "  nums.each_with_index.all? { |num, index| num.even? && index.even? }\nend"
  ]
}
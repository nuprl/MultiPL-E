{
  "name": "mbpp_238_number_of_substrings",
  "language": "rb",
  "prompt": "# Write a python function to count the number of non-empty substrings of a given string.\ndef number_of_substrings(str)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_238_number_of_substrings.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_number_of_substrings\n    candidate = method(:number_of_substrings)\n    assert_equal(6, candidate.call(\"abc\"))\n    assert_equal(10, candidate.call(\"abcd\"))\n    assert_equal(15, candidate.call(\"abcde\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  count = 0\n  for i in 0..str.length-1\n    for j in i..str.length-1\n      count += 1\n    end\n  end\n  return count\nend",
    "  str.length * (str.length + 1) / 2\nend",
    "  # Write your code here\n  count = 0\n  for i in 0..str.length-1\n    for j in i..str.length-1\n      count += 1\n    end\n  end\n  return count\nend",
    "  str.length * (str.length + 1) / 2\nend",
    "  count = 0\n  for i in 0...str.length\n    for j in i...str.length\n      count += 1\n    end\n  end\n  return count\nend",
    "  str.length * (str.length + 1) / 2\nend",
    "  str.length * (str.length + 1) / 2\nend",
    "  str.length * (str.length + 1) / 2\nend",
    "  count = 0\n  for i in 0..str.length\n    for j in i..str.length\n      count += 1\n    end\n  end\n  return count\nend",
    "  str.length * (str.length + 1) / 2\nend",
    "  str.length * (str.length + 1) / 2\nend",
    "  str.length * (str.length + 1) / 2\nend",
    "  str.length * (str.length + 1) / 2\nend",
    "  count = 0\n  for i in 0..str.length\n    for j in i..str.length\n      count += 1 if str[i..j].length > 0\n    end\n  end\n  count\nend",
    "  count = 0\n  for i in 0..str.length\n    for j in i+1..str.length\n      count += 1\n    end\n  end\n  return count\nend",
    "  str.length * (str.length + 1) / 2\nend",
    "  str.length * (str.length + 1) / 2\nend",
    "  count = 0\n  for i in 0..str.length-1\n    for j in i..str.length-1\n      count += 1\n    end\n  end\n  return count\nend",
    "  count = 0\n  for i in 0..str.length\n    for j in i+1..str.length\n      count += 1\n    end\n  end\n  return count\nend",
    "  str.length * (str.length + 1) / 2\nend"
  ]
}
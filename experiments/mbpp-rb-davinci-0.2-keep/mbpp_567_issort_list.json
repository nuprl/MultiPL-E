{
  "name": "mbpp_567_issort_list",
  "language": "rb",
  "prompt": "# Write a function to check whether a specified list is sorted or not.\ndef issort_list(list1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_567_issort_list.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_issort_list\n    candidate = method(:issort_list)\n    assert_equal(true, candidate.call([1, 2, 4, 6, 8, 10, 12, 14, 16, 17]))\n    assert_equal(false, candidate.call([1, 2, 4, 6, 8, 10, 12, 14, 20, 17]))\n    assert_equal(false, candidate.call([1, 2, 4, 6, 8, 10, 15, 14, 20]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  list1.sort == list1\nend",
    "  list1 == list1.sort\nend",
    "  list1.each_with_index do |value, index|\n    return false if list1[index + 1] && value > list1[index + 1]\n  end\n  true\nend",
    "  list1.sort == list1\nend",
    "  list1 == list1.sort\nend",
    "  list1 == list1.sort\nend",
    "  list1.each_with_index do |item, index|\n    if list1[index+1] != nil\n      if item > list1[index+1]\n        return false\n      end\n    end\n  end\n  return true\nend",
    "  list1.each_with_index do |x, i|\n    if list1[i] > list1[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "  list1 == list1.sort\nend",
    "  list1.sort == list1\nend",
    "  list1.sort == list1\nend",
    "  list1.each_with_index do |x,i|\n    if list1[i] > list1[i+1]\n      return false\n    end\n  end\n  return true\nend",
    "  list1.sort == list1\nend",
    "  list1 == list1.sort\nend",
    "  list1 == list1.sort\nend",
    "  list1.sort == list1\nend",
    "  list1 == list1.sort\nend",
    "  list1.each_with_index do |x,i|\n    if list1[i+1] != nil\n      if x > list1[i+1]\n        return false\n      end\n    end\n  end\n  return true\nend",
    "  list1.each_cons(2).all? { |a, b| (a <=> b) <= 0 }\nend",
    "  list1 == list1.sort\nend"
  ]
}
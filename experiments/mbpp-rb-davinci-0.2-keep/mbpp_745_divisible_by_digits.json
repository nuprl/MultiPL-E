{
  "name": "mbpp_745_divisible_by_digits",
  "language": "rb",
  "prompt": "# Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\ndef divisible_by_digits(startnum, endnum)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_divisible_by_digits\n    candidate = method(:divisible_by_digits)\n    assert_equal([1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22], candidate.call(1, 22))\n    assert_equal([1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15], candidate.call(1, 15))\n    assert_equal([22, 24], candidate.call(20, 25))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  (startnum..endnum).select { |num| num.to_s.split('').all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select {|num| num.to_s.chars.map(&:to_i).all? {|digit| num % digit == 0}}\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| (num.to_s.split('').map(&:to_i).inject(:*) || 1) % num == 0 }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| (num.to_s.split('').map(&:to_i) - [0]).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |d| num % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| (num.to_s.chars.map(&:to_i) - num.to_s.chars.map { |digit| num % digit.to_i }).empty? }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select {|num| num.digits.all? {|digit| num % digit == 0}}\nend",
    "  (startnum..endnum).select { |n| n.to_s.split('').map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num % num.to_s.split('').map(&:to_i).inject(:*) == 0 }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.all? { |c| n % c.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |x| x.to_s.split('').map(&:to_i).all? { |y| x % y == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| (n.to_s.chars.map(&:to_i) - [0]).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num % num.to_s.split('').map(&:to_i).inject(:*) == 0 }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.digits.all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.digits.all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.split('').map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select {|num| num.to_s.split('').map(&:to_i).all? {|digit| num % digit == 0}}\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| (num.to_s.split('').map(&:to_i) - num.to_s.split('').map { |digit| num % digit.to_i }).empty? }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split(\"\").all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.digits.all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.digits.all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.split('').map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select {|num| num.to_s.chars.map(&:to_i).all? {|digit| num % digit == 0}}\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select {|n| n.to_s.chars.all? {|d| n % d.to_i == 0}}\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.split('').map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| (num.to_s.chars.map(&:to_i) - [0]).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.chars.all? { |d| n % d.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num % num.to_s.split('').map(&:to_i).inject(:*) == 0 }\nend",
    "  (startnum..endnum).select {|n| n.to_s.chars.map(&:to_i).all? {|d| n % d == 0}}\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.all? { |digit| num % digit.to_i == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.split('').map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select {|num| num.to_s.chars.map(&:to_i).all? {|digit| num % digit == 0}}\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.split('').map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |n| n.to_s.split('').map(&:to_i).all? { |d| n % d == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.split('').map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.map(&:to_i).all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.digits.all? { |digit| num % digit == 0 } }\nend",
    "  (startnum..endnum).select { |num| num.to_s.chars.all? { |digit| num % digit.to_i == 0 } }\nend"
  ]
}
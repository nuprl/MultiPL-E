{
  "name": "mbpp_229_re_arrange_array",
  "language": "rb",
  "prompt": "# Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.\ndef re_arrange_array(arr, n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_229_re_arrange_array.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_re_arrange_array\n    candidate = method(:re_arrange_array)\n    assert_equal([-1, -3, -7, 4, 5, 6, 2, 8, 9], candidate.call([-1, 2, -3, 4, 5, 6, -7, 8, 9], 9))\n    assert_equal([-14, -26, 12, 13, 15], candidate.call([12, -14, -26, 13, 15], 5))\n    assert_equal([-42, -39, -78, 10, 24, 36, 85], candidate.call([10, 24, 36, -42, -39, -78, 85], 7))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  # Write your code here.\n  left = 0\n  right = n - 1\n  while left < right\n    while arr[left] < 0 && left < right\n      left += 1\n    end\n    while arr[right] > 0 && left < right\n      right -= 1\n    end\n    if left < right\n      arr[left], arr[right] = arr[right], arr[left]\n    end\n  end\n  arr\nend",
    "  # Write your code here.\n  i = 0\n  j = 0\n  while i < n\n    if arr[i] < 0\n      arr[i], arr[j] = arr[j], arr[i]\n      j += 1\n    end\n    i += 1\n  end\n  arr\nend",
    "  return arr if arr.length <= 1\n  return arr if n <= 0",
    "  return arr if arr.length == 0\n  i = 0\n  j = n - 1\n  while i < j\n    if arr[i] < 0 && arr[j] > 0\n      arr[i], arr[j] = arr[j], arr[i]\n      i += 1\n      j -= 1\n    elsif arr[i] > 0\n      i += 1\n    elsif arr[j] < 0\n      j -= 1\n    end\n  end\n  arr\nend",
    "  # Write your code here.\n  i = 0\n  j = n - 1\n  while i < j\n    if arr[i] < 0\n      i += 1\n    else\n      arr[i], arr[j] = arr[j], arr[i]\n      j -= 1\n    end\n  end\n  arr\nend",
    "  # Write your code here.\n  i = 0\n  j = n - 1\n  while i < j\n    if arr[i] < 0\n      i += 1\n    else\n      arr[i], arr[j] = arr[j], arr[i]\n      j -= 1\n    end\n  end\n  arr\nend",
    "  # Write your code here\n  arr.sort!\n  i = 0\n  while i < n\n    if arr[i] < 0\n      i += 1\n    else\n      break\n    end\n  end\n  j = i\n  while j < n\n    if arr[j] > 0\n      j += 1\n    else\n      break\n    end\n  end\n  while i < j && j < n\n    temp = arr[i]\n    arr[i] = arr[j]\n    arr[j] = temp\n    i += 1\n    j += 1\n    while i < n\n      if arr[i] < 0\n        i += 1\n      else\n        break\n      end\n    end\n    while j < n\n      if arr[j] > 0\n        j += 1\n      else\n        break\n      end\n    end\n  end\n  arr\nend",
    "  return arr if n == 0\n  return arr if n == 1 && arr[0] < 0\n  return arr if n == 1 && arr[0] > 0\n  return arr if n == 2 && arr[0] < 0 && arr[1] < 0\n  return arr if n == 2 && arr[0] > 0 && arr[1] > 0\n  return arr if n == 2 && arr[0] < 0 && arr[1] > 0\n  return arr if n == 2 && arr[0] > 0 && arr[1] < 0\n  return arr if n == 3 && arr[0] < 0 && arr[1] < 0 && arr[2] < 0\n  return arr if n == 3 && arr[0] > 0 && arr[1] > 0 && arr[2] > 0\n  return arr if n == 3 && arr[0] < 0 && arr[1] > 0 && arr[2] > 0\n  return arr if n == 3 && arr[0] > 0 && arr[1] < 0 && arr[2] < 0\n  return arr if n == 3 && arr[0] < 0 && arr[1] < 0 && arr[2] > 0\n  return arr if n == 3 && arr[0] < 0 && arr[1] > 0 && arr[2] < 0\n  return arr if n == 3 && arr[0] > 0 && arr[1] < 0 && arr[2] > 0\n  return arr if n == 3 && arr[0] > 0 && arr[1] > 0 && arr[2] < 0\n  return arr if n == 4 && arr[0] < 0 && arr[1] < 0 && arr[2] < 0 && arr[3] < 0\n  return arr if n == 4 && arr[0] > 0 && arr[1] > 0 && arr[2] > 0 && arr[3] > 0\n  return arr if n == 4 && arr[0] < 0 && arr[1] > 0 && arr[2] > 0 && arr[3] > 0\n  return arr if n == 4 && arr[0] > 0 && arr[1] < 0 && arr[2] < 0 && arr[3] < 0\n  return arr if n == 4 && arr",
    "  # Write your code here.\n  i = 0\n  j = n - 1\n  while i < j\n    if arr[i] < 0\n      i += 1\n    elsif arr[j] > 0\n      j -= 1\n    else\n      arr[i], arr[j] = arr[j], arr[i]\n      i += 1\n      j -= 1\n    end\n  end\n  arr\nend",
    "  # Write your code here.\n  i = 0\n  j = n - 1\n  while i < j\n    while arr[i] < 0 && i < j\n      i += 1\n    end\n    while arr[j] >= 0 && i < j\n      j -= 1\n    end\n    if i < j\n      temp = arr[i]\n      arr[i] = arr[j]\n      arr[j] = temp\n    end\n  end\n  arr\nend",
    "  # Write your code here.\n  i = 0\n  j = n - 1\n  while i < j\n    if arr[i] < 0 && arr[j] > 0\n      arr[i], arr[j] = arr[j], arr[i]\n      i += 1\n      j -= 1\n    elsif arr[i] > 0\n      i += 1\n    elsif arr[j] < 0\n      j -= 1\n    end\n  end\n  arr\nend",
    "  # Write your code here.\n  i = 0\n  j = n - 1\n  while i < j\n    if arr[i] < 0 && arr[j] > 0\n      arr[i], arr[j] = arr[j], arr[i]\n      i += 1\n      j -= 1\n    elsif arr[i] < 0\n      i += 1\n    elsif arr[j] > 0\n      j -= 1\n    else\n      i += 1\n      j -= 1\n    end\n  end\n  arr\nend",
    "  # Write your code here.\n  left = 0\n  right = n - 1\n  while left < right\n    while arr[left] < 0 && left < right\n      left += 1\n    end\n    while arr[right] >= 0 && left < right\n      right -= 1\n    end\n    if left < right\n      arr[left], arr[right] = arr[right], arr[left]\n    end\n  end\n  arr\nend",
    "  return arr if n == 0\n  return arr if n == 1 && arr[0] < 0\n  return arr if n == 1 && arr[0] > 0\n  return arr if n == 2 && arr[0] < 0 && arr[1] < 0\n  return arr if n == 2 && arr[0] > 0 && arr[1] > 0\n  return arr if n == 2 && arr[0] > 0 && arr[1] < 0\n  return arr if n == 2 && arr[0] < 0 && arr[1] > 0",
    "  # Write your code here.\n  return arr if arr.length <= 1\n  left = 0\n  right = arr.length - 1\n  while left < right\n    while left < right && arr[left] < 0\n      left += 1\n    end\n    while left < right && arr[right] >= 0\n      right -= 1\n    end\n    arr[left], arr[right] = arr[right], arr[left]\n  end\n  arr\nend",
    "  return arr if arr.length <= 1\n  i = 0\n  j = n - 1\n  while i < j\n    if arr[i] < 0\n      i += 1\n    else\n      arr[i], arr[j] = arr[j], arr[i]\n      j -= 1\n    end\n  end\n  arr\nend",
    "  return arr if n == 0\n  return arr if arr.length == 0",
    "  # Write your code here.\n  i = 0\n  j = n - 1\n  while i < j\n    if arr[i] < 0\n      i += 1\n    elsif arr[j] > 0\n      j -= 1\n    else\n      arr[i], arr[j] = arr[j], arr[i]\n      i += 1\n      j -= 1\n    end\n  end\n  arr\nend",
    "  return arr if n == 0\n  i = 0\n  j = n - 1\n  while i < j\n    if arr[i] < 0 && arr[j] > 0\n      arr[i], arr[j] = arr[j], arr[i]\n      i += 1\n      j -= 1\n    elsif arr[i] > 0\n      i += 1\n    elsif arr[j] < 0\n      j -= 1\n    end\n  end\n  arr\nend",
    "  # Write your code here.\n  left = 0\n  right = n - 1\n  while left < right\n    while arr[left] < 0 && left < right\n      left += 1\n    end\n    while arr[right] >= 0 && left < right\n      right -= 1\n    end\n    if left < right\n      temp = arr[left]\n      arr[left] = arr[right]\n      arr[right] = temp\n    end\n  end\n  arr\nend"
  ]
}
{
  "name": "mbpp_566_sum_digits",
  "language": "rb",
  "prompt": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_566_sum_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpog8g5084\nStarted\n.\nFinished in 0.000601286 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1663.10 tests/s, 4989.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpog8g5084\nStarted\n.\nFinished in 0.000601286 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1663.10 tests/s, 4989.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpog8g5084\nStarted\n.\nFinished in 0.000601286 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1663.10 tests/s, 4989.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpog8g5084\nStarted\n.\nFinished in 0.000601286 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1663.10 tests/s, 4989.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpog8g5084\nStarted\n.\nFinished in 0.000601286 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1663.10 tests/s, 4989.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp2p0li2xl\nStarted\n.\nFinished in 0.000372365 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2685.54 tests/s, 8056.61 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpog8g5084\nStarted\n.\nFinished in 0.000601286 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1663.10 tests/s, 4989.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpog8g5084\nStarted\n.\nFinished in 0.000601286 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1663.10 tests/s, 4989.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return n if n < 10\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1666123807,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsc9ghxpo\nStarted\n.\nFinished in 0.000430141 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2324.82 tests/s, 6974.46 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpog8g5084\nStarted\n.\nFinished in 0.000601286 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1663.10 tests/s, 4989.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  # your code here\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1666123808,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpfu5vzrab\nStarted\n.\nFinished in 0.000506101 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1975.89 tests/s, 5927.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpog8g5084\nStarted\n.\nFinished in 0.000601286 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1663.10 tests/s, 4989.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpog8g5084\nStarted\n.\nFinished in 0.000601286 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1663.10 tests/s, 4989.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  return 0 if n == 0\n  n % 10 + sum_digits(n / 10)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp7r3qpyza\nStarted\n.\nFinished in 0.00053606 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1865.46 tests/s, 5596.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpog8g5084\nStarted\n.\nFinished in 0.000601286 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1663.10 tests/s, 4989.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0ltrp2tv\nStarted\n.\nFinished in 0.000521969 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1915.82 tests/s, 5747.47 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split(\"\").map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpog8g5084\nStarted\n.\nFinished in 0.000601286 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1663.10 tests/s, 4989.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp0ltrp2tv\nStarted\n.\nFinished in 0.000521969 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1915.82 tests/s, 5747.47 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.split('').map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmps58d3_42\nStarted\n.\nFinished in 0.000545113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1834.48 tests/s, 5503.45 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a function to get the sum of the digits of a non-negative integer.\ndef sum_digits(n)\n  n.to_s.chars.map(&:to_i).reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_sum_digits\n    candidate = method(:sum_digits)\n    assert_equal(12, candidate.call(345))\n    assert_equal(3, candidate.call(12))\n    assert_equal(16, candidate.call(97))\n  end\nend\n",
      "timestamp": 1665510611,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsql2sjta\nStarted\n.\nFinished in 0.000481623 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2076.31 tests/s, 6228.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
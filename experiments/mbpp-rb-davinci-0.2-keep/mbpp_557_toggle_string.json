{
  "name": "mbpp_557_toggle_string",
  "language": "rb",
  "prompt": "# Write a function to toggle the case of all characters in a string.\ndef toggle_string(string)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_557_toggle_string.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_toggle_string\n    candidate = method(:toggle_string)\n    assert_equal(\"pYTHON\", candidate.call(\"Python\"))\n    assert_equal(\"pANGRAM\", candidate.call(\"Pangram\"))\n    assert_equal(\"liTTle\", candidate.call(\"LIttLE\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase }.join\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  toggled_string = \"\"\n  string.each_char do |char|\n    if char == char.upcase\n      toggled_string << char.downcase\n    else\n      toggled_string << char.upcase\n    end\n  end\n  toggled_string\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.chars.map { |char| char.match(/[a-z]/) ? char.upcase : char.downcase }.join\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "\tstring.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.chars.map { |char| char =~ /[a-z]/ ? char.upcase : char.downcase }.join\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  toggled_string = \"\"\n  string.each_char do |char|\n    if char =~ /[a-z]/\n      toggled_string << char.upcase\n    elsif char =~ /[A-Z]/\n      toggled_string << char.downcase\n    else\n      toggled_string << char\n    end\n  end\n  toggled_string\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase }.join\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.chars.map { |char| char == char.upcase ? char.downcase : char.upcase }.join\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend",
    "  string.swapcase\nend"
  ]
}
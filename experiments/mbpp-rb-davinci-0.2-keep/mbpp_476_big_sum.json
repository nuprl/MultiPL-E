{
  "name": "mbpp_476_big_sum",
  "language": "rb",
  "prompt": "# Write a python function to find the sum of the largest and smallest value in a given array.\ndef big_sum(nums)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_476_big_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_big_sum\n    candidate = method(:big_sum)\n    assert_equal(4, candidate.call([1, 2, 3]))\n    assert_equal(3, candidate.call([-1, 2, 3, 4]))\n    assert_equal(8, candidate.call([2, 3, 6]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  nums.sort!\n  nums[0] + nums[-1]\nend",
    "  nums.sort!\n  nums[-1] + nums[0]\nend",
    "  nums.sort!\n  nums[0] + nums[-1]\nend",
    "  nums.sort!\n  nums[-1] + nums[0]\nend",
    "  nums.sort!\n  nums[0] + nums[-1]\nend",
    "  nums.sort!\n  nums[0] + nums[-1]\nend",
    "  nums.sort!\n  nums[0] + nums[-1]\nend",
    "  nums.sort!\n  nums[-1] + nums[0]\nend",
    "  nums.sort!\n  nums[0] + nums[-1]\nend",
    "  nums.sort!\n  nums[-1] + nums[0]\nend",
    "  nums.sort!\n  nums[-1] + nums[0]\nend",
    "  nums.sort!\n  nums[-1] + nums[0]\nend",
    "  nums.min + nums.max\nend",
    "  nums.sort!\n  nums[-1] + nums[0]\nend",
    "  nums.sort!\n  nums[-1] + nums[0]\nend",
    "  nums.sort!\n  nums[0] + nums[-1]\nend",
    "  nums.sort!\n  nums[-1] + nums[0]\nend",
    "  nums.sort!\n  nums[0] + nums[-1]\nend",
    "  nums.sort!\n  nums[-1] + nums[0]\nend",
    "  nums.sort!\n  nums[0] + nums[-1]\nend"
  ]
}
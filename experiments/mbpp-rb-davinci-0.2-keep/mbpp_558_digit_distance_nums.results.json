{
  "name": "mbpp_558_digit_distance_nums",
  "language": "rb",
  "prompt": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "results": [
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |x, i|\n    sum += (x.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplht_iyis\nStarted\n.\nFinished in 0.000403048 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2481.09 tests/s, 7443.28 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.zip(n2).map { |x, y| (x.to_i - y.to_i).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpb35cndhi\nStarted\n.\nFinished in 0.000376889 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2653.30 tests/s, 7959.90 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.map! { |n| n.to_i }\n  n2.map! { |n| n.to_i }\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpzw25fo56\nStarted\n.\nFinished in 0.000387544 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2580.35 tests/s, 7741.06 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  i = 0\n  while i < n1.length\n    sum += (n1[i].to_i - n2[i].to_i).abs\n    i += 1\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpsb7asonz\nStarted\n.\nFinished in 0.000397365 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2516.58 tests/s, 7549.73 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert both numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # make sure both strings are the same length\n  if n1.length > n2.length\n    n2 = n2.rjust(n1.length, \"0\")\n  elsif n2.length > n1.length\n    n1 = n1.rjust(n2.length, \"0\")\n  end\n  # convert both strings to arrays of integers\n  n1 = n1.split(\"\").map { |i| i.to_i }\n  n2 = n2.split(\"\").map { |i| i.to_i }\n  # subtract each element of n2 from each element of n1\n  n1.zip(n2).map { |i, j| i - j }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "Loaded suite /tmp/tmpgi5cdp9_\nStarted\nF\n===============================================================================\nFailure: test_digit_distance_nums(TestHumanEval)\n/tmp/tmpgi5cdp9_.rb:22:in `test_digit_distance_nums'\n     19: class TestHumanEval < Test::Unit::TestCase\n     20:   def test_digit_distance_nums\n     21:     candidate = method(:digit_distance_nums)\n  => 22:     assert_equal(1, candidate.call(1, 2))\n     23:     assert_equal(6, candidate.call(23, 56))\n     24:     assert_equal(7, candidate.call(123, 256))\n     25:   end\n<1> expected but was\n<-1>\n\ndiff:\n? -1\n===============================================================================\n\nFinished in 0.006511328 seconds.\n-------------------------------------------------------------------------------\n1 tests, 1 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n153.58 tests/s, 153.58 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.map! { |num| num.to_i }\n  n2.map! { |num| num.to_i }\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp4dyfply\nStarted\n.\nFinished in 0.000390814 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2558.76 tests/s, 7676.29 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_digits = n1.to_s.split('').map(&:to_i)\n  n2_digits = n2.to_s.split('').map(&:to_i)\n  n1_digits.zip(n2_digits).map { |n1, n2| (n1 - n2).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpl7gvy6kd\nStarted\n.\nFinished in 0.000683498 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1463.06 tests/s, 4389.19 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # convert strings to arrays\n  n1 = n1.split('')\n  n2 = n2.split('')\n  # find the difference between the two arrays\n  diff = n1 - n2\n  # convert the difference array to integers\n  diff = diff.map(&:to_i)\n  # sum the integers in the difference array\n  diff.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "Loaded suite /tmp/tmplu4fyfba\nStarted\nF\n===============================================================================\nFailure: test_digit_distance_nums(TestHumanEval)\n/tmp/tmplu4fyfba.rb:21:in `test_digit_distance_nums'\n     18:   def test_digit_distance_nums\n     19:     candidate = method(:digit_distance_nums)\n     20:     assert_equal(1, candidate.call(1, 2))\n  => 21:     assert_equal(6, candidate.call(23, 56))\n     22:     assert_equal(7, candidate.call(123, 256))\n     23:   end\n     24: end\n<6> expected but was\n<5>\n===============================================================================\n\nFinished in 0.013959707 seconds.\n-------------------------------------------------------------------------------\n1 tests, 2 assertions, 1 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n0% passed\n-------------------------------------------------------------------------------\n71.63 tests/s, 143.27 assertions/s\n",
      "stderr": "",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # make sure they are the same length\n  if n1.length > n2.length\n    n2 = n2.rjust(n1.length, '0')\n  elsif n2.length > n1.length\n    n1 = n1.rjust(n2.length, '0')\n  end\n  # convert back to integers\n  n1 = n1.to_i\n  n2 = n2.to_i\n  # split into arrays\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  # find the difference between each digit\n  diff = []\n  n1.each_with_index do |num, i|\n    diff << (num.to_i - n2[i].to_i).abs\n  end\n  # return the sum of the differences\n  diff.inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpang0eemm\nStarted\n.\nFinished in 0.000676776 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1477.59 tests/s, 4432.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.length.times do |i|\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp5vkfxr18\nStarted\n.\nFinished in 0.000773799 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1292.33 tests/s, 3876.98 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert to string\n  # split into array\n  # iterate through array\n  # subtract each element from the other\n  # add the difference to a sum\n  # return the sum\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, i|\n    sum += (num.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9h3qtauh\nStarted\n.\nFinished in 0.000794772 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1258.22 tests/s, 3774.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |n, i|\n    sum += (n.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmppolvt1wd\nStarted\n.\nFinished in 0.000717041 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1394.62 tests/s, 4183.86 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert to string\n  # split into array\n  # map to integer\n  # zip\n  # map to difference\n  # sum\n  n1.to_s.split('').map(&:to_i).zip(n2.to_s.split('').map(&:to_i)).map { |a, b| (a - b).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmptmcwqtjh\nStarted\n.\nFinished in 0.000855005 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1169.58 tests/s, 3508.75 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpun9pky8i\nStarted\n.\nFinished in 0.000916345 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1091.29 tests/s, 3273.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.map! { |x| x.to_i }\n  n2.map! { |x| x.to_i }\n  n1.zip(n2).map { |x, y| (x - y).abs }.inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpmfho8c5b\nStarted\n.\nFinished in 0.00067808 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1474.75 tests/s, 4424.26 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n,i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpcd0l3hdx\nStarted\n.\nFinished in 0.000791271 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1263.79 tests/s, 3791.37 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6csex8t0\nStarted\n.\nFinished in 0.000738639 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1353.84 tests/s, 4061.52 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # convert strings to arrays\n  n1 = n1.split('')\n  n2 = n2.split('')\n  # convert arrays to integers\n  n1 = n1.map(&:to_i)\n  n2 = n2.map(&:to_i)\n  # find the difference between each digit\n  diff = []\n  n1.each_with_index do |num, index|\n    diff << (num - n2[index]).abs\n  end\n  # return the sum of the differences\n  diff.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpt5iql3ml\nStarted\n.\nFinished in 0.000760868 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1314.29 tests/s, 3942.87 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert numbers to strings\n  # split strings into arrays\n  # map arrays to integers\n  # subtract arrays\n  # map arrays to absolute values\n  # sum array\n  n1.to_s.split('').map(&:to_i).zip(n2.to_s.split('').map(&:to_i)).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9mixd7ul\nStarted\n.\nFinished in 0.000893244 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1119.51 tests/s, 3358.54 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  (n1 - n2).abs.to_s.split('').map(&:to_i).inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp4bssdaky\nStarted\n.\nFinished in 0.000531336 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1882.05 tests/s, 5646.14 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpwrmdzumv\nStarted\n.\nFinished in 0.000898812 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1112.58 tests/s, 3337.74 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpnfm6pos7\nStarted\n.\nFinished in 0.000836551 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1195.38 tests/s, 3586.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # make sure they are the same length\n  if n1.length > n2.length\n    n2 = n2.rjust(n1.length, '0')\n  elsif n2.length > n1.length\n    n1 = n1.rjust(n2.length, '0')\n  end\n  # iterate through each digit, subtract, and add to sum\n  sum = 0\n  n1.length.times do |i|\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpp89b74va\nStarted\n.\nFinished in 0.000798243 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1252.75 tests/s, 3758.25 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpun9pky8i\nStarted\n.\nFinished in 0.000916345 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1091.29 tests/s, 3273.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # Convert numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # Create a variable to hold the sum of the differences\n  sum = 0\n  # Iterate through the strings\n  n1.length.times do |i|\n    # Add the absolute value of the difference between the digits to the sum\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  # Return the sum\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpeij7n4vq\nStarted\n.\nFinished in 0.00077433 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1291.44 tests/s, 3874.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # make sure n1 is the longer string\n  if n1.length < n2.length\n    n1, n2 = n2, n1\n  end\n  # add zeros to the end of n2 to make it the same length as n1\n  n2 = n2.rjust(n1.length, \"0\")\n  # split the strings into arrays\n  n1 = n1.split(\"\")\n  n2 = n2.split(\"\")\n  # iterate through the arrays and subtract the numbers\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpkqdcnakr\nStarted\n.\nFinished in 0.000846588 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1181.21 tests/s, 3543.64 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |a, b| (a - b).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpx54epq9g\nStarted\n.\nFinished in 0.000934648 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1069.92 tests/s, 3209.76 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpun9pky8i\nStarted\n.\nFinished in 0.000916345 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1091.29 tests/s, 3273.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpwmwyfby5\nStarted\n.\nFinished in 0.000785466 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.13 tests/s, 3819.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert numbers to string\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # convert strings to arrays\n  n1 = n1.split('')\n  n2 = n2.split('')\n  # convert arrays to integers\n  n1 = n1.map { |x| x.to_i }\n  n2 = n2.map { |x| x.to_i }\n  # find the difference between each digit\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxdvyb88z\nStarted\n.\nFinished in 0.000502132 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1991.51 tests/s, 5974.52 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  a = n1.to_s.split('').map(&:to_i)\n  b = n2.to_s.split('').map(&:to_i)\n  c = a.zip(b).map { |x, y| (x - y).abs }\n  c.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpimpm8q7q\nStarted\n.\nFinished in 0.000839113 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1191.73 tests/s, 3575.20 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n    n1 = n1.to_s.split('').map(&:to_i)\n    n2 = n2.to_s.split('').map(&:to_i)\n    sum = 0\n    n1.each_with_index do |num, i|\n        sum += (num - n2[i]).abs\n    end\n    sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxg107934\nStarted\n.\nFinished in 0.00076524 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1306.78 tests/s, 3920.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  sum = 0\n  n1.to_s.split('').each_with_index do |n, i|\n    sum += (n.to_i - n2.to_s[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp4mq5lz_s\nStarted\n.\nFinished in 0.000756275 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1322.27 tests/s, 3966.81 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # make sure they are the same length\n  n1 = n1.rjust(n2.length, '0') if n1.length < n2.length\n  n2 = n2.rjust(n1.length, '0') if n2.length < n1.length\n  # split into arrays\n  n1 = n1.split('')\n  n2 = n2.split('')\n  # iterate through arrays, subtracting each element\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp23u0o8rm\nStarted\n.\nFinished in 0.000842278 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1187.26 tests/s, 3561.77 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |x, i|\n    sum += (x.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplht_iyis\nStarted\n.\nFinished in 0.000403048 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2481.09 tests/s, 7443.28 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, index|\n    sum += (num.to_i - n2_arr[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpilyrq36x\nStarted\n.\nFinished in 0.000508448 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1966.77 tests/s, 5900.31 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_digits = n1.to_s.chars.map(&:to_i)\n  n2_digits = n2.to_s.chars.map(&:to_i)\n  n1_digits.zip(n2_digits).map { |n1, n2| (n1 - n2).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpoj9vivh9\nStarted\n.\nFinished in 0.001032662 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n968.37 tests/s, 2905.11 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, idx|\n    sum += (num - n2[idx]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpmio41n4j\nStarted\n.\nFinished in 0.000754206 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1325.90 tests/s, 3977.69 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  n1.map! { |x| x.to_i }\n  n2.map! { |x| x.to_i }\n  sum = 0\n  if n1.length > n2.length\n    n1.each_with_index do |x, i|\n      sum += (x - n2[i]).abs\n    end\n  else\n    n2.each_with_index do |x, i|\n      sum += (x - n1[i]).abs\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpinwiak2q\nStarted\n.\nFinished in 0.000771414 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1296.32 tests/s, 3888.96 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpun9pky8i\nStarted\n.\nFinished in 0.000916345 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1091.29 tests/s, 3273.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1.to_s.split('').map(&:to_i).zip(n2.to_s.split('').map(&:to_i)).map { |x, y| (x - y).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxgp0n02a\nStarted\n.\nFinished in 0.000648419 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1542.21 tests/s, 4626.64 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert to string\n  # split into array\n  # map to int\n  # zip\n  # map to abs\n  # sum\n  n1.to_s.split('').map(&:to_i).zip(n2.to_s.split('').map(&:to_i)).map { |pair| (pair[0] - pair[1]).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpr04_x0rt\nStarted\n.\nFinished in 0.000835998 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1196.18 tests/s, 3588.53 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |num, i|\n    sum += (num.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmprdidolj0\nStarted\n.\nFinished in 0.000729957 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1369.94 tests/s, 4109.83 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6csex8t0\nStarted\n.\nFinished in 0.000738639 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1353.84 tests/s, 4061.52 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  n1.zip(n2).map { |a, b| (a - b).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpwmwyfby5\nStarted\n.\nFinished in 0.000785466 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1273.13 tests/s, 3819.39 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert to string, then split into array of chars\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  # convert to ints\n  n1_arr.map! { |char| char.to_i }\n  n2_arr.map! { |char| char.to_i }\n  # find the difference between each digit\n  diff_arr = []\n  n1_arr.each_with_index do |n1_digit, i|\n    diff_arr << (n1_digit - n2_arr[i]).abs\n  end\n  # sum the differences\n  diff_arr.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpbsqmf3eo\nStarted\n.\nFinished in 0.000469301 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2130.83 tests/s, 6392.49 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # Convert both numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # Set the length of the shorter string to a variable\n  length = n1.length < n2.length ? n1.length : n2.length\n  # Set the sum to 0\n  sum = 0\n  # Loop through the length of the shorter string\n  length.times do |i|\n    # Add the absolute value of the difference between the characters at the same index in each string to the sum\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  # Return the sum\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmppkw_prmd\nStarted\n.\nFinished in 0.000517004 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1934.22 tests/s, 5802.66 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_index do |i|\n    sum += (n1[i].to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpyh8umb23\nStarted\n.\nFinished in 0.00087412 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1144.01 tests/s, 3432.02 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "/tmp/tmpnomre5cg.rb:7: class definition in method body\nclass TestHumanEval < Test::Unit::TestCase\n^~~~~~~~~~~~~~~~~~~\n/tmp/tmpnomre5cg.rb:14: syntax error, unexpected end-of-input, expecting `end'\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert numbers to strings\n  num1 = n1.to_s\n  num2 = n2.to_s\n  # convert strings to arrays\n  num1_array = num1.split('')\n  num2_array = num2.split('')\n  # compare the arrays and find the difference between each digit\n  difference = num1_array.zip(num2_array).map { |x, y| (x.to_i - y.to_i).abs }\n  # sum the differences\n  difference.inject(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpwc1_lm89\nStarted\n.\nFinished in 0.000714436 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1399.71 tests/s, 4199.12 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpns1vpenm\nStarted\n.\nFinished in 0.000513702 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1946.65 tests/s, 5839.96 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  distance = 0\n  n1.each_with_index do |num, index|\n    distance += (num - n2[index]).abs\n  end\n  distance\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp6rrw3nwm\nStarted\n.\nFinished in 0.000485306 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2060.56 tests/s, 6181.67 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |x, y| (x - y).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpq_3x5jd2\nStarted\n.\nFinished in 0.000776037 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1288.60 tests/s, 3865.80 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert to string\n  # split into array of chars\n  # map to integers\n  # zip with other array\n  # map to abs difference\n  # reduce to sum\n  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |a, b| (a - b).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp4p7v1wxl\nStarted\n.\nFinished in 0.000666699 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1499.93 tests/s, 4499.78 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, idx|\n    sum += (num - n2[idx]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpmio41n4j\nStarted\n.\nFinished in 0.000754206 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1325.90 tests/s, 3977.69 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpg6l2m60l\nStarted\n.\nFinished in 0.000387819 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.52 tests/s, 7735.57 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  if n1.length > n2.length\n    n2.each_with_index do |n, i|\n      sum += (n1[i].to_i - n.to_i).abs\n    end\n  else\n    n1.each_with_index do |n, i|\n      sum += (n2[i].to_i - n.to_i).abs\n    end\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmph2u6wh4h\nStarted\n.\nFinished in 0.000511333 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1955.67 tests/s, 5867.02 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  # convert numbers to strings\n  n1 = n1.to_s\n  n2 = n2.to_s\n  # convert strings to arrays\n  n1 = n1.split('')\n  n2 = n2.split('')\n  # convert strings to integers\n  n1 = n1.map(&:to_i)\n  n2 = n2.map(&:to_i)\n  # find the difference between each digit\n  n1.zip(n2).map { |x, y| (x - y).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpxw7j77b4\nStarted\n.\nFinished in 0.000464063 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2154.88 tests/s, 6464.64 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1.to_s.chars.map(&:to_i).zip(n2.to_s.chars.map(&:to_i)).map { |a, b| (a - b).abs }.sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpx54epq9g\nStarted\n.\nFinished in 0.000934648 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1069.92 tests/s, 3209.76 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_array = n1.to_s.split('')\n  n2_array = n2.to_s.split('')\n  sum = 0\n  n1_array.each_with_index do |num, index|\n    sum += (num.to_i - n2_array[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpz8aqfthk\nStarted\n.\nFinished in 0.000451216 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2216.23 tests/s, 6648.70 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n    n1 = n1.to_s.split('')\n    n2 = n2.to_s.split('')\n    sum = 0\n    for i in 0...n1.length\n        sum += (n1[i].to_i - n2[i].to_i).abs\n    end\n    return sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpvhfc2hyq\nStarted\n.\nFinished in 0.000450724 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2218.65 tests/s, 6655.96 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |n, i|\n    sum += (n - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpnfm6pos7\nStarted\n.\nFinished in 0.000836551 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1195.38 tests/s, 3586.15 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_digits = n1.to_s.split('').map(&:to_i)\n  n2_digits = n2.to_s.split('').map(&:to_i)\n  n1_digits.zip(n2_digits).map { |a, b| (a - b).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpcq3o1eoi\nStarted\n.\nFinished in 0.000415804 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2404.98 tests/s, 7214.94 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_digits = n1.to_s.split('').map(&:to_i)\n  n2_digits = n2.to_s.split('').map(&:to_i)\n  n1_digits.zip(n2_digits).map { |pair| (pair[0] - pair[1]).abs }.reduce(:+)\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123713,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpdjcciuqz\nStarted\n.\nFinished in 0.000427611 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2338.57 tests/s, 7015.72 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1_arr = n1.to_s.split('')\n  n2_arr = n2.to_s.split('')\n  sum = 0\n  n1_arr.each_with_index do |n, i|\n    sum += (n.to_i - n2_arr[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1666123712,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmppolvt1wd\nStarted\n.\nFinished in 0.000717041 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n1394.62 tests/s, 4183.86 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num.to_i - n2[index].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpd8q_46k3\nStarted\n.\nFinished in 0.000387852 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2578.30 tests/s, 7734.91 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num - n2[i]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmpiwaom62l\nStarted\n.\nFinished in 0.000406266 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2461.44 tests/s, 7384.32 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('')\n  n2 = n2.to_s.split('')\n  sum = 0\n  n1.each_with_index do |num, i|\n    sum += (num.to_i - n2[i].to_i).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmplkqwqdao\nStarted\n.\nFinished in 0.000400915 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2494.29 tests/s, 7482.88 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "# Write a python function to find the sum of the per-digit difference between two integers.\ndef digit_distance_nums(n1, n2)\n  n1 = n1.to_s.split('').map(&:to_i)\n  n2 = n2.to_s.split('').map(&:to_i)\n  sum = 0\n  n1.each_with_index do |num, index|\n    sum += (num - n2[index]).abs\n  end\n  sum\nend\nrequire 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_digit_distance_nums\n    candidate = method(:digit_distance_nums)\n    assert_equal(1, candidate.call(1, 2))\n    assert_equal(6, candidate.call(23, 56))\n    assert_equal(7, candidate.call(123, 256))\n  end\nend\n",
      "timestamp": 1665510379,
      "stdout": "",
      "stderr": "Loaded suite /tmp/tmp9lvj_iqi\nStarted\n.\nFinished in 0.000428673 seconds.\n-------------------------------------------------------------------------------\n1 tests, 3 assertions, 0 failures, 0 errors, 0 pendings, 0 omissions, 0 notifications\n100% passed\n-------------------------------------------------------------------------------\n2332.78 tests/s, 6998.34 assertions/s\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
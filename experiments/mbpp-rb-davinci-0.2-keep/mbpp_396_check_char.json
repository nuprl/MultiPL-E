{
  "name": "mbpp_396_check_char",
  "language": "rb",
  "prompt": "# Write a function to check whether the given string starts and ends with the same character or not.\ndef check_char(string)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_396_check_char.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_check_char\n    candidate = method(:check_char)\n    assert_equal(\"Valid\", candidate.call(\"abba\"))\n    assert_equal(\"Valid\", candidate.call(\"a\"))\n    assert_equal(\"Invalid\", candidate.call(\"abcd\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  if string[0] == string[-1]\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"true\"\n  else\n    puts \"false\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend",
    "  if string[0] == string[-1]\n    puts \"True\"\n  else\n    puts \"False\"\n  end\nend"
  ]
}
{
  "name": "mbpp_474_replace_char",
  "language": "rb",
  "prompt": "# Write a function to replace characters in a string.\ndef replace_char(str1, ch, newch)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_474_replace_char.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_replace_char\n    candidate = method(:replace_char)\n    assert_equal(\"pollgon\", candidate.call(\"polygon\", \"y\", \"l\"))\n    assert_equal(\"aharaater\", candidate.call(\"character\", \"c\", \"a\"))\n    assert_equal(\"python\", candidate.call(\"python\", \"l\", \"a\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  str1.gsub(ch, newch)\nend",
    "  str1.tr(ch, newch)\nend",
    "  str1.chars.map { |c| c == ch ? newch : c }.join\nend",
    "  str1.gsub(ch, newch)\nend",
    "  str1.tr(ch, newch)\nend",
    "  str1.tr(ch, newch)\nend",
    "  str1.chars.map { |c| c == ch ? newch : c }.join\nend",
    "  str1.tr(ch, newch)\nend",
    "  str1.chars.map { |c| c == ch ? newch : c }.join\nend",
    "  str1.tr(ch, newch)\nend",
    "  str1.chars.map { |c| c == ch ? newch : c }.join\nend",
    "  str1.gsub(ch, newch)\nend",
    "  str1.tr(ch, newch)\nend",
    "  str1.tr(ch, newch)\nend",
    "  str1.tr(ch, newch)\nend",
    "  str1.chars.map { |c| c == ch ? newch : c }.join\nend",
    "  str1.tr(ch, newch)\nend",
    "  str1.tr(ch, newch)\nend",
    "  str1.tr(ch, newch)\nend",
    "  str1.gsub(ch, newch)\nend"
  ]
}
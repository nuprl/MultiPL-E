{
  "name": "mbpp_432_median_trapezium",
  "language": "rb",
  "prompt": "# Write a function to find the median length of a trapezium.\ndef median_trapezium(base1, base2, height)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_432_median_trapezium.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_median_trapezium\n    candidate = method(:median_trapezium)\n    assert_equal(20, candidate.call(15, 25, 35))\n    assert_equal(15, candidate.call(10, 20, 30))\n    assert_equal(7.5, candidate.call(6, 9, 4))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  (base1 + base2) * height / 2\nend",
    "  (base1 + base2) * height / 2\nend",
    "  (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) * height / 2\nend",
    "  (base1 + base2) * height / 2\nend",
    "  (base1 + base2) * height / 2\nend",
    "  (base1 + base2) / 2 * height\nend",
    "  return (base1 + base2) * height / 2\nend",
    "  return (base1 + base2) / 2 * height\nend",
    "  (base1 + base2) * height / 2\nend",
    "  (base1 + base2) * height / 2\nend",
    "  (base1 + base2) * height / 2\nend",
    "  (base1 + base2) * height / 2\nend",
    "  (base1 + base2) * height / 2\nend",
    "  (base1 + base2) * height / 2\nend",
    "  (base1 + base2) * height / 2\nend",
    "  (base1 + base2) * height / 2\nend",
    "  (base1 + base2) * height / 2\nend",
    "  (base1 + base2) * height / 2\nend",
    "  (base1 + base2) * height / 2\nend"
  ]
}
{
  "name": "mbpp_738_geometric_sum",
  "language": "rb",
  "prompt": "# Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php\ndef geometric_sum(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_738_geometric_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_geometric_sum\n    candidate = method(:geometric_sum)\n    assert_equal(1.9921875, candidate.call(7))\n    assert_equal(1.9375, candidate.call(4))\n    assert_equal(1.99609375, candidate.call(8))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  if n == 0\n    return 1\n  else\n    return 1 / (2 ** n) + geometric_sum(n - 1)\n  end\nend",
    "  return 1 if n == 0\n  1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  return 1 if n == 0\n  return 1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  return 1 if n == 0\n  1 / (2**n) + geometric_sum(n-1)\nend",
    "  return 1 if n == 0\n  1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  return 1 if n == 0\n  1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  return 1 if n == 0\n  1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  return 1 if n == 0\n  return 1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  return 1 if n == 0\n  1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  return 1 if n == 0\n  1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  return 1 if n == 0\n  1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  return 1 if n == 0\n  1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  if n == 0\n    return 1\n  else\n    return 1 / (2 ** n) + geometric_sum(n - 1)\n  end\nend",
    "  return 1 if n == 0\n  1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  return 1 if n == 0\n  1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  return 1 if n == 0\n  1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  return 1 if n == 0\n  1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  return 1 if n == 0\n  1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  return 1 if n == 0\n  1 / (2 ** n) + geometric_sum(n - 1)\nend",
    "  return 1 if n == 0\n  1 / (2 ** n) + geometric_sum(n - 1)\nend"
  ]
}
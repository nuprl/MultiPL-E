{
  "name": "mbpp_388_highest_Power_of_2",
  "language": "rb",
  "prompt": "# Write a python function to find the highest power of 2 that is less than or equal to n.\ndef highest_Power_of_2(n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_388_highest_Power_of_2.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_highest_Power_of_2\n    candidate = method(:highest_Power_of_2)\n    assert_equal(8, candidate.call(10))\n    assert_equal(16, candidate.call(19))\n    assert_equal(32, candidate.call(32))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  i = 1\n  while i <= n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  puts 2**(i-1)\nend\nhighest_Power_of_2(100)",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=1\n  while i<=n\n    if i==n\n      return i\n    end\n    i=i*2\n  end\n  return i/2\nend",
    "  i=0\n  while (2**i)<=n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while (2**i) <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while 2**i<=n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while 2**i<=n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i <= n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i=0\n  while 2**i <= n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while (2**i) <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while 2**i<=n\n    i+=1\n  end\n  return 2**(i-1)\nend\nputs \"Highest power of 2 that is less than or equal to n is #{highest_Power_of_2(n)}\"",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while 2**i <= n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i <= n\n    i = i * 2\n  end\n  return i/2\nend",
    "  i = 1\n  while i <= n\n    i = i * 2\n  end\n  return i/2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while 2**i <= n\n    i+=1\n  end\n  return 2**(i-1)\nend\nputs highest_Power_of_2(10)",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while (2**i) <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=1\n  while i<=n\n    i=i*2\n  end\n  return i/2\nend\nputs highest_Power_of_2(10)\nputs highest_Power_of_2(20)\nputs highest_Power_of_2(30)\nputs highest_Power_of_2(40)\nputs highest_Power_of_2(50)\nputs highest_Power_of_2(60)\nputs highest_Power_of_2(70)\nputs highest_Power_of_2(80)\nputs highest_Power_of_2(90)\nputs highest_Power_of_2(100)\nputs highest_Power_of_2(110)\nputs highest_Power_of_2(120)\nputs highest_Power_of_2(130)\nputs highest_Power_of_2(140)\nputs highest_Power_of_2(150)\nputs highest_Power_of_2(160)\nputs highest_Power_of_2(170)\nputs highest_Power_of_2(180)\nputs highest_Power_of_2(190)\nputs highest_Power_of_2(200)\nputs highest_Power_of_2(210)\nputs highest_Power_of_2(220)\nputs highest_Power_of_2(230)\nputs highest_Power_of_2(240)\nputs highest_Power_of_2(250)\nputs highest_Power_of_2(260)\nputs highest_Power_of_2(270)\nputs highest_Power_of_2(280)\nputs highest_Power_of_2(290)\nputs highest_Power_of_2(300)\nputs highest_Power_of_2(310)\nputs highest_Power_of_2(320)\nputs highest_Power_of_2(330)\nputs highest_Power_of_2(340)\nputs highest_Power_of_2(350)\nputs highest_Power_of_2(360)\nputs highest_Power_of_2(370)\n",
    "  i = 0\n  while (2**i) <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while (i <= n)\n    i = i * 2\n  end\n  return i/2\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i/2\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i/2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return i-1\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=1\n  while i<=n\n    i=i*2\n  end\n  return i/2\nend\nputs highest_Power_of_2(8)\nputs highest_Power_of_2(10)\nputs highest_Power_of_2(20)\nputs highest_Power_of_2(30)\nputs highest_Power_of_2(40)\nputs highest_Power_of_2(50)\nputs highest_Power_of_2(60)\nputs highest_Power_of_2(70)\nputs highest_Power_of_2(80)\nputs highest_Power_of_2(90)\nputs highest_Power_of_2(100)",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i=0\n  while 2**i <= n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i <= n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i <= n\n    if i == n\n      return i\n    end\n    i = i * 2\n  end\nend",
    "  i = 1\n  while i <= n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i < n\n    i *= 2\n  end\n  return i / 2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i <= n\n    i = i * 2\n  end\n  puts i / 2\nend\nhighest_Power_of_2(10)",
    "  i=1\n  while i<=n\n    i=i*2\n  end\n  return i/2\nend\nputs highest_Power_of_2(10)\nputs highest_Power_of_2(20)\nputs highest_Power_of_2(30)\nputs highest_Power_of_2(40)\nputs highest_Power_of_2(50)\nputs highest_Power_of_2(60)\nputs highest_Power_of_2(70)\nputs highest_Power_of_2(80)\nputs highest_Power_of_2(90)\nputs highest_Power_of_2(100)\nputs highest_Power_of_2(110)\nputs highest_Power_of_2(120)\nputs highest_Power_of_2(130)\nputs highest_Power_of_2(140)\nputs highest_Power_of_2(150)\nputs highest_Power_of_2(160)\nputs highest_Power_of_2(170)\nputs highest_Power_of_2(180)\nputs highest_Power_of_2(190)\nputs highest_Power_of_2(200)\nputs highest_Power_of_2(210)\nputs highest_Power_of_2(220)\nputs highest_Power_of_2(230)\nputs highest_Power_of_2(240)\nputs highest_Power_of_2(250)\nputs highest_Power_of_2(260)\nputs highest_Power_of_2(270)\nputs highest_Power_of_2(280)\nputs highest_Power_of_2(290)\nputs highest_Power_of_2(300)\nputs highest_Power_of_2(310)\nputs highest_Power_of_2(320)\nputs highest_Power_of_2(330)\nputs highest_Power_of_2(340)\nputs highest_Power_of_2(350)\nputs highest_Power_of_2(360)\nputs highest_Power_of_2(370)\n",
    "  i=1\n  while(i<=n)\n    i=i*2\n  end\n  return i/2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while 2**i<=n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i <= n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  i = i / 2\n  return i\nend",
    "  i=1\n  while i<=n\n    if i==n\n      return i\n    end\n    i=i*2\n  end\n  return i/2\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i <= n\n    i *= 2\n  end\n  return i / 2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i=1\n  while i<=n\n    i=i*2\n  end\n  return i/2\nend\nputs highest_Power_of_2(10)\nputs highest_Power_of_2(100)\nputs highest_Power_of_2(1000)\nputs highest_Power_of_2(10000)\nputs highest_Power_of_2(100000)\nputs highest_Power_of_2(1000000)\nputs highest_Power_of_2(10000000)\nputs highest_Power_of_2(100000000)\nputs highest_Power_of_2(1000000000)\nputs highest_Power_of_2(10000000000)\nputs highest_Power_of_2(100000000000)\nputs highest_Power_of_2(1000000000000)\nputs highest_Power_of_2(10000000000000)\nputs highest_Power_of_2(100000000000000)\nputs highest_Power_of_2(1000000000000000)\nputs highest_Power_of_2(10000000000000000)\nputs highest_Power_of_2(100000000000000000)\nputs highest_Power_of_2(1000000000000000000)\nputs highest_Power_of_2(10000000000000000000)\nputs highest_Power_of_2(100000000000000000000)\nputs highest_Power_of_2(1000000000000000000000)\nputs highest_Power_of_2(10000000000000000000000)\nputs highest_Power_of_2(100000000000000000000000)\nputs highest_Power_of_2(1000000000000000000000000)\nputs highest_Power_of_2(10000000000000000000000000)\nputs highest_Power_of_2(100000000000000000000000000)\nputs highest_Power_of_2(1000000000000000000000000000)\nputs highest_Power_of_2(10000000000000000000000000000)\nputs highest_Power_of_2(100000000000000000000000000000)\nputs highest_Power_of_2(1000000000000000000000000000000)\nputs highest_Power_of_2(10000000000000000000000000000000)\nputs highest_Power_of_2(100000000000000000000000000000000)\nputs highest_Power_",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  if n < 1\n    return \"Invalid Input\"\n  end\n  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while 2**i<=n\n    i+=1\n  end\n  return 2**(i-1)\nend\nputs highest_Power_of_2(10)\nputs highest_Power_of_2(20)\nputs highest_Power_of_2(30)\nputs highest_Power_of_2(40)\nputs highest_Power_of_2(50)\nputs highest_Power_of_2(60)\nputs highest_Power_of_2(70)\nputs highest_Power_of_2(80)\nputs highest_Power_of_2(90)\nputs highest_Power_of_2(100)",
    "  i=0\n  while 2**i <= n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while 2**i<=n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i\nend",
    "  i = 0\n  while (2**i) <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while 2**i <= n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i <= n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i <= n\n    i = i * 2\n  end\n  return i/2\nend",
    "  i=1\n  while i<=n\n    if i==n\n      return i\n    end\n    i=i*2\n  end\n  return i/2\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i < n\n    i *= 2\n  end\n  return i/2\nend",
    "  i=1\n  while i<=n\n    i=i*2\n  end\n  return i/2\nend\nputs highest_Power_of_2(10)\nputs highest_Power_of_2(20)\nputs highest_Power_of_2(30)\nputs highest_Power_of_2(40)\nputs highest_Power_of_2(50)\nputs highest_Power_of_2(60)\nputs highest_Power_of_2(70)\nputs highest_Power_of_2(80)\nputs highest_Power_of_2(90)\nputs highest_Power_of_2(100)\nputs highest_Power_of_2(110)\nputs highest_Power_of_2(120)\nputs highest_Power_of_2(130)\nputs highest_Power_of_2(140)\nputs highest_Power_of_2(150)\nputs highest_Power_of_2(160)\nputs highest_Power_of_2(170)\nputs highest_Power_of_2(180)\nputs highest_Power_of_2(190)\nputs highest_Power_of_2(200)\nputs highest_Power_of_2(210)\nputs highest_Power_of_2(220)\nputs highest_Power_of_2(230)\nputs highest_Power_of_2(240)\nputs highest_Power_of_2(250)\nputs highest_Power_of_2(260)\nputs highest_Power_of_2(270)\nputs highest_Power_of_2(280)\nputs highest_Power_of_2(290)\nputs highest_Power_of_2(300)\nputs highest_Power_of_2(310)\nputs highest_Power_of_2(320)\nputs highest_Power_of_2(330)\nputs highest_Power_of_2(340)\nputs highest_Power_of_2(350)\nputs highest_Power_of_2(360)\nputs highest_Power_of_2(370)\n",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i/2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i <= n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while 2**i <= n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while 2**i<=n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i *= 2\n  end\n  i\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i <= n\n    i = i * 2\n  end\n  puts i/2\nend\nhighest_Power_of_2(5)\nhighest_Power_of_2(10)\nhighest_Power_of_2(15)\nhighest_Power_of_2(20)\nhighest_Power_of_2(25)",
    "  i=0\n  while 2**i<=n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i <= n\n    i = i * 2\n  end\n  puts i / 2\nend\nhighest_Power_of_2(10)",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  puts i / 2\nend",
    "  i = 0\n  while (2**i) <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while 2**i<=n\n    i+=1\n  end\n  return 2**(i-1)\nend\nputs highest_Power_of_2(10)\nputs highest_Power_of_2(20)\nputs highest_Power_of_2(30)\nputs highest_Power_of_2(40)\nputs highest_Power_of_2(50)\nputs highest_Power_of_2(60)\nputs highest_Power_of_2(70)\nputs highest_Power_of_2(80)\nputs highest_Power_of_2(90)\nputs highest_Power_of_2(100)\nputs highest_Power_of_2(110)\nputs highest_Power_of_2(120)\nputs highest_Power_of_2(130)\nputs highest_Power_of_2(140)\nputs highest_Power_of_2(150)\nputs highest_Power_of_2(160)\nputs highest_Power_of_2(170)\nputs highest_Power_of_2(180)\nputs highest_Power_of_2(190)\nputs highest_Power_of_2(200)\nputs highest_Power_of_2(210)\nputs highest_Power_of_2(220)\nputs highest_Power_of_2(230)\nputs highest_Power_of_2(240)\nputs highest_Power_of_2(250)\nputs highest_Power_of_2(260)\nputs highest_Power_of_2(270)\nputs highest_Power_of_2(280)\nputs highest_Power_of_2(290)\nputs highest_Power_of_2(300)\nputs highest_Power_of_2(310)\nputs highest_Power_of_2(320)\nputs highest_Power_of_2(330)\nputs highest_Power_of_2(340)\nputs highest_Power_of_2(350)\nputs highest_Power_of_2(360)\nputs highest_Power_of_2",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while 2**i<=n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 0\n  while (2**i) <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=1\n  while i<=n\n    i=i*2\n  end\n  return i/2\nend\nputs highest_Power_of_2(10)\nputs highest_Power_of_2(20)\nputs highest_Power_of_2(30)\nputs highest_Power_of_2(40)\nputs highest_Power_of_2(50)\nputs highest_Power_of_2(60)\nputs highest_Power_of_2(70)\nputs highest_Power_of_2(80)\nputs highest_Power_of_2(90)\nputs highest_Power_of_2(100)",
    "  i=0\n  while 2**i <= n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i *= 2\n  end\n  i / 2\nend",
    "  i=0\n  while 2**i<=n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while (2**i)<=n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while (2**i) <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while 2**i <= n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  i = i / 2\n  puts i\nend\nhighest_Power_of_2(10)",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i=1\n  while i<=n\n    i=i*2\n  end\n  return i/2\nend\nputs highest_Power_of_2(100)",
    "  i=0\n  while 2**i <= n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i <= n\n    i *= 2\n  end\n  return i / 2\nend",
    "  i=0\n  while 2**i <= n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i <= n\n    i = i * 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i < n\n    i *= 2\n  end\n  return i / 2\nend",
    "  i = 1\n  while i < n\n    i *= 2\n  end\n  i\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i=0\n  while 2**i<=n\n    i+=1\n  end\n  return 2**(i-1)\nend",
    "  i=1\n  while i<=n\n    if i==n\n      return i\n    end\n    i=i*2\n  end\n  return i/2\nend\nputs highest_Power_of_2(5)\nputs highest_Power_of_2(16)\nputs highest_Power_of_2(24)\nputs highest_Power_of_2(30)",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 0\n  while 2**i <= n\n    i += 1\n  end\n  return 2**(i-1)\nend",
    "  i = 1\n  while i < n\n    i = i * 2\n  end\n  return i / 2\nend"
  ]
}
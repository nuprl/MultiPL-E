{
  "name": "mbpp_63_max_difference",
  "language": "rb",
  "prompt": "# Write a function to find the maximum difference between available pairs in the given tuple list.\ndef max_difference(test_list)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_63_max_difference.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_max_difference\n    candidate = method(:max_difference)\n    assert_equal(7, candidate.call([[3, 5], [1, 7], [10, 3], [1, 2]]))\n    assert_equal(15, candidate.call([[4, 6], [2, 17], [9, 13], [11, 12]]))\n    assert_equal(23, candidate.call([[12, 35], [21, 27], [13, 23], [41, 22]]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  test_list.each_with_index do |x, i|\n    test_list.each_with_index do |y, j|\n      if i < j\n        puts \"The difference between #{x} and #{y} is #{y - x}\"\n      end\n    end\n  end\nend",
    "  test_list.sort!\n  test_list[-1] - test_list[0]\nend",
    "  test_list.max - test_list.min\nend",
    "  test_list.max - test_list.min\nend",
    "  test_list.map{|x| x[1] - x[0]}.max\nend",
    "  test_list.combination(2).map {|x,y| (x-y).abs}.max\nend",
    "  test_list.max - test_list.min\nend",
    "  test_list.max - test_list.min\nend",
    "  test_list.sort!\n  diff = test_list[1] - test_list[0]\n  for i in 1...test_list.length\n    if test_list[i] - test_list[i-1] > diff\n      diff = test_list[i] - test_list[i-1]\n    end\n  end\n  diff\nend",
    "  test_list.sort!\n  test_list[-1] - test_list[0]\nend",
    "  test_list.max - test_list.min\nend",
    "  test_list.max - test_list.min\nend",
    "  max_diff = 0\n  test_list.each do |x|\n    test_list.each do |y|\n      if x - y > max_diff\n        max_diff = x - y\n      end\n    end\n  end\n  max_diff\nend",
    "  test_list.sort!\n  test_list[-1] - test_list[0]\nend",
    "  test_list.sort!\n  test_list[-1] - test_list[0]\nend",
    "  test_list.max - test_list.min\nend",
    "  max_diff = 0\n  for i in 0..test_list.length-1\n    for j in i+1..test_list.length-1\n      if test_list[i] < test_list[j]\n        diff = test_list[j] - test_list[i]\n        if diff > max_diff\n          max_diff = diff\n        end\n      end\n    end\n  end\n  return max_diff\nend",
    "  test_list.sort!\n  test_list[-1] - test_list[0]\nend",
    "  max_diff = 0\n  for i in 0..test_list.length-1\n    for j in i+1..test_list.length-1\n      if test_list[j] - test_list[i] > max_diff\n        max_diff = test_list[j] - test_list[i]\n      end\n    end\n  end\n  return max_diff\nend",
    "  test_list.max - test_list.min\nend"
  ]
}
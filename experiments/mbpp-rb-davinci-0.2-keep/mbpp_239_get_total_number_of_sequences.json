{
  "name": "mbpp_239_get_total_number_of_sequences",
  "language": "rb",
  "prompt": "# Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.\ndef get_total_number_of_sequences(m, n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_239_get_total_number_of_sequences.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_get_total_number_of_sequences\n    candidate = method(:get_total_number_of_sequences)\n    assert_equal(4, candidate.call(10, 4))\n    assert_equal(6, candidate.call(5, 2))\n    assert_equal(84, candidate.call(16, 3))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return 2 if n == 2\n  return 3 if n == 3\n  return 4 if n == 4\n  return 5 if n == 5\n  return 6 if n == 6\n  return 7 if n == 7\n  return 8 if n == 8\n  return 9 if n == 9\n  return 10 if n == 10\n  return 11 if n == 11\n  return 12 if n == 12\n  return 13 if n == 13\n  return 14 if n == 14\n  return 15 if n == 15\n  return 16 if n == 16\n  return 17 if n == 17\n  return 18 if n == 18\n  return 19 if n == 19\n  return 20 if n == 20\n  return 21 if n == 21\n  return 22 if n == 22\n  return 23 if n == 23\n  return 24 if n == 24\n  return 25 if n == 25\n  return 26 if n == 26\n  return 27 if n == 27\n  return 28 if n == 28\n  return 29 if n == 29\n  return 30 if n == 30\n  return 31 if n == 31\n  return 32 if n == 32\n  return 33 if n == 33\n  return 34 if n == 34\n  return 35 if n == 35\n  return 36 if n == 36\n  return 37 if n == 37\n  return 38 if n == 38\n  return 39 if n == 39\n  return 40 if n == 40\n  return 41 if n == 41\n  return 42 if n == 42\n  return 43 if n == 43\n  return 44 if n == 44\n  return 45 if n == 45\n  return 46 if n == 46\n  return 47 if n == 47\n  return 48 if n == 48\n  return 49 if n == 49\n  return 50 if n == 50\n  return 51 if n == 51\n  return 52 if n == 52\n  return 53 if n == 53\n  return 54 if n == 54\n  return 55 if n == 55\n  return 56 if n == 56\n  return 57 if n == 57\n  return 58 if n == 58\n  return 59 if n == 59\n  return 60 if n == 60\n  return 61 if n == 61\n  return 62 if n == 62",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m / 2, n - 1)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  get_total_number_of_sequences(m, n - 1) + (m - 1) * get_total_number_of_sequences(m - 1, n - 2)\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  get_total_number_of_sequences(m - 1, n) + get_total_number_of_sequences(m - 2, n - 1) + get_total_number_of_sequences(m - 3, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  # Write your code here.\n\ttotal = 0\n\t(2..m).each do |num|\n\t\ttotal += get_total_number_of_sequences_helper(m, n - 1, num)\n\tend\n\ttotal\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 2, n - 1)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  # Write your code here.\n  if n == 1\n    return m\n  end\n  total = 0\n  (2..m).each do |num|\n    total += get_total_number_of_sequences(num - 1, n - 1)\n  end\n  total\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if m == 1\n  return 1 if m == 2\n  return 2 if m == 3\n  return 3 if m == 4\n  return 4 if m == 5\n  return 5 if m == 6\n  return 6 if m == 7\n  return 7 if m == 8\n  return 8 if m == 9\n  return 9 if m == 10\n  return 10 if m == 11\n  return 11 if m == 12\n  return 12 if m == 13\n  return 13 if m == 14\n  return 14 if m == 15\n  return 15 if m == 16\n  return 16 if m == 17\n  return 17 if m == 18\n  return 18 if m == 19\n  return 19 if m == 20\n  return 20 if m == 21\n  return 21 if m == 22\n  return 22 if m == 23\n  return 23 if m == 24\n  return 24 if m == 25\n  return 25 if m == 26\n  return 26 if m == 27\n  return 27 if m == 28\n  return 28 if m == 29\n  return 29 if m == 30\n  return 30 if m == 31\n  return 31 if m == 32\n  return 32 if m == 33\n  return 33 if m == 34\n  return 34 if m == 35\n  return 35 if m == 36\n  return 36 if m == 37\n  return 37 if m == 38\n  return 38 if m == 39\n  return 39 if m == 40\n  return 40 if m == 41\n  return 41 if m == 42\n  return 42 if m == 43\n  return 43 if m == 44\n  return 44 if m == 45\n  return 45 if m == 46\n  return 46 if m == 47\n  return 47 if m == 48\n  return 48 if m == 49\n  return 49 if m == 50\n  return 50 if m == 51\n  return 51 if m == 52\n  return 52 if m == 53\n  return 53 if m == 54\n  return 54 if m == 55\n  return 55 if m == 56\n  return 56 if m == 57\n  return 57 if m == 58\n  return 58 if m == 59\n  return 59 if m == 60\n  return 60 if m == 61\n  return 61 if m == 62\n  return 62 if m == 63",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 2, n - 1)\nend",
    "  # Write your code here.\nend",
    "  # Write your code here.\n  return 0 if n < 1 || m < 2\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m -",
    "  # Write your code here.\n  # initialize a dp array of size n + 1\n  dp = Array.new(n + 1, 0)\n  # initialize a dp array of size m + 1\n  dp_m = Array.new(m + 1, 0)\n  # set the first element of the dp array to 1\n  dp[1] = 1\n  # set the first element of the dp_m array to 1\n  dp_m[1] = 1\n  # iterate from 2 to n\n  (2..n).each do |i|\n    # iterate from 2 to m\n    (2..m).each do |j|\n      # if j is greater than or equal to 2 * i - 1\n      if j >= 2 * i - 1\n        # set the dp_m[j] to dp_m[j] + dp[i - 1]\n        dp_m[j] = dp_m[j] + dp[i - 1]\n      end\n    end\n    # iterate from 2 to m\n    (2..m).each do |j|\n      # set the dp[i] to dp[i] + dp_m[j]\n      dp[i] = dp[i] + dp_m[j]\n    end\n  end\n  # return the last element of the dp array\n  dp[n]\nend",
    "  return 0 if m < 2 * n\n  return 1 if n == 1\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m / 2, n - 1)\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  # Write your code here.\nend",
    "  return 0 if m < 2 * n\n  return 1 if n == 1\n  return m - n + 1 if n == 2\n  return (m - n + 1) * (m - n) / 2 if n == 3\n  return (m - n + 1) * (m - n) * (m - n - 1) / 6 if n == 4\n  return (m - n + 1) * (m - n) * (m - n - 1) * (m - n - 2) / 24 if n == 5\n  return (m - n + 1) * (m - n) * (m - n - 1) * (m - n - 2) * (m - n - 3) / 120 if n == 6\n  return (m - n + 1) * (m - n) * (m - n - 1) * (m - n - 2) * (m - n - 3) * (m - n - 4) / 720 if n == 7\n  return (m - n + 1) * (m - n) * (m - n - 1) * (m - n - 2) * (m - n - 3) * (m - n - 4) * (m - n - 5) / 5040 if n == 8\n  return (m - n + 1) * (m - n) * (m - n - 1) * (m - n - 2) * (m - n - 3) * (m - n - 4) * (m - n - 5) * (m - n - 6) / 40320 if n == 9\n  return (m - n + 1) * (m - n) * (m - n - 1) * (m - n - 2) * (m - n - 3) * (m - n - 4) * (m - n - 5) * (m - n - 6) * (m - n - 7) / 362880 if n == 10\n  return (m - n + 1) * (m - n) * (m - n - 1) * (m - n - 2) * (m - n - 3) * (m - n - 4) * (m - n - 5) * (m - n - 6) * (m - n - 7) * (m - n -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m - 1, n - 1)\nend",
    "  return 0 if n < 1\n  return 1 if n == 1",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 2, n - 1)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) + get_total_number_of_sequences(m - 1, n - 2)\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  return 0 if n == 0\n  return 1 if n == 1",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  # Write your code here.\n\treturn 0 if n == 0\n\treturn 1 if n == 1\n\treturn m - 1 if n == 2\n\treturn (m - 1) * (m - 2) if n == 3\n\treturn (m - 1) * (m - 2) * (m - 3) if n == 4\n\treturn (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n\treturn (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n\treturn (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n\treturn (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n\treturn (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n\treturn (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n\treturn (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n\treturn (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n\treturn (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  # Write your code here.\n\treturn 0 if n == 0\n\treturn 1 if n == 1\n\treturn m - 1 if n == 2\n\t\n\ttotal = 0\n\t(2..m).each do |num|\n\t\ttotal += get_total_number_of_sequences(num - 1, n - 1)\n\tend\n\ttotal\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 2, n - 1)\nend",
    "  # Write your code here.\nend",
    "  return 0 if n < 1\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  # Write your code here.\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m - 1, n - 1)\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  # Write your code here.\n  return 0 if m < 2\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 2, n - 1)\nend",
    "  return 0 if m < 2\n  return 1 if n == 1",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 2, n - 1)\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if m == 1\n  return m - 1 if n == 1\n  return (m - 1) * get_total_number_of_sequences(m, n - 1)\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 2, n - 1)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  get_total_number_of_sequences(m - 1, n) + get_total_number_of_sequences(m - 2, n - 1) + get_total_number_of_sequences(m - 3, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  # Write your code here.\n\treturn 0 if n == 0\n\treturn 1 if n == 1\n\treturn m - 1 if n == 2\n\treturn (m - 1) * (m - 2) if n == 3\n\t\n\t# n > 3\n\t# dp[i] = number of sequences of length i\n\tdp = Array.new(n + 1, 0)\n\tdp[0] = 1\n\tdp[1] = 1\n\tdp[2] = m - 1\n\tdp[3] = (m - 1) * (m - 2)\n\t\n\t(4..n).each do |i|\n\t\tdp[i] = (m - 1) * dp[i - 1] + (m - 2) * dp[i - 2]\n\tend\n\t\n\tdp[n]\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  return 0 if n == 0\n  return 1 if n == 1",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  # Write your code here.\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  # Write your code here.\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  # Write your code here.\nend",
    "  return 0 if m < 2 * n\n  return 1 if n == 1\n  return get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m / 2, n - 1)\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if m == 1\n  return m - 1 if n == 1\n  return (m - 1) * get_total_number_of_sequences(m, n - 1)\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  \n  total = 0\n  (2..m).each do |num|\n    total += get_total_number_of_sequences(num - 1, n - 1)\n  end\n  total\nend",
    "  # Write your code here.\n  return 0 if m < 2 || n < 1\n  dp = [1] * (m + 1)\n  (2..n).each do |i|\n    new_dp = [0] * (m + 1)\n    (2..m).each do |j|\n      new_dp[j] = dp[j] + new_dp[j - 1]\n    end\n    dp = new_dp\n  end\n  dp[m]\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m - 1, n - 1)\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  return 0 if m < 2 * n\n  return 1 if n == 1\n  return m - 2 * n + 1 if n == 2\n  return (m - 2 * n + 1) * (m - 2 * n + 2) / 2 if n == 3\n  return (m - 2 * n + 1) * (m - 2 * n + 2) * (m - 2 * n + 3) / 6 if n == 4\n  return (m - 2 * n + 1) * (m - 2 * n + 2) * (m - 2 * n + 3) * (m - 2 * n + 4) / 24 if n == 5\n  return (m - 2 * n + 1) * (m - 2 * n + 2) * (m - 2 * n + 3) * (m - 2 * n + 4) * (m - 2 * n + 5) / 120 if n == 6\n  return (m - 2 * n + 1) * (m - 2 * n + 2) * (m - 2 * n + 3) * (m - 2 * n + 4) * (m - 2 * n + 5) * (m - 2 * n + 6) / 720 if n == 7\n  return (m - 2 * n + 1) * (m - 2 * n + 2) * (m - 2 * n + 3) * (m - 2 * n + 4) * (m - 2 * n + 5) * (m - 2 * n + 6) * (m - 2 * n + 7) / 5040 if n == 8\n  return (m - 2 * n + 1) * (m - 2 * n + 2) * (m - 2 * n + 3) * (m - 2 * n + 4) * (m - 2 * n + 5) * (m - 2 * n + 6) * (m - 2 * n + 7) * (m - 2 * n + 8) / 40320 if n == 9\n  return (m - 2 * n + 1) * (m - 2 * n + 2) * (m - 2 * n + 3) * (m - 2 * n + 4) * (m - 2 * n + 5) * (m - 2 * n + 6) * (m - 2 * n + 7)",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  # Write your code here.\nend",
    "  return 0 if m < 2 * n\n  return 1 if n == 1\n  return m - n + 1 if n == 2\n  get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 1, n)\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 2, n - 1)\nend",
    "  # Write your code here.\n  if n == 1\n    return m\n  end\n  total = 0\n  (2..m).each do |i|\n    total += get_total_number_of_sequences(i - 1, n - 1)\n  end\n  return total\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "    # Write your code here.\n    if n == 1\n        return m\n    end\n    count = 0\n    for i in 2..m\n        count += get_total_number_of_sequences(m, n-1)\n    end\n    return count\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 2, n - 1)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 2, n - 1) + get_total_number_of_sequences(m - 3, n - 1)\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  # Write your code here.\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  # Write your code here.\n\treturn 0 if n == 0\n\treturn 1 if n == 1\n\treturn m - 1 if n == 2\n\t\n\ttotal = 0\n\t(2..m).each do |num|\n\t\ttotal += get_total_number_of_sequences(num - 1, n - 1)\n\tend\n\t\n\ttotal\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "    # Write your code here.\n    return 0 if n == 0\n    return 1 if n == 1\n    return m - 1 if n == 2\n    return (m - 1) * (m - 2) if n == 3\n    return (m - 1) * (m - 2) * (m - 3) if n == 4\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  return 0 if m < 2 * n\n  return 1 if n == 1\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m / 2, n - 1)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1",
    "  return 0 if m < 2 * n\n  return 1 if n == 1\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m / 2, n - 1)\nend",
    "  # Write your code here.\n  if n == 1\n    return m\n  end\n  total = 0\n  (2..m).each do |i|\n    total += get_total_number_of_sequences(i - 1, n - 1)\n  end\n  return total\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if m < 2 * n\n  return 1 if n == 1\n  return m - n + 1 if n == 2\n  get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 1, n)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  # Write your code here.\n  if m == 1\n    return 1\n  end\n  if n == 1\n    return m\n  end\n  return get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m / 2, n - 1)\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "    return 0 if n == 0\n    return 1 if n == 1\n    return m - 1 if n == 2\n    return (m - 1) * (m - 2) if n == 3\n    return (m - 1) * (m - 2) * (m - 3) if n == 4\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n    return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  # Write your code here.\nend",
    "  # Write your code here.\n\tif n == 1\n\t\treturn m\n\tend\n\t\n\tcount = 0\n\t\n\t(2..m).each do |num|\n\t\tcount += get_total_number_of_sequences(num - 1, n - 1)\n\tend\n\t\n\treturn count\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 2)\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if m < 2 * n\n  return 1 if n == 1\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m / 2, n - 1)\nend",
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  return 0 if m < 2 * n\n  return 1 if n == 1\n  return m - n + 1 if n == 2\n  get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 1, n)\nend",
    "  # Write your code here.\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1",
    "  return 0 if n == 0\n  return 1 if n == 1",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m - 1, n - 1)\nend",
    "  # Write your code here.\n\treturn 0 if n == 0\n\treturn 1 if n == 1\n\treturn m - 1 if n == 2\n\treturn (m - 1) * (m - 2) if n == 3\n\t\n\tdp = Array.new(n, 0)\n\tdp[0] = 1\n\tdp[1] = m - 1\n\tdp[2] = (m - 1) * (m - 2)\n\t\n\t(3...n).each do |i|\n\t\tdp[i] = (m - 1) * (dp[i - 1] + dp[i - 2])\n\tend\n\t\n\tdp[-1]\nend",
    "  # Write your code here.\nend",
    "  # Write your code here.\nend"
  ]
}
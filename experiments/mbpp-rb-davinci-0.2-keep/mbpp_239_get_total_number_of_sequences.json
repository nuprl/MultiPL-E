{
  "name": "mbpp_239_get_total_number_of_sequences",
  "language": "rb",
  "prompt": "# Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.\ndef get_total_number_of_sequences(m, n)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_239_get_total_number_of_sequences.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_get_total_number_of_sequences\n    candidate = method(:get_total_number_of_sequences)\n    assert_equal(4, candidate.call(10, 4))\n    assert_equal(6, candidate.call(5, 2))\n    assert_equal(84, candidate.call(16, 3))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  # Write your code here.\n  return 0 if n == 0\n  return 1 if n == 1\n  return 2 if n == 2\n  return 3 if n == 3\n  return 4 if n == 4\n  return 5 if n == 5\n  return 6 if n == 6\n  return 7 if n == 7\n  return 8 if n == 8\n  return 9 if n == 9\n  return 10 if n == 10\n  return 11 if n == 11\n  return 12 if n == 12\n  return 13 if n == 13\n  return 14 if n == 14\n  return 15 if n == 15\n  return 16 if n == 16\n  return 17 if n == 17\n  return 18 if n == 18\n  return 19 if n == 19\n  return 20 if n == 20\n  return 21 if n == 21\n  return 22 if n == 22\n  return 23 if n == 23\n  return 24 if n == 24\n  return 25 if n == 25\n  return 26 if n == 26\n  return 27 if n == 27\n  return 28 if n == 28\n  return 29 if n == 29\n  return 30 if n == 30\n  return 31 if n == 31\n  return 32 if n == 32\n  return 33 if n == 33\n  return 34 if n == 34\n  return 35 if n == 35\n  return 36 if n == 36\n  return 37 if n == 37\n  return 38 if n == 38\n  return 39 if n == 39\n  return 40 if n == 40\n  return 41 if n == 41\n  return 42 if n == 42\n  return 43 if n == 43\n  return 44 if n == 44\n  return 45 if n == 45\n  return 46 if n == 46\n  return 47 if n == 47\n  return 48 if n == 48\n  return 49 if n == 49\n  return 50 if n == 50\n  return 51 if n == 51\n  return 52 if n == 52\n  return 53 if n == 53\n  return 54 if n == 54\n  return 55 if n == 55\n  return 56 if n == 56\n  return 57 if n == 57\n  return 58 if n == 58\n  return 59 if n == 59\n  return 60 if n == 60\n  return 61 if n == 61\n  return 62 if n == 62",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m / 2, n - 1)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  get_total_number_of_sequences(m, n - 1) + (m - 1) * get_total_number_of_sequences(m - 1, n - 2)\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  get_total_number_of_sequences(m - 1, n) + get_total_number_of_sequences(m - 2, n - 1) + get_total_number_of_sequences(m - 3, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  # Write your code here.\n\ttotal = 0\n\t(2..m).each do |num|\n\t\ttotal += get_total_number_of_sequences_helper(m, n - 1, num)\n\tend\n\ttotal\nend",
    "  # Write your code here.\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 2, n - 1)\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "  # Write your code here.\n  if n == 1\n    return m\n  end\n  total = 0\n  (2..m).each do |num|\n    total += get_total_number_of_sequences(num - 1, n - 1)\n  end\n  total\nend",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  return (m - 1) * (m - 2) if n == 3\n  return (m - 1) * (m - 2) * (m - 3) if n == 4\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) if n == 5\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) if n == 6\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) if n == 7\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) if n == 8\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) if n == 9\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) if n == 10\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) if n == 11\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) if n == 12\n  return (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m -",
    "  return 0 if n == 0\n  return 1 if n == 1\n  return m - 1 if n == 2\n  get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2) * (m - 1)\nend"
  ]
}
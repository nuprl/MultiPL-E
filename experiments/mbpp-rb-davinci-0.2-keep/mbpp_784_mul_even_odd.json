{
  "name": "mbpp_784_mul_even_odd",
  "language": "rb",
  "prompt": "# Write a function to find the product of first even and odd number of a given list.\ndef mul_even_odd(list1)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_mul_even_odd\n    candidate = method(:mul_even_odd)\n    assert_equal(4, candidate.call([1, 3, 5, 7, 4, 1, 6, 8]))\n    assert_equal(2, candidate.call([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n    assert_equal(10, candidate.call([1, 5, 7, 9, 10]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number of a given list is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  list1.each do |i|\n    if i % 2 == 0\n      puts i\n      break\n    end\n  end\n  list1.reverse.each do |i|\n    if i % 2 != 0\n      puts i\n      break\n    end\n  end\nend\nmul_even_odd([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts \"product of first even and odd number is #{x*list1[i+1]}\"\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even.first * odd.first\nend",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  even_odd_list = list1.partition(&:even?)\n  even_odd_list[0][0] * even_odd_list[1][0]\nend",
    "  list1.each do |i|\n    if i%2==0\n      puts i*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num.first * odd_num.first\nend",
    "  even_num = list1.select(&:even?)\n  odd_num = list1.select(&:odd?)\n  even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num.first * odd_num.first\nend",
    "  list1.each_with_index do |num, index|\n    if num % 2 == 0\n      puts num * list1[index + 1]\n      break\n    end\n  end\nend",
    "  list1.each do |i|\n    if i%2==0\n      puts i\n      break\n    end\n  end\n  list1.each do |i|\n    if i%2!=0\n      puts i\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_odd_list = list1.select { |num| num.even? || num.odd? }\n  even_odd_list[0] * even_odd_list[1]\nend",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number of a given list is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  return even[0]*odd[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num.first * odd_num.first\nend",
    "  list1.each do |i|\n    if i%2==0\n      puts i*list1[i+1]\n      break\n    end\n  end\nend",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts x*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts list1[index] * list1[index + 1]\n      break\n    end\n  end\nend",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  list1.each_with_index do |value, index|\n    if value.even?\n      puts \"The product of first even and odd number is #{value * list1[index + 1]}\"\n      break\n    end\n  end\nend",
    "  list1.each_with_index do |num,index|\n    if num.even?\n      puts list1[index]*list1[index+1]\n      break\n    end\n  end\nend",
    "  even_odd_list = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd_list << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd_list << i\n      break\n    end\n  end\n  even_odd_list.inject(:*)\nend",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even = list1.select{|x| x%2 == 0}\n  odd = list1.select{|x| x%2 != 0}\n  return even[0] * odd[0]\nend",
    "  list1.each_with_index do |n, i|\n    if n.even?\n      return n * list1[i + 1]\n    end\n  end\nend",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts \"The product of first even and odd number is #{x*list1[i+1]}\"\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_num = list1.select { |e| e.even? }\n  odd_num = list1.select { |e| e.odd? }\n  even_num.first * odd_num.first\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts list1[index] * list1[index + 1]\n      break\n    end\n  end\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even_no = list1.select(&:even?).first\n  odd_no = list1.select(&:odd?).first\n  even_no * odd_no\nend",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      return x*list1[i+1]\n    end\n  end\nend",
    "  even = list1.select {|x| x.even?}\n  odd = list1.select {|x| x.odd?}\n  if even.length > 0 && odd.length > 0\n    return even[0] * odd[0]\n  else\n    return \"No even or odd number in the list\"\n  end\nend",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number of a given list is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_odd_list = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd_list << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd_list << i\n      break\n    end\n  end\n  even_odd_list.inject(:*)\nend",
    "  list1.each do |i|\n    if i % 2 == 0\n      puts i * list1[i+1]\n      break\n    end\n  end\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts list1[index] * list1[index + 1]\n      break\n    end\n  end\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts list1[index] * list1[index + 1]\n      break\n    end\n  end\nend",
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  even_num[0] * odd_num[0]\nend",
    "  even_no = list1.select { |x| x.even? }\n  odd_no = list1.select { |x| x.odd? }\n  even_no.first * odd_no.first\nend",
    "  list1.each do |i|\n    if i % 2 == 0\n      puts i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      puts i\n      break\n    end\n  end\nend",
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  return even_num.first * odd_num.first\nend",
    "  even_no = list1.select { |x| x.even? }\n  odd_no = list1.select { |x| x.odd? }\n  puts \"Product of first even and odd number is #{even_no[0] * odd_no[0]}\"\nend",
    "  even = list1.select{|x| x.even?}\n  odd = list1.select{|x| x.odd?}\n  puts \"Product of first even and odd number is #{even[0]*odd[0]}\"\nend",
    "  even_num = list1.select{|x| x%2 == 0}\n  odd_num = list1.select{|x| x%2 != 0}\n  puts \"Product of first even and odd number of a given list is #{even_num[0]*odd_num[0]}\"\nend",
    "  list1.each do |i|\n    if i%2==0\n      puts i*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6])",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      return num * list1[index + 1]\n    end\n  end\nend",
    "  list1.each do |i|\n    if i.even?\n      puts i\n      break\n    end\n  end\n  list1.each do |i|\n    if i.odd?\n      puts i\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  even_num = list1.select(&:even?)\n  odd_num = list1.select(&:odd?)\n  even_num[0] * odd_num[0]\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts \"Product of first even and odd number is #{num * list1[index + 1]}\"\n      break\n    end\n  end\nend",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  return even[0]*odd[0]\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      return num * list1[index + 1]\n    end\n  end\nend",
    "  even = list1.select {|x| x.even?}\n  odd = list1.select {|x| x.odd?}\n  puts \"Product of first even and odd number of a given list is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  even_odd_list = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd_list << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd_list << i\n      break\n    end\n  end\n  return even_odd_list[0] * even_odd_list[1]\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  even[0] * odd[0]\nend",
    "  list1.each_with_index do |value,index|\n    if value.even?\n      puts value*list1[index+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num.first * odd_num.first\nend",
    "  even_odd_list = []\n  list1.each do |num|\n    if num % 2 == 0\n      even_odd_list << num\n      break\n    end\n  end\n  list1.each do |num|\n    if num % 2 != 0\n      even_odd_list << num\n      break\n    end\n  end\n  even_odd_list.inject(:*)\nend",
    "  list1.each_with_index do |num,index|\n    if num.even?\n      puts list1[index]*list1[index+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts num * list1[index+1]\n      break\n    end\n  end\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even.first * odd.first\nend",
    "  list1.each_with_index do |num,index|\n    if num % 2 == 0\n      puts num * list1[index+1]\n      break\n    end\n  end\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      return num * list1[index + 1]\n    end\n  end\nend",
    "  even = list1.select{|x| x%2 == 0}\n  odd = list1.select{|x| x%2 != 0}\n  even[0] * odd[0]\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      return num * list1[index + 1]\n    end\n  end\nend",
    "  list1.each_with_index do |x,i|\n    if x.even?\n      puts x*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  puts \"Product of first even and odd number of a given list is #{even[0] * odd[0]}\"\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts list1[index] * list1[index + 1]\n      break\n    end\n  end\nend",
    "  even_odd_list = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd_list << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd_list << i\n      break\n    end\n  end\n  even_odd_list.inject(:*)\nend",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts x*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6])",
    "  even = list1.select{|x| x.even?}\n  odd = list1.select{|x| x.odd?}\n  even[0] * odd[0]\nend",
    "  list1.each_with_index do |x,i|\n    if i == 0\n      even = x\n    elsif i == 1\n      odd = x\n    end\n    if x.even? && even.nil?\n      even = x\n    elsif x.odd? && odd.nil?\n      odd = x\n    end\n  end\n  puts \"Product of first even and odd number is #{even*odd}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_odd_list = list1.partition { |x| x.even? }\n  even_odd_list[0][0] * even_odd_list[1][0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num.first * odd_num.first\nend",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  list1.each_with_index do |num,index|\n    if num.even?\n      puts \"The product of first even and odd number is #{num * list1[index+1]}\"\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  list1.each_with_index do |x,i|\n    if x.even?\n      puts x*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  list1.each_with_index do |num,index|\n    if num.even?\n      puts num*list1[index+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_odd_list = []\n  even_odd_list << list1.select { |num| num.even? }.first\n  even_odd_list << list1.select { |num| num.odd? }.first\n  even_odd_list.reduce(:*)\nend",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts x*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts x*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6])",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  list1.each_with_index do |item, index|\n    if item.even?\n      return item * list1[index + 1]\n    end\n  end\nend",
    "  even = 0\n  odd = 0\n  list1.each do |i|\n    if i%2 == 0\n      even = i\n      break\n    end\n  end\n  list1.each do |i|\n    if i%2 != 0\n      odd = i\n      break\n    end\n  end\n  return even * odd\nend\nputs mul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select{|x| x.even?}\n  odd = list1.select{|x| x.odd?}\n  even[0] * odd[0]\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  even_num = list1.select { |num| num.even? }.first\n  odd_num = list1.select { |num| num.odd? }.first\n  even_num * odd_num\nend",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number of a given list is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts \"The product of first even and odd number is #{x*list1[i+1]}\"\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  even_index = list1.index{|x| x%2==0}\n  odd_index = list1.index{|x| x%2!=0}\n  list1[even_index]*list1[odd_index]\nend",
    "  list1.each_with_index do |x,i|\n    if x.even?\n      puts x*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  list1.each do |i|\n    if i%2==0\n      puts i*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  list1.each do |i|\n    if i%2==0\n      puts i*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  even_num.first * odd_num.first\nend",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number of a given list is #{even[0]*odd[0]}\"\nend",
    "  list1.each_with_index do |n, i|\n    if n.even?\n      return n * list1[i+1]\n    end\n  end\nend",
    "  list1.each_with_index do |num,index|\n    if num%2==0\n      puts \"product of first even and odd number is #{num*list1[index+1]}\"\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts \"Product of first even and odd number is #{x*list1[i+1]}\"\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5])",
    "  list1.each_with_index do |n, i|\n    if n.even?\n      puts n * list1[i + 1]\n      break\n    end\n  end\nend",
    "  even_num = list1.select(&:even?)\n  odd_num = list1.select(&:odd?)\n  even_num[0] * odd_num[0]\nend",
    "  list1.each_with_index do |num,index|\n    if num.even?\n      puts \"The product of first even and odd number is #{num*list1[index+1]}\"\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts list1[index] * list1[index + 1]\n      break\n    end\n  end\nend",
    "  even = list1.select {|x| x.even?}\n  odd = list1.select {|x| x.odd?}\n  even[0] * odd[0]\nend",
    "  list1.each_with_index do |e,i|\n    if e.even?\n      puts e*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_num = list1.select(&:even?)\n  odd_num = list1.select(&:odd?)\n  even_num.first * odd_num.first\nend",
    "  even = list1.select{|x| x%2 == 0}\n  odd = list1.select{|x| x%2 != 0}\n  puts \"Product of first even and odd number of a given list is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even.first * odd.first\nend",
    "  list1.each do |i|\n    if i%2==0\n      puts i*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6])",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts num * list1[index + 1]\n      break\n    end\n  end\nend",
    "  list1.each_with_index do |x, index|\n    if x % 2 == 0\n      puts \"The product of first even and odd number is #{x * list1[index + 1]}\"\n      break\n    end\n  end\nend",
    "  list1.each_with_index do |x,i|\n    if x.even?\n      puts list1[i]*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  even_no = list1.select{|x| x%2==0}\n  odd_no = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number of a given list is #{even_no[0]*odd_no[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_odd = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd << i\n      break\n    end\n  end\n  even_odd.inject(:*)\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num.first * odd_num.first\nend",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts list1[i]*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  even_num = list1.select { |num| num.even? }.first\n  odd_num = list1.select { |num| num.odd? }.first\n  even_num * odd_num\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even.first * odd.first\nend",
    "  even = list1.select {|x| x.even?}\n  odd = list1.select {|x| x.odd?}\n  puts even[0] * odd[0]\nend",
    "  even_odd = list1.partition { |x| x.even? }\n  even_odd[0][0] * even_odd[1][0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even_odd_list = []\n  list1.each do |i|\n    if i.even?\n      even_odd_list << i\n    end\n    if i.odd?\n      even_odd_list << i\n    end\n  end\n  even_odd_list[0] * even_odd_list[1]\nend",
    "  even_odd_list = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd_list << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd_list << i\n      break\n    end\n  end\n  puts \"The product of first even and odd number of a given list is #{even_odd_list[0] * even_odd_list[1]}\"\nend",
    "  even_num = list1.select { |num| num.even? }.first\n  odd_num = list1.select { |num| num.odd? }.first\n  even_num * odd_num\nend",
    "  even_num = list1.select(&:even?)\n  odd_num = list1.select(&:odd?)\n  even_num[0] * odd_num[0]\nend",
    "  list1.each_with_index do |x,i|\n    if x.even?\n      return x*list1[i+1]\n    end\n  end\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select{|x| x.even?}\n  odd = list1.select{|x| x.odd?}\n  puts \"Product of first even and odd number of a given list is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  list1.each_with_index do |value,index|\n    if value%2==0\n      puts \"The product of first even and odd number of a given list is #{value*list1[index+1]}\"\n      break\n    end\n  end\nend\nmul_even_odd(list1)",
    "  list1.each_with_index do |value,index|\n    if value%2==0\n      puts value*list1[index+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  list1.each do |i|\n    if i%2==0\n      puts i*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_odd_list = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd_list << i\n    else\n      even_odd_list << i\n      break\n    end\n  end\n  puts \"The product of first even and odd number of a given list is #{even_odd_list[0] * even_odd_list[1]}\"\nend",
    "  list1.each_with_index do |num,index|\n    if num % 2 == 0\n      puts \"Product of first even and odd number is #{num * list1[index+1]}\"\n      break\n    end\n  end\nend",
    "  even_odd_list = []\n  list1.each do |num|\n    if num % 2 == 0\n      even_odd_list << num\n      break\n    end\n  end\n  list1.each do |num|\n    if num % 2 != 0\n      even_odd_list << num\n      break\n    end\n  end\n  return even_odd_list[0] * even_odd_list[1]\nend",
    "  even_odd_list = []\n  list1.each do |num|\n    if num % 2 == 0\n      even_odd_list << num\n      break\n    end\n  end\n  list1.each do |num|\n    if num % 2 != 0\n      even_odd_list << num\n      break\n    end\n  end\n  even_odd_list.inject(:*)\nend",
    "  even = list1.select{|x| x%2==0}\n  odd = list1.select{|x| x%2!=0}\n  puts \"Product of first even and odd number of a given list is #{even[0]*odd[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  list1.each do |i|\n    if i % 2 == 0\n      puts i * list1[i+1]\n      break\n    end\n  end\nend",
    "  even = list1.select {|x| x.even?}\n  odd = list1.select {|x| x.odd?}\n  puts even[0] * odd[0]\nend",
    "  even = list1.select{|x| x.even?}\n  odd = list1.select{|x| x.odd?}\n  even[0] * odd[0]\nend",
    "  even_odd = list1.partition { |x| x.even? }\n  even_odd[0][0] * even_odd[1][0]\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts list1[index] * list1[index + 1]\n      break\n    end\n  end\nend",
    "  even_num = list1.select(&:even?)\n  odd_num = list1.select(&:odd?)\n  even_num[0] * odd_num[0]\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      return num * list1[index+1]\n    end\n  end\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts list1[index] * list1[index + 1]\n      break\n    end\n  end\nend",
    "  list1.each_with_index do |num, i|\n    if num.even?\n      puts list1[i] * list1[i+1]\n      break\n    end\n  end\nend",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts x*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_num = list1.select{|x| x%2==0}\n  odd_num = list1.select{|x| x%2!=0}\n  puts \"The product of first even and odd number of a given list is #{even_num[0]*odd_num[0]}\"\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_num = list1.select(&:even?)\n  odd_num = list1.select(&:odd?)\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  puts \"The product of first even and odd number of a given list is #{even[0] * odd[0]}\"\nend\nmul_even_odd([1, 2, 3, 4, 5, 6])",
    "  even = list1.select{|x| x.even?}\n  odd = list1.select{|x| x.odd?}\n  puts even[0] * odd[0]\nend",
    "  even_odd = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd.push(i)\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd.push(i)\n      break\n    end\n  end\n  return even_odd[0] * even_odd[1]\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      return num * list1[index + 1]\n    end\n  end\nend",
    "  even_odd_list = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd_list << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd_list << i\n      break\n    end\n  end\n  even_odd_list.inject(:*)\nend",
    "  if list1.length%2==0\n    list1[0]*list1[1]\n  else\n    list1[0]*list1[2]\n  end\nend",
    "  even_odd_list = []\n  list1.each do |i|\n    if i % 2 == 0\n      even_odd_list << i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      even_odd_list << i\n      break\n    end\n  end\n  return even_odd_list.inject(:*)\nend",
    "  even_num = list1.select { |num| num % 2 == 0 }\n  odd_num = list1.select { |num| num % 2 != 0 }\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  even[0] * odd[0]\nend",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts x*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  even_index = 0\n  odd_index = 0\n  for i in 0..list1.length\n    if list1[i] % 2 == 0\n      even_index = i\n      break\n    end\n  end\n  for i in 0..list1.length\n    if list1[i] % 2 != 0\n      odd_index = i\n      break\n    end\n  end\n  puts \"Product of first even and odd number of a given list is #{list1[even_index] * list1[odd_index]}\"\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even.first * odd.first\nend",
    "  even = list1.select(&:even?)\n  odd = list1.select(&:odd?)\n  even[0] * odd[0]\nend",
    "  even_odd_list = []\n  list1.each do |num|\n    if num % 2 == 0\n      even_odd_list << num\n      break\n    end\n  end\n  list1.each do |num|\n    if num % 2 != 0\n      even_odd_list << num\n      break\n    end\n  end\n  even_odd_list.inject(:*)\nend",
    "  even_num = list1.select(&:even?)\n  odd_num = list1.select(&:odd?)\n  even_num.first * odd_num.first\nend",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts \"The product of first even and odd number is #{num * list1[index+1]}\"\n      break\n    end\n  end\nend",
    "  list1.each_with_index do |num,index|\n    if num%2==0\n      puts num*list1[index+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6])",
    "  list1.each do |num|\n    if num % 2 == 0\n      puts num * list1[1]\n      break\n    end\n  end\nend",
    "  list1.each do |i|\n    if i % 2 == 0\n      puts i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      puts i\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  list1.each_with_index do |item, index|\n    if index == 0\n      even = item\n    elsif index == 1\n      odd = item\n    end\n    break if index == 1\n  end\n  even * odd\nend",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts x*list1[i+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  even = list1.select{|x| x.even?}\n  odd = list1.select{|x| x.odd?}\n  puts \"product of first even and odd number of a given list is #{even[0] * odd[0]}\"\nend",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts \"product of first even and odd number of a given list is #{x*list1[i+1]}\"\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  list1.each_with_index do |num,index|\n    if num%2==0\n      puts \"The product of first even and odd number is #{num*list1[index+1]}\"\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  list1.each_with_index do |x,i|\n    if x.even?\n      puts \"The product of first even and odd number is #{x*list1[i+1]}\"\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  list1.each_with_index do |num, index|\n    if num.even?\n      puts list1[index] * list1[index + 1]\n      break\n    end\n  end\nend",
    "  list1.each_with_index do |x,i|\n    if x%2==0\n      puts \"The product of first even and odd number is #{x*list1[i+1]}\"\n      break\n    end\n  end\nend",
    "  even_num = list1.select {|num| num.even?}\n  odd_num = list1.select {|num| num.odd?}\n  even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  even = list1.select{|x| x % 2 == 0}\n  odd = list1.select{|x| x % 2 != 0}\n  return even[0] * odd[0]\nend",
    "  even_num = list1.select { |num| num.even? }\n  odd_num = list1.select { |num| num.odd? }\n  even_num[0] * odd_num[0]\nend",
    "  list1.each_with_index do |num,index|\n    if num.even?\n      puts num*list1[index+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  list1.each_with_index do |item,index|\n    if item%2==0\n      puts \"The product of first even and odd number is #{item*list1[index+1]}\"\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9])",
    "  list1.each do |i|\n    if i % 2 == 0\n      puts i\n      break\n    end\n  end\n  list1.each do |i|\n    if i % 2 != 0\n      puts i\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  list1.each_with_index do |num,index|\n    if num.even?\n      puts list1[index] * list1[index+1]\n      break\n    end\n  end\nend\nmul_even_odd([1,2,3,4,5,6,7,8,9,10])",
    "  even_no = list1.select { |num| num.even? }\n  odd_no = list1.select { |num| num.odd? }\n  even_no.first * odd_no.first\nend",
    "  even = list1.select { |x| x.even? }\n  odd = list1.select { |x| x.odd? }\n  even[0] * odd[0]\nend",
    "  even = list1.select { |num| num.even? }\n  odd = list1.select { |num| num.odd? }\n  even[0] * odd[0]\nend",
    "  even_no = list1.select(&:even?)\n  odd_no = list1.select(&:odd?)\n  even_no[0] * odd_no[0]\nend",
    "  even_odd = list1.partition { |num| num.even? }\n  even_odd[0][0] * even_odd[1][0]\nend"
  ]
}
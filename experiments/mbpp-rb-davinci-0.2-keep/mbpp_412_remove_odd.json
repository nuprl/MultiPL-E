{
  "name": "mbpp_412_remove_odd",
  "language": "rb",
  "prompt": "# Write a python function to remove odd numbers from a given list.\ndef remove_odd(l)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_412_remove_odd.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_remove_odd\n    candidate = method(:remove_odd)\n    assert_equal([2], candidate.call([1, 2, 3]))\n    assert_equal([2, 4, 6], candidate.call([2, 4, 6]))\n    assert_equal([10, 20], candidate.call([10, 20, 3]))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  l.select { |x| x % 2 == 0 }\nend",
    "  l.select { |n| n.even? }\nend",
    "  l.select { |x| x.even? }\nend",
    "  l.select { |i| i % 2 == 0 }\nend",
    "  l.reject { |n| n.odd? }\nend",
    "  l.select { |i| i.even? }\nend",
    "  l.reject {|x| x.odd?}\nend",
    "  l.select { |i| i.even? }\nend",
    "  l.delete_if { |x| x % 2 != 0 }\nend",
    "  l.select { |e| e % 2 == 0 }\nend",
    "  l.select { |i| i % 2 == 0 }\nend",
    "  l.select { |i| i % 2 == 0 }\nend",
    "  l.each do |i|\n    if i % 2 != 0\n      l.delete(i)\n    end\n  end\n  return l\nend",
    "  l.select { |i| i % 2 == 0 }\nend",
    "  l.select { |n| n % 2 == 0 }\nend",
    "  l.select { |n| n.even? }\nend",
    "  l.select {|n| n % 2 == 0}\nend",
    "  l.select{|x| x.even?}\nend",
    "  l.select { |x| x % 2 == 0 }\nend",
    "  l.select { |i| i % 2 == 0 }\nend"
  ]
}
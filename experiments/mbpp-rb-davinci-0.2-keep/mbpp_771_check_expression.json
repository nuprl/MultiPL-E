{
  "name": "mbpp_771_check_expression",
  "language": "rb",
  "prompt": "# Write a function to check if the given expression is balanced or not. https://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/\ndef check_expression(exp)\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_771_check_expression.py",
  "prompt_terminology": "verbatim",
  "tests": "require 'test/unit'\nclass TestHumanEval < Test::Unit::TestCase\n  def test_check_expression\n    candidate = method(:check_expression)\n    assert_equal(true, candidate.call(\"{()}[{}]\"))\n    assert_equal(false, candidate.call(\"{()}[{]\"))\n    assert_equal(true, candidate.call(\"{()}[{}][]({})\"))\n  end\nend\n",
  "stop_tokens": [
    "\nclass",
    "\ndef",
    "\n#",
    "\n\n"
  ],
  "completions": [
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '(' || char == '{' || char == '['\n      stack.push(char)\n    elsif char == ')' && stack.last == '('\n      stack.pop\n    elsif char == '}' && stack.last == '{'\n      stack.pop\n    elsif char == ']' && stack.last == '['\n      stack.pop\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      return false if stack.empty?\n      stack.pop\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == \"(\"\n      stack.push(char)\n    elsif char == \")\"\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '(' || c == '{' || c == '['\n      stack.push(c)\n    elsif c == ')'\n      if stack.pop != '('\n        return false\n      end\n    elsif c == '}'\n      if stack.pop != '{'\n        return false\n      end\n    elsif c == ']'\n      if stack.pop != '['\n        return false\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '(' || char == '{' || char == '['\n      stack.push(char)\n    elsif char == ')'\n      return false if stack.pop != '('\n    elsif char == '}'\n      return false if stack.pop != '{'\n    elsif char == ']'\n      return false if stack.pop != '['\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      return false if stack.empty?\n      stack.pop\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.split('').each do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == \"(\"\n      stack.push(char)\n    elsif char == \")\"\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.split('').each do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '(' || c == '[' || c == '{'\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty? || stack.pop != '('\n        return false\n      end\n    elsif c == ']'\n      if stack.empty? || stack.pop != '['\n        return false\n      end\n    elsif c == '}'\n      if stack.empty? || stack.pop != '{'\n        return false\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '(' || char == '{' || char == '['\n      stack << char\n    elsif char == ')'\n      if stack.pop != '('\n        return false\n      end\n    elsif char == '}'\n      if stack.pop != '{'\n        return false\n      end\n    elsif char == ']'\n      if stack.pop != '['\n        return false\n      end\n    end\n  end\n  return true\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      return false if stack.pop != '('\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.split('').each do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == \"(\"\n      stack.push(char)\n    elsif char == \")\"\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return true\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '(' || char == '{' || char == '['\n      stack.push(char)\n    elsif char == ')'\n      return false if stack.pop != '('\n    elsif char == '}'\n      return false if stack.pop != '{'\n    elsif char == ']'\n      return false if stack.pop != '['\n    end\n  end\n  return true if stack.empty?\n  false\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == \"(\"\n      stack.push(char)\n    elsif char == \")\"\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      return false if stack.empty?\n      stack.pop\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      return false if stack.empty?\n      stack.pop\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '(' || char == '{' || char == '['\n      stack << char\n    elsif char == ')'\n      if stack.last == '('\n        stack.pop\n      else\n        return false\n      end\n    elsif char == '}'\n      if stack.last == '{'\n        stack.pop\n      else\n        return false\n      end\n    elsif char == ']'\n      if stack.last == '['\n        stack.pop\n      else\n        return false\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.split('').each do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      end\n      stack.pop\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      return false if stack.empty?\n      stack.pop\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    case c\n    when '{', '[', '('\n      stack.push(c)\n    when '}'\n      return false if stack.pop != '{'\n    when ']'\n      return false if stack.pop != '['\n    when ')'\n      return false if stack.pop != '('\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '(' || char == '{' || char == '['\n      stack.push(char)\n    elsif char == ')'\n      return false if stack.pop != '('\n    elsif char == '}'\n      return false if stack.pop != '{'\n    elsif char == ']'\n      return false if stack.pop != '['\n    end\n  end\n  return true\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  if stack.empty?\n    return true\n  else\n    return false\n  end\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '(' || char == '{' || char == '['\n      stack.push(char)\n    elsif char == ')'\n      if stack.pop != '('\n        return false\n      end\n    elsif char == '}'\n      if stack.pop != '{'\n        return false\n      end\n    elsif char == ']'\n      if stack.pop != '['\n        return false\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      return false if stack.pop != '('\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '(' || char == '{' || char == '['\n      stack.push(char)\n    elsif char == ')' || char == '}' || char == ']'\n      if stack.empty?\n        return false\n      end\n      if char == ')' && stack.pop != '('\n        return false\n      elsif char == '}' && stack.pop != '{'\n        return false\n      elsif char == ']' && stack.pop != '['\n        return false\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |c|\n    if c == '('\n      stack.push(c)\n    elsif c == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  return stack.empty?\nend",
    "  stack = []\n  exp.each_char do |char|\n    if char == '('\n      stack.push(char)\n    elsif char == ')'\n      if stack.empty?\n        return false\n      else\n        stack.pop\n      end\n    end\n  end\n  stack.empty?\nend"
  ]
}
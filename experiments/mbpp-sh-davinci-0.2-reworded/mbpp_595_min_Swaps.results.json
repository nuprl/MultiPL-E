{
  "name": "mbpp_595_min_Swaps",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_595_min_Swaps.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local len=$((len1>len2?len1:len2))\n  local i=0\n  local swaps=0\n  while [ $i -lt $len ]; do\n    local c1=${str1:$i:1}\n    local c2=${str2:$i:1}\n    if [ \"$c1\" != \"$c2\" ]; then\n      swaps=$((swaps+1))\n    fi\n    i=$((i+1))\n  done\n  echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$len1\n    local count=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of equal length\"\n        return\n    fi\n    for (( i=0; i<$len; i++ )); do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local min_len=$len1\n    local max_len=$len2\n    local diff=0\n    local swaps=0\n    if [ $len1 -gt $len2 ]; then\n        min_len=$len2\n        max_len=$len1\n    fi\n    diff=$((max_len-min_len))\n    swaps=$((diff+$(diff_chars $str1 $str2 $min_len)))\n    echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpdifuic78.sh: line 20: diff_chars: command not found\\n/tmp/tmpdifuic78.sh: line 20: diff+: syntax error: operand expected (error token is \"+\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    local -i len3=0\n    local -i len4=0\n    local -i len5=0\n    local -i len6=0\n    local -i len7=0\n    local -i len8=0\n    local -i len9=0\n    local -i len10=0\n    local -i len11=0\n    local -i len12=0\n    local -i len13=0\n    local -i len14=0\n    local -i len15=0\n    local -i len16=0\n    local -i len17=0\n    local -i len18=0\n    local -i len19=0\n    local -i len20=0\n    local -i len21=0\n    local -i len22=0\n    local -i len23=0\n    local -i len24=0\n    local -i len25=0\n    local -i len26=0\n    local -i len27=0\n    local -i len28=0\n    local -i len29=0\n    local -i len30=0\n    local -i len31=0\n    local -i len32=0\n    local -i len33=0\n    local -i len34=0\n    local -i len35=0\n    local -i len36=0\n    local -i len37=0\n    local -i len38=0\n    local -i len39=0\n    local -i len40=0\n    local -i len41=0\n    local -i len42=0\n    local -i len43=0\n    local -i len44=0\n    local -i len45=0\n    local -i len46=0\n    local -i len47=0\n    local -i len48=0\n    local -i len49=0\n    local -i len50=0\n    local -i len51=0\n    local -i len52=0\n    local -i len53=0\n    local -i len\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local min_len=$len1\n    local max_len=$len2\n    local diff=0\n    local swaps=0\n    if [[ $len1 -gt $len2 ]]; then\n        min_len=$len2\n        max_len=$len1\n    fi\n    for (( i=0; i<min_len; i++ )); do\n        if [[ ${str1:i:1} != ${str2:i:1} ]]; then\n            swaps=$((swaps+1))\n        fi\n    done\n    diff=$((max_len-min_len))\n    swaps=$((swaps+diff))\n    echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    echo \"Hello world!\"\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    if [ ${#1} -ne ${#2} ]; then\n        echo \"Strings are not of equal length\"\n        return 1\n    fi\n    local -i count=0\n    local -i len=${#1}\n    for ((i=0; i<len; i++)); do\n        if [ ${1:i:1} -ne ${2:i:1} ]; then\n            ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i\n    local -i swaps=0\n    local -i len=${#1}\n    for (( i=0; i<len; i++ )); do\n        if [[ ${1:i:1} != ${2:i:1} ]]; then\n            (( swaps++ ))\n        fi\n    done\n    echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=\"$1\"\n    local str2=\"$2\"\n    local len1=${#str1}\n    local len2=${#str2}\n    local count=0\n    local i=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of equal length\"\n        return 1\n    fi\n    while [ $i -lt $len1 ]; do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n    return 0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len1=${#1}\n    local -i len2=${#2}\n    local -i len=0\n    local -i min=0\n    local -i max=0\n    local -i diff=0\n    local -i sum=0\n    local -i num1=0\n    local -i num2=0\n    local -i temp=0\n    local -i temp1=0\n    local -i temp2=0\n    local -i temp3=0\n    local -i temp4=0\n    local -i temp5=0\n    local -i temp6=0\n    local -i temp7=0\n    local -i temp8=0\n    local -i temp9=0\n    local -i temp10=0\n    local -i temp11=0\n    local -i temp12=0\n    local -i temp13=0\n    local -i temp14=0\n    local -i temp15=0\n    local -i temp16=0\n    local -i temp17=0\n    local -i temp18=0\n    local -i temp19=0\n    local -i temp20=0\n    local -i temp21=0\n    local -i temp22=0\n    local -i temp23=0\n    local -i temp24=0\n    local -i temp25=0\n    local -i temp26=0\n    local -i temp27=0\n    local -i temp28=0\n    local -i temp29=0\n    local -i temp30=0\n    local -i temp31=0\n    local -i temp32=0\n    local -i temp33=0\n    local -i temp34=0\n    local -i temp35=0\n    local -i temp36=0\n    local -i temp37=0\n    local -i temp38=0\n    local -i temp39=0\n    local -i temp40=0\n    local -i temp41=0\n    local -i temp42=0\n    local -i temp43=0\n    local -i temp44=0\n   \n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i swaps=0\n    local -i len=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$((len1>len2?len1:len2))\n    local str3=\"\"\n    local str4=\"\"\n    local i=0\n    local count=0\n    if [ $len1 -lt $len2 ]; then\n        for ((i=0; i<len; i++)); do\n            if [ $i -lt $((len-len1)) ]; then\n                str3=\"$str3\"0\n            else\n                str3=\"$str3${str1:$i-$((len-len1)):1}\"\n            fi\n        done\n        str1=$str3\n    elif [ $len1 -gt $len2 ]; then\n        for ((i=0; i<len; i++)); do\n            if [ $i -lt $((len-len2)) ]; then\n                str4=\"$str4\"0\n            else\n                str4=\"$str4${str2:$i-$((len-len2)):1}\"\n            fi\n        done\n        str2=$str4\n    fi\n    for ((i=0; i<len; i++)); do\n        if [ \"${str1:$i:1}\" != \"${str2:$i:1}\" ]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i n=${#1}\n    local -i m=${#2}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i swaps=0\n    local -i temp=0\n    local -i min_swaps=0\n    local -i min_swaps_temp=0\n    local -i min_swaps_temp_2=0\n    local -i min_swaps_temp_3=0\n    local -i min_swaps_temp_4=0\n    local -i min_swaps_temp_5=0\n    local -i min_swaps_temp_6=0\n    local -i min_swaps_temp_7=0\n    local -i min_swaps_temp_8=0\n    local -i min_swaps_temp_9=0\n    local -i min_swaps_temp_10=0\n    local -i min_swaps_temp_11=0\n    local -i min_swaps_temp_12=0\n    local -i min_swaps_temp_13=0\n    local -i min_swaps_temp_14=0\n    local -i min_swaps_temp_15=0\n    local -i min_swaps_temp_16=0\n    local -i min_swaps_temp_17=0\n    local -i min_swaps_temp_18=0\n    local -i min_swaps_temp_19=0\n    local -i min_swaps_temp_20=0\n    local -i min_swaps_temp_21=0\n    local -i min_swaps_temp_22=0\n    local -i min_swaps_temp_23=0\n    local -i min_swaps_temp_24=0\n    local -i min_swaps_temp_25=0\n    local -i min_swaps_temp_26=0\n    local -i min_swaps_temp_27=0\n    local -i min_swaps_temp_28=0\n    local -i min_swaps_temp_29\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  # Write your code here\n  # To print results to the standard output you can use echo\n  # Example: echo \"Hello world\"\n  echo \"Hello world\"\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    local -i diff=0\n    local -i diff2=0\n    local -i diff3=0\n    local -i diff4=0\n    local -i diff5=0\n    local -i diff6=0\n    local -i diff7=0\n    local -i diff8=0\n    local -i diff9=0\n    local -i diff10=0\n    local -i diff11=0\n    local -i diff12=0\n    local -i diff13=0\n    local -i diff14=0\n    local -i diff15=0\n    local -i diff16=0\n    local -i diff17=0\n    local -i diff18=0\n    local -i diff19=0\n    local -i diff20=0\n    local -i diff21=0\n    local -i diff22=0\n    local -i diff23=0\n    local -i diff24=0\n    local -i diff25=0\n    local -i diff26=0\n    local -i diff27=0\n    local -i diff28=0\n    local -i diff29=0\n    local -i diff30=0\n    local -i diff31=0\n    local -i diff32=0\n    local -i diff33=0\n    local -i diff34=0\n    local -i diff35=0\n    local -i diff36=0\n    local -i diff37=0\n    local -i diff38=0\n    local -i diff39=0\n    local -i diff40=0\n    local -i diff41=0\n    local -i diff42=0\n    local -i diff43=0\n    local -i diff44=0\n    local -i diff45=0\n    local -i diff46=0\n    local -i diff47=0\n    local -i diff48=0\n    local -i diff49=0\n    local -i diff50=0\n    local -i diff51=0\n    local -i diff52\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n\tlocal str1=$1\n\tlocal str2=$2\n\tlocal len1=${#str1}\n\tlocal len2=${#str2}\n\tlocal min_len=$len1\n\tlocal max_len=$len2\n\tlocal swaps=0\n\tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal temp=0\n\tlocal temp_str1=''\n\tlocal temp_str2=''\n\tlocal temp_str3=''\n\tlocal temp_str4=''\n\tlocal temp_str5=''\n\tlocal temp_str6=''\n\tlocal temp_str7=''\n\tlocal temp_str8=''\n\tlocal temp_str9=''\n\tlocal temp_str10=''\n\tlocal temp_str11=''\n\tlocal temp_str12=''\n\tlocal temp_str13=''\n\tlocal temp_str14=''\n\tlocal temp_str15=''\n\tlocal temp_str16=''\n\tlocal temp_str17=''\n\tlocal temp_str18=''\n\tlocal temp_str19=''\n\tlocal temp_str20=''\n\tlocal temp_str21=''\n\tlocal temp_str22=''\n\tlocal temp_str23=''\n\tlocal temp_str24=''\n\tlocal temp_str25=''\n\tlocal temp_str26=''\n\tlocal temp_str27=''\n\tlocal temp_str28=''\n\tlocal temp_str29=''\n\tlocal temp_str30=''\n\tlocal temp_str31=''\n\tlocal temp_str32=''\n\tlocal temp_str33=''\n\tlocal temp_str34=''\n\tlocal temp_str35=''\n\tlocal temp_str36=''\n\tlocal temp_str37=''\n\tlocal temp_str38=''\n\tlocal temp_str39=''\n\tlocal temp_str40=''\n\tlocal temp_str41=''\n\tlocal temp_str42=''\n\tlocal temp_str43=''\n\tlocal temp_str44=''\n\tlocal temp_str45=''\n\tlocal temp_str46=''\n\tlocal temp_str47=''\n\tlocal temp_\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i swaps=0\n    local -i len=${#1}\n    local -i i\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n    local -i fff\n    local -i ggg\n    local -i hhh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n    local -i\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local count=0\n    local len=${#1}\n    for ((i=0; i<len; i++)); do\n        if [[ ${1:i:1} != ${2:i:1} ]]; then\n            ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local count=0\n    local i=0\n    local len=${#a}\n    while [ $i -lt $len ]; do\n        if [ \"${a:$i:1}\" != \"${b:$i:1}\" ]; then\n            ((count++))\n        fi\n        ((i++))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local count=0\n    local i=0\n    local len=${#a}\n    while [ $i -lt $len ]; do\n        if [ ${a:$i:1} != ${b:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local j=0\n    local count=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of equal length\"\n        return\n    fi\n    while [ $i -lt $len1 ]\n    do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            j=$i\n            while [ $j -lt $len1 ]\n            do\n                if [ ${str1:$j:1} == ${str2:$i:1} ]; then\n                    str1=\"${str1:0:$i}${str1:$j:1}${str1:$i+1:$j-$i-1}${str1:$j+1:$len1-$j-1}\"\n                    count=$((count+1))\n                    break\n                fi\n                j=$((j+1))\n            done\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp980dpqr_.sh: line 20: [: !=: unary operator expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local j=0\n    local count=0\n    local diff=0\n    local tmp=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Length of the strings are not equal\"\n        return 1\n    fi\n    while [ $i -lt $len1 ]; do\n        if [ ${str1:$i:1} -ne ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo \"Number of swaps required is $count\"\n    return 0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i swaps=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    local -i len3=0\n    local -i len4=0\n    local -i len5=0\n    local -i len6=0\n    local -i len7=0\n    local -i len8=0\n    local -i len9=0\n    local -i len10=0\n    local -i len11=0\n    local -i len12=0\n    local -i len13=0\n    local -i len14=0\n    local -i len15=0\n    local -i len16=0\n    local -i len17=0\n    local -i len18=0\n    local -i len19=0\n    local -i len20=0\n    local -i len21=0\n    local -i len22=0\n    local -i len23=0\n    local -i len24=0\n    local -i len25=0\n    local -i len26=0\n    local -i len27=0\n    local -i len28=0\n    local -i len29=0\n    local -i len30=0\n    local -i len31=0\n    local -i len32=0\n    local -i len33=0\n    local -i len34=0\n    local -i len35=0\n    local -i len36=0\n    local -i len37=0\n    local -i len38=0\n    local -i len39=0\n    local -i len40=0\n    local -i len41=0\n    local -i len42=0\n    local -i len43=0\n    local -i len44=0\n    local -i len45=0\n    local -i len46=0\n    local -i len47=0\n    local -i len48=0\n    local -i len49=0\n    local -i len50=0\n    local -i len51=0\n    local -i len52=0\n    local -i len53\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=\"$1\"\n  local str2=\"$2\"\n  local len1=${#str1}\n  local len2=${#str2}\n  local i=0\n  local j=0\n  local count=0\n  local temp=0\n  local temp1=0\n  local temp2=0\n  if [[ $len1 -ne $len2 ]]; then\n    echo \"Length of both strings should be same\"\n    return\n  fi\n  for ((i=0; i<len1; i++)); do\n    if [[ ${str1:$i:1} -ne ${str2:$i:1} ]]; then\n      count=$((count+1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$len1\n    local count=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of equal length\"\n        return\n    fi\n    for ((i=0; i<$len; i++)); do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$((len1>len2?len1:len2))\n    local str1_padded=$(printf \"%0${len}s\" \"$str1\")\n    local str2_padded=$(printf \"%0${len}s\" \"$str2\")\n    local str1_padded_rev=$(echo \"$str1_padded\" | rev)\n    local str2_padded_rev=$(echo \"$str2_padded\" | rev)\n    local count=0\n    for ((i=0;i<len;i++)); do\n        if [ \"${str1_padded_rev:$i:1}\" != \"${str2_padded_rev:$i:1}\" ]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local j=0\n    local count=0\n    local temp=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of equal length\"\n        return\n    fi\n    while [ $i -lt $len1 ]\n    do\n        if [ ${str1:$i:1} -ne ${str2:$i:1} ]; then\n            j=$i\n            while [ $j -lt $len1 ]\n            do\n                if [ ${str1:$j:1} -eq ${str2:$i:1} ]; then\n                    temp=${str1:$i:1}\n                    str1=${str1:0:$i}${str1:$j:1}${str1:$((i+1)):$((j-i-1))}${temp}${str1:$((j+1)):$((len1-j-1))}\n                    count=$((count+1))\n                    break\n                fi\n                j=$((j+1))\n            done\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$len1\n    if [ $len2 -lt $len1 ]; then\n        len=$len2\n    fi\n    local count=0\n    for ((i=0; i<$len; i++)); do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=\"$1\"\n  local str2=\"$2\"\n  local len1=${#str1}\n  local len2=${#str2}\n  local i=0\n  local count=0\n  if [ $len1 -ne $len2 ]; then\n    echo \"Strings are not of same length\"\n    return\n  fi\n  while [ $i -lt $len1 ]; do\n    if [ \"${str1:$i:1}\" != \"${str2:$i:1}\" ]; then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local min_swaps=0\n    local i=0\n    if [[ $len1 -ne $len2 ]]; then\n        echo \"ERROR: Strings are not of equal length\"\n        return 1\n    fi\n    while [[ $i -lt $len1 ]]; do\n        if [[ ${str1:$i:1} -ne ${str2:$i:1} ]]; then\n            min_swaps=$((min_swaps+1))\n        fi\n        i=$((i+1))\n    done\n    echo $min_swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local diff=0\n    local swaps=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local count=0\n    local i=0\n    local j=0\n    local temp=0\n    local temp1=0\n    local temp2=0\n    local temp3=0\n    local temp4=0\n    local temp5=0\n    local temp6=0\n    local temp7=0\n    local temp8=0\n    local temp9=0\n    local temp10=0\n    local temp11=0\n    local temp12=0\n    local temp13=0\n    local temp14=0\n    local temp15=0\n    local temp16=0\n    local temp17=0\n    local temp18=0\n    local temp19=0\n    local temp20=0\n    local temp21=0\n    local temp22=0\n    local temp23=0\n    local temp24=0\n    local temp25=0\n    local temp26=0\n    local temp27=0\n    local temp28=0\n    local temp29=0\n    local temp30=0\n    local temp31=0\n    local temp32=0\n    local temp33=0\n    local temp34=0\n    local temp35=0\n    local temp36=0\n    local temp37=0\n    local temp38=0\n    local temp39=0\n    local temp40=0\n    local temp41=0\n    local temp42=0\n    local temp43=0\n    local temp44=0\n    local temp45=0\n    local temp46=0\n    local temp47=0\n    local temp48=0\n    local temp49=0\n    local temp50=0\n    local temp51=0\n    local temp52=0\n    local temp53=0\n    local temp54=0\n    local temp55=0\n    local temp56=0\n    local temp57=0\n    local temp58=0\n    local temp59=0\n    local temp60=0\n    local temp61=0\n    local temp62=0\n    local temp63=0\n    local temp64=0\n    local temp\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local count=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of same length\"\n        return\n    fi\n    for ((i=0; i<$len1; i++)); do\n        if [ \"${str1:$i:1}\" != \"${str2:$i:1}\" ]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local len=$len1\n  local count=0\n  if [ $len1 -ne $len2 ]; then\n    echo \"Error: Strings are not of equal length\"\n    return\n  fi\n  for (( i=0; i<$len; i++ )); do\n    if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n      count=$((count+1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local j=0\n    local count=0\n    local temp=0\n    local temp2=0\n    local temp3=0\n    local temp4=0\n    local temp5=0\n    local temp6=0\n    local temp7=0\n    local temp8=0\n    local temp9=0\n    local temp10=0\n    local temp11=0\n    local temp12=0\n    local temp13=0\n    local temp14=0\n    local temp15=0\n    local temp16=0\n    local temp17=0\n    local temp18=0\n    local temp19=0\n    local temp20=0\n    local temp21=0\n    local temp22=0\n    local temp23=0\n    local temp24=0\n    local temp25=0\n    local temp26=0\n    local temp27=0\n    local temp28=0\n    local temp29=0\n    local temp30=0\n    local temp31=0\n    local temp32=0\n    local temp33=0\n    local temp34=0\n    local temp35=0\n    local temp36=0\n    local temp37=0\n    local temp38=0\n    local temp39=0\n    local temp40=0\n    local temp41=0\n    local temp42=0\n    local temp43=0\n    local temp44=0\n    local temp45=0\n    local temp46=0\n    local temp47=0\n    local temp48=0\n    local temp49=0\n    local temp50=0\n    local temp51=0\n    local temp52=0\n    local temp53=0\n    local temp54=0\n    local temp55=0\n    local temp56=0\n    local temp57=0\n    local temp58=0\n    local temp59=0\n    local temp60=0\n    local temp61=0\n    local temp62=0\n    local temp63=0\n    local temp64=0\n    local temp65=0\n    local temp\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$len1\n    local count=0\n    if [[ $len1 -ne $len2 ]]; then\n        echo \"Strings are not equal\"\n        return 1\n    fi\n    for (( i=0; i<$len; i++ )); do\n        if [[ ${str1:i:1} -ne ${str2:i:1} ]]; then\n            (( count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=\"$1\"\n    local str2=\"$2\"\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local j=0\n    local count=0\n    local tmp=\"\"\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of equal length\"\n        return 1\n    fi\n    while [ $i -lt $len1 ]; do\n        if [ \"${str1:$i:1}\" != \"${str2:$i:1}\" ]; then\n            j=$i\n            while [ $j -lt $len1 ]; do\n                if [ \"${str1:$j:1}\" == \"${str2:$i:1}\" ]; then\n                    tmp=\"${str1:$i:1}\"\n                    str1=\"${str1:0:$i}${str1:$j:1}${str1:$((i+1)):$((j-i-1))}${tmp}${str1:$((j+1))}\"\n                    count=$((count+1))\n                    break\n                fi\n                j=$((j+1))\n            done\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i swaps=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    local -i len3=${#3}\n    local -i len4=${#4}\n    local -i len5=${#5}\n    local -i len6=${#6}\n    local -i len7=${#7}\n    local -i len8=${#8}\n    local -i len9=${#9}\n    local -i len10=${#10}\n    local -i len11=${#11}\n    local -i len12=${#12}\n    local -i len13=${#13}\n    local -i len14=${#14}\n    local -i len15=${#15}\n    local -i len16=${#16}\n    local -i len17=${#17}\n    local -i len18=${#18}\n    local -i len19=${#19}\n    local -i len20=${#20}\n    local -i len21=${#21}\n    local -i len22=${#22}\n    local -i len23=${#23}\n    local -i len24=${#24}\n    local -i len25=${#25}\n    local -i len26=${#26}\n    local -i len27=${#27}\n    local -i len28=${#28}\n    local -i len29=${#29}\n    local -i len30=${#30}\n    local -i len31=${#31}\n    local -i len32=${#32}\n    local -i len33=${#33}\n    local -i len34=${#34}\n    local -i len35=${#35}\n    local -i len36=${#36}\n    local -i len37=${#37}\n    local -i len38=${#38}\n    local -i len39=${#39}\n    local -i len40=${#40}\n    local -i len41=${\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp2plhd7zl.sh: line 65: syntax error: unexpected end of file\\n'",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len1=${#1}\n    local -i len2=${#2}\n    local -i len=0\n    local -i min=0\n    local -i max=0\n    local -i diff=0\n    local -i swap=0\n    local -i min_swap=0\n    local -i max_swap=0\n    local -i diff_swap=0\n    local -i swap_swap=0\n    local -i min_swap_swap=0\n    local -i max_swap_swap=0\n    local -i diff_swap_swap=0\n    local -i swap_swap_swap=0\n    local -i min_swap_swap_swap=0\n    local -i max_swap_swap_swap=0\n    local -i diff_swap_swap_swap=0\n    local -i swap_swap_swap_swap=0\n    local -i min_swap_swap_swap_swap=0\n    local -i max_swap_swap_swap_swap=0\n    local -i diff_swap_swap_swap_swap=0\n    local -i swap_swap_swap_swap_swap=0\n    local -i min_swap_swap_swap_swap_swap=0\n    local -i max_swap_swap_swap_swap_swap=0\n    local -i diff_swap_swap_swap_swap_swap=0\n    local -i swap_swap_swap_swap_swap_swap=0\n    local -i min_swap_swap_swap_swap_swap_swap=0\n    local -i max_swap_swap_swap_swap_swap_swap=0\n    local -i diff_swap_swap_swap_swap_swap_swap=0\n    local -i swap\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local -i i\n  local -i j\n  local -i count=0\n  local -i len=${#1}\n  local -i len2=${#2}\n  local -i len3=${#3}\n  local -i len4=${#4}\n  local -i len5=${#5}\n  local -i len6=${#6}\n  local -i len7=${#7}\n  local -i len8=${#8}\n  local -i len9=${#9}\n  local -i len10=${#10}\n  local -i len11=${#11}\n  local -i len12=${#12}\n  local -i len13=${#13}\n  local -i len14=${#14}\n  local -i len15=${#15}\n  local -i len16=${#16}\n  local -i len17=${#17}\n  local -i len18=${#18}\n  local -i len19=${#19}\n  local -i len20=${#20}\n  local -i len21=${#21}\n  local -i len22=${#22}\n  local -i len23=${#23}\n  local -i len24=${#24}\n  local -i len25=${#25}\n  local -i len26=${#26}\n  local -i len27=${#27}\n  local -i len28=${#28}\n  local -i len29=${#29}\n  local -i len30=${#30}\n  local -i len31=${#31}\n  local -i len32=${#32}\n  local -i len33=${#33}\n  local -i len34=${#34}\n  local -i len35=${#35}\n  local -i len36=${#36}\n  local -i len37=${#37}\n  local -i len38=${#38}\n  local -i len39=${#39}\n  local -i len40=${#40}\n  local -i len41=${#41}\n\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$((len1>len2?len1:len2))\n    local count=0\n    for ((i=0; i<len; i++)); do\n        local c1=${str1:i:1}\n        local c2=${str2:i:1}\n        if [[ $c1 != $c2 ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local len=${#a}\n    local count=0\n    for ((i=0; i<len; i++)); do\n        if [[ ${a:i:1} != ${b:i:1} ]]; then\n            ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local str1_len=${#str1}\n    local str2_len=${#str2}\n    local i=0\n    local count=0\n    if [ $str1_len -ne $str2_len ]; then\n        echo \"Strings are not of same length\"\n        return\n    fi\n    while [ $i -lt $str1_len ]; do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local len=$len1\n  local count=0\n  local i=0\n  if [ $len1 -ne $len2 ]; then\n    echo \"Strings are not of same length\"\n    return\n  fi\n  while [ $i -lt $len ]; do\n    if [ \"${str1:$i:1}\" != \"${str2:$i:1}\" ]; then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local -i i=0\n  local -i j=0\n  local -i count=0\n  local -i len=${#1}\n  local -i len2=${#2}\n  local -i temp=0\n  local -i temp2=0\n  local -i temp3=0\n  local -i temp4=0\n  local -i temp5=0\n  local -i temp6=0\n  local -i temp7=0\n  local -i temp8=0\n  local -i temp9=0\n  local -i temp10=0\n  local -i temp11=0\n  local -i temp12=0\n  local -i temp13=0\n  local -i temp14=0\n  local -i temp15=0\n  local -i temp16=0\n  local -i temp17=0\n  local -i temp18=0\n  local -i temp19=0\n  local -i temp20=0\n  local -i temp21=0\n  local -i temp22=0\n  local -i temp23=0\n  local -i temp24=0\n  local -i temp25=0\n  local -i temp26=0\n  local -i temp27=0\n  local -i temp28=0\n  local -i temp29=0\n  local -i temp30=0\n  local -i temp31=0\n  local -i temp32=0\n  local -i temp33=0\n  local -i temp34=0\n  local -i temp35=0\n  local -i temp36=0\n  local -i temp37=0\n  local -i temp38=0\n  local -i temp39=0\n  local -i temp40=0\n  local -i temp41=0\n  local -i temp42=0\n  local -i temp43=0\n  local -i temp44=0\n  local -i temp45=0\n  local -i temp46=0\n  local -i temp47=0\n  local -i temp48=0\n  local -i temp49=0\n  local -i temp50=0\n  local -i temp51=0\n  local -i temp52\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local a_len=${#a}\n    local b_len=${#b}\n    local i=0\n    local j=0\n    local swaps=0\n    local a_char=''\n    local b_char=''\n    if [[ $a_len -ne $b_len ]]; then\n        echo \"Error: Strings are not the same length\"\n        return 1\n    fi\n    for (( i=0; i<$a_len; i++ )); do\n        a_char=${a:$i:1}\n        b_char=${b:$i:1}\n        if [[ $a_char -ne $b_char ]]; then\n            for (( j=$i+1; j<$a_len; j++ )); do\n                if [[ ${a:$j:1} -eq $b_char ]]; then\n                    a=${a:0:$i}$b_char${a:$i+1:$j-1}${a:$j:1}${a:$j+1}\n                    swaps=$((swaps+1))\n                    break\n                fi\n            done\n        fi\n    done\n    echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local count=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not equal\"\n        return\n    fi\n    while [ $i -lt $len1 ]; do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=\"$1\"\n  local str2=\"$2\"\n  local len1=${#str1}\n  local len2=${#str2}\n  local i=0\n  local j=0\n  local count=0\n  local tmp1=0\n  local tmp2=0\n  local tmp3=0\n  local tmp4=0\n  local tmp5=0\n  local tmp6=0\n  local tmp7=0\n  local tmp8=0\n  local tmp9=0\n  local tmp10=0\n  local tmp11=0\n  local tmp12=0\n  local tmp13=0\n  local tmp14=0\n  local tmp15=0\n  local tmp16=0\n  local tmp17=0\n  local tmp18=0\n  local tmp19=0\n  local tmp20=0\n  local tmp21=0\n  local tmp22=0\n  local tmp23=0\n  local tmp24=0\n  local tmp25=0\n  local tmp26=0\n  local tmp27=0\n  local tmp28=0\n  local tmp29=0\n  local tmp30=0\n  local tmp31=0\n  local tmp32=0\n  local tmp33=0\n  local tmp34=0\n  local tmp35=0\n  local tmp36=0\n  local tmp37=0\n  local tmp38=0\n  local tmp39=0\n  local tmp40=0\n  local tmp41=0\n  local tmp42=0\n  local tmp43=0\n  local tmp44=0\n  local tmp45=0\n  local tmp46=0\n  local tmp47=0\n  local tmp48=0\n  local tmp49=0\n  local tmp50=0\n  local tmp51=0\n  local tmp52=0\n  local tmp53=0\n  local tmp54=0\n  local tmp55=0\n  local tmp56=0\n  local tmp57=0\n  local tmp58=0\n  local tmp59=0\n  local tmp60=0\n  local tmp61=0\n  local tmp62=0\n  local tmp63=0\n  local tmp64=0\n  local tmp65=\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local a=$1\n  local b=$2\n  local len=${#a}\n  local count=0\n  for ((i=0;i<len;i++)); do\n    if [[ ${a:$i:1} != ${b:$i:1} ]]; then\n      ((count++))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local -i count=0\n  local -i i=0\n  local -i len=${#1}\n  local -i len2=${#2}\n  local -i diff=0\n  local -i diff2=0\n  local -i diff3=0\n  local -i diff4=0\n  local -i diff5=0\n  local -i diff6=0\n  local -i diff7=0\n  local -i diff8=0\n  local -i diff9=0\n  local -i diff10=0\n  local -i diff11=0\n  local -i diff12=0\n  local -i diff13=0\n  local -i diff14=0\n  local -i diff15=0\n  local -i diff16=0\n  local -i diff17=0\n  local -i diff18=0\n  local -i diff19=0\n  local -i diff20=0\n  local -i diff21=0\n  local -i diff22=0\n  local -i diff23=0\n  local -i diff24=0\n  local -i diff25=0\n  local -i diff26=0\n  local -i diff27=0\n  local -i diff28=0\n  local -i diff29=0\n  local -i diff30=0\n  local -i diff31=0\n  local -i diff32=0\n  local -i diff33=0\n  local -i diff34=0\n  local -i diff35=0\n  local -i diff36=0\n  local -i diff37=0\n  local -i diff38=0\n  local -i diff39=0\n  local -i diff40=0\n  local -i diff41=0\n  local -i diff42=0\n  local -i diff43=0\n  local -i diff44=0\n  local -i diff45=0\n  local -i diff46=0\n  local -i diff47=0\n  local -i diff48=0\n  local -i diff49=0\n  local -i diff50=0\n  local -i diff51=0\n  local -i diff52=0\n  local -i diff\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local count=0\n    local i=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of same length\"\n        return\n    fi\n    while [ $i -lt $len1 ]; do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local j=0\n    local count=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Error: strings are not of same length\"\n        return 1\n    fi\n    while [ $i -lt $len1 ]; do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            j=$i\n            while [ $j -lt $len1 ]; do\n                if [ ${str1:$j:1} != ${str2:$i:1} ]; then\n                    j=$((j+1))\n                else\n                    break\n                fi\n            done\n            if [ $j -eq $len1 ]; then\n                echo \"Error: strings are not of same length\"\n                return 1\n            fi\n            count=$((count+1))\n            str1=${str1:0:$i}${str1:$j:1}${str1:$((i+1)):$((j-i-1))}${str1:$i:1}${str1:$((j+1))}\n            str2=${str2:0:$i}${str2:$j:1}${str2:$((i+1)):$((j-i-1))}${str2:$i:1}${str2:$((j+1))}\n        fi\n        i=$((i+1))\n    done\n    echo $count\n    return 0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$((len1>len2?len1:len2))\n    local i=0\n    local count=0\n    for ((i=0; i<len; i++)); do\n        local ch1=${str1:i:1}\n        local ch2=${str2:i:1}\n        if [[ $ch1 != $ch2 ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local a=$1\n  local b=$2\n  local len=${#a}\n  local count=0\n  for ((i=0; i<len; i++)); do\n    if [[ ${a:i:1} != ${b:i:1} ]]; then\n      count=$((count+1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n  local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i swaps=0\n    local -i len1=${#1}\n    local -i len2=${#2}\n    local -i len=0\n    local -i diff=0\n    local -i diff_count=0\n    local -i diff_pos=0\n    local -i diff_pos_count=0\n    local -i diff_pos_count_max=0\n    local -i diff_pos_count_max_pos=0\n    local -i diff_pos_count_max_pos_count=0\n    local -i diff_pos_count_max_pos_count_max=0\n    local -i diff_pos_count_max_pos_count_max_pos=0\n    local -i diff_pos_count_max_pos_count_max_pos_count=0\n    local -i diff_pos_count_max_pos_count_max_pos_count_max=0\n    local -i diff_pos_count_max_pos_count_max_pos_count_max_pos=0\n    local -i diff_pos_count_max_pos_count_max_pos_count_max_pos_count=0\n    local -i diff_pos_count_max_pos_count_max_pos_count_max_pos_count_max=0\n    local -i diff_pos_count_max_pos_count_max_pos_count_max_pos_count_max_pos=0\n    local -i diff_pos_count_max_pos_count_max_pos_count_max_pos_count_max_pos_count=0\n    local -i diff_pos_count_max_pos_count_max_pos_count_max_pos_count_max_pos_count_max=0\n    local -i diff_pos_count_max_pos_count_max_pos_count_max_pos_count_max_pos_count_max_pos=0\n    local -i diff_pos_count_max_pos_count_max_pos_count_max_pos_count_max_pos_count_max_pos\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$len1\n    local i=0\n    local count=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Lengths of the strings are not equal\"\n        return\n    fi\n    while [ $i -lt $len ]; do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$((len1<len2?len1:len2))\n    local count=0\n    for ((i=0; i<len; i++)); do\n        if [[ ${str1:i:1} != ${str2:i:1} ]]; then\n            ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local count=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of same length\"\n        return\n    fi\n    for (( i=0; i<$len1; i++ )); do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=\"$1\"\n    local str2=\"$2\"\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local count=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not equal\"\n        return 1\n    fi\n    while [ $i -lt $len1 ]; do\n        if [ \"${str1:$i:1}\" != \"${str2:$i:1}\" ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local count=0\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local temp1=0\n    local temp2=0\n    local temp3=0\n    local temp4=0\n    local temp5=0\n    local temp6=0\n    local temp7=0\n    local temp8=0\n    local temp9=0\n    local temp10=0\n    local temp11=0\n    local temp12=0\n    local temp13=0\n    local temp14=0\n    local temp15=0\n    local temp16=0\n    local temp17=0\n    local temp18=0\n    local temp19=0\n    local temp20=0\n    local temp21=0\n    local temp22=0\n    local temp23=0\n    local temp24=0\n    local temp25=0\n    local temp26=0\n    local temp27=0\n    local temp28=0\n    local temp29=0\n    local temp30=0\n    local temp31=0\n    local temp32=0\n    local temp33=0\n    local temp34=0\n    local temp35=0\n    local temp36=0\n    local temp37=0\n    local temp38=0\n    local temp39=0\n    local temp40=0\n    local temp41=0\n    local temp42=0\n    local temp43=0\n    local temp44=0\n    local temp45=0\n    local temp46=0\n    local temp47=0\n    local temp48=0\n    local temp49=0\n    local temp50=0\n    local temp51=0\n    local temp52=0\n    local temp53=0\n    local temp54=0\n    local temp55=0\n    local temp56=0\n    local temp57=0\n    local temp58=0\n    local temp59=0\n    local temp60=0\n    local temp61=0\n    local temp62=0\n    local temp63=0\n    local temp64\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len=${#str1}\n  local count=0\n  for ((i=0; i<len; i++)); do\n    if [[ ${str1:$i:1} != ${str2:$i:1} ]]; then\n      ((count++))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local min_len=$((len1 < len2 ? len1 : len2))\n    local count=0\n    for ((i=0; i<min_len; i++)); do\n        if [[ ${str1:i:1} != ${str2:i:1} ]]; then\n            count=$((count + 1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local i=0\n  local j=0\n  local count=0\n  if [ $len1 -ne $len2 ]; then\n    echo \"Strings are not of equal length\"\n    return\n  fi\n  for (( i=0; i<len1; i++ )); do\n    if [ \"${str1:$i:1}\" != \"${str2:$i:1}\" ]; then\n      (( count++ ))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local -i i=0\n  local -i j=0\n  local -i count=0\n  local -i len=${#1}\n  local -i len2=${#2}\n  local -i diff=0\n  local -i diff2=0\n  local -i diff3=0\n  local -i diff4=0\n  local -i diff5=0\n  local -i diff6=0\n  local -i diff7=0\n  local -i diff8=0\n  local -i diff9=0\n  local -i diff10=0\n  local -i diff11=0\n  local -i diff12=0\n  local -i diff13=0\n  local -i diff14=0\n  local -i diff15=0\n  local -i diff16=0\n  local -i diff17=0\n  local -i diff18=0\n  local -i diff19=0\n  local -i diff20=0\n  local -i diff21=0\n  local -i diff22=0\n  local -i diff23=0\n  local -i diff24=0\n  local -i diff25=0\n  local -i diff26=0\n  local -i diff27=0\n  local -i diff28=0\n  local -i diff29=0\n  local -i diff30=0\n  local -i diff31=0\n  local -i diff32=0\n  local -i diff33=0\n  local -i diff34=0\n  local -i diff35=0\n  local -i diff36=0\n  local -i diff37=0\n  local -i diff38=0\n  local -i diff39=0\n  local -i diff40=0\n  local -i diff41=0\n  local -i diff42=0\n  local -i diff43=0\n  local -i diff44=0\n  local -i diff45=0\n  local -i diff46=0\n  local -i diff47=0\n  local -i diff48=0\n  local -i diff49=0\n  local -i diff50=0\n  local -i diff51=0\n  local -i diff52\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local count=0\n    local len=${#a}\n    for ((i=0; i<len; i++)); do\n        if [[ ${a:i:1} != ${b:i:1} ]]; then\n            ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i count=0\n  local -i len=${#1}\n  local -i len2=${#2}\n  local -i len3=0\n  local -i len4=0\n  local -i len5=0\n  local -i len6=0\n  local -i len7=0\n  local -i len8=0\n  local -i len9=0\n  local -i len10=0\n  local -i len11=0\n  local -i len12=0\n  local -i len13=0\n  local -i len14=0\n  local -i len15=0\n  local -i len16=0\n  local -i len17=0\n  local -i len18=0\n  local -i len19=0\n  local -i len20=0\n  local -i len21=0\n  local -i len22=0\n  local -i len23=0\n  local -i len24=0\n  local -i len25=0\n  local -i len26=0\n  local -i len27=0\n  local -i len28=0\n  local -i len29=0\n  local -i len30=0\n  local -i len31=0\n  local -i len32=0\n  local -i len33=0\n  local -i len34=0\n  local -i len35=0\n  local -i len36=0\n  local -i len37=0\n  local -i len38=0\n  local -i len39=0\n  local -i len40=0\n  local -i len41=0\n  local -i len42=0\n  local -i len43=0\n  local -i len44=0\n  local -i len45=0\n  local -i len46=0\n  local -i len47=0\n  local -i len48=0\n  local -i len49=0\n  local -i len50=0\n  local -i len51=0\n  local -i len52=0\n  local -i len53\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local len=${#a}\n    local count=0\n    for (( i=0; i<len; i++ )); do\n        if [[ ${a:i:1} != ${b:i:1} ]]; then\n            ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local len=$((len1>len2?len1:len2))\n  local i=0\n  local count=0\n  while [ $i -lt $len ]; do\n    local c1=${str1:$i:1}\n    local c2=${str2:$i:1}\n    if [ \"$c1\" != \"$c2\" ]; then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local diff=$((len1-len2))\n  local count=0\n  if [[ $diff -gt 0 ]]; then\n    str2=$(printf \"%0${diff}d%s\" 0 \"$str2\")\n  elif [[ $diff -lt 0 ]]; then\n    str1=$(printf \"%0${diff}d%s\" 0 \"$str1\")\n  fi\n  for ((i=0; i<${#str1}; i++)); do\n    if [[ ${str1:i:1} != ${str2:i:1} ]]; then\n      count=$((count+1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local j=0\n    local count=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of same length\"\n        return 1\n    fi\n    while [ $i -lt $len1 ]; do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            j=$i\n            while [ $j -lt $len1 ]; do\n                if [ ${str1:$j:1} != ${str2:$j:1} ]; then\n                    count=$((count+1))\n                fi\n                j=$((j+1))\n            done\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=\"$1\"\n    local str2=\"$2\"\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$((len1>len2?len1:len2))\n    local str1_new=$(printf \"%0${len}s\" \"$str1\")\n    local str2_new=$(printf \"%0${len}s\" \"$str2\")\n    local count=0\n    for ((i=0; i<len; i++)); do\n        if [ \"${str1_new:$i:1}\" != \"${str2_new:$i:1}\" ]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len=${#str1}\n  local count=0\n  for (( i=0; i<$len; i++ )); do\n    if [[ ${str1:$i:1} != ${str2:$i:1} ]]; then\n      count=$((count+1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$((len1<len2?len1:len2))\n    local i=0\n    local count=0\n    while [ $i -lt $len ]; do\n        if [ \"${str1:$i:1}\" != \"${str2:$i:1}\" ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i swaps=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    local -a arr1\n    local -a arr2\n    local -a arr3\n    local -a arr4\n    local -a arr5\n    local -a arr6\n    local -a arr7\n    local -a arr8\n    local -a arr9\n    local -a arr10\n    local -a arr11\n    local -a arr12\n    local -a arr13\n    local -a arr14\n    local -a arr15\n    local -a arr16\n    local -a arr17\n    local -a arr18\n    local -a arr19\n    local -a arr20\n    local -a arr21\n    local -a arr22\n    local -a arr23\n    local -a arr24\n    local -a arr25\n    local -a arr26\n    local -a arr27\n    local -a arr28\n    local -a arr29\n    local -a arr30\n    local -a arr31\n    local -a arr32\n    local -a arr33\n    local -a arr34\n    local -a arr35\n    local -a arr36\n    local -a arr37\n    local -a arr38\n    local -a arr39\n    local -a arr40\n    local -a arr41\n    local -a arr42\n    local -a arr43\n    local -a arr44\n    local -a arr45\n    local -a arr46\n    local -a arr47\n    local -a arr48\n    local -a arr49\n    local -a arr50\n    local -a arr51\n    local -a arr52\n    local -a arr53\n    local -a arr54\n    local -a arr55\n    local -a arr56\n    local -a arr57\n    local -a arr58\n    local -a arr59\n    local -a arr60\n    local -a arr61\n    local -a arr62\n    local -a arr63\n    local -a arr64\n    local -a arr65\n   \n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local -i i=0\n  local -i swaps=0\n  local -i len=${#1}\n  local -i len2=${#2}\n  if [ $len -ne $len2 ]; then\n    echo \"Error: strings are not the same length\"\n    return 1\n  fi\n  while [ $i -lt $len ]; do\n    if [ \"${1:$i:1}\" != \"${2:$i:1}\" ]; then\n      swaps=$((swaps+1))\n    fi\n    i=$((i+1))\n  done\n  echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local len=${#a}\n    local count=0\n    for (( i=0; i<$len; i++ )); do\n        if [[ ${a:$i:1} != ${b:$i:1} ]]; then\n            (( count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    local -i diff=0\n    local -i diff2=0\n    local -i diff3=0\n    local -i diff4=0\n    local -i diff5=0\n    local -i diff6=0\n    local -i diff7=0\n    local -i diff8=0\n    local -i diff9=0\n    local -i diff10=0\n    local -i diff11=0\n    local -i diff12=0\n    local -i diff13=0\n    local -i diff14=0\n    local -i diff15=0\n    local -i diff16=0\n    local -i diff17=0\n    local -i diff18=0\n    local -i diff19=0\n    local -i diff20=0\n    local -i diff21=0\n    local -i diff22=0\n    local -i diff23=0\n    local -i diff24=0\n    local -i diff25=0\n    local -i diff26=0\n    local -i diff27=0\n    local -i diff28=0\n    local -i diff29=0\n    local -i diff30=0\n    local -i diff31=0\n    local -i diff32=0\n    local -i diff33=0\n    local -i diff34=0\n    local -i diff35=0\n    local -i diff36=0\n    local -i diff37=0\n    local -i diff38=0\n    local -i diff39=0\n    local -i diff40=0\n    local -i diff41=0\n    local -i diff42=0\n    local -i diff43=0\n    local -i diff44=0\n    local -i diff45=0\n    local -i diff46=0\n    local -i diff47=0\n    local -i diff48=0\n    local -i diff49=0\n    local -i diff50=0\n    local -i diff51=0\n    local -i diff52\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=\"$1\"\n  local str2=\"$2\"\n  local len1=${#str1}\n  local len2=${#str2}\n  local len=$((len1>len2?len1:len2))\n  local i=0\n  local count=0\n  while [ $i -lt $len ]; do\n    local ch1=${str1:$i:1}\n    local ch2=${str2:$i:1}\n    if [ \"$ch1\" != \"$ch2\" ]; then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local diff=$((len1-len2))\n    local count=0\n    local i=0\n    local j=0\n    if [[ $diff -gt 0 ]]; then\n        while [[ $i -lt $len1 ]]; do\n            if [[ $i -lt $len2 ]]; then\n                if [[ ${str1:$i:1} != ${str2:$i:1} ]]; then\n                    count=$((count+1))\n                fi\n            else\n                if [[ ${str1:$i:1} != 0 ]]; then\n                    count=$((count+1))\n                fi\n            fi\n            i=$((i+1))\n        done\n    elif [[ $diff -lt 0 ]]; then\n        while [[ $i -lt $len2 ]]; do\n            if [[ $i -lt $len1 ]]; then\n                if [[ ${str1:$i:1} != ${str2:$i:1} ]]; then\n                    count=$((count+1))\n                fi\n            else\n                if [[ ${str2:$i:1} != 0 ]]; then\n                    count=$((count+1))\n                fi\n            fi\n            i=$((i+1))\n        done\n    else\n        while [[ $i -lt $len1 ]]; do\n            if [[ ${str1:$i:1} != ${str2:$i:1} ]]; then\n                count=$((count+1))\n            fi\n            i=$((i+1))\n        done\n    fi\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local s1=$1\n    local s2=$2\n    local len1=${#s1}\n    local len2=${#s2}\n    local count=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n   \n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local min_len=0\n    local max_len=0\n    local min_str=''\n    local max_str=''\n    local count=0\n    if [ $len1 -lt $len2 ]; then\n        min_len=$len1\n        max_len=$len2\n        min_str=$str1\n        max_str=$str2\n    else\n        min_len=$len2\n        max_len=$len1\n        min_str=$str2\n        max_str=$str1\n    fi\n    for ((i=0; i<min_len; i++)); do\n        if [ ${min_str:i:1} != ${max_str:i:1} ]; then\n            count=$((count+1))\n        fi\n    done\n    for ((i=min_len; i<max_len; i++)); do\n        if [ ${max_str:i:1} != 0 ]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local len=${#a}\n    local i=0\n    local count=0\n    while [ $i -lt $len ]; do\n        if [ ${a:$i:1} != ${b:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$len1\n    local swaps=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of same length\"\n        return 1\n    fi\n    for ((i=0; i<len; i++)); do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            swaps=$((swaps+1))\n        fi\n    done\n    echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=\"$1\"\n    local b=\"$2\"\n    local a_len=\"${#a}\"\n    local b_len=\"${#b}\"\n    local i=0\n    local swaps=0\n    if [ \"$a_len\" -ne \"$b_len\" ]; then\n        echo \"Error: Strings are not the same length\"\n        return 1\n    fi\n    while [ \"$i\" -lt \"$a_len\" ]; do\n        if [ \"${a:$i:1}\" != \"${b:$i:1}\" ]; then\n            swaps=$((swaps+1))\n        fi\n        i=$((i+1))\n    done\n    echo \"$swaps\"\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=\"$1\"\n    local str2=\"$2\"\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local count=0\n    if [ \"$len1\" -ne \"$len2\" ]; then\n        echo \"The strings are not of equal length\"\n        return 1\n    fi\n    while [ \"$i\" -lt \"$len1\" ]; do\n        if [ \"${str1:$i:1}\" != \"${str2:$i:1}\" ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local count=0\n    local i=0\n    local j=0\n    local tmp=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"The two strings are not equal in length\"\n        return 1\n    fi\n    for ((i=0; i<$len1; i++)); do\n        if [ ${str1:$i:1} -ne ${str2:$i:1} ]; then\n            for ((j=$i+1; j<$len1; j++)); do\n                if [ ${str1:$j:1} -eq ${str2:$i:1} ]; then\n                    tmp=${str1:$i:1}\n                    str1=${str1:0:$i}${str1:$j:1}${str1:$i+1:$j-$i-1}${str1:$j+1:$len1-$j-1}\n                    str1=${str1:0:$j}${tmp}${str1:$j+1:$len1-$j-1}\n                    count=$((count+1))\n                    break\n                fi\n            done\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local count=0\n  local i=0\n  if [ $len1 -ne $len2 ]; then\n    echo \"Strings are not of same length\"\n    return\n  fi\n  while [ $i -lt $len1 ]; do\n    if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  echo \"Minimum swaps required: $count\"\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local len=${#a}\n    local count=0\n    for (( i=0; i<len; i++ )); do\n        if [[ ${a:i:1} != ${b:i:1} ]]; then\n            (( count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local j=0\n    local count=0\n    if [[ $len1 -ne $len2 ]]; then\n        echo \"ERROR: Strings are not of equal length\"\n        return 1\n    fi\n    while [[ $i -lt $len1 ]]; do\n        if [[ ${str1:$i:1} -ne ${str2:$i:1} ]]; then\n            j=$i\n            while [[ $j -lt $len1 ]]; do\n                if [[ ${str1:$j:1} -eq ${str2:$i:1} ]]; then\n                    str1=\"${str1:0:$i}${str1:$j:1}${str1:$((i+1)):$((j-i-1))}${str1:$i:1}${str1:$((j+1))}\"\n                    count=$((count+1))\n                    break\n                fi\n                j=$((j+1))\n            done\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local count=0\n    local i=0\n    local j=0\n    local temp=0\n    local temp1=0\n    local temp2=0\n    local temp3=0\n    local temp4=0\n    local temp5=0\n    local temp6=0\n    local temp7=0\n    local temp8=0\n    local temp9=0\n    local temp10=0\n    local temp11=0\n    local temp12=0\n    local temp13=0\n    local temp14=0\n    local temp15=0\n    local temp16=0\n    local temp17=0\n    local temp18=0\n    local temp19=0\n    local temp20=0\n    local temp21=0\n    local temp22=0\n    local temp23=0\n    local temp24=0\n    local temp25=0\n    local temp26=0\n    local temp27=0\n    local temp28=0\n    local temp29=0\n    local temp30=0\n    local temp31=0\n    local temp32=0\n    local temp33=0\n    local temp34=0\n    local temp35=0\n    local temp36=0\n    local temp37=0\n    local temp38=0\n    local temp39=0\n    local temp40=0\n    local temp41=0\n    local temp42=0\n    local temp43=0\n    local temp44=0\n    local temp45=0\n    local temp46=0\n    local temp47=0\n    local temp48=0\n    local temp49=0\n    local temp50=0\n    local temp51=0\n    local temp52=0\n    local temp53=0\n    local temp54=0\n    local temp55=0\n    local temp56=0\n    local temp57=0\n    local temp58=0\n    local temp59=0\n    local temp60=0\n    local temp61=0\n    local temp62=0\n    local temp63=0\n    local temp64=0\n    local temp\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local s1=$1\n    local s2=$2\n    local len=${#s1}\n    local count=0\n    for (( i=0; i<len; i++ )); do\n        if [[ ${s1:i:1} != ${s2:i:1} ]]; then\n            (( count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    print \"Hello world!\"\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b'Warning: unknown mime-type for \"Hello world!\" -- using \"application/octet-stream\"\\nError: no such file \"Hello world!\"\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local -i i=0\n  local -i j=0\n  local -i count=0\n  local -i len=${#1}\n  local -i len2=${#2}\n  local -i temp=0\n  local -i temp2=0\n  local -i temp3=0\n  local -i temp4=0\n  local -i temp5=0\n  local -i temp6=0\n  local -i temp7=0\n  local -i temp8=0\n  local -i temp9=0\n  local -i temp10=0\n  local -i temp11=0\n  local -i temp12=0\n  local -i temp13=0\n  local -i temp14=0\n  local -i temp15=0\n  local -i temp16=0\n  local -i temp17=0\n  local -i temp18=0\n  local -i temp19=0\n  local -i temp20=0\n  local -i temp21=0\n  local -i temp22=0\n  local -i temp23=0\n  local -i temp24=0\n  local -i temp25=0\n  local -i temp26=0\n  local -i temp27=0\n  local -i temp28=0\n  local -i temp29=0\n  local -i temp30=0\n  local -i temp31=0\n  local -i temp32=0\n  local -i temp33=0\n  local -i temp34=0\n  local -i temp35=0\n  local -i temp36=0\n  local -i temp37=0\n  local -i temp38=0\n  local -i temp39=0\n  local -i temp40=0\n  local -i temp41=0\n  local -i temp42=0\n  local -i temp43=0\n  local -i temp44=0\n  local -i temp45=0\n  local -i temp46=0\n  local -i temp47=0\n  local -i temp48=0\n  local -i temp49=0\n  local -i temp50=0\n  local -i temp51=0\n  local -i temp52\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local j=0\n    local count=0\n    if [[ $len1 -ne $len2 ]]; then\n        echo \"Lengths of strings are not equal\"\n        return 1\n    fi\n    while [[ $i -lt $len1 ]]; do\n        if [[ ${str1:$i:1} -ne ${str2:$i:1} ]]; then\n            j=$i\n            while [[ $j -lt $len1 ]]; do\n                if [[ ${str1:$j:1} -eq ${str2:$i:1} ]]; then\n                    str1=${str1:0:$i}${str1:$j:1}${str1:$i+1:$j-$i-1}${str1:$i:1}${str1:$j+1}\n                    ((count++))\n                    break\n                fi\n                ((j++))\n            done\n        fi\n        ((i++))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local len=$(($len1>$len2?$len1:$len2))\n  local i=0\n  local count=0\n  while [ $i -lt $len ]; do\n    if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len=${#1}\n    for ((i=0; i<len; i++)); do\n        if [[ ${1:i:1} != ${2:i:1} ]]; then\n            ((count++))\n            for ((j=i+1; j<len; j++)); do\n                if [[ ${1:j:1} == ${2:i:1} ]]; then\n                    ((count++))\n                    break\n                fi\n            done\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local j=0\n    local count=0\n    local tmp=0\n    local tmp1=0\n    local tmp2=0\n    local tmp3=0\n    local tmp4=0\n    local tmp5=0\n    local tmp6=0\n    local tmp7=0\n    local tmp8=0\n    local tmp9=0\n    local tmp10=0\n    local tmp11=0\n    local tmp12=0\n    local tmp13=0\n    local tmp14=0\n    local tmp15=0\n    local tmp16=0\n    local tmp17=0\n    local tmp18=0\n    local tmp19=0\n    local tmp20=0\n    local tmp21=0\n    local tmp22=0\n    local tmp23=0\n    local tmp24=0\n    local tmp25=0\n    local tmp26=0\n    local tmp27=0\n    local tmp28=0\n    local tmp29=0\n    local tmp30=0\n    local tmp31=0\n    local tmp32=0\n    local tmp33=0\n    local tmp34=0\n    local tmp35=0\n    local tmp36=0\n    local tmp37=0\n    local tmp38=0\n    local tmp39=0\n    local tmp40=0\n    local tmp41=0\n    local tmp42=0\n    local tmp43=0\n    local tmp44=0\n    local tmp45=0\n    local tmp46=0\n    local tmp47=0\n    local tmp48=0\n    local tmp49=0\n    local tmp50=0\n    local tmp51=0\n    local tmp52=0\n    local tmp53=0\n    local tmp54=0\n    local tmp55=0\n    local tmp56=0\n    local tmp57=0\n    local tmp58=0\n    local tmp59=0\n    local tmp60=0\n    local tmp61=0\n    local tmp62=0\n    local tmp63=0\n    local tmp64=0\n    local tmp\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0 j=0\n    local -i count=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    if [[ $len -ne $len2 ]]; then\n        echo \"ERROR: Strings are not equal length\"\n        return 1\n    fi\n    for (( i=0; i<$len; i++ )); do\n        if [[ ${1:$i:1} -ne ${2:$i:1} ]]; then\n            (( count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    # Write your code here\n    # To print results to the standard output you can use print\n    # Example: print \"Hello world!\"\n    local str1=$1\n    local str2=$2\n    local len=${#str1}\n    local count=0\n    for ((i=0; i<len; i++)); do\n        if [[ ${str1:i:1} != ${str2:i:1} ]]; then\n            ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len=${#1}\n    for ((i=0; i<len; i++)); do\n        if [[ ${1:i:1} != ${2:i:1} ]]; then\n            ((count++))\n            for ((j=i+1; j<len; j++)); do\n                if [[ ${1:j:1} == ${2:i:1} ]]; then\n                    ((count++))\n                    break\n                fi\n            done\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local swaps=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of equal length\"\n        return 1\n    fi\n    while [ $i -lt $len1 ]; do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            swaps=$((swaps+1))\n        fi\n        i=$((i+1))\n    done\n    echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local len=0\n  local count=0\n  if [ $len1 -eq $len2 ]; then\n    len=$len1\n  else\n    echo \"Strings are not of equal length\"\n    return\n  fi\n  for (( i=0; i<len; i++ )); do\n    if [ \"${str1:$i:1}\" != \"${str2:$i:1}\" ]; then\n      count=$(( count + 1 ))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local count=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Invalid input\"\n        return\n    fi\n    while [ $i -lt $len1 ]; do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local len=$len1\n  if [ $len1 -gt $len2 ]; then\n    len=$len2\n  fi\n  local count=0\n  for (( i=0; i<$len; i++ )); do\n    if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n      count=$((count+1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local count=0\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local temp1=0\n    local temp2=0\n    local temp3=0\n    local temp4=0\n    local temp5=0\n    local temp6=0\n    local temp7=0\n    local temp8=0\n    local temp9=0\n    local temp10=0\n    local temp11=0\n    local temp12=0\n    local temp13=0\n    local temp14=0\n    local temp15=0\n    local temp16=0\n    local temp17=0\n    local temp18=0\n    local temp19=0\n    local temp20=0\n    local temp21=0\n    local temp22=0\n    local temp23=0\n    local temp24=0\n    local temp25=0\n    local temp26=0\n    local temp27=0\n    local temp28=0\n    local temp29=0\n    local temp30=0\n    local temp31=0\n    local temp32=0\n    local temp33=0\n    local temp34=0\n    local temp35=0\n    local temp36=0\n    local temp37=0\n    local temp38=0\n    local temp39=0\n    local temp40=0\n    local temp41=0\n    local temp42=0\n    local temp43=0\n    local temp44=0\n    local temp45=0\n    local temp46=0\n    local temp47=0\n    local temp48=0\n    local temp49=0\n    local temp50=0\n    local temp51=0\n    local temp52=0\n    local temp53=0\n    local temp54=0\n    local temp55=0\n    local temp56=0\n    local temp57=0\n    local temp58=0\n    local temp59=0\n    local temp60=0\n    local temp61=0\n    local temp62=0\n    local temp63=0\n    local temp64\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=\"$1\"\n    local str2=\"$2\"\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=0\n    local count=0\n    if [ $len1 -lt $len2 ]; then\n        len=$len1\n    else\n        len=$len2\n    fi\n    for ((i=0; i<len; i++)); do\n        if [ ${str1:i:1} != ${str2:i:1} ]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local a_len=${#a}\n    local b_len=${#b}\n    local min_swaps=0\n    local i=0\n    local j=0\n    local a_char=''\n    local b_char=''\n    local a_char_int=0\n    local b_char_int=0\n    local a_char_int_prev=0\n    local b_char_int_prev=0\n    local a_char_int_next=0\n    local b_char_int_next=0\n    local a_char_int_prev_swap=0\n    local b_char_int_prev_swap=0\n    local a_char_int_next_swap=0\n    local b_char_int_next_swap=0\n    local a_char_int_prev_swap_count=0\n    local b_char_int_prev_swap_count=0\n    local a_char_int_next_swap_count=0\n    local b_char_int_next_swap_count=0\n    local a_char_int_prev_swap_count_min=0\n    local b_char_int_prev_swap_count_min=0\n    local a_char_int_next_swap_count_min=0\n    local b_char_int_next_swap_count_min=0\n    local a_char_int_prev_swap_count_min_prev=0\n    local b_char_int_prev_swap_count_min_prev=0\n    local a_char_int_next_swap_count_min_prev=0\n    local b_char_int_next_swap_count_min_prev=0\n    local a_char_int_prev_swap_count_min_prev_swap=0\n    local b_char_int_prev_swap_count_min_prev_swap=0\n    local a_char_int_next_swap_count_min_prev_swap=0\n    local b_char_int_next_swap\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local count=0\n    local len=${#a}\n    local i=0\n    while [ $i -lt $len ]; do\n        if [ ${a:$i:1} != ${b:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$len1\n    local count=0\n    if [[ $len1 -ne $len2 ]]; then\n        echo \"Strings are not of same length\"\n        return\n    fi\n    for ((i=0; i<$len; i++)); do\n        if [[ ${str1:$i:1} -ne ${str2:$i:1} ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo \"Minimum swaps required is $count\"\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local len=${#a}\n    local count=0\n    for (( i=0; i<len; i++ )); do\n        if [[ ${a:i:1} != ${b:i:1} ]]; then\n            (( count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i count=0\n    local -i len=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len=$((${#str1} - 1))\n  local count=0\n  for i in $(seq 0 $len); do\n    if [[ ${str1:$i:1} != ${str2:$i:1} ]]; then\n      ((count++))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n  local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local count=0\n    local i=0\n    local j=0\n    local temp=0\n    local temp1=0\n    local temp2=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Length of both strings are not equal\"\n        return\n    fi\n    for ((i=0; i<len1; i++)); do\n        if [ ${str1:$i:1} -ne ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n    done\n    echo \"Number of swaps required to convert $str1 to $str2 is $count\"\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i\n    local j\n    local count=0\n    local temp\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of equal length\"\n        return\n    fi\n    for ((i=0; i<$len1; i++)); do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            for ((j=$i+1; j<$len2; j++)); do\n                if [ ${str1:$i:1} == ${str2:$j:1} ]; then\n                    temp=${str2:$i:1}\n                    str2=${str2:0:$i}${str2:$j:1}${str2:$i+1:$j-$i-1}${temp}${str2:$j+1:$len2-$j-1}\n                    count=$((count+1))\n                    break\n                fi\n            done\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i count=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    local -i diff=0\n    local -i diff2=0\n    local -i diff3=0\n    local -i diff4=0\n    local -i diff5=0\n    local -i diff6=0\n    local -i diff7=0\n    local -i diff8=0\n    local -i diff9=0\n    local -i diff10=0\n    local -i diff11=0\n    local -i diff12=0\n    local -i diff13=0\n    local -i diff14=0\n    local -i diff15=0\n    local -i diff16=0\n    local -i diff17=0\n    local -i diff18=0\n    local -i diff19=0\n    local -i diff20=0\n    local -i diff21=0\n    local -i diff22=0\n    local -i diff23=0\n    local -i diff24=0\n    local -i diff25=0\n    local -i diff26=0\n    local -i diff27=0\n    local -i diff28=0\n    local -i diff29=0\n    local -i diff30=0\n    local -i diff31=0\n    local -i diff32=0\n    local -i diff33=0\n    local -i diff34=0\n    local -i diff35=0\n    local -i diff36=0\n    local -i diff37=0\n    local -i diff38=0\n    local -i diff39=0\n    local -i diff40=0\n    local -i diff41=0\n    local -i diff42=0\n    local -i diff43=0\n    local -i diff44=0\n    local -i diff45=0\n    local -i diff46=0\n    local -i diff47=0\n    local -i diff48=0\n    local -i diff49=0\n    local -i diff50=0\n    local -i diff51=\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$len1\n    local swaps=0\n    local i=0\n    if [[ $len1 -ne $len2 ]]; then\n        echo \"Strings are not of same length\"\n        return 1\n    fi\n    while [[ $i -lt $len ]]; do\n        if [[ ${str1:$i:1} -ne ${str2:$i:1} ]]; then\n            swaps=$((swaps+1))\n        fi\n        i=$((i+1))\n    done\n    echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local len=${#a}\n    local count=0\n    for (( i=0; i<len; i++ )); do\n        if [[ ${a:i:1} != ${b:i:1} ]]; then\n            (( count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local count=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n   \n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$((len1<len2?len1:len2))\n    local count=0\n    for ((i=0;i<len;i++)); do\n        if [[ ${str1:i:1} != ${str2:i:1} ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    local -i diff=0\n    local -i diff2=0\n    local -i diff3=0\n    local -i diff4=0\n    local -i diff5=0\n    local -i diff6=0\n    local -i diff7=0\n    local -i diff8=0\n    local -i diff9=0\n    local -i diff10=0\n    local -i diff11=0\n    local -i diff12=0\n    local -i diff13=0\n    local -i diff14=0\n    local -i diff15=0\n    local -i diff16=0\n    local -i diff17=0\n    local -i diff18=0\n    local -i diff19=0\n    local -i diff20=0\n    local -i diff21=0\n    local -i diff22=0\n    local -i diff23=0\n    local -i diff24=0\n    local -i diff25=0\n    local -i diff26=0\n    local -i diff27=0\n    local -i diff28=0\n    local -i diff29=0\n    local -i diff30=0\n    local -i diff31=0\n    local -i diff32=0\n    local -i diff33=0\n    local -i diff34=0\n    local -i diff35=0\n    local -i diff36=0\n    local -i diff37=0\n    local -i diff38=0\n    local -i diff39=0\n    local -i diff40=0\n    local -i diff41=0\n    local -i diff42=0\n    local -i diff43=0\n    local -i diff44=0\n    local -i diff45=0\n    local -i diff46=0\n    local -i diff47=0\n    local -i diff48=0\n    local -i diff49=0\n    local -i diff50=0\n    local -i diff51=0\n    local -i diff52\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local swaps=0\n    local i=0\n    local j=0\n    local tmp=0\n\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of equal length\"\n        return\n    fi\n\n    for (( i=0; i<$len1; i++ )); do\n        if [ ${str1:$i:1} -ne ${str2:$i:1} ]; then\n            swaps=$((swaps+1))\n            for (( j=$i+1; j<$len1; j++ )); do\n                if [ ${str1:$j:1} -eq ${str2:$i:1} ]; then\n                    tmp=${str1:$j:1}\n                    str1=${str1:0:$j}${str1:$i:1}${str1:$((j+1)):$((len1-j-1))}\n                    str1=${str1:0:$i}${tmp}${str1:$((i+1)):$((len1-i-1))}\n                    break\n                fi\n            done\n        fi\n    done\n    echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$len1\n    local i=0\n    local count=0\n    if [[ $len1 -ne $len2 ]]; then\n        echo \"Error: Strings are not of same length\"\n        return 1\n    fi\n    while [[ $i -lt $len ]]; do\n        if [[ ${str1:$i:1} -ne ${str2:$i:1} ]]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local diff=0\n    local count=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of equal length\"\n        return\n    fi\n    for (( i=0; i<$len1; i++ )); do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            (( diff++ ))\n        fi\n    done\n    if [ $(( diff % 2 )) -eq 0 ]; then\n        count=$(( diff / 2 ))\n    else\n        count=-1\n    fi\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    local -i diff=0\n    local -i diff2=0\n    local -i diff3=0\n    local -i diff4=0\n    local -i diff5=0\n    local -i diff6=0\n    local -i diff7=0\n    local -i diff8=0\n    local -i diff9=0\n    local -i diff10=0\n    local -i diff11=0\n    local -i diff12=0\n    local -i diff13=0\n    local -i diff14=0\n    local -i diff15=0\n    local -i diff16=0\n    local -i diff17=0\n    local -i diff18=0\n    local -i diff19=0\n    local -i diff20=0\n    local -i diff21=0\n    local -i diff22=0\n    local -i diff23=0\n    local -i diff24=0\n    local -i diff25=0\n    local -i diff26=0\n    local -i diff27=0\n    local -i diff28=0\n    local -i diff29=0\n    local -i diff30=0\n    local -i diff31=0\n    local -i diff32=0\n    local -i diff33=0\n    local -i diff34=0\n    local -i diff35=0\n    local -i diff36=0\n    local -i diff37=0\n    local -i diff38=0\n    local -i diff39=0\n    local -i diff40=0\n    local -i diff41=0\n    local -i diff42=0\n    local -i diff43=0\n    local -i diff44=0\n    local -i diff45=0\n    local -i diff46=0\n    local -i diff47=0\n    local -i diff48=0\n    local -i diff49=0\n    local -i diff50=0\n    local -i diff51=0\n    local -i diff52\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local a=$1\n  local b=$2\n  local len=${#a}\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${a:i:1} != ${b:i:1} ]]; then\n      (( count++ ))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local len=$((len1<len2?len1:len2))\n  local i=0\n  local count=0\n  while [ $i -lt $len ]; do\n    if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local s1=$1\n    local s2=$2\n    local len1=${#s1}\n    local len2=${#s2}\n    local i=0\n    local count=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of same length\"\n        return 1\n    fi\n    for ((i=0; i<$len1; i++)); do\n        if [ ${s1:$i:1} != ${s2:$i:1} ]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local min_len=$((len1 < len2 ? len1 : len2))\n    local swaps=0\n    local i=0\n    while ((i < min_len)); do\n        if [[ ${str1:i:1} != ${str2:i:1} ]]; then\n            swaps=$((swaps + 1))\n        fi\n        i=$((i + 1))\n    done\n    echo $((swaps + abs(len1 - len2)))\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp9rejr22b.sh: line 20: swaps + abs(len1 - len2): syntax error in expression (error token is \"(len1 - len2)\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local max_len=$((len1 > len2 ? len1 : len2))\n  local min_len=$((len1 < len2 ? len1 : len2))\n  local i=0\n  local swaps=0\n  local c1\n  local c2\n  while [ $i -lt $max_len ]; do\n    c1=${str1:$i:1}\n    c2=${str2:$i:1}\n    if [ \"$c1\" != \"$c2\" ]; then\n      swaps=$((swaps + 1))\n    fi\n    i=$((i + 1))\n  done\n  echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local i=0\n  local count=0\n  local temp=0\n  if [[ $len1 -ne $len2 ]]; then\n    echo \"strings are not of same length\"\n    return 1\n  fi\n  while [[ $i -lt $len1 ]]; do\n    if [[ ${str1:$i:1} -ne ${str2:$i:1} ]]; then\n      ((count++))\n    fi\n    ((i++))\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local i=0\n  local count=0\n  if [ $len1 -ne $len2 ]; then\n    echo \"Strings are not of same length\"\n    return 1\n  fi\n  while [ $i -lt $len1 ]; do\n    if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local min_swaps=0\n    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    local tmp1=0\n    local tmp2=0\n    local tmp3=0\n    local tmp4=0\n\n    if [ $len1 -ne $len2 ]; then\n        echo \"The two strings must have the same length\"\n        return 1\n    fi\n\n    for ((i=0; i<len1; i++)); do\n        if [ ${str1:$i:1} -ne ${str2:$i:1} ]; then\n            min_swaps=$((min_swaps+1))\n        fi\n    done\n\n    if [ $min_swaps -eq 0 ]; then\n        echo \"No swaps required\"\n        return 0\n    fi\n\n    for ((i=0; i<len1; i++)); do\n        for ((j=i+1; j<len1; j++)); do\n            tmp1=0\n            tmp2=0\n            tmp3=0\n            tmp4=0\n            for ((k=0; k<len1; k++)); do\n                if [ $k -eq $i ]; then\n                    tmp1=$((tmp1+1))\n                elif [ $k -eq $j ]; then\n                    tmp2=$((tmp2+1))\n                elif [ ${str1:$k:1} -eq ${str2:$i:1} ]; then\n                    tmp3=$((tmp3+1))\n                elif [ ${str1:$k:1} -eq ${str2:$j:1} ]; then\n                    tmp4=$((tmp4+1))\n                fi\n            done\n            tmp=$((tmp1+tmp2+tmp3+tmp4))\n            if [ $tmp -lt $min_swaps ]; then\n                min_swaps=$tmp\n            fi\n        done\n    done\n\n    echo \"Minimum swaps required: $min_swaps\"\n    return 0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i swaps=0\n    local -i i=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    local -i len3=$len\n    local -i len4=$len2\n    local -i len5=$len\n    local -i len6=$len2\n    local -i len7=$len\n    local -i len8=$len2\n    local -i len9=$len\n    local -i len10=$len2\n    local -i len11=$len\n    local -i len12=$len2\n    local -i len13=$len\n    local -i len14=$len2\n    local -i len15=$len\n    local -i len16=$len2\n    local -i len17=$len\n    local -i len18=$len2\n    local -i len19=$len\n    local -i len20=$len2\n    local -i len21=$len\n    local -i len22=$len2\n    local -i len23=$len\n    local -i len24=$len2\n    local -i len25=$len\n    local -i len26=$len2\n    local -i len27=$len\n    local -i len28=$len2\n    local -i len29=$len\n    local -i len30=$len2\n    local -i len31=$len\n    local -i len32=$len2\n    local -i len33=$len\n    local -i len34=$len2\n    local -i len35=$len\n    local -i len36=$len2\n    local -i len37=$len\n    local -i len38=$len2\n    local -i len39=$len\n    local -i len40=$len2\n    local -i len41=$len\n    local -i len42=$len2\n    local -i len43=$len\n    local -i len44=$len2\n    local -i len45=$len\n    local -i len46=$len2\n    local -i len47=$len\n    local -i len48=$len2\n    local -i len49=$len\n    local -i len50=$len2\n    local -i len51=$len\n    local -i len52=$\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpug1bb69_.sh: line 60: local: $: syntax error: operand expected (error token is \"$\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=\"$1\"\n  local str2=\"$2\"\n  local len1=${#str1}\n  local len2=${#str2}\n  local min_len=$((len1<len2?len1:len2))\n  local max_len=$((len1>len2?len1:len2))\n  local i=0\n  local swaps=0\n  while [ $i -lt $min_len ]; do\n    if [ \"${str1:$i:1}\" != \"${str2:$i:1}\" ]; then\n      swaps=$((swaps+1))\n    fi\n    i=$((i+1))\n  done\n  swaps=$((swaps+max_len-min_len))\n  echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len1=${#1}\n    local -i len2=${#2}\n    local -i len=0\n    if [ $len1 -lt $len2 ]; then\n        len=$len1\n    else\n        len=$len2\n    fi\n    for (( i=0; i<$len; i++ )); do\n        if [ ${1:$i:1} != ${2:$i:1} ]; then\n            count=$(( count + 1 ))\n        fi\n    done\n    if [ $len1 -lt $len2 ]; then\n        count=$(( count + len2 - len1 ))\n    else\n        count=$(( count + len1 - len2 ))\n    fi\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local count=0\n    local len=${#a}\n    for ((i=0; i<len; i++)); do\n        if [[ ${a:i:1} != ${b:i:1} ]]; then\n            ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len=${#str1}\n    local count=0\n    for (( i=0; i<len; i++ )); do\n        if [[ ${str1:i:1} != ${str2:i:1} ]]; then\n            ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local str1_len=${#str1}\n  local str2_len=${#str2}\n  local str1_arr=($(echo $str1 | grep -o .))\n  local str2_arr=($(echo $str2 | grep -o .))\n  local count=0\n  if [[ $str1_len -ne $str2_len ]]; then\n    echo \"Strings are not of equal length\"\n    return\n  fi\n  for (( i=0; i<$str1_len; i++ )); do\n    if [[ ${str1_arr[$i]} -ne ${str2_arr[$i]} ]]; then\n      ((count++))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local -i count=0\n  local -i len=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local count=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Error: Strings are not of equal length\"\n        return 1\n    fi\n    while [ $i -lt $len1 ]; do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local i=0\n  local count=0\n  if [ $len1 -ne $len2 ]; then\n    echo \"Strings are not of same length\"\n    exit 1\n  fi\n  while [ $i -lt $len1 ]; do\n    if [ \"${str1:$i:1}\" != \"${str2:$i:1}\" ]; then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    local -i diff=0\n    local -i diff2=0\n    local -i diff3=0\n    local -i diff4=0\n    local -i diff5=0\n    local -i diff6=0\n    local -i diff7=0\n    local -i diff8=0\n    local -i diff9=0\n    local -i diff10=0\n    local -i diff11=0\n    local -i diff12=0\n    local -i diff13=0\n    local -i diff14=0\n    local -i diff15=0\n    local -i diff16=0\n    local -i diff17=0\n    local -i diff18=0\n    local -i diff19=0\n    local -i diff20=0\n    local -i diff21=0\n    local -i diff22=0\n    local -i diff23=0\n    local -i diff24=0\n    local -i diff25=0\n    local -i diff26=0\n    local -i diff27=0\n    local -i diff28=0\n    local -i diff29=0\n    local -i diff30=0\n    local -i diff31=0\n    local -i diff32=0\n    local -i diff33=0\n    local -i diff34=0\n    local -i diff35=0\n    local -i diff36=0\n    local -i diff37=0\n    local -i diff38=0\n    local -i diff39=0\n    local -i diff40=0\n    local -i diff41=0\n    local -i diff42=0\n    local -i diff43=0\n    local -i diff44=0\n    local -i diff45=0\n    local -i diff46=0\n    local -i diff47=0\n    local -i diff48=0\n    local -i diff49=0\n    local -i diff50=0\n    local -i diff51=0\n    local -i diff52\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local len=${#a}\n    local count=0\n    for (( i=0; i<len; i++ )); do\n        if [[ ${a:$i:1} != ${b:$i:1} ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$len1\n    local swaps=0\n    if [ $len2 -lt $len1 ]; then\n        len=$len2\n    fi\n    for ((i=0; i<len; i++)); do\n        if [ ${str1:i:1} != ${str2:i:1} ]; then\n            swaps=$((swaps+1))\n        fi\n    done\n    echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local len=$((len1>len2?len1:len2))\n  local i=0\n  local count=0\n  while [ $i -lt $len ]; do\n    local c1=${str1:$i:1}\n    local c2=${str2:$i:1}\n    if [ \"$c1\" != \"$c2\" ]; then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=\"$1\"\n  local str2=\"$2\"\n  local len1=${#str1}\n  local len2=${#str2}\n  local i=0\n  local j=0\n  local count=0\n  local tmp=0\n  if [ $len1 -ne $len2 ]; then\n    echo \"Strings are not of same length\"\n    return 1\n  fi\n  for (( i=0; i<$len1; i++ )); do\n    if [ \"${str1:$i:1}\" != \"${str2:$i:1}\" ]; then\n      for (( j=$i+1; j<$len1; j++ )); do\n        if [ \"${str1:$i:1}\" == \"${str2:$j:1}\" ]; then\n          tmp=${str1:$i:1}\n          str1=\"${str1:0:$i}${str2:$j:1}${str1:$(($i+1))}\"\n          str2=\"${str2:0:$j}$tmp${str2:$(($j+1))}\"\n          count=$(($count+1))\n          break\n        fi\n      done\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local a=$1\n  local b=$2\n  local count=0\n  local i=0\n  local len=${#a}\n  while [ $i -lt $len ]; do\n    if [ ${a:$i:1} != ${b:$i:1} ]; then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  if [[ $len1 -ne $len2 ]]; then\n    echo \"Strings are not of equal length\"\n    return\n  fi\n  local len=$len1\n  local count=0\n  for (( i=0; i<$len; i++ )); do\n    if [[ ${str1:$i:1} -ne ${str2:$i:1} ]]; then\n      count=$((count+1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local swaps=0\n    local len=${#a}\n    for ((i=0; i<len; i++)); do\n        if [[ ${a:i:1} != ${b:i:1} ]]; then\n            ((swaps++))\n        fi\n    done\n    echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n  local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i swaps=0\n    local -i len=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    local -i diff=0\n    local -i diff2=0\n    local -i diff3=0\n    local -i diff4=0\n    local -i diff5=0\n    local -i diff6=0\n    local -i diff7=0\n    local -i diff8=0\n    local -i diff9=0\n    local -i diff10=0\n    local -i diff11=0\n    local -i diff12=0\n    local -i diff13=0\n    local -i diff14=0\n    local -i diff15=0\n    local -i diff16=0\n    local -i diff17=0\n    local -i diff18=0\n    local -i diff19=0\n    local -i diff20=0\n    local -i diff21=0\n    local -i diff22=0\n    local -i diff23=0\n    local -i diff24=0\n    local -i diff25=0\n    local -i diff26=0\n    local -i diff27=0\n    local -i diff28=0\n    local -i diff29=0\n    local -i diff30=0\n    local -i diff31=0\n    local -i diff32=0\n    local -i diff33=0\n    local -i diff34=0\n    local -i diff35=0\n    local -i diff36=0\n    local -i diff37=0\n    local -i diff38=0\n    local -i diff39=0\n    local -i diff40=0\n    local -i diff41=0\n    local -i diff42=0\n    local -i diff43=0\n    local -i diff44=0\n    local -i diff45=0\n    local -i diff46=0\n    local -i diff47=0\n    local -i diff48=0\n    local -i diff49=0\n    local -i diff50=0\n    local -i diff51=0\n    local -i diff52\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local count=0\n    local temp=0\n\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not equal\"\n        return\n    fi\n\n    while [ $i -lt $len1 ]; do\n        if [ ${str1:$i:1} -ne ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local string1=$1\n    local string2=$2\n    local len=${#string1}\n    local count=0\n    for ((i=0; i<len; i++)); do\n        if [[ ${string1:i:1} != ${string2:i:1} ]]; then\n            ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local min_len=$len1\n    local max_len=$len2\n    local min_str=$str1\n    local max_str=$str2\n    local swaps=0\n    if [ $len1 -gt $len2 ]; then\n        min_len=$len2\n        max_len=$len1\n        min_str=$str2\n        max_str=$str1\n    fi\n    for ((i=0; i<min_len; i++)); do\n        if [ ${min_str:$i:1} != ${max_str:$i:1} ]; then\n            swaps=$((swaps+1))\n        fi\n    done\n    swaps=$((swaps+max_len-min_len))\n    echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=\"$1\"\n    local b=\"$2\"\n    local n=${#a}\n    local count=0\n    for ((i=0; i<n; i++)); do\n        if [[ ${a:$i:1} != ${b:$i:1} ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local a_len=${#a}\n    local b_len=${#b}\n    local a_len_dec=$((2#$a))\n    local b_len_dec=$((2#$b))\n    local diff=$((a_len_dec-b_len_dec))\n    local diff_abs=${diff#-}\n    local diff_abs_bin=$(echo \"obase=2; $diff_abs\" | bc)\n    local diff_abs_bin_len=${#diff_abs_bin}\n    local diff_abs_bin_len_dec=$((2#$diff_abs_bin))\n    local diff_abs_bin_len_dec_bin=$(echo \"obase=2; $diff_abs_bin_len_dec\" | bc)\n    local diff_abs_bin_len_dec_bin_len=${#diff_abs_bin_len_dec_bin}\n    local diff_abs_bin_len_dec_bin_len_dec=$((2#$diff_abs_bin_len_dec_bin))\n    local diff_abs_bin_len_dec_bin_len_dec_bin=$(echo \"obase=2; $diff_abs_bin_len_dec_bin_len_dec\" | bc)\n    local diff_abs_bin_len_dec_bin_len_dec_bin_len=${#diff_abs_bin_len_dec_bin_len_dec_bin}\n    local diff_abs_bin_len_dec_bin_len_dec_bin_len_dec=$((2#$diff_abs_bin_len_dec_bin_len_dec_bin_len_dec))\n    local diff_abs_bin_len_dec_bin_len_dec_bin_len_dec_bin=$(echo \"obase=2; $diff_abs_bin_len_dec_bin_len_dec_bin_len_dec_bin\" | bc)\n    local diff_abs_bin_len_dec_bin_len_dec_bin_len_dec_bin_len=${#diff_abs_bin_len_dec_bin_len_dec_\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpvkf26enr.sh: line 40: syntax error: unexpected end of file\\n'",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len=${#str1}\n    local count=0\n    for (( i=0; i<len; i++ )); do\n        if [[ ${str1:i:1} != ${str2:i:1} ]]; then\n            (( count++ ))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local count=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"Strings are not of same length\"\n        return\n    fi\n    while [ $i -lt $len1 ]; do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local -i i=0 j=0\n  local -i len1=${#1}\n  local -i len2=${#2}\n  local -i min_swaps=0\n  local -i max_len=0\n  local -i min_len=0\n  local -i diff=0\n  local -i diff_len=0\n  local -i diff_swaps=0\n  local -i diff_swaps_min=0\n  local -i diff_swaps_max=0\n  local -i diff_swaps_min_len=0\n  local -i diff_swaps_max_len=0\n  local -i diff_swaps_min_swaps=0\n  local -i diff_swaps_max_swaps=0\n  local -i diff_swaps_min_swaps_min=0\n  local -i diff_swaps_min_swaps_max=0\n  local -i diff_swaps_max_swaps_min=0\n  local -i diff_swaps_max_swaps_max=0\n  local -i diff_swaps_max_swaps_min_len=0\n  local -i diff_swaps_max_swaps_max_len=0\n  local -i diff_swaps_max_swaps_min_swaps=0\n  local -i diff_swaps_max_swaps_max_swaps=0\n  local -i diff_swaps_max_swaps_min_swaps_min=0\n  local -i diff_swaps_max_swaps_min_swaps_max=0\n  local -i diff_swaps_max_swaps_max_swaps_min=0\n  local -i diff_swaps_max_swaps_max_swaps_max=0\n  local -i diff_swaps_max_swaps_max_swaps_min_len=0\n  local -i diff_swaps_max_swaps_max_swaps_max_len=0\n  local -i diff_swaps_max_swaps_max_swaps_min_swaps=0\n  local -i diff_\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local i=0\n  local count=0\n  if [ $len1 -ne $len2 ]; then\n    echo \"The two strings are not of equal length\"\n    return 1\n  fi\n  while [ $i -lt $len1 ]; do\n    if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n      count=$((count+1))\n    fi\n    i=$((i+1))\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    if [ $len -ne $len2 ]; then\n        echo \"Strings are not of equal length\"\n        return\n    fi\n    for (( i=0; i<$len; i++ )); do\n        if [ ${1:$i:1} -ne ${2:$i:1} ]; then\n            for (( j=$i+1; j<$len; j++ )); do\n                if [ ${1:$i:1} -eq ${2:$j:1} ]; then\n                    count=$((count+1))\n                    local -i temp=${1:$i:1}\n                    local -i temp2=${1:$j:1}\n                    local -i temp3=${2:$i:1}\n                    local -i temp4=${2:$j:1}\n                    local -i temp5=${1:0:$i}\n                    local -i temp6=${1:$((i+1)):$((len-i-1))}\n                    local -i temp7=${1:0:$j}\n                    local -i temp8=${1:$((j+1)):$((len-j-1))}\n                    local -i temp9=${2:0:$i}\n                    local -i temp10=${2:$((i+1)):$((len-i-1))}\n                    local -i temp11=${2:0:$j}\n                    local -i temp12=${2:$((j+1)):$((len-j-1))}\n                    local -i temp13=$temp5$temp2$temp6\n                    local -i temp14=$temp7$temp$temp8\n                    local -i temp15=$temp9$temp4$temp10\n                    local -i temp16=$temp11$temp3$temp12\n                    1=$temp13\n                    2=$temp15\n                    1=$temp14\n                    2=$temp16\n                    break\n                fi\n            done\n        fi\n    done\n    echo $\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpo3smtznn.sh: line 37: 1=1111: command not found\\n/tmp/tmpo3smtznn.sh: line 38: 2=1100: command not found\\n/tmp/tmpo3smtznn.sh: line 39: 1=11000: command not found\\n/tmp/tmpo3smtznn.sh: line 40: 2=11110: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$len1\n    if [ $len1 -gt $len2 ]; then\n        len=$len2\n    fi\n    local i=0\n    local count=0\n    while [ $i -lt $len ]; do\n        if [ ${str1:$i:1} != ${str2:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len=${#1}\n    for ((i=0; i<len; i++)); do\n        if [[ ${1:i:1} != ${2:i:1} ]]; then\n            ((count++))\n            for ((j=i+1; j<len; j++)); do\n                if [[ ${1:j:1} == ${2:i:1} ]]; then\n                    ((count++))\n                    break\n                fi\n            done\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    local -i diff=0\n    local -i diff2=0\n    local -i diff3=0\n    local -i diff4=0\n    local -i diff5=0\n    local -i diff6=0\n    local -i diff7=0\n    local -i diff8=0\n    local -i diff9=0\n    local -i diff10=0\n    local -i diff11=0\n    local -i diff12=0\n    local -i diff13=0\n    local -i diff14=0\n    local -i diff15=0\n    local -i diff16=0\n    local -i diff17=0\n    local -i diff18=0\n    local -i diff19=0\n    local -i diff20=0\n    local -i diff21=0\n    local -i diff22=0\n    local -i diff23=0\n    local -i diff24=0\n    local -i diff25=0\n    local -i diff26=0\n    local -i diff27=0\n    local -i diff28=0\n    local -i diff29=0\n    local -i diff30=0\n    local -i diff31=0\n    local -i diff32=0\n    local -i diff33=0\n    local -i diff34=0\n    local -i diff35=0\n    local -i diff36=0\n    local -i diff37=0\n    local -i diff38=0\n    local -i diff39=0\n    local -i diff40=0\n    local -i diff41=0\n    local -i diff42=0\n    local -i diff43=0\n    local -i diff44=0\n    local -i diff45=0\n    local -i diff46=0\n    local -i diff47=0\n    local -i diff48=0\n    local -i diff49=0\n    local -i diff50=0\n    local -i diff51=0\n    local -i diff52\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local len=$((len1>len2?len1:len2))\n    local i=0\n    local count=0\n    local c1\n    local c2\n    while [ $i -lt $len ]; do\n        c1=${str1:$i:1}\n        c2=${str2:$i:1}\n        if [ \"$c1\" != \"$c2\" ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local len=${#a}\n    local count=0\n    for ((i=0; i<len; i++)); do\n        if [[ ${a:i:1} != ${b:i:1} ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local diff=$((len1-len2))\n    local count=0\n    if [ $diff -lt 0 ]; then\n        for ((i=0; i<$((-diff)); i++)); do\n            str1=\"0$str1\"\n        done\n    elif [ $diff -gt 0 ]; then\n        for ((i=0; i<$diff; i++)); do\n            str2=\"0$str2\"\n        done\n    fi\n    for ((i=0; i<${#str1}; i++)); do\n        if [ ${str1:i:1} != ${str2:i:1} ]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    if [[ $len1 -ne $len2 ]]; then\n        echo \"The two strings are not equal in length\"\n        return 1\n    fi\n    local count=0\n    for ((i=0; i<$len1; i++)); do\n        if [[ ${str1:$i:1} -ne ${str2:$i:1} ]]; then\n            ((count++))\n        fi\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local num1=\"$1\"\n    local num2=\"$2\"\n    local len1=${#num1}\n    local len2=${#num2}\n    local i\n    local j\n    local count=0\n    local temp\n    local temp1\n    local temp2\n    local temp3\n    local temp4\n    local temp5\n    local temp6\n    local temp7\n    local temp8\n    local temp9\n    local temp10\n    local temp11\n    local temp12\n    local temp13\n    local temp14\n    local temp15\n    local temp16\n    local temp17\n    local temp18\n    local temp19\n    local temp20\n    local temp21\n    local temp22\n    local temp23\n    local temp24\n    local temp25\n    local temp26\n    local temp27\n    local temp28\n    local temp29\n    local temp30\n    local temp31\n    local temp32\n    local temp33\n    local temp34\n    local temp35\n    local temp36\n    local temp37\n    local temp38\n    local temp39\n    local temp40\n    local temp41\n    local temp42\n    local temp43\n    local temp44\n    local temp45\n    local temp46\n    local temp47\n    local temp48\n    local temp49\n    local temp50\n    local temp51\n    local temp52\n    local temp53\n    local temp54\n    local temp55\n    local temp56\n    local temp57\n    local temp58\n    local temp59\n    local temp60\n    local temp61\n    local temp62\n    local temp63\n    local temp64\n    local temp65\n    local temp66\n    local temp67\n    local temp68\n    local temp69\n    local temp70\n    local temp71\n    local temp72\n    local temp73\n    local temp74\n    local temp75\n    local temp76\n    local temp77\n    local temp78\n    local temp79\n    local temp80\n    local temp81\n    local temp82\n    local temp83\n    local temp84\n    local temp85\n    local temp86\n    local temp87\n    local temp88\n    local temp89\n    local temp90\n    local temp\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local len=$((len1<len2?len1:len2))\n  local swaps=0\n  for ((i=0; i<len; i++)); do\n    if [[ ${str1:i:1} != ${str2:i:1} ]]; then\n      ((swaps++))\n    fi\n  done\n  echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local count=0\n    local i=0\n    local len=${#a}\n    while [ $i -lt $len ]\n    do\n        if [ ${a:$i:1} != ${b:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local a=$1\n    local b=$2\n    local len=${#a}\n    local count=0\n    local i=0\n    while [ $i -lt $len ]; do\n        if [ ${a:$i:1} != ${b:$i:1} ]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i count=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    local -i diff=0\n    local -i diff2=0\n    local -i diff3=0\n    local -i diff4=0\n    local -i diff5=0\n    local -i diff6=0\n    local -i diff7=0\n    local -i diff8=0\n    local -i diff9=0\n    local -i diff10=0\n    local -i diff11=0\n    local -i diff12=0\n    local -i diff13=0\n    local -i diff14=0\n    local -i diff15=0\n    local -i diff16=0\n    local -i diff17=0\n    local -i diff18=0\n    local -i diff19=0\n    local -i diff20=0\n    local -i diff21=0\n    local -i diff22=0\n    local -i diff23=0\n    local -i diff24=0\n    local -i diff25=0\n    local -i diff26=0\n    local -i diff27=0\n    local -i diff28=0\n    local -i diff29=0\n    local -i diff30=0\n    local -i diff31=0\n    local -i diff32=0\n    local -i diff33=0\n    local -i diff34=0\n    local -i diff35=0\n    local -i diff36=0\n    local -i diff37=0\n    local -i diff38=0\n    local -i diff39=0\n    local -i diff40=0\n    local -i diff41=0\n    local -i diff42=0\n    local -i diff43=0\n    local -i diff44=0\n    local -i diff45=0\n    local -i diff46=0\n    local -i diff47=0\n    local -i diff48=0\n    local -i diff49=0\n    local -i diff50=0\n    local -i diff51=\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local str1=$1\n  local str2=$2\n  local len1=${#str1}\n  local len2=${#str2}\n  local min_len=$len1\n  local swaps=0\n  if [ $len2 -lt $len1 ]; then\n    min_len=$len2\n  fi\n  for ((i=0; i<$min_len; i++)); do\n    if [ \"${str1:$i:1}\" != \"${str2:$i:1}\" ]; then\n      swaps=$((swaps+1))\n    fi\n  done\n  swaps=$((swaps+abs($len1-$len2)))\n  echo $swaps\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpkvvkm0vx.sh: line 21: swaps+abs(4-4): syntax error in expression (error token is \"(4-4)\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local j=0\n    local count=0\n    if [[ $len1 -ne $len2 ]]; then\n        echo \"Error: Strings are not of equal length\"\n        return 1\n    fi\n    while [[ $i -lt $len1 ]]; do\n        if [[ ${str1:$i:1} -ne ${str2:$i:1} ]]; then\n            j=$i\n            while [[ $j -lt $len1 ]]; do\n                if [[ ${str1:$j:1} -eq ${str2:$i:1} ]]; then\n                    str1=${str1:0:$i}${str1:$j:1}${str1:$((i+1)):$((j-i-1))}${str1:$i:1}${str1:$((j+1))}\n                    ((count++))\n                    break\n                fi\n                ((j++))\n            done\n        fi\n        ((i++))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n\tlocal a=$1\n\tlocal b=$2\n\tlocal len=${#a}\n\tlocal i=0\n\tlocal count=0\n\twhile [ $i -lt $len ]; do\n\t\tif [ ${a:$i:1} != ${b:$i:1} ]; then\n\t\t\tcount=$(( $count + 1 ))\n\t\tfi\n\t\ti=$(( $i + 1 ))\n\tdone\n\techo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n  local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local a=$1\n  local b=$2\n  local count=0\n  local len=${#a}\n  for (( i=0; i<len; i++ )); do\n    if [[ ${a:i:1} != ${b:i:1} ]]; then\n      count=$((count+1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n  local a=\"$1\"\n  local b=\"$2\"\n  local len=\"${#a}\"\n  local count=0\n  for ((i=0; i<len; i++)); do\n    if [[ \"${a:$i:1}\" != \"${b:$i:1}\" ]]; then\n      count=$((count+1))\n    fi\n  done\n  echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i count=0\n    local -i len=${#1}\n    local -i len2=${#2}\n    local -i diff=0\n    local -i diff2=0\n    local -i min=0\n    local -i min2=0\n    local -i min_count=0\n    local -i min_count2=0\n    local -i min_count3=0\n    local -i min_count4=0\n    local -i min_count5=0\n    local -i min_count6=0\n    local -i min_count7=0\n    local -i min_count8=0\n    local -i min_count9=0\n    local -i min_count10=0\n    local -i min_count11=0\n    local -i min_count12=0\n    local -i min_count13=0\n    local -i min_count14=0\n    local -i min_count15=0\n    local -i min_count16=0\n    local -i min_count17=0\n    local -i min_count18=0\n    local -i min_count19=0\n    local -i min_count20=0\n    local -i min_count21=0\n    local -i min_count22=0\n    local -i min_count23=0\n    local -i min_count24=0\n    local -i min_count25=0\n    local -i min_count26=0\n    local -i min_count27=0\n    local -i min_count28=0\n    local -i min_count29=0\n    local -i min_count30=0\n    local -i min_count31=0\n    local -i min_count32=0\n    local -i min_count33=0\n    local -i min_count34=0\n    local -i min_count35=0\n    local -i min_count36=0\n    local -i min_count37=0\n    local -i min_count38=0\n    local -i min_count39=0\n    local\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local str1=$1\n    local str2=$2\n    local len1=${#str1}\n    local len2=${#str2}\n    local i=0\n    local j=0\n    local count=0\n    local tmp=0\n    if [ $len1 -ne $len2 ]; then\n        echo \"The two strings are not equal in length\"\n        return 1\n    fi\n    while [ $i -lt $len1 ]; do\n        if [ ${str1:$i:1} -ne ${str2:$i:1} ]; then\n            j=$i\n            while [ $j -lt $len1 ]; do\n                if [ ${str1:$j:1} -eq ${str2:$i:1} ]; then\n                    tmp=${str1:$i:1}\n                    str1=${str1:0:$i}${str1:$j:1}${str1:$((i+1)):$((j-i-1))}${tmp}${str1:$((j+1)):$((len1-j-1))}\n                    count=$((count+1))\n                    break\n                fi\n                j=$((j+1))\n            done\n        fi\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count minimum number of swaps required to convert one binary number represented as a string to another.\n#\n# $1 is a string\n# $2 is a string\nmin_Swaps() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n}\n\ncandidate() {\n    min_Swaps \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1101\" \"1110\") = \"1\" ]]\n    [[ $(candidate \"111\" \"000\") = \"Not Possible\" ]]\n    [[ $(candidate \"111\" \"110\") = \"Not Possible\" ]]\n}\n\nrun_test",
      "timestamp": 1667191088,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
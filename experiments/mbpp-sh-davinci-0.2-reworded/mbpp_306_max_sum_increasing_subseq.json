{
  "name": "mbpp_306_max_sum_increasing_subseq",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .\n#\n# $1 is a space-separated list\n# $2 is an integer\n# $3 is an integer\n# $4 is an integer\nmax_sum_increasing_subseq() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_306_max_sum_increasing_subseq.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    max_sum_increasing_subseq \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 101 2 3 100 4 5\" \"7\" \"4\" \"6\") = \"11\" ]]\n    [[ $(candidate \"1 101 2 3 100 4 5\" \"7\" \"2\" \"5\") = \"7\" ]]\n    [[ $(candidate \"11 15 19 21 26 28 31\" \"7\" \"2\" \"4\") = \"71\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local -n arr=$1\n  local k=$2\n  local i=$3\n  local n=$4\n  local max_sum=0\n  local sum=0\n  local j=0\n  for (( j=0; j<i; j++ )); do\n    if (( arr[j] < arr[k] )); then\n      sum=$(max_sum_increasing_subseq arr $j $i $n)\n      if (( sum > max_sum )); then\n        max_sum=$sum\n      fi\n    fi\n  done\n  echo $(( max_sum + arr[k] ))",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local n=$4\n    local sum=0\n    local max_sum=0\n    local j=0\n    local max_j=0\n    for ((j=0; j<i; j++))\n    do\n        if [[ ${arr[j]} -lt ${arr[k]} ]]\n        then\n            sum=${arr[j]}\n            sum=$((sum + $(max_sum_increasing_subseq arr k j n)))\n            if [[ $sum -gt $max_sum ]]\n            then\n                max_sum=$sum\n                max_j=$j\n            fi\n        fi\n    done\n    echo $max_sum",
    "    local -a arr=($1)\n    local k=$2\n    local i=$3\n    local j=$4\n    local max=0\n    local sum=0\n    local -a arr_sum\n    for ((j=0; j<=i; j++)); do\n        if [[ ${arr[j]} -lt ${arr[k]} ]]; then\n            if [[ ${arr_sum[j]} -eq 0 ]]; then\n                arr_sum[j]=$(max_sum_increasing_subseq \"$1\" \"$2\" \"$j\" \"$j\")\n            fi\n            sum=$((arr_sum[j] + arr[k]))\n            if [[ $sum -gt $max ]]; then\n                max=$sum\n            fi\n        fi\n    done\n    echo $max",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local n=$4\n    local max_sum=0\n    local sum=0\n    local j=0\n\n    if [ $i -eq 0 ]\n    then\n        max_sum=${arr[$k]}\n    else\n        for ((j=0; j<i; j++))\n        do\n            if [ ${arr[$j]} -lt ${arr[$k]} ]\n            then\n                sum=$(max_sum_increasing_subseq arr $j $((j-1)) $n)\n                if [ $sum -gt $max_sum ]\n                then\n                    max_sum=$sum\n                fi\n            fi\n        done\n        max_sum=$((max_sum + arr[$k]))\n    fi\n    echo $max_sum",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local n=$4\n    local max=0\n    local sum=0\n    for ((j=0; j<i; j++)); do\n        if ((arr[j] < arr[k])); then\n            sum=$(max_sum_increasing_subseq arr[@] j $n)\n            if ((sum > max)); then\n                max=$sum\n            fi\n        fi\n    done\n    echo $((max + arr[k]))",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local n=$4\n    local max_sum=0\n    local sum=0\n    local j=0\n    local k_index=0\n    local k_value=0\n    local k_sum=0\n\n    if [ $i -eq 0 ]; then\n        echo ${arr[0]}\n        return\n    fi\n\n    for (( j=0; j<$i; j++ )); do\n        if [ ${arr[$j]} -lt ${arr[$i]} ]; then\n            sum=$(max_sum_increasing_subseq arr $k $j $n)\n            if [ $sum -gt $max_sum ]; then\n                max_sum=$sum\n            fi\n        fi\n    done\n\n    if [ $k -gt $i ]; then\n        k_index=$(($k-1))\n        k_value=${arr[$k_index]}\n        k_sum=$(max_sum_increasing_subseq arr $k_index $k_index $n)\n        if [ $k_sum -gt $max_sum ]; then\n            max_sum=$k_sum\n        fi\n    fi\n\n    echo $(($max_sum+${arr[$i]}))",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local n=$4\n    local max_sum=0\n    local sum=0\n    for ((j=0; j<i; j++)); do\n        if ((arr[j] < arr[k])); then\n            sum=$(max_sum_increasing_subseq arr j n)\n            if ((sum > max_sum)); then\n                max_sum=$sum\n            fi\n        fi\n    done\n    echo $((max_sum + arr[k]))",
    "    local -n _list=$1\n    local k=$2\n    local i=$3\n    local sum=0\n    local max_sum=0\n    local j=0\n    local n=${#_list[@]}\n    local -a dp\n    for ((j=0; j<n; j++)); do\n        dp[$j]=0\n    done\n    for ((j=0; j<i; j++)); do\n        if ((_list[$j] < _list[$i])) && ((dp[$j] > max_sum)); then\n            max_sum=${dp[$j]}\n        fi\n    done\n    if ((k > i)); then\n        sum=$((max_sum + _list[$i]))\n    else\n        sum=$max_sum\n    fi\n    dp[$i]=$sum\n    echo ${dp[@]}",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local sum=0\n    local max_sum=0\n    local j=0\n    local max_j=0\n    local max_k=0\n    local max_i=0\n\n    if [[ $i -eq 0 ]]; then\n        max_sum=${arr[0]}\n        max_j=0\n        max_k=0\n        max_i=0\n    fi\n\n    for (( j=0; j<i; j++ )); do\n        if [[ ${arr[j]} -lt ${arr[k]} ]]; then\n            sum=$(( ${arr[j]} + ${arr[k]} ))\n            if [[ $sum -gt $max_sum ]]; then\n                max_sum=$sum\n                max_j=$j\n                max_k=$k\n                max_i=$i\n            fi\n        fi\n    done\n\n    echo \"$max_sum $max_j $max_k $max_i\"",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local n=$4\n    local sum=0\n    local max_sum=0\n    local max_sum_k=0\n    local max_sum_i=0\n    local max_sum_n=0\n    local max_sum_k_i=0\n    local max_sum_k_n=0\n    local max_sum_i_n=0\n    local max_sum_k_i_n=0\n\n    for (( j=0; j<i; j++ )); do\n        if (( arr[j] < arr[k] )); then\n            sum=$(max_sum_increasing_subseq arr j i n)\n            if (( sum > max_sum )); then\n                max_sum=$sum\n            fi\n        fi\n    done\n\n    max_sum_k=$(max_sum_increasing_subseq arr k k n)\n    max_sum_i=$(max_sum_increasing_subseq arr i i n)\n    max_sum_n=$(max_sum_increasing_subseq arr n n n)\n    max_sum_k_i=$(max_sum_increasing_subseq arr k i n)\n    max_sum_k_n=$(max_sum_increasing_subseq arr k n n)\n    max_sum_i_n=$(max_sum_increasing_subseq arr i n n)\n    max_sum_k_i_n=$(max_sum_increasing_subseq arr k i n)\n\n    echo $(( max_sum + arr[k] ))",
    "    local -a arr=($1)\n    local k=$2\n    local n=$3\n    local i=$4\n    local max=0\n    local sum=0\n    for ((j=0; j<i; j++)); do\n        if ((arr[j] < arr[k])); then\n            sum=$(max_sum_increasing_subseq \"$1\" $j $n $j)\n            if ((sum > max)); then\n                max=$sum\n            fi\n        fi\n    done\n    echo $((max + arr[k]))",
    "    local -a arr=($1)\n    local k=$2\n    local i=$3\n    local j=$4\n    local -i max_sum=0\n    local -i sum=0\n    local -i max_sum_k=0\n    local -i sum_k=0\n    local -i max_sum_i=0\n    local -i sum_i=0\n    local -i max_sum_j=0\n    local -i sum_j=0\n\n    if [ $i -eq $k ]; then\n        max_sum_k=${arr[$i]}\n    else\n        for ((j=i+1; j<=k; j++)); do\n            sum_k=${arr[$j]}\n            max_sum_j=$(max_sum_increasing_subseq \"$1\" $k $j $j)\n            sum_k=$((sum_k + max_sum_j))\n            if [ $sum_k -gt $max_sum_k ]; then\n                max_sum_k=$sum_k\n            fi\n        done\n    fi\n\n    if [ $i -eq 0 ]; then\n        max_sum_i=${arr[$i]}\n    else\n        for ((j=0; j<i; j++)); do\n            sum_i=${arr[$j]}\n            max_sum_j=$(max_sum_increasing_subseq \"$1\" $k $j $j)\n            sum_i=$((sum_i + max_sum_j))\n            if [ $sum_i -gt $max_sum_i ]; then\n                max_sum_i=$sum_i\n            fi\n        done\n    fi\n\n    max_sum=$((max_sum_k + max_sum_i))\n    echo $max_sum",
    "  local -a A=($1)\n  local k=$2\n  local i=$3\n  local j=$4\n  local sum=0\n  local max_sum=0\n  local max_j=0\n  for ((j=i+1; j<=k; j++)); do\n    if ((A[j] > A[i])); then\n      sum=$(max_sum_increasing_subseq \"${A[*]}\" $k $j $j)\n      if ((sum > max_sum)); then\n        max_sum=$sum\n        max_j=$j\n      fi\n    fi\n  done\n  echo $((A[i] + max_sum))",
    "  local -n arr=$1\n  local k=$2\n  local i=$3\n  local n=$4\n  local max=0\n  local sum=0\n  for ((j=0; j<i; j++)); do\n    if ((arr[j] < arr[k])); then\n      sum=$(max_sum_increasing_subseq arr j n)\n      if ((sum > max)); then\n        max=$sum\n      fi\n    fi\n  done\n  echo $((max + arr[k]))",
    "  local -a arr=(\"${!1}\")\n  local k=$2\n  local i=$3\n  local j=$4\n  local max=0\n  local sum=0\n  for (( ; j < k; j++ )); do\n    if (( arr[j] < arr[k] )); then\n      sum=$(max_sum_increasing_subseq arr[@] k j)\n      if (( sum > max )); then\n        max=$sum\n      fi\n    fi\n  done\n  echo $(( max + arr[k] ))",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local n=$4\n    local max_sum=0\n    local sum=0\n    for ((j=0; j<i; j++)); do\n        if ((arr[j] < arr[k])); then\n            sum=$(max_sum_increasing_subseq arr j n)\n            if ((sum > max_sum)); then\n                max_sum=$sum\n            fi\n        fi\n    done\n    echo $((max_sum + arr[k]))",
    "    local -a arr=(\"$@\")\n    local k=$2\n    local i=$3\n    local n=$4\n    local max=0\n    local sum=0\n    local j=0\n    for ((j=0; j<i; j++)); do\n        if ((arr[j] < arr[k])); then\n            sum=$(max_sum_increasing_subseq \"${arr[@]}\" $j $j $n)\n            if ((sum > max)); then\n                max=$sum\n            fi\n        fi\n    done\n    echo $((max + arr[k]))",
    "  local -a arr=(\"${!1}\")\n  local k=$2\n  local i=$3\n  local sum=0\n  local max_sum=0\n  local max_sum_index=0\n  local j=0\n\n  for ((j=0; j<i; j++)); do\n    if [[ ${arr[j]} -lt ${arr[k]} ]]; then\n      sum=$((sum + arr[j]))\n      if [[ $sum -gt $max_sum ]]; then\n        max_sum=$sum\n        max_sum_index=$j\n      fi\n    fi\n  done\n\n  if [[ $max_sum -gt 0 ]]; then\n    echo $max_sum_index\n  else\n    echo -1\n  fi",
    "    local -n arr=$1\n    local k=$2\n    local i=$3\n    local n=$4\n    local max_sum=0\n    local sum=0\n    local j=0\n    for (( j=0; j<i; j++ )); do\n        if (( arr[j] < arr[k] )); then\n            sum=$(max_sum_increasing_subseq arr k j n)\n            if (( sum > max_sum )); then\n                max_sum=$sum\n            fi\n        fi\n    done\n    echo $(( max_sum + arr[k] ))",
    "  local -n arr=$1\n  local k=$2\n  local i=$3\n  local n=$4\n  local max=0\n  local sum=0\n  for ((j=0; j<i; j++)); do\n    if ((arr[j] < arr[k])); then\n      sum=$(max_sum_increasing_subseq arr j n)\n      if ((sum > max)); then\n        max=$sum\n      fi\n    fi\n  done\n  echo $((max + arr[k]))"
  ]
}
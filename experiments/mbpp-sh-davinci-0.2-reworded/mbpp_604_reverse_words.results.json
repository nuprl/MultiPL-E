{
  "name": "mbpp_604_reverse_words",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_604_reverse_words.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local -a words\n    local i\n    local -i len\n    local -i j\n\n    words=($1)\n    len=${#words[@]}\n    for ((i=0; i<len/2; i++)); do\n        j=$((len-i-1))\n        tmp=${words[i]}\n        words[i]=${words[j]}\n        words[j]=$tmp\n    done\n    echo \"${words[*]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local words=($1)\n    local reversed_words=()\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        reversed_words+=(${words[i]})\n    done\n    echo ${reversed_words[@]}\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local i=0\n  local word=\"\"\n  while read -r -n 1 char; do\n    if [[ \"$char\" == \" \" ]]; then\n      words[$i]=\"$word\"\n      word=\"\"\n      ((i++))\n    else\n      word=\"$word$char\"\n    fi\n  done <<< \"$str\"\n  words[$i]=\"$word\"\n  ((i++))\n  for ((j=$i-1; j>=0; j--)); do\n    echo -n \"${words[$j]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word=''\n  local i=0\n  local j=0\n  local k=0\n  local len=0\n  local len_word=0\n  local len_string=0\n  local result=''\n  local char=''\n\n  # Split string into words\n  len_string=${#string}\n  for ((i=0; i<len_string; i++)); do\n    char=\"${string:$i:1}\"\n    if [[ \"$char\" == ' ' ]]; then\n      words+=(\"$word\")\n      word=''\n    else\n      word+=\"$char\"\n    fi\n  done\n  words+=(\"$word\")\n\n  # Reverse words\n  len=${#words[@]}\n  for ((i=0; i<len; i++)); do\n    word=\"${words[$i]}\"\n    len_word=${#word}\n    for ((j=0; j<len_word; j++)); do\n      char=\"${word:$j:1}\"\n      result=\"$char$result\"\n    done\n    if [[ $i -lt $((len - 1)) ]]; then\n      result+=' '\n    fi\n  done\n\n  echo \"$result\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word\n  local i\n  local j\n\n  # Split string into words\n  while read -r word; do\n    words+=(\"$word\")\n  done < <(echo \"$string\")\n\n  # Reverse words\n  for ((i = 0; i < ${#words[@]}; i++)); do\n    for ((j = i; j < ${#words[@]}; j++)); do\n      if [[ \"${words[i]}\" < \"${words[j]}\" ]]; then\n        word=\"${words[i]}\"\n        words[i]=\"${words[j]}\"\n        words[j]=\"$word\"\n      fi\n    done\n  done\n\n  # Print reversed words\n  for word in \"${words[@]}\"; do\n    echo -n \"$word \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word\n  local i\n  local j\n\n  # Split string into words\n  while read -r word; do\n    words+=(\"$word\")\n  done <<< \"$string\"\n\n  # Reverse words\n  for ((i = 0, j = ${#words[@]} - 1; i < j; i++, j--)); do\n    word=\"${words[$i]}\"\n    words[$i]=\"${words[$j]}\"\n    words[$j]=\"$word\"\n  done\n\n  # Join words\n  echo \"${words[*]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=()\n    local i=0\n\n    # Split string into words\n    for word in $string; do\n        words[$i]=\"$word\"\n        ((i++))\n    done\n\n    # Reverse words\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[$i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word=''\n  local i=0\n  local len=${#string}\n  local c=''\n\n  while [ $i -lt $len ]; do\n    c=${string:$i:1}\n    if [ \"$c\" == ' ' ]; then\n      words+=(\"$word\")\n      word=''\n    else\n      word+=\"$c\"\n    fi\n    i=$((i + 1))\n  done\n  words+=(\"$word\")\n\n  local reversed=''\n  for ((i = ${#words[@]} - 1; i >= 0; i--)); do\n    reversed+=\"${words[$i]} \"\n  done\n  echo \"${reversed% }\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=()\n    local word=''\n    local i=0\n    local j=0\n\n    # split string into words\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} == ' ' ]]; then\n            words+=(\"$word\")\n            word=''\n        else\n            word+=\"${string:$i:1}\"\n        fi\n    done\n    words+=(\"$word\")\n\n    # reverse words\n    for (( i=0, j=${#words[@]}-1; i<j; i++, j-- )); do\n        local tmp=\"${words[$i]}\"\n        words[$i]=\"${words[$j]}\"\n        words[$j]=\"$tmp\"\n    done\n\n    # join words\n    local result=''\n    for (( i=0; i<${#words[@]}; i++ )); do\n        result+=\"${words[$i]}\"\n        if (( i < ${#words[@]}-1 )); then\n            result+=' '\n        fi\n    done\n\n    echo \"$result\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local words=($1)\n    local reversed=()\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        reversed+=(\"${words[i]}\")\n    done\n    echo \"${reversed[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local out=\"\"\n  local word=\"\"\n  local i=0\n  local j=0\n  local len=${#str}\n\n  for ((i=0; i<len; i++)); do\n    if [[ \"${str:$i:1}\" == \" \" ]]; then\n      if [[ \"$word\" != \"\" ]]; then\n        out=\"$word $out\"\n        word=\"\"\n      fi\n    else\n      word=\"$word${str:$i:1}\"\n    fi\n  done\n  if [[ \"$word\" != \"\" ]]; then\n    out=\"$word $out\"\n  fi\n  echo \"$out\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local words=()\n  local word\n  for word in $1; do\n    words=($word ${words[@]})\n  done\n  echo ${words[@]}\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=$1\n  local words=()\n  local i=0\n\n  # Split string into words\n  while read -r word; do\n    words[i++]=$word\n  done <<< \"$str\"\n\n  # Reverse words\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=$1\n  local words=($str)\n  local i=0\n  local j=$(( ${#words[@]} - 1 ))\n  local tmp\n  while (( i < j )); do\n    tmp=${words[i]}\n    words[i]=${words[j]}\n    words[j]=$tmp\n    (( i++ ))\n    (( j-- ))\n  done\n  echo \"${words[*]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local rev_str=\"\"\n    local word=\"\"\n    local i=0\n    local len=${#str}\n\n    for ((i=len-1; i>=0; i--)); do\n        if [ \"${str:$i:1}\" != \" \" ]; then\n            word=\"${str:$i:1}$word\"\n        else\n            rev_str=\"$rev_str $word\"\n            word=\"\"\n        fi\n    done\n    rev_str=\"$rev_str $word\"\n    echo \"$rev_str\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local i=0\n    local j=0\n\n    # Split the string into words\n    for word in $str; do\n        words[$i]=$word\n        ((i++))\n    done\n\n    # Reverse the words\n    for ((j=${#words[@]}-1; j>=0; j--)); do\n        echo -n \"${words[$j]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=$1\n    local words=()\n    local word=''\n    local i=0\n    local j=0\n    local len=${#str}\n    for ((i=0; i<len; i++)); do\n        if [[ ${str:$i:1} == ' ' ]]; then\n            words[$j]=$word\n            word=''\n            ((j++))\n        else\n            word=\"$word${str:$i:1}\"\n        fi\n    done\n    words[$j]=$word\n    local reversed=''\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        reversed=\"$reversed${words[$i]} \"\n    done\n    echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=$1\n    local rev_str=\"\"\n    local word=\"\"\n    local i=0\n    local j=0\n    local len=${#str}\n    for (( i = len - 1; i >= 0; i-- )); do\n        if [ \"${str:$i:1}\" == \" \" ]; then\n            rev_str=\"$rev_str$word \"\n            word=\"\"\n        else\n            word=\"${str:$i:1}$word\"\n        fi\n    done\n    rev_str=\"$rev_str$word\"\n    echo \"$rev_str\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  echo \"$1\" | awk '{for (i=NF; i>1; i--) printf(\"%s \",$i); print $1;}'\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local i=0\n\n  # Split the string into an array of words\n  while IFS= read -r word; do\n    words[i++]=\"$word\"\n  done <<< \"$str\"\n\n  # Print the array in reverse order\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local words=$1\n    local reversed=\"\"\n    for word in $words; do\n        reversed=\"$word $reversed\"\n    done\n    echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=$1\n    local result=\"\"\n    local word=\"\"\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} == \" \" ]]; then\n            result=\"$word $result\"\n            word=\"\"\n        else\n            word=\"$word${str:$i:1}\"\n        fi\n    done\n    echo \"$word $result\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  echo \"$1\" | awk '{for (i=NF; i>1; i--) printf(\"%s \",$i); print $1}'\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local rev=\"\"\n  local word=\"\"\n  local i=0\n  local len=${#str}\n\n  while [ $i -lt $len ]; do\n    if [ \"${str:$i:1}\" == \" \" ]; then\n      rev=\"$word $rev\"\n      word=\"\"\n    else\n      word=\"$word${str:$i:1}\"\n    fi\n    i=$((i+1))\n  done\n  rev=\"$word $rev\"\n  echo \"$rev\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=($str)\n    local i=0\n    local j=${#words[@]}\n    local tmp\n    while [ $i -lt $j ]; do\n        tmp=${words[$i]}\n        words[$i]=${words[$j]}\n        words[$j]=$tmp\n        ((i++))\n        ((j--))\n    done\n    echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local words=($1)\n  local reversed=()\n  for ((i=${#words[@]}-1; i>=0; i--))\n  do\n    reversed+=(\"${words[i]}\")\n  done\n  echo \"${reversed[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word\n  while read -r word; do\n    words+=(\"$word\")\n  done <<< \"$str\"\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local i=0\n  local j=0\n  local word=\"\"\n  local reversed=\"\"\n\n  # Split the string into words\n  while read -r -d ' ' word; do\n    words[i]=\"$word\"\n    ((i++))\n  done <<< \"$str\"\n\n  # Reverse the array of words\n  for ((j=${#words[@]}-1; j>=0; j--)); do\n    reversed=\"$reversed${words[j]} \"\n  done\n\n  # Remove the trailing space\n  reversed=\"${reversed% }\"\n\n  echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=()\n    local word=''\n    local i=0\n\n    while [ $i -lt ${#string} ]; do\n        if [ \"${string:$i:1}\" != ' ' ]; then\n            word=\"$word${string:$i:1}\"\n        else\n            words+=(\"$word\")\n            word=''\n        fi\n        ((i++))\n    done\n    words+=(\"$word\")\n\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[$i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local word=''\n    local i=0\n    local j=0\n    local len=0\n    local len_str=0\n\n    len_str=${#str}\n    for ((i=0; i<len_str; i++)); do\n        if [[ \"${str:$i:1}\" == ' ' ]]; then\n            words[$j]=\"$word\"\n            word=''\n            ((j++))\n        else\n            word=\"$word${str:$i:1}\"\n        fi\n    done\n    words[$j]=\"$word\"\n\n    len=${#words[@]}\n    for ((i=len-1; i>=0; i--)); do\n        echo -n \"${words[$i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local i=0\n  local word=\"\"\n  local reversed=\"\"\n\n  # Split the string into an array of words\n  while read -r word; do\n    words[i++]=\"$word\"\n  done <<< \"$str\"\n\n  # Reverse the array\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    reversed=\"$reversed ${words[i]}\"\n  done\n\n  # Trim leading space\n  reversed=\"${reversed:1}\"\n\n  echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=$1\n    local words=()\n    local word=''\n    local i=0\n\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} == ' ' ]]; then\n            words+=($word)\n            word=''\n        else\n            word+=\"${str:$i:1}\"\n        fi\n    done\n\n    words+=($word)\n\n    for (( i=${#words[@]}-1; i>=0; i-- )); do\n        echo -n \"${words[$i]} \"\n    done\n\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=$1\n    local words=($string)\n    local reversed_words=()\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        reversed_words+=(${words[$i]})\n    done\n    echo ${reversed_words[@]}\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=$1\n  local words=($str)\n  local i=0\n  local j=0\n  local temp=''\n  local len=${#words[@]}\n  for ((i=0; i<len/2; i++)); do\n    j=$((len-i-1))\n    temp=${words[i]}\n    words[i]=${words[j]}\n    words[j]=$temp\n  done\n  echo ${words[@]}\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local -a words\n    local -i i\n    local -i j\n    local -i len\n    local -i word_count\n\n    words=($1)\n    word_count=${#words[@]}\n    for ((i=0; i<word_count/2; i++)); do\n        j=$((word_count-i-1))\n        len=${#words[i]}\n        words[i]=${words[j]:0:len}${words[i]:len}\n        words[j]=${words[i]:0:len}${words[j]:len}\n    done\n    echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local i=0\n    local j=0\n    local len=0\n    local tmp=''\n\n    # Split string into words\n    for word in $str; do\n        words[$i]=\"$word\"\n        ((i++))\n    done\n\n    # Reverse words\n    len=${#words[@]}\n    for ((i=0; i<len/2; i++)); do\n        tmp=\"${words[$i]}\"\n        words[$i]=\"${words[$((len-i-1))]}\"\n        words[$((len-i-1))]=\"$tmp\"\n    done\n\n    # Print words\n    for ((i=0; i<len; i++)); do\n        echo -n \"${words[$i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  echo \"$1\" | awk '{for(i=NF;i>1;i--) printf $i\" \"; print $1}'\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local words=()\n  local word=''\n  local i=0\n  local c=''\n\n  for ((i=0; i<${#1}; i++)); do\n    c=${1:$i:1}\n    if [[ $c == ' ' ]]; then\n      words+=($word)\n      word=''\n    else\n      word+=$c\n    fi\n  done\n  words+=($word)\n\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local word=\"\"\n    local i=0\n    local c=\"\"\n\n    for ((i=0; i<${#str}; i++)); do\n        c=\"${str:$i:1}\"\n        if [ \"$c\" == \" \" ]; then\n            words+=(\"$word\")\n            word=\"\"\n        else\n            word+=\"$c\"\n        fi\n    done\n    words+=(\"$word\")\n\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[$i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local -a words\n  local -i i\n  local -i j\n  local -i len\n  local -i word_count\n  local -i word_len\n  local -i word_start\n  local -i word_end\n\n  words=(\"$@\")\n  len=${#words[@]}\n  word_count=0\n  word_len=0\n  word_start=0\n  word_end=0\n\n  for (( i=0; i<len; i++ )); do\n    if [[ ${words[$i]} == \" \" ]]; then\n      word_count=$((word_count+1))\n      word_end=$((i-1))\n      word_len=$((word_end-word_start+1))\n      for (( j=0; j<word_len/2; j++ )); do\n        tmp=${words[$((word_start+j))]}\n        words[$((word_start+j))]=${words[$((word_end-j))]}\n        words[$((word_end-j))]=$tmp\n      done\n      word_start=$((i+1))\n    fi\n  done\n\n  word_count=$((word_count+1))\n  word_end=$((i-1))\n  word_len=$((word_end-word_start+1))\n  for (( j=0; j<word_len/2; j++ )); do\n    tmp=${words[$((word_start+j))]}\n    words[$((word_start+j))]=${words[$((word_end-j))]}\n    words[$((word_end-j))]=$tmp\n  done\n\n  for (( i=0; i<word_count/2; i++ )); do\n    tmp=${words[$i]}\n    words[$i]=${words[$((word_count-i-1))]}\n    words[$((word_count-i-1))]=$tmp\n  done\n\n  echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n\n  while read -n1 char; do\n    if [ \"$char\" == \" \" ]; then\n      words[i]=\"$word\"\n      word=\"\"\n      i=$((i+1))\n    else\n      word=\"$word$char\"\n    fi\n  done <<< \"$str\"\n\n  if [ -n \"$word\" ]; then\n    words[i]=\"$word\"\n  fi\n\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=$1\n  local words=()\n  local i=0\n  local word=\"\"\n  local c=\"\"\n  local len=${#str}\n\n  for ((i=0; i<len; i++)); do\n    c=${str:$i:1}\n    if [[ \"$c\" == \" \" ]]; then\n      words+=(\"$word\")\n      word=\"\"\n    else\n      word=\"$word$c\"\n    fi\n  done\n  words+=(\"$word\")\n\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[$i]}\"\n    if [[ $i -gt 0 ]]; then\n      echo -n \" \"\n    fi\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local -a words\n  local i=0\n\n  # Split string into words\n  while read -r word; do\n    words[$i]=\"$word\"\n    ((i++))\n  done <<< \"$str\"\n\n  # Reverse words\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n\tlocal -a words\n\tlocal -i i=0\n\tlocal -i j=0\n\tlocal -i len=0\n\tlocal -i word_count=0\n\tlocal -i word_len=0\n\tlocal -i word_start=0\n\tlocal -i word_end=0\n\tlocal -i word_index=0\n\tlocal -i word_index_end=0\n\tlocal -i word_index_start=0\n\tlocal -i word_index_len=0\n\tlocal -i word_index_len_end=0\n\tlocal -i word_index_len_start=0\n\tlocal -i word_index_len_start_end=0\n\tlocal -i word_index_len_start_end_end=0\n\tlocal -i word_index_len_start_end_end_end=0\n\tlocal -i word_index_len_start_end_end_end_end=0\n\tlocal -i word_index_len_start_end_end_end_end_end=0\n\tlocal -i word_index_len_start_end_end_end_end_end_end=0\n\tlocal -i word_index_len_start_end_end_end_end_end_end_end=0\n\tlocal -i word_index_len_start_end_end_end_end_end_end_end_end=0\n\tlocal -i word_index_len_start_end_end_end_end_end_end_end_end_end=0\n\tlocal -i word_index_len_start_end_end_end_end_end_end_end_end_end_end=0\n\tlocal -i word_index_len_start_end_end_end_end_end_end_end_end_end_end_end=0\n\tlocal -i word_index_len_start_end_end_end_end_end_end_end_end_end_end_end_end=0\n\tlocal -i word_index_len_start_end_end_end_end_end_end_end_end_end_end_end_end_end=0\n\tlocal -\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local rev_str=\"\"\n  local word=\"\"\n  local i=0\n\n  while [ $i -lt ${#str} ]; do\n    if [ \"${str:$i:1}\" = \" \" ]; then\n      rev_str=\"$word $rev_str\"\n      word=\"\"\n    else\n      word=\"$word${str:$i:1}\"\n    fi\n    i=$((i+1))\n  done\n  rev_str=\"$word $rev_str\"\n  echo \"$rev_str\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=$1\n  local words=()\n  local i=0\n  for word in $string; do\n    words[$i]=$word\n    ((i++))\n  done\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local -a words\n    local -i i\n    local -i j\n    local -i len\n\n    words=($1)\n    len=${#words[@]}\n    for ((i=0, j=len-1; i<j; i++, j--)); do\n        tmp=${words[i]}\n        words[i]=${words[j]}\n        words[j]=$tmp\n    done\n    echo ${words[@]}\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local arr=()\n    local i=0\n    local j=0\n    local len=0\n\n    # Split the string into an array of words\n    IFS=' ' read -ra arr <<< \"$str\"\n\n    # Get the length of the array\n    len=${#arr[@]}\n\n    # Iterate through the array and swap the words\n    for ((i=0; i<len/2; i++)); do\n        j=$((len-i-1))\n        tmp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$tmp\n    done\n\n    # Join the array back into a string\n    str=$(IFS=' '; echo \"${arr[*]}\")\n\n    echo \"$str\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local rev_str=\"\"\n    local word=\"\"\n    local i=0\n    local j=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:1}\" == \" \" ]; then\n            rev_str=\"$word $rev_str\"\n            word=\"\"\n        else\n            word=\"$word${str:$i:1}\"\n        fi\n        i=$((i+1))\n    done\n    rev_str=\"$word $rev_str\"\n    echo \"$rev_str\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    echo \"$1\" | awk '{for(i=NF;i>1;i--) printf $i\" \"; print $1}'\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local words=()\n  local word\n  for word in $1; do\n    words=(\"$word\" \"${words[@]}\")\n  done\n  echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local rev_str=\"\"\n    local word=\"\"\n    local i=0\n    local j=0\n    local len=0\n\n    len=${#str}\n    for ((i=len-1; i>=0; i--)); do\n        if [[ ${str:$i:1} == \" \" ]]; then\n            rev_str=\"$rev_str$word \"\n            word=\"\"\n        else\n            word=\"${str:$i:1}$word\"\n        fi\n    done\n    rev_str=\"$rev_str$word\"\n\n    echo \"$rev_str\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local result=\"\"\n  local word=\"\"\n\n  while [ -n \"$string\" ]; do\n    word=\"${string%% *}\"\n    string=\"${string#* }\"\n    result=\"$word $result\"\n  done\n\n  echo \"$result\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191109,
      "stdout": "<_io.BufferedReader name=5>",
      "stderr": "<_io.BufferedReader name=12>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=$1\n    local words=()\n    local word=''\n    local i=0\n    local j=0\n    local len=${#str}\n    local char=''\n\n    for ((i=0; i<len; i++)); do\n        char=${str:$i:1}\n        if [[ $char == ' ' ]]; then\n            words[$j]=$word\n            j=$((j+1))\n            word=''\n        else\n            word=$word$char\n        fi\n    done\n\n    words[$j]=$word\n    j=$((j+1))\n\n    for ((i=j-1; i>=0; i--)); do\n        echo -n \"${words[$i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n  local j=0\n  local k=0\n\n  for ((i=0; i<${#string}; i++)); do\n    if [[ ${string:$i:1} == \" \" ]]; then\n      words[$j]=\"$word\"\n      word=\"\"\n      ((j++))\n    else\n      word=\"$word${string:$i:1}\"\n    fi\n  done\n  words[$j]=\"$word\"\n\n  for ((k=${#words[@]}-1; k>=0; k--)); do\n    echo -n \"${words[$k]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local i=0\n  local j=0\n  local len=0\n  local tmp=''\n\n  # Split string into words\n  while read -r -d ' '; do\n    words[i++]=\"$REPLY\"\n  done <<< \"$str\"\n\n  # Reverse words\n  len=${#words[@]}\n  for ((i=0; i<len/2; i++)); do\n    j=$((len-i-1))\n    tmp=\"${words[i]}\"\n    words[i]=\"${words[j]}\"\n    words[j]=\"$tmp\"\n  done\n\n  # Join words\n  echo \"${words[*]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=$1\n    local result=''\n    local word=''\n    local i=0\n    local j=0\n    local len=${#str}\n\n    for ((i=0; i<len; i++)); do\n        if [[ ${str:$i:1} == ' ' ]]; then\n            if [[ $word != '' ]]; then\n                result=\"$word $result\"\n                word=''\n            fi\n        else\n            word=\"$word${str:$i:1}\"\n        fi\n    done\n    if [[ $word != '' ]]; then\n        result=\"$word $result\"\n    fi\n    echo $result\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=($string)\n    local reversed_words=()\n    local word\n    for word in \"${words[@]}\"; do\n        reversed_words=($word \"${reversed_words[@]}\")\n    done\n    echo \"${reversed_words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=($str)\n  local reversed_words=()\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    reversed_words+=(\"${words[i]}\")\n  done\n  echo \"${reversed_words[*]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=()\n    local word\n    while read -r word; do\n        words+=(\"$word\")\n    done <<< \"$string\"\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local i=0\n  local word=\"\"\n  local char=\"\"\n  local reversed=\"\"\n\n  # split string into words\n  while [ \"${str:$i:1}\" != \"\" ]; do\n    char=\"${str:$i:1}\"\n    if [ \"$char\" != \" \" ]; then\n      word=\"$word$char\"\n    else\n      words+=(\"$word\")\n      word=\"\"\n    fi\n    i=$((i+1))\n  done\n  words+=(\"$word\")\n\n  # reverse words\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    reversed=\"$reversed${words[$i]} \"\n  done\n\n  echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local i=0\n  local word=\"\"\n  local reversed=\"\"\n  while [ \"$i\" -lt \"${#str}\" ]; do\n    if [ \"${str:$i:1}\" == \" \" ]; then\n      words+=(\"$word\")\n      word=\"\"\n    else\n      word=\"$word${str:$i:1}\"\n    fi\n    i=$((i+1))\n  done\n  words+=(\"$word\")\n  for word in \"${words[@]}\"; do\n    reversed=\"$word $reversed\"\n  done\n  echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=()\n    local word\n    local i=0\n    local j=0\n\n    # Split the string into words\n    for word in $string; do\n        words[$i]=$word\n        i=$((i + 1))\n    done\n\n    # Reverse the words\n    for ((j = i - 1; j >= 0; j--)); do\n        echo -n \"${words[$j]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    echo $1 | awk '{for(i=NF;i>=1;i--) printf(\"%s \",$i);}'\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local words=($1)\n  local reversed_words=()\n  local i=0\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    reversed_words+=(${words[$i]})\n  done\n  echo \"${reversed_words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local rev_str=\"\"\n  local word=\"\"\n\n  for word in $str; do\n    rev_str=\"$word $rev_str\"\n  done\n\n  echo \"$rev_str\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n  local j=0\n  local len=0\n  local len_str=0\n  local len_words=0\n\n  len_str=${#str}\n  for ((i=0; i<len_str; i++)); do\n    if [[ \"${str:$i:1}\" == \" \" ]]; then\n      words+=(\"$word\")\n      word=\"\"\n    else\n      word=\"$word${str:$i:1}\"\n    fi\n  done\n  words+=(\"$word\")\n\n  len_words=${#words[@]}\n  for ((i=len_words-1; i>=0; i--)); do\n    len=${#words[$i]}\n    for ((j=0; j<len; j++)); do\n      echo -n \"${words[$i]:$j:1}\"\n    done\n    if [[ $i -gt 0 ]]; then\n      echo -n \" \"\n    fi\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word=''\n  local i=0\n  local len=${#str}\n  while [ $i -lt $len ]; do\n    if [ \"${str:$i:1}\" == ' ' ]; then\n      words+=( \"$word\" )\n      word=''\n    else\n      word=\"$word${str:$i:1}\"\n    fi\n    ((i++))\n  done\n  words+=( \"$word\" )\n  echo \"${words[@]}\" | tr ' ' '\\n' | tac | tr '\\n' ' '\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local -a words\n    local -a reversed\n\n    words=($str)\n    for (( i = ${#words[@]} - 1; i >= 0; i-- )); do\n        reversed+=(\"${words[i]}\")\n    done\n\n    echo \"${reversed[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local words=(\"$@\")\n  local reversed_words=()\n  local i=0\n\n  for ((i = ${#words[@]} - 1; i >= 0; i--)); do\n    reversed_words+=(\"${words[$i]}\")\n  done\n\n  echo \"${reversed_words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local i=0\n\n    # Split string into words\n    while read -r word; do\n        words[i++]=\"$word\"\n    done < <(echo \"$str\")\n\n    # Print words in reverse order\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=$1\n    local words=($string)\n    local reversed=()\n\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        reversed+=(\"${words[i]}\")\n    done\n\n    echo \"${reversed[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=$1\n  local words=()\n  local i=0\n  local word=\"\"\n  local c=\"\"\n\n  for ((i=0; i<${#str}; i++)); do\n    c=${str:$i:1}\n    if [ \"$c\" == \" \" ]; then\n      words+=($word)\n      word=\"\"\n    else\n      word+=$c\n    fi\n  done\n  words+=($word)\n\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=$1\n  local words=()\n  local i=0\n  for word in $str; do\n    words[i]=$word\n    ((i++))\n  done\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=$1\n  local words=()\n  local word=''\n  local i=0\n  local j=0\n  local c=''\n\n  # Split string into words\n  for (( i=0; i<${#string}; i++ )); do\n    c=${string:$i:1}\n    if [[ $c == ' ' ]]; then\n      words[$j]=$word\n      word=''\n      (( j++ ))\n    else\n      word+=$c\n    fi\n  done\n  words[$j]=$word\n\n  # Reverse words\n  for (( i=${#words[@]}-1; i>=0; i-- )); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n  local j=0\n  local len=0\n  local char=\"\"\n\n  # Split string into words\n  while [ $i -lt ${#string} ]; do\n    char=${string:$i:1}\n    if [ \"$char\" == \" \" ]; then\n      words[$j]=\"$word\"\n      word=\"\"\n      j=$((j+1))\n    else\n      word=\"$word$char\"\n    fi\n    i=$((i+1))\n  done\n  words[$j]=\"$word\"\n\n  # Reverse words\n  len=$((j+1))\n  i=0\n  j=$((len-1))\n  while [ $i -lt $j ]; do\n    word=${words[$i]}\n    words[$i]=${words[$j]}\n    words[$j]=$word\n    i=$((i+1))\n    j=$((j-1))\n  done\n\n  # Print words\n  for word in \"${words[@]}\"; do\n    echo -n \"$word \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  echo \"$1\" | awk '{for(i=NF;i>=1;i--) printf $i\" \"; print \"\"}'\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=()\n    local word\n    local i=0\n    while read -r word; do\n        words[i]=\"$word\"\n        ((i++))\n    done <<< \"$string\"\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local word\n    while read -r word; do\n        words+=(\"$word\")\n    done <<< \"$str\"\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local word=\"\"\n    local i=0\n    local len=0\n\n    # Split the string into words\n    while read -n 1 char; do\n        if [[ \"$char\" == \" \" ]]; then\n            words[$i]=\"$word\"\n            word=\"\"\n            i=$((i+1))\n        else\n            word=\"$word$char\"\n        fi\n    done <<< \"$str\"\n    words[$i]=\"$word\"\n\n    # Print the words in reverse order\n    len=$i\n    for (( i=$len; i>=0; i-- )); do\n        echo -n \"${words[$i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local words=()\n    local word\n    local i=0\n    for word in $1; do\n        words[$i]=$word\n        i=$((i+1))\n    done\n    i=$((i-1))\n    while [ $i -ge 0 ]; do\n        echo -n \"${words[$i]} \"\n        i=$((i-1))\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word\n  while read -r word; do\n    words+=(\"$word\")\n  done <<< \"$str\"\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    # Split the string into an array of words\n    local words=($1)\n    # Reverse the array\n    local reversed_words=($(echo ${words[*]} | rev))\n    # Print the reversed array\n    echo ${reversed_words[*]}\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word=''\n  local i=0\n  local j=0\n  local len=0\n  local len_string=0\n  local len_word=0\n  local reversed_string=''\n\n  len_string=${#string}\n  for (( i = 0; i < len_string; i++ )); do\n    if [[ \"${string:$i:1}\" == ' ' ]]; then\n      words[$j]=\"$word\"\n      word=''\n      (( j++ ))\n    else\n      word=\"$word${string:$i:1}\"\n    fi\n  done\n  words[$j]=\"$word\"\n\n  len=${#words[@]}\n  for (( i = len - 1; i >= 0; i-- )); do\n    reversed_string=\"$reversed_string${words[$i]} \"\n  done\n\n  echo \"$reversed_string\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local rev_str=\"\"\n  local word=\"\"\n  local i=0\n\n  for ((i=${#str}; i>=0; i--)); do\n    if [[ \"${str:i:1}\" == \" \" ]]; then\n      rev_str=\"$rev_str$word \"\n      word=\"\"\n    else\n      word=\"${str:i:1}$word\"\n    fi\n  done\n\n  echo \"$rev_str$word\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local result=\"\"\n    local word=\"\"\n    local i=0\n    local j=0\n    local len=${#str}\n    for ((i=0; i<len; i++)); do\n        if [[ \"${str:i:1}\" == \" \" ]]; then\n            for ((j=i-1; j>=0; j--)); do\n                if [[ \"${str:j:1}\" == \" \" ]]; then\n                    break\n                fi\n                word=\"$word${str:j:1}\"\n            done\n            result=\"$result $word\"\n            word=\"\"\n        fi\n    done\n    for ((j=i-1; j>=0; j--)); do\n        if [[ \"${str:j:1}\" == \" \" ]]; then\n            break\n        fi\n        word=\"$word${str:j:1}\"\n    done\n    result=\"$result $word\"\n    echo \"$result\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local word\n    local i=0\n    while read -r word; do\n        words[i++]=\"$word\"\n    done <<< \"$str\"\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word\n  local i=0\n\n  # Split string into words\n  while read -r word; do\n    words[$i]=\"$word\"\n    ((i++))\n  done <<< \"$str\"\n\n  # Reverse words\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local result=\"\"\n  local word=\"\"\n  local i=0\n  local len=${#str}\n  while [ $i -lt $len ]; do\n    if [ \"${str:$i:1}\" == \" \" ]; then\n      result=\"$word $result\"\n      word=\"\"\n    else\n      word=\"$word${str:$i:1}\"\n    fi\n    i=$((i+1))\n  done\n  result=\"$word $result\"\n  echo \"$result\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local words=()\n  local word\n  local i\n\n  # Split the string into an array of words\n  while read -r word; do\n    words+=(\"$word\")\n  done <<< \"$1\"\n\n  # Print the words in reverse order\n  for ((i = ${#words[@]} - 1; i >= 0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local i=0\n  local j=0\n  local word=\"\"\n  local reversed=\"\"\n\n  # Split the string into words\n  while read -r word; do\n    words[$i]=\"$word\"\n    ((i++))\n  done <<< \"$str\"\n\n  # Reverse the words\n  for ((j=${#words[@]}-1; j>=0; j--)); do\n    reversed=\"$reversed${words[$j]} \"\n  done\n\n  echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=$1\n    local words=$(echo $str | tr \" \" \"\\n\")\n    local reversed=\"\"\n    for word in $words; do\n        reversed=\"$word $reversed\"\n    done\n    echo $reversed\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local -a words\n  local -i i\n  local -i len\n\n  words=($1)\n  len=${#words[@]}\n  for ((i=len-1; i>=0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=()\n    local word\n    for word in $string; do\n        words=(\"$word\" \"${words[@]}\")\n    done\n    echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  # Split the string into an array of words\n  words=($1)\n  # Reverse the array\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n  local j=0\n  local len=0\n  local str_len=0\n  local reversed=\"\"\n\n  if [[ -z \"$str\" ]]; then\n    echo \"Usage: $0 <string>\"\n    return 1\n  fi\n\n  str_len=${#str}\n  for ((i=0; i<str_len; i++)); do\n    if [[ \"${str:$i:1}\" == \" \" ]]; then\n      words[$j]=\"$word\"\n      word=\"\"\n      ((j++))\n    else\n      word=\"$word${str:$i:1}\"\n    fi\n  done\n  words[$j]=\"$word\"\n\n  len=${#words[@]}\n  for ((i=len-1; i>=0; i--)); do\n    reversed=\"$reversed${words[$i]} \"\n  done\n\n  echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local -a words\n    local -i i\n    local -i j\n    local -i len\n\n    words=($1)\n    len=${#words[@]}\n    for ((i=0, j=len-1; i<j; i++, j--)); do\n        tmp=${words[i]}\n        words[i]=${words[j]}\n        words[j]=$tmp\n    done\n    echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word=''\n  local i=0\n\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ \"${string:$i:1}\" == ' ' ]]; then\n      words+=(\"$word\")\n      word=''\n    else\n      word+=\"${string:$i:1}\"\n    fi\n  done\n  words+=(\"$word\")\n\n  for (( i=${#words[@]}-1; i>=0; i-- )); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=$1\n  local words=()\n  local i=0\n  local j=0\n  local word=\"\"\n  local len=${#str}\n  local result=\"\"\n\n  while [ $i -lt $len ]; do\n    if [ \"${str:$i:1}\" == \" \" ]; then\n      words[$j]=$word\n      word=\"\"\n      j=$((j+1))\n    else\n      word=\"$word${str:$i:1}\"\n    fi\n    i=$((i+1))\n  done\n  words[$j]=$word\n\n  for (( i=${#words[@]}-1; i>=0; i-- )); do\n    result=\"$result${words[$i]} \"\n  done\n\n  echo \"$result\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=$1\n  local words=()\n  local word=''\n  local i=0\n  local len=${#str}\n\n  for ((i=0; i<len; i++)); do\n    if [[ ${str:$i:1} == ' ' ]]; then\n      words+=(\"$word\")\n      word=''\n    else\n      word=\"$word${str:$i:1}\"\n    fi\n  done\n  words+=(\"$word\")\n\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=$1\n    local words=()\n    local i=0\n    for word in $str; do\n        words[i]=$word\n        ((i++))\n    done\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\n  # Split the string into words\n  for ((i=0; i<${#str}; i++)); do\n    if [[ ${str:$i:1} == \" \" ]]; then\n      words+=(\"$word\")\n      word=\"\"\n    else\n      word+=\"${str:$i:1}\"\n    fi\n  done\n  words+=(\"$word\")\n\n  # Reverse the words\n  for ((j=0; j<${#words[@]}; j++)); do\n    for ((k=0; k<${#words[$j]}/2; k++)); do\n      l=$(( ${#words[$j]} - $k - 1 ))\n      m=${words[$j]:$k:1}\n      n=${words[$j]:$l:1}\n      words[$j]=${words[$j]:0:$k}$n${words[$j]:$(( $k + 1 ))}\n      words[$j]=${words[$j]:0:$l}$m${words[$j]:$(( $l + 1 ))}\n    done\n  done\n\n  # Print the reversed string\n  for ((i=0; i<${#words[@]}; i++)); do\n    if [[ $i -eq 0 ]]; then\n      echo -n \"${words[$i]}\"\n    else\n      echo -n \" ${words[$i]}\"\n    fi\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local words=($1)\n    local reversed_words=()\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        reversed_words+=(${words[i]})\n    done\n    echo \"${reversed_words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=$1\n  local rev_str=\"\"\n  local word=\"\"\n  local i=0\n\n  for ((i=${#str}-1; i>=0; i--)); do\n    if [[ \"${str:$i:1}\" == \" \" ]]; then\n      rev_str=\"$rev_str$word \"\n      word=\"\"\n    else\n      word=\"${str:$i:1}$word\"\n    fi\n  done\n  rev_str=\"$rev_str$word\"\n  echo \"$rev_str\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n  local j=0\n  local len=0\n  local char=\"\"\n\n  len=${#str}\n  for ((i=0; i<len; i++)); do\n    char=\"${str:$i:1}\"\n    if [[ \"$char\" == \" \" ]]; then\n      words[$j]=\"$word\"\n      word=\"\"\n      ((j++))\n    else\n      word=\"$word$char\"\n    fi\n  done\n  words[$j]=\"$word\"\n\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local word=\"\"\n    local i=0\n    local j=0\n    local len=0\n    local str_len=0\n    local tmp=\"\"\n\n    str_len=${#str}\n    for ((i=0; i<str_len; i++)); do\n        if [[ ${str:$i:1} == \" \" ]]; then\n            words[$j]=\"$word\"\n            word=\"\"\n            j=$((j+1))\n        else\n            word=\"$word${str:$i:1}\"\n        fi\n    done\n    words[$j]=\"$word\"\n\n    len=${#words[@]}\n    for ((i=0; i<len/2; i++)); do\n        tmp=\"${words[$i]}\"\n        words[$i]=\"${words[$((len-i-1))]}\"\n        words[$((len-i-1))]=\"$tmp\"\n    done\n\n    echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word=''\n  local i=0\n  local len=0\n  local c=''\n  local result=''\n\n  # Split the string into words\n  while [ $i -lt ${#str} ]; do\n    c=\"${str:$i:1}\"\n    if [ \"$c\" == ' ' ]; then\n      words+=(\"$word\")\n      word=''\n    else\n      word=\"$word$c\"\n    fi\n    ((i++))\n  done\n  words+=(\"$word\")\n\n  # Reverse the words\n  len=${#words[@]}\n  ((len--))\n  while [ $len -ge 0 ]; do\n    result=\"$result${words[$len]} \"\n    ((len--))\n  done\n\n  # Remove the trailing space\n  result=\"${result% }\"\n\n  echo \"$result\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local -a words\n    local -i i\n    local -i j\n    local -i len\n\n    words=($1)\n    len=${#words[@]}\n    for ((i=0, j=len-1; i<j; i++, j--)); do\n        tmp=${words[i]}\n        words[i]=${words[j]}\n        words[j]=$tmp\n    done\n    echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local result=\"\"\n    local word=\"\"\n    local i=0\n    local j=0\n    local len=${#str}\n    for ((i=0; i<len; i++)); do\n        if [[ \"${str:$i:1}\" == \" \" ]]; then\n            if [[ \"$word\" != \"\" ]]; then\n                result=\"$word $result\"\n                word=\"\"\n            fi\n        else\n            word=\"$word${str:$i:1}\"\n        fi\n    done\n    if [[ \"$word\" != \"\" ]]; then\n        result=\"$word $result\"\n    fi\n    echo \"$result\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local -a words\n  local -i i=0\n  local -i j=0\n  local -i len=0\n\n  words=($str)\n  len=${#words[@]}\n  for ((i=len-1; i>=0; i--)); do\n    if [ $i -eq $((len-1)) ]; then\n      echo -n \"${words[i]}\"\n    else\n      echo -n \"${words[i]} \"\n    fi\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word=''\n  local i=0\n\n  # Split the string into words\n  while read -n 1 char; do\n    if [[ \"$char\" == ' ' ]]; then\n      words[i]=\"$word\"\n      word=''\n      ((i++))\n    else\n      word=\"$word$char\"\n    fi\n  done <<< \"$string\"\n\n  # Add the last word\n  words[i]=\"$word\"\n\n  # Print the words in reverse order\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local words=()\n  local word\n  for word in $1; do\n    words=(\"$word\" \"${words[@]}\")\n  done\n  echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n  local j=0\n\n  # Split the string into words\n  for ((i=0; i<${#str}; i++)); do\n    if [[ \"${str:$i:1}\" == \" \" ]]; then\n      words+=(\"$word\")\n      word=\"\"\n    else\n      word=\"$word${str:$i:1}\"\n    fi\n  done\n  words+=(\"$word\")\n\n  # Reverse the words\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    if [[ $i -eq 0 ]]; then\n      echo -n \"${words[$i]}\"\n    else\n      echo -n \"${words[$i]} \"\n    fi\n  done\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word=''\n  local i=0\n\n  for ((i=0; i<${#str}; i++)); do\n    if [[ \"${str:$i:1}\" == ' ' ]]; then\n      words+=(\"$word\")\n      word=''\n    else\n      word+=\"${str:$i:1}\"\n    fi\n  done\n  words+=(\"$word\")\n\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local i=0\n  while read -r word; do\n    words[i++]=\"$word\"\n  done <<< \"$str\"\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local word=\"\"\n    local i=0\n    local j=0\n    local len=0\n    local char=\"\"\n    local res=\"\"\n\n    # Split string into words\n    for ((i=0; i<${#str}; i++)); do\n        char=\"${str:$i:1}\"\n        if [[ \"$char\" == \" \" ]]; then\n            words+=(\"$word\")\n            word=\"\"\n        else\n            word+=\"$char\"\n        fi\n    done\n    words+=(\"$word\")\n\n    # Reverse words\n    len=${#words[@]}\n    for ((i=0; i<$len; i++)); do\n        res=\"$res ${words[$((len-i-1))]}\"\n    done\n\n    echo \"$res\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word\n  local i\n  while read -r word; do\n    words+=(\"$word\")\n  done < <(echo \"$str\" | tr ' ' '\\n')\n  for ((i = ${#words[@]} - 1; i >= 0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local words=$(echo $1 | tr ' ' '\\n')\n  local reversed_words=$(echo $words | tac)\n  echo $reversed_words\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    echo $1 | awk '{for(i=NF;i>1;i--) printf $i\" \"; print $1}'\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=()\n    local word\n    while read -r word; do\n        words+=(\"$word\")\n    done < <(echo \"$string\" | tr ' ' '\\n')\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[i]}\"\n        if ((i > 0)); then\n            echo -n ' '\n        fi\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local i=0\n  local word=\"\"\n  local reversed_string=\"\"\n\n  # Split the string into an array of words\n  while read -r word; do\n    words[i]=\"$word\"\n    ((i++))\n  done <<< \"$string\"\n\n  # Reverse the array of words\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    reversed_string=\"$reversed_string${words[i]} \"\n  done\n\n  # Remove the trailing space\n  reversed_string=${reversed_string% }\n\n  echo \"$reversed_string\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local word\n    local -a words\n    local i=0\n\n    while read -r word; do\n        words[i++]=\"$word\"\n    done <<< \"$str\"\n\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word=''\n  local i=0\n  local c=''\n  local len=0\n  local result=''\n\n  len=${#string}\n  for (( i = 0; i < len; i++ )); do\n    c=${string:i:1}\n    if [[ \"$c\" == ' ' ]]; then\n      words+=(\"$word\")\n      word=''\n    else\n      word+=\"$c\"\n    fi\n  done\n  words+=(\"$word\")\n\n  for (( i = ${#words[@]} - 1; i >= 0; i-- )); do\n    result+=\"${words[i]} \"\n  done\n\n  echo \"$result\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local i=0\n    local word=\"\"\n    local reversed=\"\"\n\n    while read -r -n1 char; do\n        if [[ \"$char\" == \" \" ]]; then\n            words[$i]=\"$word\"\n            word=\"\"\n            i=$((i+1))\n        else\n            word=\"$word$char\"\n        fi\n    done <<< \"$str\"\n    words[$i]=\"$word\"\n\n    for (( i=${#words[@]}-1; i>=0; i-- )); do\n        reversed=\"$reversed${words[$i]} \"\n    done\n\n    echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local result=\"\"\n    local word=\"\"\n    local i=0\n\n    while [ $i -lt ${#str} ]; do\n        if [ \"${str:$i:1}\" != \" \" ]; then\n            word=\"$word${str:$i:1}\"\n        else\n            result=\"$word $result\"\n            word=\"\"\n        fi\n        i=$((i+1))\n    done\n    result=\"$word $result\"\n    echo \"$result\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local words=()\n  local word\n  for word in $1; do\n    words=( \"$word\" \"${words[@]}\" )\n  done\n  echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local word=''\n    local i=0\n    local len=${#str}\n\n    for ((i=0; i<len; i++)); do\n        if [[ \"${str:$i:1}\" == ' ' ]]; then\n            words+=(\"$word\")\n            word=''\n        else\n            word+=\"${str:$i:1}\"\n        fi\n    done\n    words+=(\"$word\")\n\n    local reversed=''\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        reversed+=\"${words[$i]} \"\n    done\n    echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local i=0\n  while read -r word; do\n    words[i++]=\"$word\"\n  done <<< \"$str\"\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    echo $1 | awk '{for(i=NF;i>1;i--) printf(\"%s \",$i); print $1}'\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n  local j=0\n  local k=0\n\n  for ((i=0; i<${#string}; i++)); do\n    if [[ \"${string:$i:1}\" == \" \" ]]; then\n      words[$j]=\"$word\"\n      word=\"\"\n      ((j++))\n    else\n      word=\"$word${string:$i:1}\"\n    fi\n  done\n  words[$j]=\"$word\"\n\n  for ((k=${#words[@]}-1; k>=0; k--)); do\n    echo -n \"${words[$k]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=()\n    local word=''\n    local char=''\n    local i=0\n    local j=0\n\n    for ((i=0; i<${#string}; i++)); do\n        char=\"${string:$i:1}\"\n        if [[ \"$char\" = ' ' ]]; then\n            words+=(\"$word\")\n            word=''\n        else\n            word+=\"$char\"\n        fi\n    done\n    words+=(\"$word\")\n\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        if [[ $i -eq 0 ]]; then\n            echo -n \"${words[$i]}\"\n        else\n            echo -n \"${words[$i]} \"\n        fi\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  echo \"$1\" | awk '{for (i=NF;i>=1;i--) printf(\"%s \",$i);}'\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    echo \"$1\" | awk '{for (i=NF; i>=1; i--) printf(\"%s \", $i)}'\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=()\n    local word=\"\"\n    local i=0\n\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" == \" \" ]]; then\n            words+=(\"$word\")\n            word=\"\"\n        else\n            word=\"$word${string:$i:1}\"\n        fi\n    done\n\n    words+=(\"$word\")\n\n    for (( i=${#words[@]}-1; i>=0; i-- )); do\n        echo -n \"${words[$i]} \"\n    done\n\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local i=0\n    local word=\"\"\n\n    # Split string into words\n    while [[ $str =~ ([^[:space:]]+) ]]; do\n        word=\"${BASH_REMATCH[1]}\"\n        str=\"${str#*$word}\"\n        words[$i]=\"$word\"\n        ((i++))\n    done\n\n    # Print words in reverse order\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[$i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word=''\n  local i=0\n\n  while IFS= read -r -n1 char; do\n    if [[ \"$char\" == ' ' ]]; then\n      words[i++]=\"$word\"\n      word=''\n    else\n      word+=\"$char\"\n    fi\n  done <<< \"$str\"\n\n  words[i++]=\"$word\"\n  word=''\n\n  for (( i--; i >= 0; i-- )); do\n    word+=\"${words[i]} \"\n  done\n\n  echo \"$word\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=()\n    local word\n    local i\n    local j\n\n    # Split string into words\n    while read -r word; do\n        words+=(\"$word\")\n    done <<< \"$string\"\n\n    # Reverse words\n    for ((i = ${#words[@]} - 1, j = 0; i >= 0; i--, j++)); do\n        words[$j]=\"${words[$i]}\"\n    done\n\n    # Print reversed words\n    for ((i = 0; i < ${#words[@]}; i++)); do\n        printf \"%s\" \"${words[$i]}\"\n        if ((i < ${#words[@]} - 1)); then\n            printf \"%s\" \" \"\n        fi\n    done\n    printf \"\\n\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local -a words\n  local i\n  words=($1)\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=()\n    local word=\"\"\n    local i=0\n    local j=0\n    local len=${#string}\n\n    for ((i=0; i<len; i++)); do\n        if [[ \"${string:$i:1}\" == \" \" ]]; then\n            words[$j]=\"$word\"\n            word=\"\"\n            ((j++))\n        else\n            word=\"$word${string:$i:1}\"\n        fi\n    done\n    words[$j]=\"$word\"\n\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[$i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=$1\n    local words=()\n    local word=''\n    local i=0\n    local c=''\n\n    # Split string into words\n    for ((i=0; i<${#string}; i++)); do\n        c=${string:$i:1}\n        if [[ $c == ' ' ]]; then\n            words+=(\"$word\")\n            word=''\n        else\n            word+=$c\n        fi\n    done\n    words+=(\"$word\")\n\n    # Reverse words\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[$i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local words=()\n    local word\n    for word in $1; do\n        words=( \"$word\" \"${words[@]}\" )\n    done\n    echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local words=($1)\n    local reversed=()\n    local i=0\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        reversed+=(\"${words[i]}\")\n    done\n    echo \"${reversed[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local words=()\n    local word\n    local i\n    local j\n    local n\n    local s\n\n    # Split the string into words\n    IFS=\" \" read -ra words <<< \"$1\"\n\n    # Reverse the words\n    for ((i=0; i<${#words[@]}; i++)); do\n        word=${words[i]}\n        n=${#word}\n        for ((j=0; j<n/2; j++)); do\n            s=${word:$j:1}\n            word=\"${word:0:$j}${word:$((j+1)):1}${word:$j:1}${word:$((j+2)):$((n-j-2))}\"\n        done\n        words[i]=$word\n    done\n\n    # Reverse the words\n    for ((i=0; i<${#words[@]}/2; i++)); do\n        word=${words[i]}\n        words[i]=${words[${#words[@]}-i-1]}\n        words[${#words[@]}-i-1]=$word\n    done\n\n    # Join the words\n    echo \"${words[*]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n  local len=${#str}\n  local char=\"\"\n\n  for ((i=0; i<len; i++)); do\n    char=${str:$i:1}\n    if [[ \"$char\" == \" \" ]]; then\n      words+=(\"$word\")\n      word=\"\"\n    else\n      word+=\"$char\"\n    fi\n  done\n  words+=(\"$word\")\n\n  local reversed_words=()\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    reversed_words+=(\"${words[$i]}\")\n  done\n\n  echo \"${reversed_words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local i=0\n  for word in $str; do\n    words[$i]=$word\n    ((i++))\n  done\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local words=()\n  local word\n  for word in $1; do\n    words=(\"$word\" \"${words[@]}\")\n  done\n  echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local i=0\n  local word=\"\"\n  local c=\"\"\n  local reversed=\"\"\n\n  # Split the string into words\n  while [ $i -lt ${#str} ]; do\n    c=\"${str:$i:1}\"\n    if [ \"$c\" == \" \" ]; then\n      words+=(\"$word\")\n      word=\"\"\n    else\n      word=\"$word$c\"\n    fi\n    ((i++))\n  done\n  words+=(\"$word\")\n\n  # Reverse the words\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    reversed=\"$reversed ${words[$i]}\"\n  done\n\n  # Remove the leading space\n  reversed=\"${reversed:1}\"\n\n  echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word\n  local i\n\n  # Split the string into an array of words\n  while read -r word; do\n    words+=(\"$word\")\n  done <<< \"$str\"\n\n  # Print the words in reverse order\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n  local len=0\n  local char=\"\"\n\n  # Split string into words\n  while read -n 1 char; do\n    if [ \"$char\" == \" \" ]; then\n      words[$i]=\"$word\"\n      word=\"\"\n      ((i++))\n    else\n      word=\"$word$char\"\n    fi\n  done <<< \"$string\"\n  words[$i]=\"$word\"\n\n  # Reverse words\n  len=$i\n  for ((i=0; i<=len; i++)); do\n    word=\"${words[$i]}\"\n    words[$i]=\"${words[$len]}\"\n    words[$len]=\"$word\"\n    ((len--))\n  done\n\n  # Print words\n  for ((i=0; i<=${#words[@]}; i++)); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=$1\n  local words=($string)\n  local reversed_words=()\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    reversed_words+=(${words[i]})\n  done\n  echo \"${reversed_words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local word=\"\"\n    local i=0\n    local j=0\n    local len=0\n    local char=\"\"\n\n    # Split the string into words\n    while [ $i -lt ${#str} ]; do\n        char=\"${str:$i:1}\"\n        if [ \"$char\" == \" \" ]; then\n            words+=(\"$word\")\n            word=\"\"\n        else\n            word+=\"$char\"\n        fi\n        i=$((i+1))\n    done\n    words+=(\"$word\")\n\n    # Reverse the words\n    len=${#words[@]}\n    for ((i=0; i<len/2; i++)); do\n        j=$((len-i-1))\n        word=\"${words[$i]}\"\n        words[$i]=\"${words[$j]}\"\n        words[$j]=\"$word\"\n    done\n\n    # Join the words\n    word=\"\"\n    for ((i=0; i<len; i++)); do\n        word+=\"${words[$i]}\"\n        if [ $i -lt $((len-1)) ]; then\n            word+=\" \"\n        fi\n    done\n\n    echo \"$word\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local rev_str=\"\"\n  local word=\"\"\n  local i=0\n  local j=0\n  local len=${#str}\n\n  for ((i=len-1; i>=0; i--)); do\n    if [[ \"${str:$i:1}\" == \" \" ]]; then\n      rev_str=\"$rev_str${str:$j:$((i-j))} \"\n      j=$((i+1))\n    fi\n  done\n  rev_str=\"$rev_str${str:$j:$((i-j))}\"\n  echo \"$rev_str\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp9xk9yojh.sh: line 19: $((i-j)): substring expression < 0\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local result=\"\"\n    local word=\"\"\n    local i=0\n    local len=${#str}\n\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:1}\" == \" \" ]; then\n            result=\"$word $result\"\n            word=\"\"\n        else\n            word=\"$word${str:$i:1}\"\n        fi\n        i=$((i+1))\n    done\n\n    echo \"$word $result\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word=''\n  local i=0\n  local len=${#string}\n  while [ \"$i\" -lt \"$len\" ]; do\n    local char=\"${string:$i:1}\"\n    if [ \"$char\" = ' ' ]; then\n      words+=(\"$word\")\n      word=''\n    else\n      word=\"$word$char\"\n    fi\n    i=$((i+1))\n  done\n  words+=(\"$word\")\n  local reversed=''\n  local i=0\n  local len=${#words[@]}\n  while [ \"$i\" -lt \"$len\" ]; do\n    local word=\"${words[$((len-i-1))]}\"\n    reversed=\"$reversed$word \"\n    i=$((i+1))\n  done\n  echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local result=\"\"\n  local word=\"\"\n\n  while [ -n \"$str\" ]; do\n    word=\"${str%% *}\"\n    str=\"${str#* }\"\n    result=\"$result $word\"\n  done\n\n  echo \"${result# }\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191110,
      "stdout": "<_io.BufferedReader name=9>",
      "stderr": "<_io.BufferedReader name=14>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local word\n    while read -r word; do\n        words+=(\"$word\")\n    done <<< \"$str\"\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=()\n    local word=\"\"\n    local i=0\n\n    # Split string into words\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" == \" \" ]]; then\n            words+=(\"$word\")\n            word=\"\"\n        else\n            word+=\"${string:$i:1}\"\n        fi\n    done\n    words+=(\"$word\")\n\n    # Print words in reverse order\n    for (( i=${#words[@]}-1; i>=0; i-- )); do\n        echo -n \"${words[$i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n  local j=0\n  local len=0\n  local char=\"\"\n\n  # Split string into words\n  for (( i=0; i<${#str}; i++ )); do\n    char=\"${str:$i:1}\"\n    if [[ \"$char\" == \" \" ]]; then\n      words+=(\"$word\")\n      word=\"\"\n    else\n      word+=\"$char\"\n    fi\n  done\n  words+=(\"$word\")\n\n  # Reverse words\n  for (( i=${#words[@]}-1; i>=0; i-- )); do\n    word=\"${words[$i]}\"\n    len=${#word}\n    for (( j=0; j<len; j++ )); do\n      char=\"${word:$j:1}\"\n      printf \"%s\" \"$char\"\n    done\n    if [[ $i -gt 0 ]]; then\n      printf \" \"\n    fi\n  done\n  printf \"\\n\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local i=0\n  for word in $str; do\n    words[$i]=$word\n    ((i++))\n  done\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n\tlocal str=\"$1\"\n\tlocal words=()\n\tlocal i=0\n\tfor word in $str; do\n\t\twords[$i]=$word\n\t\t((i++))\n\tdone\n\tfor ((i=${#words[@]}-1; i>=0; i--)); do\n\t\techo -n \"${words[$i]} \"\n\tdone\n\techo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=$1\n    local rev_str=\"\"\n    local word=\"\"\n    local i=0\n    local j=0\n    local len=${#str}\n\n    for (( i=0; i<len; i++ )); do\n        if [[ ${str:i:1} == \" \" ]]; then\n            rev_str=\"$word $rev_str\"\n            word=\"\"\n        else\n            word=\"${word}${str:i:1}\"\n        fi\n    done\n    echo \"$word $rev_str\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local i=0\n    local word=\"\"\n    local reversed=\"\"\n\n    # Split the string into words\n    while read -r -d ' ' word; do\n        words[$i]=\"$word\"\n        ((i++))\n    done <<< \"$str\"\n\n    # Reverse the words\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        reversed=\"$reversed${words[$i]} \"\n    done\n\n    # Remove trailing space\n    reversed=\"${reversed% }\"\n\n    echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local i=0\n  local j=0\n  local len=0\n  local tmp=''\n\n  # Split string into words\n  while read -r -d ' '; do\n    words[i++]=\"$REPLY\"\n  done <<< \"$str\"\n\n  # Reverse words\n  len=${#words[@]}\n  for ((i=0; i<len/2; i++)); do\n    tmp=\"${words[i]}\"\n    words[i]=\"${words[len-i-1]}\"\n    words[len-i-1]=\"$tmp\"\n  done\n\n  # Join words\n  for ((i=0; i<len; i++)); do\n    if ((i > 0)); then\n      printf ' '\n    fi\n    printf '%s' \"${words[i]}\"\n  done\n  printf '\\n'\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local i=0\n  local j=0\n\n  # Split the string into words\n  while read -r -d ' '; do\n    words[i++]=\"$REPLY\"\n  done <<< \"$str\"\n\n  # Reverse the words\n  for ((i = ${#words[@]} - 1; i >= 0; i--)); do\n    if [ $i -eq 0 ]; then\n      echo -n \"${words[i]}\"\n    else\n      echo -n \"${words[i]} \"\n    fi\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=$1\n    local words=()\n    local word=''\n    local char=''\n    local i=0\n    local j=0\n    local len=0\n\n    # Split the string into words\n    for (( i=0; i<${#str}; i++ )); do\n        char=${str:$i:1}\n        if [[ $char == ' ' ]]; then\n            words+=(\"$word\")\n            word=''\n        else\n            word+=$char\n        fi\n    done\n    words+=(\"$word\")\n\n    # Reverse the words\n    len=${#words[@]}\n    for (( i=0; i<$len/2; i++ )); do\n        j=$(( $len - $i - 1 ))\n        word=${words[$i]}\n        words[$i]=${words[$j]}\n        words[$j]=$word\n    done\n\n    # Print the reversed words\n    for word in \"${words[@]}\"; do\n        echo -n \"$word \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local word=\"\"\n    local i=0\n    local len=${#str}\n    local c=\"\"\n\n    for ((i=0; i<len; i++)); do\n        c=\"${str:$i:1}\"\n        if [[ \"$c\" == \" \" ]]; then\n            words+=(\"$word\")\n            word=\"\"\n        else\n            word+=\"$c\"\n        fi\n    done\n    words+=(\"$word\")\n\n    local reversed=\"\"\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        reversed+=\"${words[$i]} \"\n    done\n    echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=$1\n    local rev_str=\"\"\n    local word=\"\"\n    local i=0\n    local len=${#str}\n\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:1}\" == \" \" ]; then\n            rev_str=\"$word $rev_str\"\n            word=\"\"\n        else\n            word=\"$word${str:$i:1}\"\n        fi\n        ((i++))\n    done\n    echo \"$word $rev_str\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local words=($1)\n  local reversed_words=()\n  local i=0\n  local j=0\n\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    reversed_words[j]=${words[i]}\n    ((j++))\n  done\n\n  echo ${reversed_words[@]}\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  echo \"$1\" | awk '{for (i=NF; i>1; i--) printf(\"%s \",$i); print $1;}'\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local result=''\n  for word in $1; do\n    result=\"$word $result\"\n  done\n  echo $result\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local words=$1\n    local result=''\n    for word in $words; do\n        result=\"$word $result\"\n    done\n    echo $result\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local -a words\n    local word\n    local i\n\n    words=($1)\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        word=${words[$i]}\n        echo -n \"$word \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=$1\n    local words=()\n    local word=\"\"\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        if [ \"${str:$i:1}\" != \" \" ]; then\n            word=\"$word${str:$i:1}\"\n        else\n            words+=($word)\n            word=\"\"\n        fi\n        i=$((i+1))\n    done\n    words+=($word)\n    local j=$((len-1))\n    while [ $j -ge 0 ]; do\n        if [ \"${str:$j:1}\" != \" \" ]; then\n            echo -n \"${str:$j:1}\"\n        else\n            echo -n \"${words[${#words[@]}-1]}\"\n            unset words[${#words[@]}-1]\n        fi\n        j=$((j-1))\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    echo \"$1\" | awk '{for (i=NF; i>1; i--) printf(\"%s \",$i); print $1}'\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=()\n    local word\n    while read -r word; do\n        words+=(\"$word\")\n    done <<< \"$string\"\n    for ((i = ${#words[@]} - 1; i >= 0; i--)); do\n        echo -n \"${words[i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local words=$1\n  local result=\"\"\n  for word in $words; do\n    result=\"$word $result\"\n  done\n  echo $result\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n  local j=0\n  local len=0\n  local char=\"\"\n  local result=\"\"\n\n  # Split the string into words\n  while [ $i -lt ${#string} ]; do\n    char=\"${string:$i:1}\"\n    if [ \"$char\" == \" \" ]; then\n      words+=(\"$word\")\n      word=\"\"\n    else\n      word=\"$word$char\"\n    fi\n    ((i++))\n  done\n  words+=(\"$word\")\n\n  # Reverse the words\n  len=${#words[@]}\n  ((len--))\n  while [ $len -ge 0 ]; do\n    result=\"$result${words[$len]}\"\n    if [ $len -gt 0 ]; then\n      result=\"$result \"\n    fi\n    ((len--))\n  done\n\n  echo \"$result\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=$1\n    local rev_str=\"\"\n    local word=\"\"\n    local i=0\n    local j=0\n    local len=${#str}\n    local space=\" \"\n\n    for ((i=len-1; i>=0; i--)); do\n        if [[ ${str:i:1} == $space ]]; then\n            rev_str=\"$rev_str$word$space\"\n            word=\"\"\n        else\n            word=\"${str:i:1}$word\"\n        fi\n    done\n    rev_str=\"$rev_str$word\"\n    echo $rev_str\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n  local j=0\n\n  # Split the string into words\n  while read -r -n1 char; do\n    if [[ \"$char\" == \" \" ]]; then\n      words[i]=\"$word\"\n      ((i++))\n      word=\"\"\n    else\n      word+=\"$char\"\n    fi\n  done <<< \"$string\"\n  words[i]=\"$word\"\n\n  # Reverse the words\n  for ((j=i; j>=0; j--)); do\n    echo -n \"${words[j]}\"\n    if ((j > 0)); then\n      echo -n \" \"\n    fi\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local rev=\"\"\n    local word=\"\"\n\n    while [ -n \"$str\" ]; do\n        word=\"${str%% *}\"\n        str=\"${str#* }\"\n        rev=\"$word $rev\"\n    done\n\n    echo \"$rev\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191110,
      "stdout": "<_io.BufferedReader name=8>",
      "stderr": "<_io.BufferedReader name=17>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    echo \"$1\" | awk '{for (i=NF; i>1; i--) printf(\"%s \",$i); print $1;}'\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local words=()\n    local word\n    for word in $1; do\n        words=($word ${words[@]})\n    done\n    echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local string=\"$1\"\n    local words=()\n    local i=0\n    local word=\"\"\n    local reversed=\"\"\n\n    # Split the string into words\n    while IFS= read -r -d ' '; do\n        words[i++]=\"$REPLY\"\n    done <<< \"$string\"\n\n    # Reverse the words\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        word=\"${words[i]}\"\n        reversed=\"$reversed $word\"\n    done\n\n    # Remove the leading space\n    reversed=\"${reversed:1}\"\n\n    echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local word=''\n    local i=0\n    local len=${#str}\n    local c=''\n\n    for ((i=0; i<len; i++)); do\n        c=${str:i:1}\n        if [[ $c == ' ' ]]; then\n            words+=($word)\n            word=''\n        else\n            word+=$c\n        fi\n    done\n    words+=($word)\n\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local words=()\n    local word\n    for word in $1; do\n        words=( \"$word\" \"${words[@]}\" )\n    done\n    echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word=''\n  local i=0\n  local j=0\n\n  while [ $i -lt ${#string} ]; do\n    if [ \"${string:$i:1}\" == ' ' ]; then\n      words[$j]=\"$word\"\n      word=''\n      ((j++))\n    else\n      word=\"$word${string:$i:1}\"\n    fi\n    ((i++))\n  done\n  words[$j]=\"$word\"\n\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word\n  local i\n  local j\n\n  # Split the string into words\n  while read -r word; do\n    words+=(\"$word\")\n  done <<< \"$string\"\n\n  # Reverse the words\n  for ((i=${#words[@]}-1, j=0; i>=0; i--, j++)); do\n    words[$j]=\"${words[$i]}\"\n  done\n\n  # Print the reversed words\n  for ((i=0; i<${#words[@]}; i++)); do\n    echo -n \"${words[$i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local words=()\n    local word\n    for word in $1; do\n        words=($word \"${words[@]}\")\n    done\n    echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local rev_str=\"\"\n  local word=\"\"\n  local i=0\n  local j=0\n  local len=${#str}\n  local word_len=0\n  local word_start=0\n  local word_end=0\n\n  while [ $i -lt $len ]; do\n    if [ \"${str:$i:1}\" = \" \" ]; then\n      word_len=$((i - word_start))\n      word=\"${str:$word_start:$word_len}\"\n      rev_str=\"$word $rev_str\"\n      word_start=$((i + 1))\n    fi\n    i=$((i + 1))\n  done\n\n  word_len=$((i - word_start))\n  word=\"${str:$word_start:$word_len}\"\n  rev_str=\"$word $rev_str\"\n\n  echo \"$rev_str\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=($str)\n    local len=${#words[@]}\n    local i=0\n    while [ $i -lt $len ]; do\n        echo -n \"${words[$len - $i - 1]} \"\n        i=$((i + 1))\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local rev_str=\"\"\n  local word=\"\"\n  local i=0\n  local len=${#str}\n  while [ $i -lt $len ]; do\n    if [ \"${str:$i:1}\" == \" \" ]; then\n      rev_str=\"$word $rev_str\"\n      word=\"\"\n    else\n      word=\"$word${str:$i:1}\"\n    fi\n    i=$((i+1))\n  done\n  rev_str=\"$word $rev_str\"\n  echo \"$rev_str\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local -a words\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i word_count=0\n    local -i word_len=0\n    local -i word_start=0\n    local -i word_end=0\n    local -i word_index=0\n    local -i word_index_end=0\n    local -i word_index_start=0\n    local -i word_index_len=0\n    local -i word_index_len_end=0\n    local -i word_index_len_start=0\n    local -i word_index_len_mid=0\n    local -i word_index_len_mid_end=0\n    local -i word_index_len_mid_start=0\n    local -i word_index_len_mid_start_end=0\n    local -i word_index_len_mid_start_start=0\n    local -i word_index_len_mid_start_start_end=0\n    local -i word_index_len_mid_start_start_start=0\n    local -i word_index_len_mid_start_start_start_end=0\n    local -i word_index_len_mid_start_start_start_start=0\n    local -i word_index_len_mid_start_start_start_start_end=0\n    local -i word_index_len_mid_start_start_start_start_start=0\n    local -i word_index_len_mid_start_start_start_start_start_end=0\n    local -i word_index_len_mid_start_start_start_start_start_start=0\n    local -i word_index_len_mid_start_start_start_start_start_start_end=0\n    local -i word_index_len_mid_start_start_start_start_start_start_start=0\n    local -i word_index_len_mid_start_start_start_start_start_start_start_end=0\n    local -i word_index\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local string=\"$1\"\n  local words=()\n  local word\n  local i\n\n  while read -r word; do\n    words+=(\"$word\")\n  done <<< \"$string\"\n\n  for ((i = ${#words[@]} - 1; i >= 0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=\"$1\"\n    local words=()\n    local i=0\n    for word in $str; do\n        words[$i]=$word\n        ((i++))\n    done\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[$i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=$1\n  local words=($str)\n  local reversed_words=()\n  for word in \"${words[@]}\"; do\n    reversed_words=(\"$word\" \"${reversed_words[@]}\")\n  done\n  echo \"${reversed_words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=$1\n  local words=()\n  local word=''\n  local i=0\n  local len=${#str}\n  while [ $i -lt $len ]; do\n    if [ \"${str:$i:1}\" != ' ' ]; then\n      word=\"$word${str:$i:1}\"\n    else\n      words+=(\"$word\")\n      word=''\n    fi\n    i=$((i+1))\n  done\n  words+=(\"$word\")\n  local reversed=''\n  for word in \"${words[@]}\"; do\n    reversed=\"$reversed $word\"\n  done\n  echo \"$reversed\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local str=\"$1\"\n  local words=()\n  local word=\"\"\n  local i=0\n  local j=0\n  local len=0\n  local len_str=0\n\n  # Split string into words\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ \"${str:$i:1}\" == \" \" ]]; then\n      words+=(\"$word\")\n      word=\"\"\n    else\n      word+=\"${str:$i:1}\"\n    fi\n  done\n  words+=(\"$word\")\n\n  # Reverse words\n  len_str=${#str}\n  for (( i=0; i<${#words[@]}; i++ )); do\n    word=\"${words[$i]}\"\n    len=${#word}\n    for (( j=0; j<${#word}; j++ )); do\n      str=\"${str:0:$len_str}${word:$j:1}\"\n      (( len_str-- ))\n    done\n    (( len_str-- ))\n  done\n\n  echo \"$str\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n    local str=$1\n    local words=()\n    local word=''\n    local i=0\n    local j=0\n    local len=${#str}\n\n    for ((i=0; i<len; i++)); do\n        if [[ ${str:$i:1} == ' ' ]]; then\n            words[$j]=$word\n            word=''\n            ((j++))\n        else\n            word=\"$word${str:$i:1}\"\n        fi\n    done\n    words[$j]=$word\n\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[$i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191105,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n  local words=()\n  local word\n  for word in $1; do\n    words=(\"$word\" \"${words[@]}\")\n  done\n  echo \"${words[@]}\"\n}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
      "timestamp": 1667191104,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_747_lcs_of_three",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n#\n# $1 is a string\n# $2 is a string\n# $3 is a string\nlcs_of_three() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_747_lcs_of_three.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    lcs_of_three \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"AGGT12\" \"12TXAYB\" \"12XBA\") = \"2\" ]]\n    [[ $(candidate \"Reels\" \"Reelsfor\" \"ReelsforReels\") = \"5\" ]]\n    [[ $(candidate \"abcd1e2\" \"bc12ea\" \"bd1ea\") = \"3\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local str1=\"$1\"\n    local str2=\"$2\"\n    local str3=\"$3\"\n\n    local lcs_of_two_strs=\"$(lcs_of_two \"$str1\" \"$str2\")\"\n    local lcs_of_two_strs_and_str3=\"$(lcs_of_two \"$lcs_of_two_strs\" \"$str3\")\"\n\n    echo \"$lcs_of_two_strs_and_str3\"",
    "    local str1=\"$1\"\n    local str2=\"$2\"\n    local str3=\"$3\"\n    local lcs_len=0\n    local lcs_str=\"\"\n    local lcs_len_arr=()\n    local lcs_str_arr=()\n    local lcs_len_arr_len=0\n    local lcs_str_arr_len=0\n    local lcs_len_arr_idx=0\n    local lcs_str_arr_idx=0\n    local lcs_len_arr_idx_max=0\n    local lcs_str_arr_idx_max=0\n    local lcs_len_arr_idx_max_len=0\n    local lcs_str_arr_idx_max_len=0\n    local lcs_len_arr_idx_max_len_max=0\n    local lcs_str_arr_idx_max_len_max=0\n    local lcs_len_arr_idx_max_len_max_len=0\n    local lcs_str_arr_idx_max_len_max_len=0\n    local lcs_len_arr_idx_max_len_max_len_max=0\n    local lcs_str_arr_idx_max_len_max_len_max=0\n    local lcs_len_arr_idx_max_len_max_len_max_len=0\n    local lcs_str_arr_idx_max_len_max_len_max_len=0\n    local lcs_len_arr_idx_max_len_max_len_max_len_max=0\n    local lcs_str_arr_idx_max_len_max_len_max_len_max=0\n    local lcs_len_arr_idx_max_len_max_len_max_len_max_len=0\n    local lcs_str_arr_idx_max_len_max_len_max_len_max_len=0\n    local lcs_len_arr_idx_max_len_max_len_max_len",
    "  local x=\"$1\"\n  local y=\"$2\"\n  local z=\"$3\"\n  local m=${#x}\n  local n=${#y}\n  local o=${#z}\n  local lcs=()\n  local lcs_len=0\n  local i=0\n  local j=0\n  local k=0\n  local lcs_matrix=()\n  local lcs_matrix_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row=()\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n  local lcs_matrix_row_len=0\n",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"$3\"\n  local lcs_len=0\n  local lcs_str=\"\"\n  local lcs_len_arr=()\n  local lcs_str_arr=()\n  local lcs_len_arr_len=0\n  local lcs_str_arr_len=0\n  local i=0\n  local j=0\n  local k=0\n  local lcs_len_arr_len_i=0\n  local lcs_str_arr_len_i=0\n  local lcs_len_arr_len_j=0\n  local lcs_str_arr_len_j=0\n  local lcs_len_arr_len_k=0\n  local lcs_str_arr_len_k=0\n  local lcs_len_arr_len_i_j=0\n  local lcs_str_arr_len_i_j=0\n  local lcs_len_arr_len_i_k=0\n  local lcs_str_arr_len_i_k=0\n  local lcs_len_arr_len_j_k=0\n  local lcs_str_arr_len_j_k=0\n  local lcs_len_arr_len_i_j_k=0\n  local lcs_str_arr_len_i_j_k=0\n  local lcs_len_arr_len_i_j_k_str=\"\"\n  local lcs_str_arr_len_i_j_k_str=\"\"\n  local lcs_len_arr_len_i_j_k_str_len=0\n  local lcs_str_arr_len_i_j_k_str_len=0\n  local lcs_len_arr_len_i_j_k_str_len_i=0\n  local lcs_str_arr_len_i_j_k_str_len_i=0\n  local lcs_len_arr_len_i_j_k_str_len_j=0\n  local lcs_str_arr_len",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"$3\"\n  local lcs_str1_str2=$(lcs \"$str1\" \"$str2\")\n  local lcs_str1_str2_str3=$(lcs \"$lcs_str1_str2\" \"$str3\")\n  echo \"$lcs_str1_str2_str3\"",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"$3\"\n  local len1=${#str1}\n  local len2=${#str2}\n  local len3=${#str3}\n  local lcs_matrix=()\n  local i=0\n  local j=0\n  local k=0\n  local max_lcs=0\n  local max_lcs_str=\"\"\n  local lcs_str=\"\"\n  local lcs_str_len=0\n  local lcs_str_len_prev=0\n  local lcs_str_len_prev_prev=0\n  local lcs_str_len_prev_prev_prev=0\n  local lcs_str_len_prev_prev_prev_prev=0\n  local lcs_str_len_prev_prev_prev_prev_prev=0\n  local lcs_str_len_prev_prev_prev_prev_prev_prev=0\n  local lcs_str_len_prev_prev_prev_prev_prev_prev_prev=0\n  local lcs_str_len_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local lcs_str_len_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local lcs_str_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local lcs_str_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local lcs_str_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local lcs_str_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local lcs_str_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local lcs_str_len_prev_prev_prev_prev_prev_prev_",
    "    if [[ $# -ne 3 ]]; then\n        echo \"Usage: lcs_of_three <string1> <string2> <string3>\"\n        return 1\n    fi\n\n    local string1=\"$1\"\n    local string2=\"$2\"\n    local string3=\"$3\"\n    local lcs_table\n    local lcs_table_row_size\n    local lcs_table_col_size\n    local lcs_table_depth_size\n    local lcs_table_row_index\n    local lcs_table_col_index\n    local lcs_table_depth_index\n    local lcs_table_row_size_minus_one\n    local lcs_table_col_size_minus_one\n    local lcs_table_depth_size_minus_one\n    local lcs_table_row_index_minus_one\n    local lcs_table_col_index_minus_one\n    local lcs_table_depth_index_minus_one\n    local lcs_table_row_index_plus_one\n    local lcs_table_col_index_plus_one\n    local lcs_table_depth_index_plus_one\n    local lcs_table_row_index_plus_one_minus_one\n    local lcs_table_col_index_plus_one_minus_one\n    local lcs_table_depth_index_plus_one_minus_one\n    local lcs_table_row_index_plus_one_minus_one_minus_one\n    local lcs_table_col_index_plus_one_minus_one_minus_one\n    local lcs_table_depth_index_plus_one_minus_one_minus_one\n    local lcs_table_row_index_plus_one_minus_one_plus_one\n    local lcs_table_col_index_plus_one_minus_one_plus_one\n    local lcs_table_depth_index_plus_one_minus_one_plus_one\n    local lcs_table_row_index_plus_one_plus_one\n    local lcs_table_col_index_plus_one_plus_one\n",
    "  local a=\"$1\"\n  local b=\"$2\"\n  local c=\"$3\"\n  local m=${#a}\n  local n=${#b}\n  local o=${#c}\n  local lcs=()\n  local i=0\n  local j=0\n  local k=0\n  local lcs_table=()\n  local lcs_table_row=()\n  local lcs_table_row_col=()\n\n  for ((i=0; i<=m; i++)); do\n    lcs_table_row=()\n    for ((j=0; j<=n; j++)); do\n      lcs_table_row_col=()\n      for ((k=0; k<=o; k++)); do\n        if [[ $i -eq 0 || $j -eq 0 || $k -eq 0 ]]; then\n          lcs_table_row_col+=(0)\n        elif [[ ${a:$i-1:1} == ${b:$j-1:1} && ${a:$i-1:1} == ${c:$k-1:1} ]]; then\n          lcs_table_row_col+=($(( ${lcs_table[$i-1][$j-1][$k-1]} + 1 )))\n        else\n          lcs_table_row_col+=($(max ${lcs_table[$i-1][$j][$k]} ${lcs_table[$i][$j-1][$k]} ${lcs_table[$i][$j][$k-1]}))\n        fi\n      done\n      lcs_table_row+=(${lcs_table_row_col[@]})\n    done\n    lcs_table+=(${lcs_table_row[@]})\n  done\n\n  i=$m\n  j=$n\n  k=$o\n  while [[ $i -gt 0 && $j -gt 0 && $k -gt 0 ]]; do\n    if [[ ${a:$i-1:1} == ${b:$j-1:1} && ${a:$i-1:1} == ${c:",
    "    local str1=\"$1\"\n    local str2=\"$2\"\n    local str3=\"$3\"\n    local len1=${#str1}\n    local len2=${#str2}\n    local len3=${#str3}\n    local lcs_arr=()\n    local lcs_arr_len=0\n    local lcs_arr_max_len=0\n    local lcs_arr_max_len_index=0\n    local i=0\n    local j=0\n    local k=0\n    local lcs_arr_index=0\n    local lcs_arr_index_max=0\n    local lcs_arr_index_max_len=0\n    local lcs_arr_index_max_len_index=0\n    local lcs_arr_index_max_len_index_max=0\n    local lcs_arr_index_max_len_index_max_len=0\n    local lcs_arr_index_max_len_index_max_len_index=0\n    local lcs_arr_index_max_len_index_max_len_index_max=0\n    local lcs_arr_index_max_len_index_max_len_index_max_len=0\n    local lcs_arr_index_max_len_index_max_len_index_max_len_index=0\n    local lcs_arr_index_max_len_index_max_len_index_max_len_index_max=0\n    local lcs_arr_index_max_len_index_max_len_index_max_len_index_max_len=0\n    local lcs_arr_index_max_len_index_max_len_index_max_len_index_max_len_index=0\n    local lcs_arr_index_max_len_index_max_len_index_max_len_index_max_len_index_max=0\n    local lcs_arr_index_max_len_index_max_len_index_max_len_index_max_len_index_max_len=0\n    local lcs_arr_index_max",
    "  local str1=$1\n  local str2=$2\n  local str3=$3\n  local len1=${#str1}\n  local len2=${#str2}\n  local len3=${#str3}\n  local arr=()\n  local i=0\n  local j=0\n  local k=0\n  local max=0\n  local max_i=0\n  local max_j=0\n  local max_k=0\n  local max_str=\"\"\n  for ((i=0; i<=len1; i++)); do\n    arr[$i,0,0]=0\n  done\n  for ((j=0; j<=len2; j++)); do\n    arr[0,$j,0]=0\n  done\n  for ((k=0; k<=len3; k++)); do\n    arr[0,0,$k]=0\n  done\n  for ((i=1; i<=len1; i++)); do\n    for ((j=1; j<=len2; j++)); do\n      for ((k=1; k<=len3; k++)); do\n        if [[ ${str1:i-1:1} == ${str2:j-1:1} && ${str1:i-1:1} == ${str3:k-1:1} ]]; then\n          arr[$i,$j,$k]=$((arr[i-1,j-1,k-1]+1))\n        else\n          arr[$i,$j,$k]=$((arr[i-1,j,k]>arr[i,j-1,k]?arr[i-1,j,k]:arr[i,j-1,k]))\n          arr[$i,$j,$k]=$((arr[i,j,k-1]>arr[i,j,k]?arr[i,j,k-1]:arr[i,j,k]))\n        fi\n        if [[ ${arr[$i,$j,$k]} -gt $max ]]; then\n          max=${arr[$i,$j,$k]}\n          max_i=$",
    "    if [ -z \"$1\" ] || [ -z \"$2\" ] || [ -z \"$3\" ]; then\n        echo \"Usage: $0 <string1> <string2> <string3>\"\n        return 1\n    fi\n\n    # Create a 2D array to store the LCS lengths for each pair of strings\n    declare -A lcs_lengths\n    for ((i=0; i<=${#1}; i++)); do\n        for ((j=0; j<=${#2}; j++)); do\n            for ((k=0; k<=${#3}; k++)); do\n                lcs_lengths[$i,$j,$k]=0\n            done\n        done\n    done\n\n    # Iterate through the strings and update the LCS lengths\n    for ((i=1; i<=${#1}; i++)); do\n        for ((j=1; j<=${#2}; j++)); do\n            for ((k=1; k<=${#3}; k++)); do\n                if [ \"${1:i-1:1}\" == \"${2:j-1:1}\" ] && [ \"${2:j-1:1}\" == \"${3:k-1:1}\" ]; then\n                    lcs_lengths[$i,$j,$k]=$((lcs_lengths[$i-1,$j-1,$k-1]+1))\n                else\n                    lcs_lengths[$i,$j,$k]=$(max ${lcs_lengths[$i-1,$j,$k]} ${lcs_lengths[$i,$j-1,$k]} ${lcs_lengths[$i,$j,$k-1]})\n                fi\n            done\n        done\n    done\n\n    # Print the LCS\n    print_lcs_of_three \"$1\" \"$2\" \"$3\" \"${lcs_lengths[${#1},${#2},${#3}]}\"",
    "  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"$3\"\n  local lcs1=\"$(lcs \"$str1\" \"$str2\")\"\n  local lcs2=\"$(lcs \"$str1\" \"$str3\")\"\n  local lcs3=\"$(lcs \"$str2\" \"$str3\")\"\n  local lcs_of_three=\"$(lcs \"$lcs1\" \"$lcs2\")\"\n  lcs_of_three=\"$(lcs \"$lcs_of_three\" \"$lcs3\")\"\n  echo \"$lcs_of_three\"",
    "  local s1=\"$1\"\n  local s2=\"$2\"\n  local s3=\"$3\"\n  local lcs=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local lcs_table=()\n\n  for ((i=0; i<=${#s1}; i++)); do\n    for ((j=0; j<=${#s2}; j++)); do\n      for ((k=0; k<=${#s3}; k++)); do\n        if [[ $i -eq 0 || $j -eq 0 || $k -eq 0 ]]; then\n          lcs_table[$i,$j,$k]=0\n        elif [[ ${s1:$i-1:1} == ${s2:$j-1:1} && ${s1:$i-1:1} == ${s3:$k-1:1} ]]; then\n          lcs_table[$i,$j,$k]=$(( ${lcs_table[$i-1,$j-1,$k-1]} + 1 ))\n        else\n          lcs_table[$i,$j,$k]=$(( $(max ${lcs_table[$i-1,$j,$k]} ${lcs_table[$i,$j-1,$k]} ${lcs_table[$i,$j,$k-1]}) ))\n        fi\n      done\n    done\n  done\n\n  i=${#s1}\n  j=${#s2}\n  k=${#s3}\n  while [[ $i -gt 0 && $j -gt 0 && $k -gt 0 ]]; do\n    if [[ ${s1:$i-1:1} == ${s2:$j-1:1} && ${s1:$i-1:1} == ${s3:$k-1:1} ]]; then\n      lcs=\"${s1:$i-1:1}$lcs\"\n      i=$(( $i - 1 ))\n      j=$(( $j - 1 ))\n      k=$(( $k - 1 ))\n    elif [[ ${lcs_table[",
    "  local s1=$1\n  local s2=$2\n  local s3=$3\n  local lcs=()\n  local s1_len=${#s1}\n  local s2_len=${#s2}\n  local s3_len=${#s3}\n  local lcs_len=0\n  local i=0\n  local j=0\n  local k=0\n  local lcs_matrix=()\n\n  for ((i=0; i<=s1_len; i++)); do\n    lcs_matrix[$i]=()\n    for ((j=0; j<=s2_len; j++)); do\n      lcs_matrix[$i][$j]=()\n      for ((k=0; k<=s3_len; k++)); do\n        lcs_matrix[$i][$j][$k]=0\n      done\n    done\n  done\n\n  for ((i=1; i<=s1_len; i++)); do\n    for ((j=1; j<=s2_len; j++)); do\n      for ((k=1; k<=s3_len; k++)); do\n        if [[ ${s1:i-1:1} == ${s2:j-1:1} && ${s1:i-1:1} == ${s3:k-1:1} ]]; then\n          lcs_matrix[$i][$j][$k]=$((lcs_matrix[$((i-1))][$((j-1))][$((k-1))]+1))\n        else\n          lcs_matrix[$i][$j][$k]=$(max ${lcs_matrix[$((i-1))][$j][$k]} ${lcs_matrix[$i][$((j-1))][$k]} ${lcs_matrix[$i][$j][$((k-1))]})\n        fi\n      done\n    done\n  done\n\n  lcs_len=${lcs_matrix[$s1_len][$s2_len][$s3_len]}\n  i=$s1_len",
    "  local s1=$1\n  local s2=$2\n  local s3=$3\n  local m=$((${#s1}+1))\n  local n=$((${#s2}+1))\n  local o=$((${#s3}+1))\n  local -a lcs=()\n  for ((i=0; i<m; i++)); do\n    lcs[$i,0,0]=0\n  done\n  for ((j=0; j<n; j++)); do\n    lcs[0,$j,0]=0\n  done\n  for ((k=0; k<o; k++)); do\n    lcs[0,0,$k]=0\n  done\n  for ((i=1; i<m; i++)); do\n    for ((j=1; j<n; j++)); do\n      for ((k=1; k<o; k++)); do\n        if [[ ${s1:$(($i-1)):1} == ${s2:$(($j-1)):1} && ${s1:$(($i-1)):1} == ${s3:$(($k-1)):1} ]]; then\n          lcs[$i,$j,$k]=$((${lcs[$(($i-1)),$(($j-1)),$(($k-1))]}+1))\n        else\n          lcs[$i,$j,$k]=$((${lcs[$(($i-1)),$j,$k]} > ${lcs[$i,$(($j-1)),$k]} ? ${lcs[$(($i-1)),$j,$k]} : ${lcs[$i,$(($j-1)),$k]}))\n          lcs[$i,$j,$k]=$((${lcs[$i,$j,$k]} > ${lcs[$i,$j,$(($k-1))]} ? ${lcs[$i,$j,$k]} : ${lcs[$i,$j,$(($k-1))]}))\n        fi\n      done",
    "  local str1=$1\n  local str2=$2\n  local str3=$3\n  local len1=${#str1}\n  local len2=${#str2}\n  local len3=${#str3}\n  local lcs_matrix=()\n  local i=0\n  local j=0\n  local k=0\n  local lcs_len=0\n  local lcs_str=\"\"\n\n  # Initialize the matrix\n  for ((i=0; i<=len1; i++)); do\n    lcs_matrix[$i]=()\n    for ((j=0; j<=len2; j++)); do\n      lcs_matrix[$i][$j]=()\n      for ((k=0; k<=len3; k++)); do\n        lcs_matrix[$i][$j][$k]=0\n      done\n    done\n  done\n\n  # Fill the matrix\n  for ((i=1; i<=len1; i++)); do\n    for ((j=1; j<=len2; j++)); do\n      for ((k=1; k<=len3; k++)); do\n        if [[ ${str1:i-1:1} == ${str2:j-1:1} && ${str2:j-1:1} == ${str3:k-1:1} ]]; then\n          lcs_matrix[$i][$j][$k]=$(( ${lcs_matrix[$((i-1))][$((j-1))][$((k-1))]} + 1 ))\n        else\n          lcs_matrix[$i][$j][$k]=$(max ${lcs_matrix[$((i-1))][$j][$k]} ${lcs_matrix[$i][$((j-1))][$k]} ${lcs_matrix[$i][$j][$((k-1))]})\n        fi\n      done\n    done\n  done\n\n  # Get the length of the longest common subsequence\n  lcs_len=${lcs_matrix[$len1][$len2][$len3]}\n\n  # Get",
    "  # TODO: Implement this function\n  #\n  # Hint:\n  #   1. Use lcs_of_two() to find the longest common subsequence of two strings\n  #   2. Use the longest common subsequence of two strings to find the longest common subsequence of three strings\n  #   3. Use the longest common subsequence of three strings to find the longest common subsequence of four strings\n  #   4. ...\n  #   5. Use the longest common subsequence of n strings to find the longest common subsequence of n+1 strings\n  #   6. Use the longest common subsequence of n+1 strings to find the longest common subsequence of n+2 strings\n  #   7. ...\n  #   8. Use the longest common subsequence of n+m strings to find the longest common subsequence of n+m+1 strings\n  #   9. ...\n  #   10. Use the longest common subsequence of n+m+p strings to find the longest common subsequence of n+m+p+1 strings\n  #   11. ...\n  #   12. Use the longest common subsequence of n+m+p+q strings to find the longest common subsequence of n+m+p+q+1 strings\n  #   13. ...\n  #   14. Use the longest common subsequence of n+m+p+q+r strings to find the longest common subsequence of n+m+p+q+r+1 strings\n  #   15. ...\n  #   16. Use the longest common subsequence of n+m+p+q+r+s strings to find the longest common subsequence of n+m+p+q+r+s+1 strings\n  #   17. ...\n  #   18. Use the longest common subsequence of n+m+p+q+r+s+t strings to find the longest common subsequence of n+m+p+q+r+s+t+1 strings\n  #   19. ...\n  #   20. Use the longest common subsequence of n+m+p+q+r+s+t+u strings to find the longest common subsequence of n+m+p+q+r+s+t+u+1 strings\n  #   21. ...",
    "    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <string1> <string2> <string3>\"\n        return 1\n    fi\n\n    local string1=\"$1\"\n    local string2=\"$2\"\n    local string3=\"$3\"\n\n    local m=${#string1}\n    local n=${#string2}\n    local o=${#string3}\n\n    local lcs_table=()\n    local i\n    local j\n    local k\n    for ((i=0; i<=m; i++)); do\n        for ((j=0; j<=n; j++)); do\n            for ((k=0; k<=o; k++)); do\n                if [ $i -eq 0 ] || [ $j -eq 0 ] || [ $k -eq 0 ]; then\n                    lcs_table[$i,$j,$k]=0\n                elif [ \"${string1:$i-1:1}\" == \"${string2:$j-1:1}\" ] && [ \"${string1:$i-1:1}\" == \"${string3:$k-1:1}\" ]; then\n                    lcs_table[$i,$j,$k]=$(( ${lcs_table[$i-1,$j-1,$k-1]} + 1 ))\n                else\n                    lcs_table[$i,$j,$k]=$(max ${lcs_table[$i-1,$j,$k]} ${lcs_table[$i,$j-1,$k]} ${lcs_table[$i,$j,$k-1]})\n                fi\n            done\n        done\n    done\n\n    echo ${lcs_table[$m,$n,$o]}",
    "  local string1=\"$1\"\n  local string2=\"$2\"\n  local string3=\"$3\"\n  local lcs_string1_string2=\"$(lcs \"$string1\" \"$string2\")\"\n  local lcs_string1_string2_string3=\"$(lcs \"$lcs_string1_string2\" \"$string3\")\"\n  echo \"$lcs_string1_string2_string3\"",
    "  local string1=\"$1\"\n  local string2=\"$2\"\n  local string3=\"$3\"\n  local lcs_of_two_strings\n  local lcs_of_three_strings\n\n  lcs_of_two_strings=\"$(lcs \"$string1\" \"$string2\")\"\n  lcs_of_three_strings=\"$(lcs \"$lcs_of_two_strings\" \"$string3\")\"\n\n  echo \"$lcs_of_three_strings\""
  ]
}
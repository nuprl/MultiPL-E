{
  "name": "mbpp_125_find_length",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n#\n# $1 is a string\nfind_length() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    find_length \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"11000010001\") = \"6\" ]]\n    [[ $(candidate \"10111\") = \"1\" ]]\n    [[ $(candidate \"11011101100101\") = \"2\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local str=$1\n  local max_length=0\n  local length=0\n  local count_0=0\n  local count_1=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ ${str:$i:1} == 0 ]]; then\n      (( count_0++ ))\n      (( length++ ))\n    elif [[ ${str:$i:1} == 1 ]]; then\n      (( count_1++ ))\n      (( length++ ))\n    fi\n    if [[ $count_0 -eq $count_1 ]]; then\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n      length=0\n      count_0=0\n      count_1=0\n    fi\n  done\n  echo $max_length",
    "    local str=$1\n    local len=${#str}\n    local max=0\n    local count=0\n    for ((i=0; i<len; i++)); do\n        if [[ ${str:$i:1} == \"0\" ]]; then\n            ((count++))\n        else\n            ((count--))\n        fi\n        if [[ $count -gt $max ]]; then\n            max=$count\n        fi\n    done\n    echo $max",
    "    local str=$1\n    local len=${#str}\n    local max_len=0\n    local count=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:$i:1} == \"0\" ]]; then\n      count=$(( count - 1 ))\n    else\n      count=$(( count + 1 ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:$i:1} == 0 ]]; then\n      (( count-- ))\n    else\n      (( count++ ))\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "    local string=$1\n    local length=${#string}\n    local max_length=0\n    local count=0\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local temp_length=0\n    local temp_string=''\n    local temp_count=0\n    local temp_max_count=0\n    local temp_min_count=0\n    local temp_max_count_index=0\n    local temp_min_count_index=0\n    local temp_max_count_length=0\n    local temp_min_count_length=0\n    local temp_max_count_string=''\n    local temp_min_count_string=''\n\n    for ((i=0; i<length; i++)); do\n        for ((j=i; j<length; j++)); do\n            temp_string=${string:i:j-i+1}\n            temp_length=${#temp_string}\n            temp_count=0\n            temp_max_count=0\n            temp_min_count=0\n            temp_max_count_index=0\n            temp_min_count_index=0\n            temp_max_count_length=0\n            temp_min_count_length=0\n            temp_max_count_string=''\n            temp_min_count_string=''\n            for ((k=0; k<temp_length; k++)); do\n                temp=${temp_string:k:1}\n                if [ $temp -eq 0 ]; then\n                    temp_count=$((temp_count+1))\n                else\n                    temp_count=$((temp_count-1))\n                fi\n                if [ $temp_count -gt $temp_max_count ]; then\n                    temp_max_count=$temp_count\n                    temp_max_count_index=$k\n                    temp_max_count_length=$temp_length\n                    temp_max_count_string=$temp_string\n                elif [ $temp_count -lt $temp_min_count ]; then\n                    temp_min_count=$temp_count\n                    temp_min_count_index=$k\n                    temp_min_count_length=$",
    "  local str=$1\n  local len=${#str}\n  local i=0\n  local j=0\n  local max=0\n  local count=0\n  local tmp=0\n  local zero=0\n  local one=0\n  while [ $i -lt $len ]; do\n    j=$i\n    while [ $j -lt $len ]; do\n      tmp=${str:$j:1}\n      if [ $tmp -eq 0 ]; then\n        zero=$((zero+1))\n      else\n        one=$((one+1))\n      fi\n      count=$((zero-one))\n      if [ $count -lt 0 ]; then\n        count=$((-count))\n      fi\n      if [ $count -gt $max ]; then\n        max=$count\n      fi\n      j=$((j+1))\n    done\n    i=$((i+1))\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n",
    "  local string=\"$1\"\n  local length=${#string}\n  local max_length=0\n  local i=0\n  local j=0\n  local count=0\n\n  while [ $i -lt $length ]\n  do\n    if [ \"${string:$i:1}\" = \"0\" ]\n    then\n      count=$((count+1))\n    else\n      count=$((count-1))\n    fi\n\n    if [ $count -lt 0 ]\n    then\n      count=0\n      j=$((i+1))\n    fi\n\n    if [ $count -gt $max_length ]\n    then\n      max_length=$count\n    fi\n\n    i=$((i+1))\n  done\n\n  echo $max_length",
    "    local str=$1\n    local max_length=0\n    local length=0\n    local i=0\n    local j=0\n    local len=${#str}\n    local char=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            char=${str:j:1}\n            if [ \"$char\" == \"0\" ]; then\n                length=$((length+1))\n            else\n                length=$((length-1))\n            fi\n            if [ $length -lt 0 ]; then\n                length=0\n            fi\n            if [ $length -gt $max_length ]; then\n                max_length=$length\n            fi\n        done\n    done\n    echo $max_length",
    "  local str=$1\n  local max_len=0\n  local len=0\n  local count_0=0\n  local count_1=0\n  local i=0\n  local j=0\n  local ch=''\n  local diff=0\n\n  for ((i=0; i<${#str}; i++)); do\n    ch=${str:$i:1}\n    if [[ $ch == 0 ]]; then\n      count_0=$((count_0 + 1))\n    else\n      count_1=$((count_1 + 1))\n    fi\n    diff=$((count_0 - count_1))\n    if [[ $diff == 0 ]]; then\n      len=$((i + 1))\n    elif [[ $diff > 0 ]]; then\n      len=$((i - j + 1))\n    else\n      while [[ $diff < 0 ]]; do\n        ch=${str:$j:1}\n        if [[ $ch == 0 ]]; then\n          count_0=$((count_0 - 1))\n        else\n          count_1=$((count_1 - 1))\n        fi\n        j=$((j + 1))\n        diff=$((count_0 - count_1))\n      done\n      len=$((i - j + 1))\n    fi\n    if [[ $len -gt $max_len ]]; then\n      max_len=$len\n    fi\n  done\n  echo $max_len",
    "    local str=$1\n    local len=${#str}\n    local max_len=0\n    local i=0\n    local j=0\n    local count=0\n    local count_zero=0\n    local count_one=0\n    while [ $i -lt $len ]\n    do\n        count_zero=0\n        count_one=0\n        while [ $j -lt $len ]\n        do\n            if [ ${str:$j:1} == \"0\" ]\n            then\n                count_zero=$((count_zero+1))\n            else\n                count_one=$((count_one+1))\n            fi\n            count=$((count_zero-count_one))\n            if [ $count -lt 0 ]\n            then\n                count=$((-count))\n            fi\n            if [ $count -gt $max_len ]\n            then\n                max_len=$count\n            fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n        j=$i\n    done\n    echo $max_len",
    "  local input=$1\n  local max_length=0\n  local current_length=0\n  local current_char=0\n  local previous_char=0\n  local i=0\n  local length=${#input}\n  for (( i=0; i<$length; i++ )); do\n    current_char=${input:i:1}\n    if [ $current_char -eq $previous_char ]; then\n      ((current_length++))\n    else\n      if [ $current_length -gt $max_length ]; then\n        max_length=$current_length\n      fi\n      current_length=1\n    fi\n    previous_char=$current_char\n  done\n  if [ $current_length -gt $max_length ]; then\n    max_length=$current_length\n  fi\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  while [ $i -lt $len ]; do\n    local char=${str:$i:1}\n    if [ $char == \"1\" ]; then\n      count=$((count+1))\n    else\n      count=$((count-1))\n    fi\n    if [ $count -gt $max ]; then\n      max=$count\n    fi\n    i=$((i+1))\n  done\n  echo $max",
    "  local str=$1\n  local max=0\n  local count=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ ${str:$i:1} == \"0\" ]]; then\n      (( count++ ))\n    else\n      (( count-- ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "    local input=$1\n    local len=${#input}\n    local max=0\n    local count=0\n    for (( i=0; i<len; i++ )); do\n        if [[ ${input:i:1} == \"0\" ]]; then\n            (( count++ ))\n        else\n            (( count-- ))\n        fi\n        if [[ $count -lt 0 ]]; then\n            count=0\n        fi\n        if [[ $count -gt $max ]]; then\n            max=$count\n        fi\n    done\n    echo $max",
    "    local str=$1\n    local len=${#str}\n    local max_len=0\n    local i=0\n    local j=0\n    local count=0\n    local zero_count=0\n    local one_count=0\n    local temp_str=''\n    while [ $i -lt $len ]\n    do\n        j=$i\n        while [ $j -lt $len ]\n        do\n            temp_str=${str:$i:$j}\n            zero_count=$(echo $temp_str | grep -o 0 | wc -l)\n            one_count=$(echo $temp_str | grep -o 1 | wc -l)\n            count=$(($zero_count-$one_count))\n            if [ $count -lt 0 ]\n            then\n                count=$(($count*-1))\n            fi\n            if [ $count -gt $max_len ]\n            then\n                max_len=$count\n            fi\n            j=$(($j+1))\n        done\n        i=$(($i+1))\n    done\n    echo $max_len",
    "  local string=\"$1\"\n  local max_length=0\n  local current_length=0\n  local current_char=''\n  local previous_char=''\n  local i=0\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n    if [[ \"$current_char\" == \"$previous_char\" ]]; then\n      (( current_length++ ))\n    else\n      (( current_length = 1 ))\n    fi\n    if [[ \"$current_length\" -gt \"$max_length\" ]]; then\n      max_length=\"$current_length\"\n    fi\n    previous_char=\"$current_char\"\n  done\n  echo \"$max_length\"",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local cur_len=0\n  local i=0\n  local j=0\n  local k=0\n  local zero_count=0\n  local one_count=0\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      cur_len=0\n      zero_count=0\n      one_count=0\n      for ((k=i; k<=j; k++)); do\n        if [[ ${str:k:1} == \"0\" ]]; then\n          zero_count=$((zero_count+1))\n        else\n          one_count=$((one_count+1))\n        fi\n      done\n      cur_len=$((zero_count-one_count))\n      if [[ $cur_len -lt 0 ]]; then\n        cur_len=$((-1*cur_len))\n      fi\n      if [[ $cur_len -gt $max_len ]]; then\n        max_len=$cur_len\n      fi\n    done\n  done\n\n  echo $max_len",
    "  local string=$1\n  local length=0\n  local max_length=0\n  local zero_count=0\n  local one_count=0\n  local i=0\n  local j=0\n  local char=''\n  local char_count=0\n\n  for ((i=0; i<${#string}; i++)); do\n    char=${string:$i:1}\n    if [[ $char == '0' ]]; then\n      ((zero_count++))\n    else\n      ((one_count++))\n    fi\n    ((length++))\n\n    if [[ $zero_count == $one_count ]]; then\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n      length=0\n      zero_count=0\n      one_count=0\n    fi\n  done\n\n  echo $max_length"
  ]
}
{
  "name": "mbpp_125_find_length",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n#\n# $1 is a string\nfind_length() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    find_length \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"11000010001\") = \"6\" ]]\n    [[ $(candidate \"10111\") = \"1\" ]]\n    [[ $(candidate \"11011101100101\") = \"2\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local str=$1\n  local max_length=0\n  local length=0\n  local count_0=0\n  local count_1=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ ${str:$i:1} == 0 ]]; then\n      (( count_0++ ))\n      (( length++ ))\n    elif [[ ${str:$i:1} == 1 ]]; then\n      (( count_1++ ))\n      (( length++ ))\n    fi\n    if [[ $count_0 -eq $count_1 ]]; then\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n      length=0\n      count_0=0\n      count_1=0\n    fi\n  done\n  echo $max_length",
    "    local str=$1\n    local len=${#str}\n    local max=0\n    local count=0\n    for ((i=0; i<len; i++)); do\n        if [[ ${str:$i:1} == \"0\" ]]; then\n            ((count++))\n        else\n            ((count--))\n        fi\n        if [[ $count -gt $max ]]; then\n            max=$count\n        fi\n    done\n    echo $max",
    "    local str=$1\n    local len=${#str}\n    local max_len=0\n    local count=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:$i:1} == \"0\" ]]; then\n      count=$(( count - 1 ))\n    else\n      count=$(( count + 1 ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:$i:1} == 0 ]]; then\n      (( count-- ))\n    else\n      (( count++ ))\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "    local string=$1\n    local length=${#string}\n    local max_length=0\n    local count=0\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local temp_length=0\n    local temp_string=''\n    local temp_count=0\n    local temp_max_count=0\n    local temp_min_count=0\n    local temp_max_count_index=0\n    local temp_min_count_index=0\n    local temp_max_count_length=0\n    local temp_min_count_length=0\n    local temp_max_count_string=''\n    local temp_min_count_string=''\n\n    for ((i=0; i<length; i++)); do\n        for ((j=i; j<length; j++)); do\n            temp_string=${string:i:j-i+1}\n            temp_length=${#temp_string}\n            temp_count=0\n            temp_max_count=0\n            temp_min_count=0\n            temp_max_count_index=0\n            temp_min_count_index=0\n            temp_max_count_length=0\n            temp_min_count_length=0\n            temp_max_count_string=''\n            temp_min_count_string=''\n            for ((k=0; k<temp_length; k++)); do\n                temp=${temp_string:k:1}\n                if [ $temp -eq 0 ]; then\n                    temp_count=$((temp_count+1))\n                else\n                    temp_count=$((temp_count-1))\n                fi\n                if [ $temp_count -gt $temp_max_count ]; then\n                    temp_max_count=$temp_count\n                    temp_max_count_index=$k\n                    temp_max_count_length=$temp_length\n                    temp_max_count_string=$temp_string\n                elif [ $temp_count -lt $temp_min_count ]; then\n                    temp_min_count=$temp_count\n                    temp_min_count_index=$k\n                    temp_min_count_length=$",
    "  local str=$1\n  local len=${#str}\n  local i=0\n  local j=0\n  local max=0\n  local count=0\n  local tmp=0\n  local zero=0\n  local one=0\n  while [ $i -lt $len ]; do\n    j=$i\n    while [ $j -lt $len ]; do\n      tmp=${str:$j:1}\n      if [ $tmp -eq 0 ]; then\n        zero=$((zero+1))\n      else\n        one=$((one+1))\n      fi\n      count=$((zero-one))\n      if [ $count -lt 0 ]; then\n        count=$((-count))\n      fi\n      if [ $count -gt $max ]; then\n        max=$count\n      fi\n      j=$((j+1))\n    done\n    i=$((i+1))\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n",
    "  local string=\"$1\"\n  local length=${#string}\n  local max_length=0\n  local i=0\n  local j=0\n  local count=0\n\n  while [ $i -lt $length ]\n  do\n    if [ \"${string:$i:1}\" = \"0\" ]\n    then\n      count=$((count+1))\n    else\n      count=$((count-1))\n    fi\n\n    if [ $count -lt 0 ]\n    then\n      count=0\n      j=$((i+1))\n    fi\n\n    if [ $count -gt $max_length ]\n    then\n      max_length=$count\n    fi\n\n    i=$((i+1))\n  done\n\n  echo $max_length",
    "    local str=$1\n    local max_length=0\n    local length=0\n    local i=0\n    local j=0\n    local len=${#str}\n    local char=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            char=${str:j:1}\n            if [ \"$char\" == \"0\" ]; then\n                length=$((length+1))\n            else\n                length=$((length-1))\n            fi\n            if [ $length -lt 0 ]; then\n                length=0\n            fi\n            if [ $length -gt $max_length ]; then\n                max_length=$length\n            fi\n        done\n    done\n    echo $max_length",
    "  local str=$1\n  local max_len=0\n  local len=0\n  local count_0=0\n  local count_1=0\n  local i=0\n  local j=0\n  local ch=''\n  local diff=0\n\n  for ((i=0; i<${#str}; i++)); do\n    ch=${str:$i:1}\n    if [[ $ch == 0 ]]; then\n      count_0=$((count_0 + 1))\n    else\n      count_1=$((count_1 + 1))\n    fi\n    diff=$((count_0 - count_1))\n    if [[ $diff == 0 ]]; then\n      len=$((i + 1))\n    elif [[ $diff > 0 ]]; then\n      len=$((i - j + 1))\n    else\n      while [[ $diff < 0 ]]; do\n        ch=${str:$j:1}\n        if [[ $ch == 0 ]]; then\n          count_0=$((count_0 - 1))\n        else\n          count_1=$((count_1 - 1))\n        fi\n        j=$((j + 1))\n        diff=$((count_0 - count_1))\n      done\n      len=$((i - j + 1))\n    fi\n    if [[ $len -gt $max_len ]]; then\n      max_len=$len\n    fi\n  done\n  echo $max_len",
    "    local str=$1\n    local len=${#str}\n    local max_len=0\n    local i=0\n    local j=0\n    local count=0\n    local count_zero=0\n    local count_one=0\n    while [ $i -lt $len ]\n    do\n        count_zero=0\n        count_one=0\n        while [ $j -lt $len ]\n        do\n            if [ ${str:$j:1} == \"0\" ]\n            then\n                count_zero=$((count_zero+1))\n            else\n                count_one=$((count_one+1))\n            fi\n            count=$((count_zero-count_one))\n            if [ $count -lt 0 ]\n            then\n                count=$((-count))\n            fi\n            if [ $count -gt $max_len ]\n            then\n                max_len=$count\n            fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n        j=$i\n    done\n    echo $max_len",
    "  local input=$1\n  local max_length=0\n  local current_length=0\n  local current_char=0\n  local previous_char=0\n  local i=0\n  local length=${#input}\n  for (( i=0; i<$length; i++ )); do\n    current_char=${input:i:1}\n    if [ $current_char -eq $previous_char ]; then\n      ((current_length++))\n    else\n      if [ $current_length -gt $max_length ]; then\n        max_length=$current_length\n      fi\n      current_length=1\n    fi\n    previous_char=$current_char\n  done\n  if [ $current_length -gt $max_length ]; then\n    max_length=$current_length\n  fi\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  while [ $i -lt $len ]; do\n    local char=${str:$i:1}\n    if [ $char == \"1\" ]; then\n      count=$((count+1))\n    else\n      count=$((count-1))\n    fi\n    if [ $count -gt $max ]; then\n      max=$count\n    fi\n    i=$((i+1))\n  done\n  echo $max",
    "  local str=$1\n  local max=0\n  local count=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ ${str:$i:1} == \"0\" ]]; then\n      (( count++ ))\n    else\n      (( count-- ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "    local input=$1\n    local len=${#input}\n    local max=0\n    local count=0\n    for (( i=0; i<len; i++ )); do\n        if [[ ${input:i:1} == \"0\" ]]; then\n            (( count++ ))\n        else\n            (( count-- ))\n        fi\n        if [[ $count -lt 0 ]]; then\n            count=0\n        fi\n        if [[ $count -gt $max ]]; then\n            max=$count\n        fi\n    done\n    echo $max",
    "    local str=$1\n    local len=${#str}\n    local max_len=0\n    local i=0\n    local j=0\n    local count=0\n    local zero_count=0\n    local one_count=0\n    local temp_str=''\n    while [ $i -lt $len ]\n    do\n        j=$i\n        while [ $j -lt $len ]\n        do\n            temp_str=${str:$i:$j}\n            zero_count=$(echo $temp_str | grep -o 0 | wc -l)\n            one_count=$(echo $temp_str | grep -o 1 | wc -l)\n            count=$(($zero_count-$one_count))\n            if [ $count -lt 0 ]\n            then\n                count=$(($count*-1))\n            fi\n            if [ $count -gt $max_len ]\n            then\n                max_len=$count\n            fi\n            j=$(($j+1))\n        done\n        i=$(($i+1))\n    done\n    echo $max_len",
    "  local string=\"$1\"\n  local max_length=0\n  local current_length=0\n  local current_char=''\n  local previous_char=''\n  local i=0\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n    if [[ \"$current_char\" == \"$previous_char\" ]]; then\n      (( current_length++ ))\n    else\n      (( current_length = 1 ))\n    fi\n    if [[ \"$current_length\" -gt \"$max_length\" ]]; then\n      max_length=\"$current_length\"\n    fi\n    previous_char=\"$current_char\"\n  done\n  echo \"$max_length\"",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local cur_len=0\n  local i=0\n  local j=0\n  local k=0\n  local zero_count=0\n  local one_count=0\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      cur_len=0\n      zero_count=0\n      one_count=0\n      for ((k=i; k<=j; k++)); do\n        if [[ ${str:k:1} == \"0\" ]]; then\n          zero_count=$((zero_count+1))\n        else\n          one_count=$((one_count+1))\n        fi\n      done\n      cur_len=$((zero_count-one_count))\n      if [[ $cur_len -lt 0 ]]; then\n        cur_len=$((-1*cur_len))\n      fi\n      if [[ $cur_len -gt $max_len ]]; then\n        max_len=$cur_len\n      fi\n    done\n  done\n\n  echo $max_len",
    "  local string=$1\n  local length=0\n  local max_length=0\n  local zero_count=0\n  local one_count=0\n  local i=0\n  local j=0\n  local char=''\n  local char_count=0\n\n  for ((i=0; i<${#string}; i++)); do\n    char=${string:$i:1}\n    if [[ $char == '0' ]]; then\n      ((zero_count++))\n    else\n      ((one_count++))\n    fi\n    ((length++))\n\n    if [[ $zero_count == $one_count ]]; then\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n      length=0\n      zero_count=0\n      one_count=0\n    fi\n  done\n\n  echo $max_length",
    "    local string=$1\n    local max_length=0\n    local length=0\n    local i=0\n    local j=0\n    local k=0\n    local char=''\n    local char_next=''\n\n    for ((i=0; i<${#string}; i++)); do\n        char=${string:$i:1}\n        if [[ $char == '0' ]]; then\n            length=0\n            for ((j=i; j<${#string}; j++)); do\n                char_next=${string:$j:1}\n                if [[ $char_next == '1' ]]; then\n                    length=$((length+1))\n                else\n                    length=$((length-1))\n                fi\n                if [[ $length -gt $max_length ]]; then\n                    max_length=$length\n                fi\n            done\n        fi\n    done\n\n    echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local i=0\n  local j=0\n  local count_0=0\n  local count_1=0\n  local diff=0\n\n  for ((i=0; i<len; i++)); do\n    count_0=0\n    count_1=0\n    for ((j=i; j<len; j++)); do\n      if [[ ${str:j:1} == '0' ]]; then\n        count_0=$((count_0+1))\n      else\n        count_1=$((count_1+1))\n      fi\n      diff=$((count_0-count_1))\n      if [[ $diff -lt 0 ]]; then\n        diff=$((-1*diff))\n      fi\n      if [[ $diff -gt $max_len ]]; then\n        max_len=$diff\n      fi\n    done\n  done\n\n  echo $max_len",
    "  local string=$1\n  local max_length=0\n  local length=0\n  local count_zero=0\n  local count_one=0\n  local i=0\n  local j=0\n  local length_string=${#string}\n  for (( i=0; i<length_string; i++ )); do\n    for (( j=i; j<length_string; j++ )); do\n      if [[ ${string:$j:1} == \"0\" ]]; then\n        count_zero=$((count_zero + 1))\n      else\n        count_one=$((count_one + 1))\n      fi\n      length=$((count_zero - count_one))\n      if [[ $length -lt 0 ]]; then\n        length=$((-1 * length))\n      fi\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n    done\n    count_zero=0\n    count_one=0\n  done\n  echo $max_length",
    "  local string=$1\n  local length=${#string}\n  echo $length",
    "    local string=$1\n    local max_length=0\n    local current_length=0\n    local current_char=0\n    local next_char=0\n    local length=0\n    local i=0\n\n    length=${#string}\n\n    for (( i=0; i<length; i++ )); do\n        current_char=${string:$i:1}\n        next_char=${string:$((i+1)):1}\n\n        if [ $current_char -eq $next_char ]; then\n            ((current_length++))\n        else\n            if [ $current_length -gt $max_length ]; then\n                max_length=$current_length\n            fi\n            current_length=0\n        fi\n    done\n\n    echo $max_length",
    "  local string=$1\n  local length=${#string}\n  local max_diff=0\n  local count_0=0\n  local count_1=0\n  for ((i=0; i<length; i++)); do\n    if [[ ${string:$i:1} == \"0\" ]]; then\n      ((count_0++))\n    else\n      ((count_1++))\n    fi\n    local diff=$((count_0-count_1))\n    if [[ $diff -lt 0 ]]; then\n      diff=$((-diff))\n    fi\n    if [[ $diff -gt $max_diff ]]; then\n      max_diff=$diff\n    fi\n  done\n  echo $max_diff",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local tmp=0\n  for ((i=0; i<len; i++))\n  do\n    for ((j=i; j<len; j++))\n    do\n      count=0\n      for ((k=i; k<=j; k++))\n      do\n        if [ \"${str:k:1}\" == \"0\" ]\n        then\n          ((count++))\n        else\n          ((count--))\n        fi\n      done\n      if [ $count -lt 0 ]\n      then\n        tmp=$((-count))\n      else\n        tmp=$count\n      fi\n      if [ $tmp -gt $max ]\n      then\n        max=$tmp\n      fi\n    done\n  done\n  echo $max",
    "  local str=\"$1\"\n  local len=0\n  local max_len=0\n  local i=0\n  local j=0\n  local k=0\n  local n=${#str}\n  for (( i=0; i<n; i++ )); do\n    for (( j=i; j<n; j++ )); do\n      len=0\n      for (( k=i; k<=j; k++ )); do\n        if [[ ${str:k:1} == \"0\" ]]; then\n          ((len++))\n        else\n          ((len--))\n        fi\n      done\n      if [[ $len -gt $max_len ]]; then\n        max_len=$len\n      fi\n    done\n  done\n  echo $max_len",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n ",
    "  local string=$1\n  local length=${#string}\n  local max_length=0\n  local current_length=0\n  local i=0\n  local j=0\n  local current_char=''\n  local next_char=''\n\n  while [ $i -lt $length ]; do\n    current_char=${string:$i:1}\n    next_char=${string:$((i+1)):1}\n\n    if [ \"$current_char\" == \"$next_char\" ]; then\n      current_length=$((current_length+1))\n    else\n      if [ $current_length -gt $max_length ]; then\n        max_length=$current_length\n      fi\n      current_length=0\n    fi\n    i=$((i+1))\n  done\n\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  while [ $i -lt $len ]\n  do\n    local c=${str:$i:1}\n    if [ $c == '0' ]\n    then\n      count=$((count-1))\n    else\n      count=$((count+1))\n    fi\n    if [ $count -lt 0 ]\n    then\n      count=0\n    fi\n    if [ $count -gt $max ]\n    then\n      max=$count\n    fi\n    i=$((i+1))\n  done\n  echo $max",
    "    local str=\"$1\"\n    local len=${#str}\n    local max_len=0\n    local i=0\n    local j=0\n    local count_0=0\n    local count_1=0\n    while [ $i -lt $len ]\n    do\n        if [ ${str:$i:1} == \"0\" ]\n        then\n            count_0=$((count_0+1))\n        else\n            count_1=$((count_1+1))\n        fi\n        if [ $count_0 -eq $count_1 ]\n        then\n            local curr_len=$((count_0+count_1))\n            if [ $curr_len -gt $max_len ]\n            then\n                max_len=$curr_len\n            fi\n        fi\n        i=$((i+1))\n    done\n    echo $max_len",
    "  local str=$1\n  local max_length=0\n  local length=0\n  local i=0\n  local j=0\n  local k=0\n  local len=${#str}\n  local zero_count=0\n  local one_count=0\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      zero_count=0\n      one_count=0\n      for ((k=i; k<=j; k++)); do\n        if [[ ${str:k:1} == '0' ]]; then\n          zero_count=$((zero_count + 1))\n        else\n          one_count=$((one_count + 1))\n        fi\n      done\n      length=$((zero_count - one_count))\n      if [[ $length -lt 0 ]]; then\n        length=$((-1 * length))\n      fi\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n    done\n  done\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local curr_len=0\n  local i=0\n  local j=0\n  local curr_char=''\n  local prev_char=''\n\n  for (( i=0; i<len; i++ )); do\n    curr_char=${str:$i:1}\n    if [[ $curr_char == $prev_char ]]; then\n      (( curr_len++ ))\n    else\n      if [[ $curr_len -gt $max_len ]]; then\n        max_len=$curr_len\n      fi\n      curr_len=1\n      prev_char=$curr_char\n    fi\n  done\n\n  if [[ $curr_len -gt $max_len ]]; then\n    max_len=$curr_len\n  fi\n\n  echo $max_len",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local",
    "  local str=$1\n  local len=${#str}\n  local max_diff=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=",
    "    local str=$1\n    local len=${#str}\n    local max=0\n    local count=0\n    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            count=0\n            for ((k=i; k<=j; k++)); do\n                if [[ ${str:k:1} == \"1\" ]]; then\n                    ((count++))\n                else\n                    ((count--))\n                fi\n            done\n            if [[ $count -lt 0 ]]; then\n                tmp=$((-count))\n            else\n                tmp=$count\n            fi\n            if [[ $tmp -gt $max ]]; then\n                max=$tmp\n            fi\n        done\n    done\n    echo $max",
    "  local string=\"$1\"\n  local length=${#string}\n  local max_length=0\n  local i=0\n  local j=0\n  local count_0=0\n  local count_1=0\n\n  while [ $i -lt $length ]; do\n    while [ $j -lt $length ]; do\n      if [ \"${string:$j:1}\" == \"0\" ]; then\n        count_0=$((count_0+1))\n      else\n        count_1=$((count_1+1))\n      fi\n      j=$((j+1))\n      if [ $count_0 -gt $count_1 ]; then\n        if [ $((count_0-count_1)) -gt $max_length ]; then\n          max_length=$((count_0-count_1))\n        fi\n      else\n        if [ $((count_1-count_0)) -gt $max_length ]; then\n          max_length=$((count_1-count_0))\n        fi\n      fi\n    done\n    i=$((i+1))\n  done\n  echo $max_length",
    "  local str=\"$1\"\n  local len=${#str}\n  local max_len=0\n  local i=0\n  local j=0\n  local count_0=0\n  local count_1=0\n  while (( i < len ))\n  do\n    if [[ \"${str:$i:1}\" == \"0\" ]]\n    then\n      (( count_0++ ))\n    else\n      (( count_1++ ))\n    fi\n    (( i++ ))\n    while (( count_0 != count_1 )) && (( j < i ))\n    do\n      if [[ \"${str:$j:1}\" == \"0\" ]]\n      then\n        (( count_0-- ))\n      else\n        (( count_1-- ))\n      fi\n      (( j++ ))\n    done\n    if (( count_0 == count_1 )) && (( i - j > max_len ))\n    then\n      max_len=$(( i - j ))\n    fi\n  done\n  echo $max_len",
    "  local string=$1\n  local length=${#string}\n  local max_diff=0\n  local diff=0\n  local i=0\n  local j=0\n  local k=0\n  local count_0=0\n  local count_1=0\n  local count_0_temp=0\n  local count_1_temp=0\n  local temp=0\n  local temp_string=\"\"\n  local temp_string_length=0\n  local temp_string_length_max=0\n  local temp_string_length_min=0\n  local temp_string_length_diff=0\n  local temp_string_length_diff_max=0\n  local temp_string_length_diff_min=0\n  local temp_string_length_diff_max_index=0\n  local temp_string_length_diff_min_index=0\n  local temp_string_length_diff_max_index_start=0\n  local temp_string_length_diff_min_index_start=0\n  local temp_string_length_diff_max_index_end=0\n  local temp_string_length_diff_min_index_end=0\n  local temp_string_length_diff_max_index_start_temp=0\n  local temp_string_length_diff_min_index_start_temp=0\n  local temp_string_length_diff_max_index_end_temp=0\n  local temp_string_length_diff_min_index_end_temp=0\n  local temp_string_length_diff_max_index_start_temp_length=0\n  local temp_string_length_diff_min_index_start_temp_length=0\n  local temp_string_length_diff_max_index_end_temp_length=0\n  local temp_string_length_diff_min_index_end_temp_length=0\n  local temp_string_length_diff_max_index_start_temp_length_max=0\n  local temp_string_length_diff_min_index_start_temp_length_max=0\n  local temp_string_length_diff_max_index_end_temp_length_max",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local cur_len=0\n  local i=0\n  local j=0\n  local k=0\n  local c=0\n  local zero_count=0\n  local one_count=0\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      zero_count=0\n      one_count=0\n      for ((k=i; k<=j; k++)); do\n        c=${str:k:1}\n        if [[ $c == \"0\" ]]; then\n          zero_count=$((zero_count+1))\n        else\n          one_count=$((one_count+1))\n        fi\n      done\n      cur_len=$((zero_count-one_count))\n      if [[ $cur_len -lt 0 ]]; then\n        cur_len=$((-1*cur_len))\n      fi\n      if [[ $cur_len -gt $max_len ]]; then\n        max_len=$cur_len\n      fi\n    done\n  done\n  echo $max_len",
    "  local str=\"$1\"\n  local len=${#str}\n  local max=0\n  local i=0\n  local j=0\n  local cnt=0\n  local cnt_0=0\n  local cnt_1=0\n  while [ $i -lt $len ]\n  do\n    if [ ${str:$i:1} == \"0\" ]\n    then\n      cnt_0=$((cnt_0+1))\n    else\n      cnt_1=$((cnt_1+1))\n    fi\n    if [ $cnt_0 -eq $cnt_1 ]\n    then\n      cnt=$((cnt_0+cnt_1))\n      if [ $cnt -gt $max ]\n      then\n        max=$cnt\n      fi\n      cnt_0=0\n      cnt_1=0\n    fi\n    i=$((i+1))\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local i=0\n  local j=0\n  local count=0\n  while [ $i -lt $len ]\n  do\n    j=$i\n    while [ $j -lt $len ]\n    do\n      if [ ${str:$j:1} -eq 0 ]\n      then\n        count=$((count+1))\n      else\n        count=$((count-1))\n      fi\n      if [ $count -gt $max ]\n      then\n        max=$count\n      fi\n      j=$((j+1))\n    done\n    i=$((i+1))\n  done\n  echo $max",
    "  local string=$1\n  local max_length=0\n  local length=0\n  local count_zero=0\n  local count_one=0\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ ${string:$i:1} == 0 ]]; then\n      (( count_zero++ ))\n    else\n      (( count_one++ ))\n    fi\n    if [[ $count_zero -eq $count_one ]]; then\n      (( length++ ))\n    else\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n      length=0\n    fi\n  done\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local v",
    "  local string=$1\n  local max_length=0\n  local current_length=0\n  local current_char=0\n  local previous_char=0\n  local i=0\n  local length=${#string}\n\n  for (( i=0; i<length; i++ )); do\n    current_char=${string:$i:1}\n    if [[ $current_char -eq $previous_char ]]; then\n      (( current_length++ ))\n    else\n      if [[ $current_length -gt $max_length ]]; then\n        max_length=$current_length\n      fi\n      current_length=1\n    fi\n    previous_char=$current_char\n  done\n\n  if [[ $current_length -gt $max_length ]]; then\n    max_length=$current_length\n  fi\n\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      if [[ ${str:j:1} == \"0\" ]]; then\n        ((count--))\n      else\n        ((count++))\n      fi\n      if [[ $count -gt $max ]]; then\n        max=$count\n      fi\n    done\n  done\n  echo $max",
    "    local string=$1\n    local length=0\n    local max_length=0\n    local i=0\n    local j=0\n    local count_0=0\n    local count_1=0\n    local count_diff=0\n    local max_diff=0\n    local count_diff_max=0\n    local count_diff_min=0\n    local count_diff_max_index=0\n    local count_diff_min_index=0\n    local count_diff_max_length=0\n    local count_diff_min_length=0\n\n    length=${#string}\n    echo \"length: $length\"\n    for (( i=0; i<length; i++ )); do\n        for (( j=i; j<length; j++ )); do\n            count_0=0\n            count_1=0\n            count_diff=0\n            for (( k=i; k<=j; k++ )); do\n                if [[ ${string:k:1} == \"0\" ]]; then\n                    (( count_0++ ))\n                else\n                    (( count_1++ ))\n                fi\n            done\n            count_diff=$(( count_0 - count_1 ))\n            if [[ $count_diff -gt $max_diff ]]; then\n                max_diff=$count_diff\n                count_diff_max=$count_0\n                count_diff_min=$count_1\n                count_diff_max_index=$i\n                count_diff_min_index=$j\n                count_diff_max_length=$(( j - i + 1 ))\n                count_diff_min_length=$(( j - i + 1 ))\n            fi\n        done\n    done\n    echo \"max_diff: $max_diff\"\n    echo \"count_diff_max: $count_diff_max\"\n    echo \"count_diff_min: $count_diff_min\"\n    echo \"count_diff_max_index: $count_diff_max_index\"\n    echo \"count_diff_min_index: $count_diff_min_index\"\n    echo \"count_diff_max_length: $count_diff_max_length\"\n    echo \"count_diff_min_length:",
    "  local str=$1\n  local max_diff=0\n  local diff=0\n  local len=${#str}\n  local i=0\n  local j=0\n  local count_0=0\n  local count_1=0\n  while [ $i -lt $len ]\n  do\n    while [ $j -lt $len ]\n    do\n      if [ ${str:$j:1} == 0 ]\n      then\n        count_0=$((count_0+1))\n      else\n        count_1=$((count_1+1))\n      fi\n      diff=$((count_0-count_1))\n      if [ $diff -lt 0 ]\n      then\n        diff=$((-diff))\n      fi\n      if [ $diff -gt $max_diff ]\n      then\n        max_diff=$diff\n      fi\n      j=$((j+1))\n    done\n    i=$((i+1))\n    j=$i\n    count_0=0\n    count_1=0\n  done\n  echo $max_diff",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local i=0\n  local j=0\n  local count=0\n  local count_zero=0\n  local count_one=0\n  while [ $i -lt $len ]; do\n    count_zero=0\n    count_one=0\n    while [ $j -lt $len ]; do\n      if [ ${str:$j:1} == \"0\" ]; then\n        count_zero=$((count_zero+1))\n      else\n        count_one=$((count_one+1))\n      fi\n      count=$((count_zero-count_one))\n      if [ $count -lt 0 ]; then\n        count=$((-count))\n      fi\n      if [ $count -gt $max ]; then\n        max=$count\n      fi\n      j=$((j+1))\n    done\n    i=$((i+1))\n    j=$i\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:i:1} == \"0\" ]]; then\n      (( count++ ))\n    else\n      (( count-- ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n\n  for ((i=0; i<len; i++)); do\n    if [[ ${str:i:1} == \"0\" ]]; then\n      ((count++))\n    else\n      ((count--))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n\n  for ((i=0; i<len; i++)); do\n    if [[ ${str:$i:1} == \"1\" ]]; then\n      ((count++))\n    else\n      ((count--))\n    fi\n\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n\n  echo $max",
    "  local string=$1\n  local length=${#string}\n  echo $length",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local i=0\n  local j=0\n  local count=0\n  local zero_count=0\n  local one_count=0\n  local temp_count=0\n  local temp_zero_count=0\n  local temp_one_count=0\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      if [[ ${str:$j:1} == \"0\" ]]; then\n        temp_zero_count=$((temp_zero_count+1))\n      else\n        temp_one_count=$((temp_one_count+1))\n      fi\n      temp_count=$((temp_zero_count-temp_one_count))\n      if [[ $temp_count -lt 0 ]]; then\n        temp_count=$((-temp_count))\n      fi\n      if [[ $temp_count -gt $max_len ]]; then\n        max_len=$temp_count\n        zero_count=$temp_zero_count\n        one_count=$temp_one_count\n      fi\n    done\n    temp_zero_count=0\n    temp_one_count=0\n  done\n  echo \"max_len: $max_len, zero_count: $zero_count, one_count: $one_count\"",
    "    local string=$1\n    local length=0\n    local max_length=0\n    local i=0\n    local j=0\n    local k=0\n    local len=${#string}\n    local count_0=0\n    local count_1=0\n    local count_0_max=0\n    local count_1_max=0\n    local sub_string=\"\"\n    local sub_string_max=\"\"\n    local sub_string_max_len=0\n    local sub_string_max_len_prev=0\n    local sub_string_max_len_prev_prev=0\n    local sub_string_max_len_prev_prev_prev=0\n    local sub_string_max_len_prev_prev_prev_prev=0\n    local sub_string_max_len_prev_prev_prev_prev_prev=0\n    local sub_string_max_len_prev_prev_prev_prev_prev_prev=0\n    local sub_string_max_len_prev_prev_prev_prev_prev_prev_prev=0\n    local sub_string_max_len_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local sub_string_max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local sub_string_max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local sub_string_max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local sub_string_max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local sub_string_max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local sub_string_max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local sub_string_max_len_prev_prev_prev_prev_prev_prev_",
    "  local string=$1\n  local length=${#string}\n  echo $length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n ",
    "    local string=$1\n    local max_length=0\n    local length=0\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n\n    for ((i=0; i<${#string}; i++)); do\n        for ((j=i; j<${#string}; j++)); do\n            length=0\n            for ((k=i; k<=j; k++)); do\n                if [[ ${string:$k:1} == 0 ]]; then\n                    ((length++))\n                else\n                    ((length--))\n                fi\n            done\n            if [[ $length -gt $max_length ]]; then\n                max_length=$length\n            fi\n        done\n    done\n\n    echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:$i:1} == \"0\" ]]; then\n      (( count++ ))\n    else\n      (( count-- ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local string=$1\n  local max_length=0\n  local length=0\n  local zero_count=0\n  local one_count=0\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ ${string:$i:1} == 0 ]]; then\n      (( zero_count++ ))\n    else\n      (( one_count++ ))\n    fi\n    (( length++ ))\n    if [[ $zero_count -eq $one_count ]]; then\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n      length=0\n      zero_count=0\n      one_count=0\n    fi\n  done\n  echo $max_length",
    "    local str=$1\n    local len=0\n    local max_len=0\n    local i=0\n    local j=0\n    local k=0\n    local zero_count=0\n    local one_count=0\n    local str_len=${#str}\n    for ((i=0; i<str_len; i++))\n    do\n        for ((j=i; j<str_len; j++))\n        do\n            len=0\n            zero_count=0\n            one_count=0\n            for ((k=i; k<=j; k++))\n            do\n                if [ ${str:k:1} == 0 ]\n                then\n                    zero_count=$((zero_count+1))\n                else\n                    one_count=$((one_count+1))\n                fi\n                len=$((len+1))\n            done\n            if [ $((zero_count-one_count)) -lt 0 ]\n            then\n                if [ $((max_len-len)) -lt 0 ]\n                then\n                    max_len=$len\n                fi\n            fi\n        done\n    done\n    echo $max_len",
    "    local string=$1\n    local length=${#string}\n    local max_length=0\n    local current_length=0\n    local i=0\n    local j=0\n    local k=0\n    local current_char=''\n    local next_char=''\n    local current_char_count=0\n    local next_char_count=0\n    local current_char_count_array=()\n    local next_char_count_array=()\n    local current_char_count_array_length=0\n    local next_char_count_array_length=0\n    local current_char_count_array_index=0\n    local next_char_count_array_index=0\n    local current_char_count_array_value=0\n    local next_char_count_array_value=0\n    local current_char_count_array_value_sum=0\n    local next_char_count_array_value_sum=0\n    local current_char_count_array_value_sum_diff=0\n    local next_char_count_array_value_sum_diff=0\n    local current_char_count_array_value_sum_diff_max=0\n    local next_char_count_array_value_sum_diff_max=0\n    local current_char_count_array_value_sum_diff_max_index=0\n    local next_char_count_array_value_sum_diff_max_index=0\n    local current_char_count_array_value_sum_diff_max_index_value=0\n    local next_char_count_array_value_sum_diff_max_index_value=0\n    local current_char_count_array_value_sum_diff_max_index_value_sum=0\n    local next_char_count_array_value_sum_diff_max_index_value_sum=0\n    local current_char_count_array_value_sum_diff_max_index_value_sum_diff=0\n    local next_char_count_array_value_sum_diff_max_index_value_sum_diff=0\n    local current_char_count_array_",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local i=0\n  local j=0\n  local zeros=0\n  local ones=0\n  while [ $i -lt $len ]; do\n    if [ ${str:$i:1} == \"0\" ]; then\n      let zeros++\n    else\n      let ones++\n    fi\n    let i++\n    while [ $j -lt $i ]; do\n      if [ $zeros -eq $ones ]; then\n        if [ $max -lt $zeros ]; then\n          max=$zeros\n        fi\n      fi\n      if [ ${str:$j:1} == \"0\" ]; then\n        let zeros--\n      else\n        let ones--\n      fi\n      let j++\n    done\n  done\n  echo $max",
    "  local str=$1\n  local max=0\n  local count=0\n  for ((i=0; i<${#str}; i++)); do\n    if [[ ${str:$i:1} == \"0\" ]]; then\n      ((count++))\n    else\n      ((count--))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local c=0\n  local d=0\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      count=0\n      for ((k=i; k<=j; k++)); do\n        if [[ ${str:k:1} == 0 ]]; then\n          ((count++))\n        else\n          ((count--))\n        fi\n      done\n      if [[ $count -gt $max ]]; then\n        max=$count\n      fi\n    done\n  done\n  echo $max",
    "  local string=$1\n  local max_length=0\n  local current_length=0\n  local current_char=0\n  local previous_char=0\n  local i=0\n  local length=${#string}\n  for ((i=0; i<length; i++)); do\n    current_char=${string:$i:1}\n    if [[ $current_char == $previous_char ]]; then\n      ((current_length++))\n    else\n      if [[ $current_length -gt $max_length ]]; then\n        max_length=$current_length\n      fi\n      current_length=1\n    fi\n    previous_char=$current_char\n  done\n  if [[ $current_length -gt $max_length ]]; then\n    max_length=$current_length\n  fi\n  echo $max_length",
    "  local string=$1\n  local length=0\n  local max_length=0\n  local count_zero=0\n  local count_one=0\n  local i=0\n  local j=0\n  local k=0\n  local char=''\n  local char_prev=''\n  local char_next=''\n\n  for ((i=0; i<${#string}; i++)); do\n    char=${string:$i:1}\n    if [[ $char == \"0\" ]]; then\n      ((count_zero++))\n    else\n      ((count_one++))\n    fi\n  done\n\n  if [[ $count_zero == $count_one ]]; then\n    echo \"0\"\n    return\n  fi\n\n  for ((i=0; i<${#string}; i++)); do\n    char=${string:$i:1}\n    if [[ $char == \"0\" ]]; then\n      ((count_zero--))\n    else\n      ((count_one--))\n    fi\n\n    if [[ $count_zero == $count_one ]]; then\n      length=$((i+1))\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n    fi\n\n    for ((j=i+1; j<${#string}; j++)); do\n      char_next=${string:$j:1}\n      if [[ $char_next == \"0\" ]]; then\n        ((count_zero--))\n      else\n        ((count_one--))\n      fi\n\n      if [[ $count_zero == $count_one ]]; then\n        length=$((j-i+1))\n        if [[ $length -gt $max_length ]]; then\n          max_length=$length\n        fi\n      fi\n    done\n\n    if [[ $char == \"0\" ]]; then\n      ((count_zero++))\n    else\n      ((count_one++))\n    fi\n  done\n\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      if [[ ${str:j:1} == \"0\" ]]; then\n        ((count++))\n      else\n        ((count--))\n      fi\n      if [[ $count -gt $max ]]; then\n        max=$count\n      fi\n    done\n  done\n  echo $max",
    "  local str=$1\n  local max=0\n  local count=0\n  local i=0\n  local len=${#str}\n  for ((i=0; i<len; i++)); do\n    if [[ ${str:$i:1} == \"0\" ]]; then\n      ((count++))\n    else\n      ((count--))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local string=$1\n  local length=${#string}\n  local max_length=0\n  local current_length=0\n  local zero_count=0\n  local one_count=0\n  local i=0\n  local j=0\n  local char=''\n\n  for ((i=0; i<length; i++)); do\n    char=${string:i:1}\n    if [[ $char == '0' ]]; then\n      zero_count=$((zero_count + 1))\n    else\n      one_count=$((one_count + 1))\n    fi\n    current_length=$((zero_count - one_count))\n    if [[ $current_length > $max_length ]]; then\n      max_length=$current_length\n    fi\n  done\n\n  echo $max_length",
    "    local string=\"$1\"\n    local length=${#string}\n    local max_diff=0\n    local diff=0\n    local i=0\n    local j=0\n    local char=''\n    local one_count=0\n    local zero_count=0\n\n    for ((i=0; i<length; i++)); do\n        for ((j=i; j<length; j++)); do\n            char=\"${string:$j:1}\"\n            if [[ $char == '1' ]]; then\n                ((one_count++))\n            else\n                ((zero_count++))\n            fi\n            diff=$((one_count - zero_count))\n            if [[ $diff -lt 0 ]]; then\n                diff=$((-diff))\n            fi\n            if [[ $diff -gt $max_diff ]]; then\n                max_diff=$diff\n            fi\n        done\n        one_count=0\n        zero_count=0\n    done\n\n    echo $max_diff",
    "  local string=$1\n  local length=${#string}\n  local max_length=0\n  local zero_count=0\n  local one_count=0\n  local i=0\n  local j=0\n\n  while [ $i -lt $length ]\n  do\n    if [ \"${string:$i:1}\" == \"0\" ]\n    then\n      zero_count=$((zero_count+1))\n    else\n      one_count=$((one_count+1))\n    fi\n\n    if [ $zero_count -eq $one_count ]\n    then\n      if [ $((i-j+1)) -gt $max_length ]\n      then\n        max_length=$((i-j+1))\n      fi\n    fi\n\n    if [ $((zero_count-one_count)) -gt 1 ]\n    then\n      while [ $((zero_count-one_count)) -gt 1 ]\n      do\n        if [ \"${string:$j:1}\" == \"0\" ]\n        then\n          zero_count=$((zero_count-1))\n        else\n          one_count=$((one_count-1))\n        fi\n        j=$((j+1))\n      done\n    fi\n    i=$((i+1))\n  done\n\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local i=0\n  local j=0\n  local count_0=0\n  local count_1=0\n  while [ $i -lt $len ]\n  do\n    count_0=0\n    count_1=0\n    while [ $j -lt $len ]\n    do\n      if [ ${str:$j:1} == \"0\" ]\n      then\n        count_0=$((count_0+1))\n      else\n        count_1=$((count_1+1))\n      fi\n      if [ $count_0 -eq $count_1 ]\n      then\n        if [ $((j-i+1)) -gt $max_len ]\n        then\n          max_len=$((j-i+1))\n        fi\n      fi\n      j=$((j+1))\n    done\n    i=$((i+1))\n    j=$i\n  done\n  echo $max_len",
    "  local str=$1\n  local len=${#str}\n  local max_diff=0\n  local count_0=0\n  local count_1=0\n  local i=0\n  local j=0\n  local diff=0\n  for (( i=0; i<len; i++ )); do\n    count_0=0\n    count_1=0\n    for (( j=i; j<len; j++ )); do\n      if [[ ${str:$j:1} == \"0\" ]]; then\n        count_0=$(( count_0 + 1 ))\n      else\n        count_1=$(( count_1 + 1 ))\n      fi\n      diff=$(( count_0 - count_1 ))\n      if [[ $diff -lt 0 ]]; then\n        diff=$(( -diff ))\n      fi\n      if [[ $diff -gt $max_diff ]]; then\n        max_diff=$diff\n      fi\n    done\n  done\n  echo $max_diff",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local i=0\n  local j=0\n  local count_0=0\n  local count_1=0\n  while [ $i -lt $len ]\n  do\n    if [ ${str:$i:1} == \"0\" ]\n    then\n      count_0=$((count_0+1))\n    else\n      count_1=$((count_1+1))\n    fi\n    if [ $count_0 -eq $count_1 ]\n    then\n      if [ $((i-j+1)) -gt $max_len ]\n      then\n        max_len=$((i-j+1))\n      fi\n    fi\n    if [ $count_0 -lt $count_1 ]\n    then\n      while [ $count_0 -lt $count_1 ]\n      do\n        if [ ${str:$j:1} == \"0\" ]\n        then\n          count_0=$((count_0-1))\n        else\n          count_1=$((count_1-1))\n        fi\n        j=$((j+1))\n      done\n    fi\n    i=$((i+1))\n  done\n  echo $max_len",
    "    local string=$1\n    local len=${#string}\n    local max=0\n    local count=0\n    local i=0\n    while [ $i -lt $len ]; do\n        if [ ${string:$i:1} == \"0\" ]; then\n            count=$((count+1))\n        else\n            count=$((count-1))\n        fi\n        if [ $count -lt 0 ]; then\n            count=0\n        fi\n        if [ $count -gt $max ]; then\n            max=$count\n        fi\n        i=$((i+1))\n    done\n    echo $max",
    "  local string=$1\n  local length=${#string}\n  local max_length=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  for (( i=0; i<$length; i++ )); do\n    for (( j=$i; j<$length; j++ )); do\n      for (( k=$i; k<=$j; k++ )); do\n        if [[ ${string:$k:1} == \"0\" ]]; then\n          (( count++ ))\n        else\n          (( count-- ))\n        fi\n      done\n      if [[ $count -gt $max_length ]]; then\n        max_length=$count\n      fi\n      count=0\n    done\n  done\n  echo $max_length",
    "    local string=$1\n    local max_length=0\n    local current_length=0\n    local current_char=0\n    local prev_char=0\n    local i=0\n    local length=${#string}\n    for ((i=0; i<length; i++)); do\n        current_char=${string:$i:1}\n        if [ $current_char -eq $prev_char ]; then\n            ((current_length++))\n        else\n            if [ $current_length -gt $max_length ]; then\n                max_length=$current_length\n            fi\n            current_length=1\n        fi\n        prev_char=$current_char\n    done\n    if [ $current_length -gt $max_length ]; then\n        max_length=$current_length\n    fi\n    echo $max_length",
    "  local string=$1\n  local length=${#string}\n  local max_length=0\n  local i=0\n  local j=0\n  local count=0\n  local count_zero=0\n  local count_one=0\n\n  while [ $i -lt $length ]\n  do\n    count_zero=0\n    count_one=0\n    j=$i\n    while [ $j -lt $length ]\n    do\n      if [ ${string:$j:1} == \"0\" ]\n      then\n        count_zero=$((count_zero+1))\n      else\n        count_one=$((count_one+1))\n      fi\n      count=$((count_zero-count_one))\n      if [ $count -lt 0 ]\n      then\n        count=$((-count))\n      fi\n      if [ $count -gt $max_length ]\n      then\n        max_length=$count\n      fi\n      j=$((j+1))\n    done\n    i=$((i+1))\n  done\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local zero_count=0\n  local one_count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:$i:1} == \"0\" ]]; then\n      (( zero_count++ ))\n    else\n      (( one_count++ ))\n    fi\n    if [[ $zero_count -eq $one_count ]]; then\n      (( max_len = $zero_count + $one_count ))\n    fi\n  done\n  echo $max_len",
    "  local string=$1\n  local length=0\n  local max_length=0\n  local i=0\n  local j=0\n  local k=0\n  local zero_count=0\n  local one_count=0\n\n  for ((i=0; i<${#string}; i++)); do\n    for ((j=i; j<${#string}; j++)); do\n      for ((k=i; k<=j; k++)); do\n        if [[ ${string:$k:1} == \"0\" ]]; then\n          ((zero_count++))\n        else\n          ((one_count++))\n        fi\n      done\n      ((length=zero_count-one_count))\n      if [[ $length -lt 0 ]]; then\n        ((length=-length))\n      fi\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n      ((zero_count=0))\n      ((one_count=0))\n    done\n  done\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:i:1} == \"0\" ]]; then\n      (( count++ ))\n    else\n      (( count-- ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local string=$1\n  local max_length=0\n  local current_length=0\n  local current_char=0\n  local prev_char=0\n  local i=0\n\n  for ((i=0; i<${#string}; i++)); do\n    current_char=${string:$i:1}\n    if [ $current_char -eq $prev_char ]; then\n      ((current_length++))\n    else\n      if [ $current_length -gt $max_length ]; then\n        max_length=$current_length\n      fi\n      current_length=1\n    fi\n    prev_char=$current_char\n  done\n\n  if [ $current_length -gt $max_length ]; then\n    max_length=$current_length\n  fi\n\n  echo $max_length",
    "    local string=$1\n    local length=${#string}\n    local max_length=0\n    local current_length=0\n    local i=0\n    local j=0\n    local k=0\n    local current_char=''\n    local next_char=''\n    local current_char_count=0\n    local next_char_count=0\n    local current_char_index=0\n    local next_char_index=0\n    local current_char_index_list=()\n    local next_char_index_list=()\n    local current_char_index_list_length=0\n    local next_char_index_list_length=0\n    local current_char_index_list_index=0\n    local next_char_index_list_index=0\n    local current_char_index_list_index_value=0\n    local next_char_index_list_index_value=0\n    local current_char_index_list_index_value_plus_one=0\n    local next_char_index_list_index_value_plus_one=0\n    local current_char_index_list_index_value_plus_one_plus_one=0\n    local next_char_index_list_index_value_plus_one_plus_one=0\n    local current_char_index_list_index_value_plus_one_plus_one_plus_one=0\n    local next_char_index_list_index_value_plus_one_plus_one_plus_one=0\n    local current_char_index_list_index_value_plus_one_plus_one_plus_one_plus_one=0\n    local next_char_index_list_index_value_plus_one_plus_one_plus_one_plus_one=0\n    local current_char_index_list_index_value_plus_one_plus_one_plus_one_plus_one_plus_one=0\n    local next_char_index_list_index_value_plus_one_plus_one_plus_one_plus_one_plus_one=0\n    local current_char_index_list_index_value_",
    "  local string=$1\n  local max=0\n  local count=0\n  local i=0\n  local len=${#string}\n  while [ $i -lt $len ]; do\n    local char=${string:$i:1}\n    if [ $char == \"1\" ]; then\n      count=$((count+1))\n    else\n      count=$((count-1))\n    fi\n    if [ $count -lt 0 ]; then\n      count=0\n    fi\n    if [ $count -gt $max ]; then\n      max=$count\n    fi\n    i=$((i+1))\n  done\n  echo $max",
    "  local string=$1\n  local max_length=0\n  local current_length=0\n  local current_char=0\n  local previous_char=0\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=${string:$i:1}\n    if [[ $current_char == $previous_char ]]; then\n      (( current_length++ ))\n    else\n      (( current_length-- ))\n    fi\n    if [[ $current_length -gt $max_length ]]; then\n      max_length=$current_length\n    fi\n    previous_char=$current_char\n  done\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local i=0\n  local j=0\n  local count=0\n\n  while [ $i -lt $len ]; do\n    if [ ${str:$i:1} == \"0\" ]; then\n      count=$((count-1))\n    else\n      count=$((count+1))\n    fi\n\n    if [ $count -lt 0 ]; then\n      j=$((i+1))\n      count=0\n    fi\n\n    if [ $count -gt $max ]; then\n      max=$count\n    fi\n\n    i=$((i+1))\n  done\n\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local c=0\n\n  for ((i=0; i<len; i++)); do\n    c=${str:i:1}\n    if [ $c -eq 0 ]; then\n      count=$((count+1))\n    else\n      count=$((count-1))\n    fi\n    if [ $count -lt 0 ]; then\n      count=0\n      j=$((i+1))\n    fi\n    if [ $count -gt $max ]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local cur_len=0\n  local i=0\n  local j=0\n  local k=0\n  local c=0\n  local zeros=0\n  local ones=0\n  local diff=0\n\n  for ((i=0; i<len; i++)); do\n    c=${str:i:1}\n    if [[ $c == \"0\" ]]; then\n      ((zeros++))\n    else\n      ((ones++))\n    fi\n    ((diff=zeros-ones))\n    if [[ $diff == 0 ]]; then\n      ((cur_len=i+1))\n    else\n      for ((j=i+1; j<len; j++)); do\n        c=${str:j:1}\n        if [[ $c == \"0\" ]]; then\n          ((zeros++))\n        else\n          ((ones++))\n        fi\n        ((diff=zeros-ones))\n        if [[ $diff == 0 ]]; then\n          ((cur_len=j-i+1))\n          break\n        fi\n      done\n    fi\n    if [[ $cur_len -gt $max_len ]]; then\n      max_len=$cur_len\n    fi\n  done\n\n  echo $max_len",
    "    local str=$1\n    local len=${#str}\n    local max_len=0\n    local zero_count=0\n    local one_count=0\n    local i=0\n    local j=0\n    local diff=0\n    for (( i=0; i<len; i++ )); do\n        zero_count=0\n        one_count=0\n        for (( j=i; j<len; j++ )); do\n            if [ ${str:j:1} == \"0\" ]; then\n                zero_count=$(( zero_count + 1 ))\n            else\n                one_count=$(( one_count + 1 ))\n            fi\n            diff=$(( zero_count - one_count ))\n            if [ $diff -lt 0 ]; then\n                diff=$(( -diff ))\n            fi\n            if [ $diff -gt $max_len ]; then\n                max_len=$diff\n            fi\n        done\n    done\n    echo $max_len",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n\n  while [ $i -lt $len ]; do\n    if [ ${str:$i:1} == \"1\" ]; then\n      count=$((count+1))\n    else\n      count=$((count-1))\n    fi\n\n    if [ $count -lt 0 ]; then\n      count=0\n    fi\n\n    if [ $count -gt $max ]; then\n      max=$count\n    fi\n\n    i=$((i+1))\n  done\n\n  echo $max",
    "  local str=$1\n  local max=0\n  local count=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ ${str:$i:1} == 0 ]]; then\n      (( count++ ))\n    else\n      (( count-- ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local string=$1\n  local max_length=0\n  local length=0\n  local zero_count=0\n  local one_count=0\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ ${string:$i:1} == 0 ]]; then\n      (( zero_count++ ))\n    else\n      (( one_count++ ))\n    fi\n    (( length++ ))\n    if [[ $zero_count -eq $one_count ]]; then\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n      length=0\n      zero_count=0\n      one_count=0\n    fi\n  done\n  echo $max_length",
    "  local string=$1\n  local length=${#string}\n  local max_length=0\n  local max_diff=0\n  local diff=0\n  local i=0\n  local j=0\n  local k=0\n  local temp_diff=0\n\n  for ((i=0; i<length; i++))\n  do\n    for ((j=i+1; j<=length; j++))\n    do\n      diff=0\n      temp_diff=0\n      for ((k=i; k<j; k++))\n      do\n        if [[ ${string:k:1} == 0 ]]\n        then\n          ((diff++))\n        elif [[ ${string:k:1} == 1 ]]\n        then\n          ((diff--))\n        fi\n        if [[ $temp_diff -lt $diff ]]\n        then\n          temp_diff=$diff\n        fi\n      done\n      if [[ $max_diff -lt $temp_diff ]]\n      then\n        max_diff=$temp_diff\n        max_length=$((j-i))\n      fi\n    done\n  done\n  echo $max_length",
    "  local max=0\n  local count=0\n  local str=\"$1\"\n  local len=${#str}\n  for ((i=0; i<len; i++)); do\n    if [[ ${str:i:1} == 0 ]]; then\n      ((count--))\n    else\n      ((count++))\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local max_len=0\n  local len=0\n  local str=$1\n  local i=0\n  local j=0\n  local c=0\n  local char=0\n  local len=${#str}\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      c=0\n      for ((k=i; k<=j; k++)); do\n        char=${str:k:1}\n        if [[ $char == \"0\" ]]; then\n          c=$((c+1))\n        else\n          c=$((c-1))\n        fi\n      done\n      if [[ $c -eq 0 ]]; then\n        if [[ $((j-i+1)) -gt $max_len ]]; then\n          max_len=$((j-i+1))\n        fi\n      fi\n    done\n  done\n  echo $max_len",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local i=0\n  local j=0\n  local count_0=0\n  local count_1=0\n  while [ $i -lt $len ]\n  do\n    if [ ${str:$i:1} == \"0\" ]\n    then\n      count_0=$((count_0+1))\n    else\n      count_1=$((count_1+1))\n    fi\n    if [ $count_0 -eq $count_1 ]\n    then\n      max_len=$((i+1))\n    fi\n    i=$((i+1))\n  done\n  echo $max_len",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local zero_count=0\n  local one_count=0\n  local i=0\n  local j=0\n  while [ $i -lt $len ]\n  do\n    if [ \"${str:$i:1}\" == \"0\" ]\n    then\n      zero_count=$((zero_count+1))\n    else\n      one_count=$((one_count+1))\n    fi\n    if [ $zero_count -eq $one_count ]\n    then\n      if [ $((i-j+1)) -gt $max_len ]\n      then\n        max_len=$((i-j+1))\n      fi\n    fi\n    if [ $((zero_count-one_count)) -gt 1 ]\n    then\n      while [ $((zero_count-one_count)) -gt 1 ]\n      do\n        if [ \"${str:$j:1}\" == \"0\" ]\n        then\n          zero_count=$((zero_count-1))\n        else\n          one_count=$((one_count-1))\n        fi\n        j=$((j+1))\n      done\n    fi\n    i=$((i+1))\n  done\n  echo $max_len",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  while [ $i -lt $len ]; do\n    local char=${str:$i:1}\n    if [ $char == \"0\" ]; then\n      count=$((count+1))\n    else\n      count=$((count-1))\n    fi\n    if [ $count -lt 0 ]; then\n      count=0\n    fi\n    if [ $count -gt $max ]; then\n      max=$count\n    fi\n    i=$((i+1))\n  done\n  echo $max",
    "  local string=$1\n  local length=0\n  local max_length=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0",
    "    local string=$1\n    local max_length=0\n    local length=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:i:1} == 0 ]]; then\n      (( count++ ))\n    else\n      (( count-- ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "    local str=$1\n    local len=${#str}\n    local max=0\n    local count=0\n    for (( i=0; i<len; i++ )); do\n        if [[ ${str:i:1} == \"0\" ]]; then\n            (( count++ ))\n        else\n            (( count-- ))\n        fi\n        if [[ $count -lt 0 ]]; then\n            count=0\n        fi\n        if [[ $count -gt $max ]]; then\n            max=$count\n        fi\n    done\n    echo $max",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local zeros=0\n  local ones=0\n  local i=0\n  local j=0\n  while [ $i -lt $len ]; do\n    if [ ${str:$i:1} == \"0\" ]; then\n      ((zeros++))\n    else\n      ((ones++))\n    fi\n    if [ $zeros -eq $ones ]; then\n      ((j=i+1))\n      ((max_len=j))\n    fi\n    ((i++))\n  done\n  echo $max_len",
    "    local str=$1\n    local len=${#str}\n    local max=0\n    local count=0\n    for ((i=0;i<len;i++)); do\n        if [[ ${str:i:1} == \"0\" ]]; then\n            count=$((count+1))\n        else\n            count=$((count-1))\n        fi\n        if [[ $count -gt $max ]]; then\n            max=$count\n        fi\n    done\n    echo $max",
    "  local string=$1\n  local max_length=0\n  local length=0\n  local count_0=0\n  local count_1=0\n  local i=0\n  local j=0\n  local c=0\n\n  for (( i=0; i<${#string}; i++ )); do\n    for (( j=i; j<${#string}; j++ )); do\n      c=${string:$j:1}\n      if [[ $c == 0 ]]; then\n        (( count_0++ ))\n      else\n        (( count_1++ ))\n      fi\n      (( length = count_0 - count_1 ))\n      if [[ $length -lt 0 ]]; then\n        (( length = -length ))\n      fi\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n    done\n    count_0=0\n    count_1=0\n  done\n\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local tmp=0\n  local c=0\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      count=0\n      for ((k=i; k<=j; k++)); do\n        c=${str:k:1}\n        if [[ $c == \"1\" ]]; then\n          ((count++))\n        else\n          ((count--))\n        fi\n      done\n      if [[ $count -gt $max ]]; then\n        max=$count\n      fi\n    done\n  done\n\n  echo $max",
    "    local str=$1\n    local len=${#str}\n    local max=0\n    local count=0\n    for (( i=0; i<len; i++ )); do\n        if [[ ${str:i:1} == \"0\" ]]; then\n            (( count++ ))\n        else\n            (( count-- ))\n        fi\n        if [[ $count -lt 0 ]]; then\n            count=0\n        fi\n        if [[ $count -gt $max ]]; then\n            max=$count\n        fi\n    done\n    echo $max",
    "  local string=$1\n  local length=${#string}\n  echo $length",
    "  local string=$1\n  local length=0\n  local max_length=0\n  local max_diff=0\n  local diff=0\n  local i=0\n  local j=0\n  local k=0\n  local char=''\n  local char_prev=''\n  local char_next=''\n  local char_prev_prev=''\n  local char_next_next=''\n\n  length=${#string}\n  for (( i=0; i<length; i++ )); do\n    char=${string:$i:1}\n    if [[ $char == '0' ]]; then\n      diff=$(( diff - 1 ))\n    else\n      diff=$(( diff + 1 ))\n    fi\n\n    if [[ $diff -gt $max_diff ]]; then\n      max_diff=$diff\n    fi\n\n    if [[ $diff -eq 0 ]]; then\n      max_length=$(( i + 1 ))\n    fi\n  done\n\n  if [[ $max_diff -eq 0 ]]; then\n    echo $max_length\n    return\n  fi\n\n  for (( i=0; i<length; i++ )); do\n    char=${string:$i:1}\n    if [[ $char == '0' ]]; then\n      diff=$(( diff - 1 ))\n    else\n      diff=$(( diff + 1 ))\n    fi\n\n    if [[ $diff -eq $max_diff ]]; then\n      j=$i\n      char_prev=${string:$(( j - 1 )):1}\n      char_next=${string:$(( j + 1 )):1}\n      while [[ $char_prev == $char_next ]]; do\n        j=$(( j + 1 ))\n        char_prev=${string:$(( j - 1 )):1}\n        char_next=${string:$(( j + 1 )):1}\n      done\n\n      k=$(( j - i ))\n      if [[ $k -gt $max_length ]]; then\n        max_length=$k\n      fi\n    fi\n  done\n\n  echo $max_length",
    "    local string=$1\n    local length=${#string}\n    local max_length=0\n    local i=0\n    local j=0\n    local count_0=0\n    local count_1=0\n    while [ $i -lt $length ]\n    do\n        while [ $j -lt $length ]\n        do\n            if [ \"${string:$j:1}\" == \"0\" ]; then\n                count_0=$((count_0+1))\n            else\n                count_1=$((count_1+1))\n            fi\n            if [ $count_0 -eq $count_1 ]; then\n                if [ $((j-i+1)) -gt $max_length ]; then\n                    max_length=$((j-i+1))\n                fi\n            fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n        j=$i\n        count_0=0\n        count_1=0\n    done\n    echo $max_length",
    "  local string=$1\n  local length=0\n  local count=0\n  local max_count=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n ",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local count=0\n  local i=0\n\n  while [ $i -lt $len ]; do\n    if [ ${str:$i:1} -eq 0 ]; then\n      count=$((count + 1))\n    else\n      count=$((count - 1))\n    fi\n\n    if [ $count -eq 0 ]; then\n      max_len=$((i + 1))\n    fi\n\n    i=$((i + 1))\n  done\n\n  echo $max_len",
    "  local str=$1\n  local max_len=0\n  local len=0\n  local i=0\n  local j=0\n  local k=0\n  local count_0=0\n  local count_1=0\n  local count_0_temp=0\n  local count_1_temp=0\n  local len_temp=0\n  local max_len_temp=0\n  local str_temp=''\n  local str_temp_1=''\n  local str_temp_2=''\n  local str_temp_3=''\n  local str_temp_4=''\n  local str_temp_5=''\n  local str_temp_6=''\n  local str_temp_7=''\n  local str_temp_8=''\n  local str_temp_9=''\n  local str_temp_10=''\n  local str_temp_11=''\n  local str_temp_12=''\n  local str_temp_13=''\n  local str_temp_14=''\n  local str_temp_15=''\n  local str_temp_16=''\n  local str_temp_17=''\n  local str_temp_18=''\n  local str_temp_19=''\n  local str_temp_20=''\n  local str_temp_21=''\n  local str_temp_22=''\n  local str_temp_23=''\n  local str_temp_24=''\n  local str_temp_25=''\n  local str_temp_26=''\n  local str_temp_27=''\n  local str_temp_28=''\n  local str_temp_29=''\n  local str_temp_30=''\n  local str_temp_31=''\n  local str_temp_32=''\n  local str_temp_33=''\n  local str_temp_34=''\n  local str_temp_35=''\n  local str_temp_36=''\n  local str_temp_37=''\n  local str_temp_38=''\n  local str_temp_39=''\n  local str_temp_40=''\n  local str_temp_41=''\n ",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local curr=0\n  local i=0\n  while [ $i -lt $len ]; do\n    local char=${str:$i:1}\n    if [ $char == '0' ]; then\n      ((curr--))\n    else\n      ((curr++))\n    fi\n    if [ $curr -gt $max ]; then\n      max=$curr\n    fi\n    ((i++))\n  done\n  echo $max",
    "  local string=$1\n  local length=0\n  local max_length=0\n  local i=0\n  local j=0\n  local n=${#string}\n  local ones=0\n  local zeros=0\n  local diff=0\n\n  for ((i=0; i<n; i++)); do\n    for ((j=i; j<n; j++)); do\n      if [[ ${string:j:1} == 1 ]]; then\n        ((ones++))\n      else\n        ((zeros++))\n      fi\n      ((length++))\n      ((diff=ones-zeros))\n      if [[ $diff -lt 0 ]]; then\n        ((diff=-diff))\n      fi\n      if [[ $diff -gt $max_length ]]; then\n        max_length=$diff\n      fi\n    done\n    ((ones=0))\n    ((zeros=0))\n    ((length=0))\n  done\n\n  echo $max_length",
    "  local string=$1\n  local max_length=0\n  local length=0\n  local zero_count=0\n  local one_count=0\n\n  for (( i=0; i<${#string}; i++ )); do\n    if [ ${string:$i:1} == \"0\" ]; then\n      (( zero_count++ ))\n    else\n      (( one_count++ ))\n    fi\n\n    if [ $zero_count -eq $one_count ]; then\n      (( length = zero_count + one_count ))\n      if [ $length -gt $max_length ]; then\n        max_length=$length\n      fi\n    fi\n  done\n\n  echo $max_length",
    "  local string=$1\n  local len=${#string}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${string:$i:1} == \"0\" ]]; then\n      (( count++ ))\n    else\n      (( count-- ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local cnt=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:i:1} == \"0\" ]]; then\n      (( cnt++ ))\n    else\n      (( cnt-- ))\n    fi\n    if [[ $cnt -lt 0 ]]; then\n      cnt=0\n    fi\n    if [[ $cnt -gt $max ]]; then\n      max=$cnt\n    fi\n  done\n  echo $max",
    "    local string=$1\n    local length=0\n    local max_length=0\n    local i=0\n    local j=0\n    local k=0\n    local n=${#string}\n    local count_zero=0\n    local count_one=0\n    local count_zero_arr=()\n    local count_one_arr=()\n    local count_zero_arr_index=0\n    local count_one_arr_index=0\n    local count_zero_arr_length=0\n    local count_one_arr_length=0\n    local count_zero_arr_max_index=0\n    local count_one_arr_max_index=0\n    local count_zero_arr_max_length=0\n    local count_one_arr_max_length=0\n\n    for ((i=0; i<n; i++))\n    do\n        count_zero=0\n        count_one=0\n        for ((j=i; j<n; j++))\n        do\n            if [ \"${string:$j:1}\" == \"0\" ]\n            then\n                count_zero=$((count_zero+1))\n            else\n                count_one=$((count_one+1))\n            fi\n            if [ $count_zero -eq $count_one ]\n            then\n                length=$((count_zero+count_one))\n                if [ $length -gt $max_length ]\n                then\n                    max_length=$length\n                fi\n            fi\n        done\n    done\n\n    echo \"max_length: $max_length\"",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:i:1} == \"1\" ]]; then\n      count=$(( count + 1 ))\n    else\n      count=$(( count - 1 ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local string=$1\n  local length=0\n  local max_length=0\n  local zero_count=0\n  local one_count=0\n  local i=0\n  local j=0\n  local char=''\n\n  for (( i=0; i<${#string}; i++ )); do\n    char=${string:$i:1}\n    if [[ $char == '0' ]]; then\n      (( zero_count++ ))\n    else\n      (( one_count++ ))\n    fi\n\n    if [[ $zero_count -eq $one_count ]]; then\n      (( length = zero_count + one_count ))\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n    fi\n  done\n\n  echo $max_length",
    "  local string=$1\n  local max=0\n  local count=0\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ ${string:$i:1} == '0' ]]; then\n      (( count++ ))\n    else\n      (( count-- ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local i=0\n  local j=0\n  local count_0=0\n  local count_1=0\n  local diff=0\n  while [ $i -lt $len ]\n  do\n    count_0=0\n    count_1=0\n    while [ $j -lt $len ]\n    do\n      if [ ${str:$j:1} == '0' ]\n      then\n        count_0=$((count_0+1))\n      else\n        count_1=$((count_1+1))\n      fi\n      diff=$((count_0-count_1))\n      if [ $diff -lt 0 ]\n      then\n        diff=$((-diff))\n      fi\n      if [ $diff -gt $max_len ]\n      then\n        max_len=$diff\n      fi\n      j=$((j+1))\n    done\n    i=$((i+1))\n    j=$i\n  done\n  echo $max_len",
    "  local string=$1\n  local length=${#string}\n  local max_length=0\n  local i=0\n  local j=0\n  local count_0=0\n  local count_1=0\n\n  for i in $(seq 0 $((length - 1))); do\n    for j in $(seq $((i + 1)) $((length - 1))); do\n      local sub_string=${string:$i:$((j - i + 1))}\n      count_0=$(echo $sub_string | grep -o 0 | wc -l)\n      count_1=$(echo $sub_string | grep -o 1 | wc -l)\n      local diff=$((count_0 - count_1))\n      if [[ $diff -lt 0 ]]; then\n        diff=$((-diff))\n      fi\n      if [[ $diff -gt $max_length ]]; then\n        max_length=$diff\n      fi\n    done\n  done\n\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  for ((i=0; i<len; i++))\n  do\n    for ((j=i; j<len; j++))\n    do\n      if [[ ${str:$j:1} == 0 ]]\n      then\n        count=$((count+1))\n      else\n        count=$((count-1))\n      fi\n      if [[ $count -gt $max ]]\n      then\n        max=$count\n      fi\n    done\n    count=0\n  done\n  echo $max",
    "  local string=$1\n  local length=0\n  local max_length=0\n  local zero_count=0\n  local one_count=0\n  local i=0\n  local j=0\n  local char=''\n\n  for (( i=0; i<${#string}; i++ )); do\n    char=${string:$i:1}\n    if [[ $char == '0' ]]; then\n      zero_count=$((zero_count+1))\n    else\n      one_count=$((one_count+1))\n    fi\n    length=$((zero_count-one_count))\n    if [[ $length -lt 0 ]]; then\n      length=$((length*-1))\n    fi\n    if [[ $length -gt $max_length ]]; then\n      max_length=$length\n    fi\n  done\n\n  echo $max_length",
    "  local string=$1\n  local length=${#string}\n  echo $length",
    "  local string=$1\n  local len=${#string}\n  local max_len=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local temp_count=0\n  local temp_len=0\n\n  for (( i=0; i<len; i++ )); do\n    for (( j=i; j<len; j++ )); do\n      temp_count=0\n      temp_len=0\n      for (( k=i; k<=j; k++ )); do\n        if [[ ${string:k:1} == \"0\" ]]; then\n          temp_count=$((temp_count+1))\n        else\n          temp_count=$((temp_count-1))\n        fi\n        if [[ $temp_count -gt $count ]]; then\n          count=$temp_count\n          temp_len=$((j-i+1))\n        fi\n      done\n      if [[ $temp_len -gt $max_len ]]; then\n        max_len=$temp_len\n      fi\n    done\n  done\n  echo $max_len",
    "    local str=$1\n    local len=${#str}\n    local max_len=0\n    local count=0\n    local i=0\n    local j=0\n    local k=0\n    local zero_count=0\n    local one_count=0\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            for ((k=i; k<=j; k++)); do\n                if [[ ${str:k:1} == \"0\" ]]; then\n                    zero_count=$((zero_count+1))\n                else\n                    one_count=$((one_count+1))\n                fi\n            done\n            if [[ $zero_count -eq $one_count ]]; then\n                count=$((j-i+1))\n                if [[ $count -gt $max_len ]]; then\n                    max_len=$count\n                fi\n            fi\n            zero_count=0\n            one_count=0\n        done\n    done\n    echo $max_len",
    "    local str=$1\n    local len=${#str}\n    local max_len=0\n    local i=0\n    local j=0\n    local count=0\n    local count_1=0\n    local count_0=0\n    local count_1_max=0\n    local count_0_max=0\n    local count_max=0\n    local count_1_min=0\n    local count_0_min=0\n    local count_min=0\n    local count_1_min_index=0\n    local count_0_min_index=0\n    local count_min_index=0\n    local count_1_max_index=0\n    local count_0_max_index=0\n    local count_max_index=0\n    local count_1_min_index_prev=0\n    local count_0_min_index_prev=0\n    local count_min_index_prev=0\n    local count_1_max_index_prev=0\n    local count_0_max_index_prev=0\n    local count_max_index_prev=0\n    local count_1_min_index_prev_prev=0\n    local count_0_min_index_prev_prev=0\n    local count_min_index_prev_prev=0\n    local count_1_max_index_prev_prev=0\n    local count_0_max_index_prev_prev=0\n    local count_max_index_prev_prev=0\n    local count_1_min_index_prev_prev_prev=0\n    local count_0_min_index_prev_prev_prev=0\n    local count_min_index_prev_prev_prev=0\n    local count_1_max_index_prev_prev_prev=0\n    local count_0_max_index_prev_prev_prev=0\n    local count_max_index_prev_prev_prev=0\n    local count_1_min_index_prev_prev_prev_prev=0\n    local count_0_min_index_prev_prev_prev_prev=0\n    local count_min_index_prev_prev_prev_",
    "  local str=$1\n  local max_len=0\n  local len=0\n  local i=0\n  local j=0\n  local k=0\n  local c=0\n  local count_0=0\n  local count_1=0\n  local count_0_tmp=0\n  local count_1_tmp=0\n\n  len=${#str}\n  for (( i=0; i<len; i++ )); do\n    for (( j=i; j<len; j++ )); do\n      count_0_tmp=0\n      count_1_tmp=0\n      for (( k=i; k<=j; k++ )); do\n        c=${str:k:1}\n        if [[ $c == \"0\" ]]; then\n          count_0_tmp=$((count_0_tmp+1))\n        else\n          count_1_tmp=$((count_1_tmp+1))\n        fi\n      done\n      if [[ $count_0_tmp -gt $count_1_tmp ]]; then\n        count_0=$count_0_tmp\n        count_1=$count_1_tmp\n      else\n        count_0=$count_1_tmp\n        count_1=$count_0_tmp\n      fi\n      if [[ $count_0 -gt $count_1 ]]; then\n        if [[ $((count_0-count_1)) -gt $max_len ]]; then\n          max_len=$((count_0-count_1))\n        fi\n      else\n        if [[ $((count_1-count_0)) -gt $max_len ]]; then\n          max_len=$((count_1-count_0))\n        fi\n      fi\n    done\n  done\n  echo $max_len",
    "  local string=$1\n  local length=${#string}\n  local max_length=0\n  local i=0\n  local j=0\n  local count=0\n  local zero_count=0\n  local one_count=0\n\n  while [ $i -lt $length ]\n  do\n    j=$i\n    while [ $j -lt $length ]\n    do\n      if [ \"${string:$j:1}\" == \"0\" ]\n      then\n        zero_count=$((zero_count+1))\n      else\n        one_count=$((one_count+1))\n      fi\n      count=$((count+1))\n      j=$((j+1))\n    done\n    if [ $max_length -lt $((zero_count-one_count)) ]\n    then\n      max_length=$((zero_count-one_count))\n    fi\n    i=$((i+1))\n  done\n  echo $max_length",
    "  local string=$1\n  local length=${#string}\n  echo $length",
    "  local string=$1\n  local max_length=0\n  local length=0\n  local zero_count=0\n  local one_count=0\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ ${string:$i:1} == 0 ]]; then\n      (( zero_count++ ))\n    else\n      (( one_count++ ))\n    fi\n    (( length++ ))\n    if [[ $zero_count -eq $one_count ]]; then\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n      length=0\n      zero_count=0\n      one_count=0\n    fi\n  done\n  echo $max_length",
    "  local str=$1\n  local max=0\n  local curr=0\n  local len=${#str}\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:i:1} == \"0\" ]]; then\n      (( curr++ ))\n    else\n      (( curr-- ))\n    fi\n    if [[ $curr -lt 0 ]]; then\n      curr=0\n    fi\n    if [[ $curr -gt $max ]]; then\n      max=$curr\n    fi\n  done\n  echo $max",
    "  local string=$1\n  local len=${#string}\n  local max=0\n  local count=0\n\n  for (( i=0; i<len; i++ )); do\n    if [[ ${string:$i:1} == 0 ]]; then\n      count=$(( count + 1 ))\n    else\n      count=$(( count - 1 ))\n    fi\n\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n\n  echo $max",
    "  local string=$1\n  local max_length=0\n  local length=0\n  local zeros=0\n  local ones=0\n  local i=0\n  local j=0\n  local char=''\n\n  for (( i=0; i<${#string}; i++ )); do\n    char=${string:$i:1}\n    if [[ $char == '0' ]]; then\n      (( zeros++ ))\n    else\n      (( ones++ ))\n    fi\n    (( length++ ))\n\n    if [[ $zeros -eq $ones ]]; then\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n      length=0\n      zeros=0\n      ones=0\n    fi\n  done\n\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local c=0\n  for (( i=0; i<len; i++ )); do\n    for (( j=i; j<len; j++ )); do\n      c=${str:j:1}\n      if [[ $c == 0 ]]; then\n        (( count-- ))\n      else\n        (( count++ ))\n      fi\n      if [[ $count -gt $max ]]; then\n        max=$count\n      fi\n    done\n  done\n  echo $max",
    "  local string=$1\n  local length=${#string}\n  local max_length=0\n  local current_length=0\n  local i=0\n  local j=0\n  local k=0\n  local current_char\n  local next_char\n\n  for (( i=0; i<length; i++ )); do\n    current_char=${string:$i:1}\n    if [[ $current_char == \"0\" ]]; then\n      current_length=0\n      for (( j=$i; j<length; j++ )); do\n        next_char=${string:$j:1}\n        if [[ $next_char == \"1\" ]]; then\n          for (( k=$j; k<length; k++ )); do\n            next_char=${string:$k:1}\n            if [[ $next_char == \"0\" ]]; then\n              current_length=$((k-j))\n              if [[ $current_length -gt $max_length ]]; then\n                max_length=$current_length\n              fi\n              break\n            fi\n          done\n        fi\n      done\n    fi\n  done\n\n  echo $max_length",
    "  local str=$1\n  local max_len=0\n  local len=0\n  local i=0\n  local j=0\n  local len_str=${#str}\n  for (( i=0; i<len_str; i++ )); do\n    local char=${str:$i:1}\n    if [[ $char == \"0\" ]]; then\n      (( len++ ))\n    elif [[ $char == \"1\" ]]; then\n      (( len-- ))\n    fi\n    if [[ $len -lt 0 ]]; then\n      len=0\n      j=$(( i + 1 ))\n    fi\n    if [[ $len -gt $max_len ]]; then\n      max_len=$len\n    fi\n  done\n  echo $max_len",
    "  local string=$1\n  local length=${#string}\n  echo $length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for ((i=0; i<len; i++)); do\n    if [[ ${str:$i:1} == \"0\" ]]; then\n      count=$((count+1))\n    else\n      count=$((count-1))\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local string=$1\n  local length=${#string}\n  echo $length",
    "    local string=$1\n    local max_length=0\n    local current_length=0\n    local current_char=0\n    local last_char=0\n    for (( i=0; i<${#string}; i++ )); do\n        current_char=${string:$i:1}\n        if [[ $current_char -eq $last_char ]]; then\n            (( current_length++ ))\n        else\n            (( current_length-- ))\n        fi\n        if [[ $current_length -gt $max_length ]]; then\n            max_length=$current_length\n        fi\n        if [[ $current_length -eq 0 ]]; then\n            current_length=1\n            last_char=$current_char\n        fi\n    done\n    echo $max_length",
    "  local string=$1\n  local length=0\n  local max_length=0\n  local count_0=0\n  local count_1=0\n  local i=0\n\n  while [ $i -lt ${#string} ]; do\n    if [ \"${string:$i:1}\" == \"0\" ]; then\n      count_0=$((count_0 + 1))\n    else\n      count_1=$((count_1 + 1))\n    fi\n    if [ $count_0 -eq $count_1 ]; then\n      length=$((count_0 + count_1))\n      if [ $length -gt $max_length ]; then\n        max_length=$length\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local c=0\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      c=${str:j:1}\n      if [[ $c == 0 ]]; then\n        ((count--))\n      else\n        ((count++))\n      fi\n      if [[ $count -gt $max ]]; then\n        max=$count\n      fi\n    done\n    count=0\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  while [ $i -lt $len ]; do\n    local char=${str:$i:1}\n    if [ $char == \"0\" ]; then\n      count=$((count+1))\n    else\n      count=$((count-1))\n    fi\n    if [ $count -lt 0 ]; then\n      count=0\n    fi\n    if [ $count -gt $max ]; then\n      max=$count\n    fi\n    i=$((i+1))\n  done\n  echo $max",
    "  local string=$1\n  local length=${#string}\n  echo $length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:i:1} == \"0\" ]]; then\n      (( count++ ))\n    else\n      (( count-- ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "    local string=$1\n    local length=${#string}\n    local max_length=0\n    local i=0\n    local j=0\n    local count=0\n    local zero_count=0\n    local one_count=0\n    local zero_count_array=()\n    local one_count_array=()\n    local zero_count_array_length=0\n    local one_count_array_length=0\n    local zero_count_array_index=0\n    local one_count_array_index=0\n    local zero_count_array_value=0\n    local one_count_array_value=0\n    local diff=0\n    local max_diff=0\n\n    while [ $i -lt $length ]\n    do\n        if [ ${string:$i:1} == \"0\" ]\n        then\n            zero_count=$((zero_count+1))\n        else\n            one_count=$((one_count+1))\n        fi\n        i=$((i+1))\n    done\n\n    if [ $zero_count -eq $one_count ]\n    then\n        echo $((zero_count+one_count))\n        return\n    fi\n\n    while [ $j -lt $length ]\n    do\n        if [ ${string:$j:1} == \"0\" ]\n        then\n            zero_count_array[$zero_count_array_index]=$count\n            zero_count_array_index=$((zero_count_array_index+1))\n        else\n            one_count_array[$one_count_array_index]=$count\n            one_count_array_index=$((one_count_array_index+1))\n        fi\n        count=$((count+1))\n        j=$((j+1))\n    done\n\n    zero_count_array_length=${#zero_count_array[@]}\n    one_count_array_length=${#one_count_array[@]}\n\n    if [ $zero_count_array_length -gt $one_count_array_length ]\n    then\n        for ((i=0; i<$one_count_array_length; i++))\n        do\n           ",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local i=0\n  local j=0\n  local count=0\n  local count_0=0\n  local count_1=0\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      if [[ ${str:$j:1} == 0 ]]; then\n        ((count_0++))\n      else\n        ((count_1++))\n      fi\n      count=$((count_0-count_1))\n      if [[ $count -lt 0 ]]; then\n        count=$((-1*count))\n      fi\n      if [[ $count -gt $max ]]; then\n        max=$count\n      fi\n    done\n    count_0=0\n    count_1=0\n  done\n  echo $max",
    "  local str=\"$1\"\n  local len=${#str}\n  local max=0\n  local count=0\n  for ((i=0; i<len; i++)); do\n    if [[ \"${str:$i:1}\" == \"0\" ]]; then\n      ((count++))\n    else\n      ((count--))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local string=$1\n  local len=${#string}\n  local max_len=0\n  local i=0\n  local j=0\n  local count_0=0\n  local count_1=0\n  while [ $i -lt $len ]\n  do\n    count_0=0\n    count_1=0\n    while [ $j -lt $len ]\n    do\n      local char=${string:$j:1}\n      if [ $char == \"0\" ]\n      then\n        count_0=$((count_0+1))\n      else\n        count_1=$((count_1+1))\n      fi\n      local diff=$((count_0-count_1))\n      if [ $diff -lt 0 ]\n      then\n        diff=$((-1*diff))\n      fi\n      if [ $diff -gt $max_len ]\n      then\n        max_len=$diff\n      fi\n      j=$((j+1))\n    done\n    i=$((i+1))\n    j=$i\n  done\n  echo $max_len",
    "  local string=$1\n  local max_length=0\n  local current_length=0\n  local i=0\n  local j=0\n  local length=${#string}\n  local char=''\n  local char_next=''\n\n  for (( i=0; i<length; i++ )); do\n    char=${string:$i:1}\n    if [[ $char == '0' ]]; then\n      for (( j=i+1; j<length; j++ )); do\n        char_next=${string:$j:1}\n        if [[ $char_next == '0' ]]; then\n          (( current_length++ ))\n        else\n          break\n        fi\n      done\n    else\n      for (( j=i+1; j<length; j++ )); do\n        char_next=${string:$j:1}\n        if [[ $char_next == '1' ]]; then\n          (( current_length++ ))\n        else\n          break\n        fi\n      done\n    fi\n    if [[ $current_length -gt $max_length ]]; then\n      max_length=$current_length\n    fi\n    current_length=0\n  done\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      count=0\n      for ((k=i; k<=j; k++)); do\n        if [[ ${str:k:1} == '1' ]]; then\n          count=$((count+1))\n        else\n          count=$((count-1))\n        fi\n      done\n      if [[ $count -gt $max ]]; then\n        max=$count\n      fi\n    done\n  done\n  echo $max",
    "  local string=\"$1\"\n  local length=0\n  local max_length=0\n  local zero_count=0\n  local one_count=0\n  local i=0\n  local j=0\n  local char=''\n  local char_count=0\n  local char_count_max=0\n  local char_count_min=0\n  local char_count_diff=0\n  local char_count_diff_max=0\n\n  length=${#string}\n\n  for ((i=0; i<length; i++)); do\n    char=${string:$i:1}\n    if [[ $char == '0' ]]; then\n      zero_count=$((zero_count + 1))\n    else\n      one_count=$((one_count + 1))\n    fi\n  done\n\n  if [[ $zero_count -gt $one_count ]]; then\n    char_count_max=$zero_count\n    char_count_min=$one_count\n  else\n    char_count_max=$one_count\n    char_count_min=$zero_count\n  fi\n\n  char_count_diff=$((char_count_max - char_count_min))\n  char_count_diff_max=$char_count_diff\n\n  for ((i=0; i<length; i++)); do\n    char=${string:$i:1}\n    if [[ $char == '0' ]]; then\n      char_count=$((char_count + 1))\n    else\n      char_count=$((char_count - 1))\n    fi\n\n    if [[ $char_count -eq 0 ]]; then\n      char_count_diff=$((char_count_max - char_count_min))\n      if [[ $char_count_diff -gt $char_count_diff_max ]]; then\n        char_count_diff_max=$char_count_diff\n      fi\n    fi\n  done\n\n  echo $char_count_diff_max",
    "  local string=$1\n  local max_length=0\n  local length=0\n  local zero_count=0\n  local one_count=0\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ ${string:$i:1} == \"0\" ]]; then\n      zero_count=$(( zero_count + 1 ))\n    else\n      one_count=$(( one_count + 1 ))\n    fi\n    length=$(( zero_count - one_count ))\n    if [[ $length -lt 0 ]]; then\n      length=$(( -length ))\n    fi\n    if [[ $length -gt $max_length ]]; then\n      max_length=$length\n    fi\n  done\n  echo $max_length",
    "  local string=$1\n  local max_length=0\n  local current_length=0\n  local current_char=''\n  local previous_char=''\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=${string:$i:1}\n    if [[ \"$current_char\" == \"$previous_char\" ]]; then\n      (( current_length++ ))\n    else\n      if [[ \"$current_length\" -gt \"$max_length\" ]]; then\n        max_length=$current_length\n      fi\n      current_length=1\n    fi\n    previous_char=$current_char\n  done\n\n  if [[ \"$current_length\" -gt \"$max_length\" ]]; then\n    max_length=$current_length\n  fi\n\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local i=0\n  local j=0\n  local count=0\n  local count_0=0\n  local count_1=0\n  local max_count=0\n  local max_count_0=0\n  local max_count_1=0\n  local max_diff=0\n  local diff=0\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      count=$((j-i+1))\n      count_0=$(echo $str | cut -c$((i+1))-$((j+1)) | grep -o 0 | wc -l)\n      count_1=$(echo $str | cut -c$((i+1))-$((j+1)) | grep -o 1 | wc -l)\n      diff=$((count_0-count_1))\n      if [[ $diff -lt 0 ]]; then\n        diff=$((-diff))\n      fi\n      if [[ $diff -gt $max_diff ]]; then\n        max_diff=$diff\n        max_count=$count\n        max_count_0=$count_0\n        max_count_1=$count_1\n      fi\n    done\n  done\n\n  echo \"max_diff=$max_diff\"\n  echo \"max_count=$max_count\"\n  echo \"max_count_0=$max_count_0\"\n  echo \"max_count_1=$max_count_1\"",
    "  local string=$1\n  local length=0\n  local max_length=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0",
    "  local string=$1\n  local length=${#string}\n  local max_length=0\n  local count=0\n  for ((i=0; i<length; i++)); do\n    if [[ ${string:i:1} == 0 ]]; then\n      ((count--))\n    else\n      ((count++))\n    fi\n    if [[ $count -gt $max_length ]]; then\n      max_length=$count\n    fi\n  done\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      if [[ ${str:j:1} == \"0\" ]]; then\n        ((count++))\n      else\n        ((count--))\n      fi\n      if [[ $count -gt $max ]]; then\n        max=$count\n      fi\n    done\n  done\n\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local c=0\n  local d=0\n  local e=0\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      count=0\n      for ((k=i; k<=j; k++)); do\n        if [[ ${str:k:1} == \"0\" ]]; then\n          ((count++))\n        else\n          ((count--))\n        fi\n      done\n      if [[ $count -gt $max ]]; then\n        max=$count\n      fi\n    done\n  done\n  echo $max",
    "  local string=$1\n  local max_length=0\n  local length=0\n  local count_one=0\n  local count_zero=0\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ ${string:$i:1} == 1 ]]; then\n      (( count_one++ ))\n    else\n      (( count_zero++ ))\n    fi\n    (( length++ ))\n    if [[ $count_one == $count_zero ]]; then\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n      length=0\n      count_one=0\n      count_zero=0\n    fi\n  done\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n\n  while [ $i -lt $len ]; do\n    if [ ${str:$i:1} == '0' ]; then\n      count=$((count + 1))\n    else\n      count=$((count - 1))\n    fi\n\n    if [ $count -gt $max ]; then\n      max=$count\n    fi\n\n    i=$((i + 1))\n  done\n\n  echo $max",
    "    local string=$1\n    local max_length=0\n    local length=0\n    local zero_count=0\n    local one_count=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} == \"0\" ]]; then\n            (( zero_count++ ))\n        else\n            (( one_count++ ))\n        fi\n        (( length++ ))\n        if (( zero_count == one_count )); then\n            if (( length > max_length )); then\n                max_length=$length\n            fi\n            length=0\n            zero_count=0\n            one_count=0\n        fi\n    done\n    echo $max_length",
    "  local str=$1\n  local max_len=0\n  local curr_len=0\n  local i=0\n  local j=0\n  local len=${#str}\n  local char=''\n  local char_next=''\n  local char_prev=''\n  local char_prev_prev=''\n  local char_next_next=''\n  local char_prev_prev_prev=''\n  local char_next_next_next=''\n  local char_prev_prev_prev_prev=''\n  local char_next_next_next_next=''\n\n  for ((i=0; i<len; i++))\n  do\n    char=${str:$i:1}\n    char_next=${str:$((i+1)):1}\n    char_prev=${str:$((i-1)):1}\n    char_prev_prev=${str:$((i-2)):1}\n    char_next_next=${str:$((i+2)):1}\n    char_prev_prev_prev=${str:$((i-3)):1}\n    char_next_next_next=${str:$((i+3)):1}\n    char_prev_prev_prev_prev=${str:$((i-4)):1}\n    char_next_next_next_next=${str:$((i+4)):1}\n\n    if [[ \"$char\" == \"1\" ]]\n    then\n      if [[ \"$char_prev\" == \"0\" ]]\n      then\n        if [[ \"$char_prev_prev\" == \"1\" ]]\n        then\n          if [[ \"$char_prev_prev_prev\" == \"0\" ]]\n          then\n            if [[ \"$char_prev_prev_prev_prev\" == \"1\" ]]\n            then\n              curr_len=$((curr_len+1))\n            else\n              curr_len=$((curr_len+2))\n            fi\n          else\n            curr_len=$((curr_len+3))\n          fi\n        else\n          curr_len=$((curr_len+4))\n",
    "  local string=\"$1\"\n  local max_length=0\n  local length=0\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local char=''\n  local length_of_string=${#string}\n  for (( i=0; i<$length_of_string; i++ ))\n  do\n    for (( j=i; j<$length_of_string; j++ ))\n    do\n      length=0\n      for (( k=i; k<=j; k++ ))\n      do\n        char=${string:k:1}\n        if [ \"$char\" == \"0\" ]\n        then\n          (( length++ ))\n        else\n          (( length-- ))\n        fi\n      done\n      if [ $length -gt $max_length ]\n      then\n        max_length=$length\n      fi\n    done\n  done\n  echo $max_length",
    "  local string=$1\n  local max_length=0\n  local length=0\n  local zero_count=0\n  local one_count=0\n  local i=0\n  local j=0\n  local char=''\n\n  for ((i=0; i<${#string}; i++)); do\n    char=${string:$i:1}\n    if [[ $char == '0' ]]; then\n      ((zero_count++))\n    else\n      ((one_count++))\n    fi\n    ((length++))\n    if [[ $zero_count -eq $one_count ]]; then\n      if [[ $length -gt $max_length ]]; then\n        max_length=$length\n      fi\n      length=0\n      zero_count=0\n      one_count=0\n    fi\n  done\n\n  echo $max_length",
    "  local string=$1\n  local length=0\n  local max_length=0\n  local zero_count=0\n  local one_count=0\n  local i=0\n  local j=0\n  local char=''\n  local char_count=0\n  local char_count_max=0\n  local char_max=''\n  local char_min=''\n  local char_min_count=0\n  local char_min_count_max=0\n  local char_min_max=''\n  local char_min_min=''\n  local char_min_min_count=0\n  local char_min_min_count_max=0\n  local char_min_min_max=''\n  local char_min_min_min=''\n  local char_min_min_min_count=0\n  local char_min_min_min_count_max=0\n  local char_min_min_min_max=''\n  local char_min_min_min_min=''\n  local char_min_min_min_min_count=0\n  local char_min_min_min_min_count_max=0\n  local char_min_min_min_min_max=''\n  local char_min_min_min_min_min=''\n  local char_min_min_min_min_min_count=0\n  local char_min_min_min_min_min_count_max=0\n  local char_min_min_min_min_min_max=''\n  local char_min_min_min_min_min_min=''\n  local char_min_min_min_min_min_min_count=0\n  local char_min_min_min_min_min_min_count_max=0\n  local char_min_min_min_min_min_min_max=''\n  local char_min_min_min_min_min_min_min=''\n  local char_min_min_min_min_min_min_min_count=0\n  local char_min_min_min_min_min_min_min_count_max=0\n  local char_min",
    "    local string=$1\n    local length=${#string}\n    local max_length=0\n    local current_length=0\n    local i=0\n    local j=0\n    local zero_count=0\n    local one_count=0\n    local char=''\n\n    for ((i=0; i<length; i++)); do\n        char=${string:$i:1}\n        if [[ $char == '0' ]]; then\n            zero_count=$((zero_count+1))\n        else\n            one_count=$((one_count+1))\n        fi\n        current_length=$((zero_count-one_count))\n        if [[ $current_length -lt 0 ]]; then\n            zero_count=0\n            one_count=0\n        else\n            if [[ $current_length -gt $max_length ]]; then\n                max_length=$current_length\n            fi\n        fi\n    done\n    echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:$i:1} == 0 ]]; then\n      (( count-- ))\n    else\n      (( count++ ))\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:i:1} == \"0\" ]]; then\n      count=$(( count + 1 ))\n    else\n      count=$(( count - 1 ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local string=$1\n  local max_length=0\n  local current_length=0\n  local current_char=0\n  local prev_char=0\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=${string:$i:1}\n    if [[ $current_char -eq $prev_char ]]; then\n      (( current_length++ ))\n    else\n      if [[ $current_length -gt $max_length ]]; then\n        max_length=$current_length\n      fi\n      current_length=1\n    fi\n    prev_char=$current_char\n  done\n  if [[ $current_length -gt $max_length ]]; then\n    max_length=$current_length\n  fi\n  echo $max_length",
    "    local str=$1\n    local len=${#str}\n    local max_len=0\n    local i=0\n    local j=0\n    local k=0\n    local count_0=0\n    local count_1=0\n    local diff=0\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            count_0=0\n            count_1=0\n            for ((k=i; k<=j; k++)); do\n                if [[ ${str:k:1} == \"0\" ]]; then\n                    ((count_0++))\n                else\n                    ((count_1++))\n                fi\n            done\n            diff=$((count_0-count_1))\n            if [[ $diff -lt 0 ]]; then\n                diff=$((-diff))\n            fi\n            if [[ $diff -gt $max_len ]]; then\n                max_len=$diff\n            fi\n        done\n    done\n\n    echo $max_len",
    "    local string=$1\n    local length=${#string}\n    local max_diff=0\n    local count_0=0\n    local count_1=0\n    local i=0\n    local j=0\n    local diff=0\n    for ((i=0; i<length; i++)); do\n        for ((j=i; j<length; j++)); do\n            if [[ ${string:j:1} == \"0\" ]]; then\n                ((count_0++))\n            else\n                ((count_1++))\n            fi\n            diff=$((count_1-count_0))\n            if [[ $diff -lt 0 ]]; then\n                diff=$((-diff))\n            fi\n            if [[ $diff -gt $max_diff ]]; then\n                max_diff=$diff\n            fi\n        done\n        count_0=0\n        count_1=0\n    done\n    echo $max_diff",
    "  local str=$1\n  local max=0\n  local count=0\n  for ((i=0; i<${#str}; i++)); do\n    if [[ ${str:$i:1} == \"0\" ]]; then\n      ((count++))\n    else\n      ((count--))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local string=\"$1\"\n  local length=${#string}\n  local max_length=0\n  local i=0\n  local j=0\n  local count_0=0\n  local count_1=0\n  local diff=0\n  while [ $i -lt $length ]; do\n    j=$i\n    count_0=0\n    count_1=0\n    while [ $j -lt $length ]; do\n      if [ \"${string:$j:1}\" == \"0\" ]; then\n        count_0=$((count_0 + 1))\n      else\n        count_1=$((count_1 + 1))\n      fi\n      diff=$((count_0 - count_1))\n      if [ $diff -lt 0 ]; then\n        diff=$((-diff))\n      fi\n      if [ $diff -gt $max_length ]; then\n        max_length=$diff\n      fi\n      j=$((j + 1))\n    done\n    i=$((i + 1))\n  done\n  echo $max_length",
    "    local str=$1\n    local max_len=0\n    local len=0\n    local i=0\n    local j=0\n    local k=0\n    local c=0\n    local len_str=${#str}\n    for ((i=0; i<len_str; i++)); do\n        for ((j=i; j<len_str; j++)); do\n            len=0\n            for ((k=i; k<=j; k++)); do\n                if [[ ${str:k:1} == \"1\" ]]; then\n                    c=$((c+1))\n                else\n                    c=$((c-1))\n                fi\n                if [[ $c -gt $len ]]; then\n                    len=$c\n                fi\n            done\n            if [[ $len -gt $max_len ]]; then\n                max_len=$len\n            fi\n        done\n    done\n    echo $max_len",
    "  local string=$1\n  local length=0\n  local max_length=0\n  local i=0\n  local j=0\n  local char=''\n  local char_next=''\n  local length_zero=0\n  local length_one=0\n  local length_zero_max=0\n  local length_one_max=0\n\n  length=${#string}\n  for ((i=0; i<length; i++)); do\n    char=${string:$i:1}\n    for ((j=i+1; j<length; j++)); do\n      char_next=${string:$j:1}\n      if [[ $char == $char_next ]]; then\n        if [[ $char == '0' ]]; then\n          ((length_zero++))\n        else\n          ((length_one++))\n        fi\n      else\n        if [[ $char == '0' ]]; then\n          ((length_zero++))\n        else\n          ((length_one++))\n        fi\n        if [[ $length_zero -gt $length_zero_max ]]; then\n          length_zero_max=$length_zero\n        fi\n        if [[ $length_one -gt $length_one_max ]]; then\n          length_one_max=$length_one\n        fi\n        length_zero=0\n        length_one=0\n        break\n      fi\n    done\n  done\n  if [[ $length_zero -gt $length_zero_max ]]; then\n    length_zero_max=$length_zero\n  fi\n  if [[ $length_one -gt $length_one_max ]]; then\n    length_one_max=$length_one\n  fi\n  max_length=$((length_zero_max - length_one_max))\n  if [[ $max_length -lt 0 ]]; then\n    max_length=$((-1 * max_length))\n  fi\n  echo $max_length",
    "  local string=\"$1\"\n  local length=${#string}\n  local max_length=0\n  local current_length=0\n  local i=0\n  local j=0\n  local current_char=''\n  local next_char=''\n\n  while [ $i -lt $length ]; do\n    current_char=${string:$i:1}\n    if [ \"$current_char\" == \"1\" ]; then\n      current_length=$((current_length+1))\n    fi\n    j=$((i+1))\n    while [ $j -lt $length ]; do\n      next_char=${string:$j:1}\n      if [ \"$next_char\" == \"1\" ]; then\n        current_length=$((current_length+1))\n      fi\n      if [ $current_length -gt $max_length ]; then\n        max_length=$current_length\n      fi\n      j=$((j+1))\n    done\n    current_length=0\n    i=$((i+1))\n  done\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local cur_len=0\n  local i=0\n  local j=0\n  local k=0\n  local num_zeros=0\n  local num_ones=0\n  local num_zeros_prev=0\n  local num_ones_prev=0\n  local num_zeros_cur=0\n  local num_ones_cur=0\n  local num_zeros_next=0\n  local num_ones_next=0\n  local num_zeros_next_next=0\n  local num_ones_next_next=0\n  local num_zeros_prev_prev=0\n  local num_ones_prev_prev=0\n  local num_zeros_prev_prev_prev=0\n  local num_ones_prev_prev_prev=0\n  local num_zeros_next_next_next=0\n  local num_ones_next_next_next=0\n  local num_zeros_next_next_next_next=0\n  local num_ones_next_next_next_next=0\n  local num_zeros_next_next_next_next_next=0\n  local num_ones_next_next_next_next_next=0\n  local num_zeros_next_next_next_next_next_next=0\n  local num_ones_next_next_next_next_next_next=0\n  local num_zeros_next_next_next_next_next_next_next=0\n  local num_ones_next_next_next_next_next_next_next=0\n  local num_zeros_next_next_next_next_next_next_next_next=0\n  local num_ones_next_next_next_next_next_next_next_next=0\n  local num_zeros_next_next_next_next_next_next_next_next_next=0\n  local num_ones_next_next_next_next_next_next_next_next_next=0\n  local num_zeros_next_next_next_next_next",
    "  local string=$1\n  local length=${#string}\n  local max_length=0\n  local current_length=0\n  local current_char=''\n  local last_char=''\n  local i=0\n  for (( i=0; i<$length; i++ )); do\n    current_char=${string:$i:1}\n    if [ \"$current_char\" == \"$last_char\" ]; then\n      (( current_length++ ))\n    else\n      if [ \"$current_length\" -gt \"$max_length\" ]; then\n        max_length=$current_length\n      fi\n      current_length=1\n    fi\n    last_char=$current_char\n  done\n  if [ \"$current_length\" -gt \"$max_length\" ]; then\n    max_length=$current_length\n  fi\n  echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  for (( i=0; i<len; i++ )); do\n    if [[ ${str:$i:1} == \"0\" ]]; then\n      (( count++ ))\n    else\n      (( count-- ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      if [[ ${str:j:1} == 1 ]]; then\n        ((count++))\n      else\n        ((count--))\n      fi\n      if [[ $count -gt $max ]]; then\n        max=$count\n      fi\n    done\n  done\n  echo $max",
    "  local string=$1\n  local length=${#string}\n  echo $length",
    "  local str=$1\n  local max_len=0\n  local cur_len=0\n  local i=0\n  local len=${#str}\n  local char=''\n  for ((i=0; i<len; i++)); do\n    char=${str:i:1}\n    if [ \"$char\" == \"0\" ]; then\n      cur_len=$((cur_len-1))\n    else\n      cur_len=$((cur_len+1))\n    fi\n    if [ $cur_len -lt 0 ]; then\n      cur_len=0\n    fi\n    if [ $cur_len -gt $max_len ]; then\n      max_len=$cur_len\n    fi\n  done\n  echo $max_len",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  while [ $i -lt $len ]; do\n    local char=${str:$i:1}\n    if [ $char == \"0\" ]; then\n      count=$((count-1))\n    else\n      count=$((count+1))\n    fi\n    if [ $count -lt 0 ]; then\n      count=0\n    fi\n    if [ $count -gt $max ]; then\n      max=$count\n    fi\n    i=$((i+1))\n  done\n  echo $max",
    "    local string=$1\n    local length=${#string}\n    local max_length=0\n    local i=0\n    local j=0\n    local count_0=0\n    local count_1=0\n\n    while [ $i -lt $length ]\n    do\n        if [ ${string:$i:1} == \"0\" ]\n        then\n            count_0=$((count_0 + 1))\n        else\n            count_1=$((count_1 + 1))\n        fi\n\n        if [ $count_0 -eq $count_1 ]\n        then\n            if [ $((i - j + 1)) -gt $max_length ]\n            then\n                max_length=$((i - j + 1))\n            fi\n        fi\n\n        if [ $count_0 -lt $count_1 ]\n        then\n            while [ $count_0 -lt $count_1 ]\n            do\n                if [ ${string:$j:1} == \"0\" ]\n                then\n                    count_0=$((count_0 - 1))\n                else\n                    count_1=$((count_1 - 1))\n                fi\n                j=$((j + 1))\n            done\n        fi\n        i=$((i + 1))\n    done\n\n    echo $max_length",
    "  local str=$1\n  local len=${#str}\n  local max_len=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local sub_str=\"\"\n  local sub_len=0\n  local zero_count=0\n  local one_count=0\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i; j<len; j++)); do\n      sub_str=${str:i:j}\n      sub_len=${#sub_str}\n      for ((k=0; k<sub_len; k++)); do\n        if [ \"${sub_str:k:1}\" == \"0\" ]; then\n          zero_count=$((zero_count+1))\n        else\n          one_count=$((one_count+1))\n        fi\n      done\n      if [ $zero_count -gt $one_count ]; then\n        count=$((zero_count-one_count))\n      else\n        count=$((one_count-zero_count))\n      fi\n      if [ $count -gt $max_len ]; then\n        max_len=$count\n      fi\n      zero_count=0\n      one_count=0\n    done\n  done\n  echo $max_len",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local i=0\n  local j=0\n  local count=0\n  local count_zero=0\n  local count_one=0\n  while [ $i -lt $len ]\n  do\n    count_zero=0\n    count_one=0\n    j=$i\n    while [ $j -lt $len ]\n    do\n      if [ ${str:$j:1} -eq 0 ]\n      then\n        ((count_zero++))\n      else\n        ((count_one++))\n      fi\n      ((j++))\n    done\n    if [ $count_zero -gt $count_one ]\n    then\n      count=$count_zero\n    else\n      count=$count_one\n    fi\n    if [ $count -gt $max ]\n    then\n      max=$count\n    fi\n    ((i++))\n  done\n  echo $max",
    "  local str=$1\n  local len=${#str}\n  local max=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local diff=0\n  local zero=0\n  local one=0\n  local sub=''\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<=len; j++)); do\n      sub=${str:i:j}\n      zero=$(echo $sub | grep -o 0 | wc -l)\n      one=$(echo $sub | grep -o 1 | wc -l)\n      diff=$(($zero - $one))\n      if [ $diff -lt 0 ]; then\n        diff=$((-$diff))\n      fi\n      if [ $diff -gt $max ]; then\n        max=$diff\n      fi\n    done\n  done\n  echo $max",
    "  local str=$1\n  local max=0\n  local count=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ ${str:$i:1} == \"0\" ]]; then\n      (( count++ ))\n    else\n      (( count-- ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local string=$1\n  local len=${#string}\n  local max_len=0\n  local i=0\n  local j=0\n  local count=0\n  local count_zero=0\n  local count_one=0\n  while [ $i -lt $len ]\n  do\n    if [ ${string:$i:1} -eq 0 ]\n    then\n      count_zero=$((count_zero+1))\n    else\n      count_one=$((count_one+1))\n    fi\n    count=$((count_zero-count_one))\n    if [ $count -eq 0 ]\n    then\n      j=$((i+1))\n      if [ $((i-j+1)) -gt $max_len ]\n      then\n        max_len=$((i-j+1))\n      fi\n    fi\n    i=$((i+1))\n  done\n  echo $max_len",
    "    local string=\"$1\"\n    local length=${#string}\n    local max_length=0\n    local i=0\n    local j=0\n    local count=0\n    local count_zero=0\n    local count_one=0\n    local count_zero_array=()\n    local count_one_array=()\n    local count_zero_array_length=0\n    local count_one_array_length=0\n    local max_diff=0\n    local temp_diff=0\n\n    while [ $i -lt $length ]; do\n        if [ ${string:$i:1} == \"0\" ]; then\n            count_zero=$(($count_zero+1))\n        else\n            count_one=$(($count_one+1))\n        fi\n        i=$(($i+1))\n    done\n\n    if [ $count_zero -eq $count_one ]; then\n        echo \"0\"\n        return\n    fi\n\n    if [ $count_zero -gt $count_one ]; then\n        count_zero_array=($(echo $string | grep -o 0 | wc -l))\n        count_zero_array_length=${#count_zero_array[@]}\n        count_one_array=($(echo $string | grep -o 1 | wc -l))\n        count_one_array_length=${#count_one_array[@]}\n        max_diff=$(($count_zero-$count_one))\n        while [ $j -lt $count_zero_array_length ]; do\n            temp_diff=$(($count_zero_array[$j]-$count_one_array[$j]))\n            if [ $temp_diff -gt $max_diff ]; then\n                max_diff=$temp_diff\n            fi\n            j=$(($j+1))\n        done\n    else\n        count_zero_array=($(echo $string | grep -o 0 | wc -l))\n        count_zero_array_length=${#count_zero_array[@]}\n        count_one_array=($(echo $string | grep -o 1 | wc -l))\n        count_one_array_length=",
    "    local str=$1\n    local len=${#str}\n    local max=0\n    local count=0\n    local i=0\n    local j=0\n    local k=0\n    for (( i=0; i<len; i++ )); do\n        for (( j=i; j<len; j++ )); do\n            count=0\n            for (( k=i; k<=j; k++ )); do\n                if [[ ${str:k:1} == \"0\" ]]; then\n                    (( count++ ))\n                else\n                    (( count-- ))\n                fi\n            done\n            if (( count > max )); then\n                max=$count\n            fi\n        done\n    done\n    echo $max",
    "  local string=$1\n  local max=0\n  local count=0\n  local i=0\n  local len=${#string}\n  for (( i=0; i<len; i++ )); do\n    if [[ ${string:i:1} == \"0\" ]]; then\n      count=$(( count + 1 ))\n    else\n      count=$(( count - 1 ))\n    fi\n    if [[ $count -lt 0 ]]; then\n      count=0\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max",
    "  local str=$1\n  local max=0\n  local count=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ ${str:$i:1} == 0 ]]; then\n      (( count-- ))\n    else\n      (( count++ ))\n    fi\n    if [[ $count -gt $max ]]; then\n      max=$count\n    fi\n  done\n  echo $max"
  ]
}
{
  "name": "mbpp_68_is_Monotonic",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_68_is_Monotonic.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a a=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#a[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    for ((i=0;i<n-1;i++))\n    do\n        if [ ${a[$i]} -lt ${a[$i+1]} ]\n        then\n            flag1=1\n        fi\n        if [ ${a[$i]} -gt ${a[$i+1]} ]\n        then\n            flag2=1\n        fi\n    done\n    if [ $flag1 -eq 1 -a $flag2 -eq 0 ]\n    then\n        echo \"Monotonic\"\n    elif [ $flag1 -eq 0 -a $flag2 -eq 1 ]\n    then\n        echo \"Monotonic\"\n    else\n        echo \"Not Monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n    local -i bp=0\n    local -i b\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=1\n    local -i k=2\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    for (( i=0; i<n-1; i++ ))\n    do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]\n        then\n            flag=1\n            break\n        fi\n    done\n    if [[ $flag -eq 1 ]]\n    then\n        for (( j=0; j<n-1; j++ ))\n        do\n            if [[ ${arr[j]} -lt ${arr[j+1]} ]]\n            then\n                flag=2\n                break\n            fi\n        done\n    fi\n    if [[ $flag -eq 0 ]]\n    then\n        echo \"The array is monotonic\"\n    elif [[ $flag -eq 1 ]]\n    then\n        echo \"The array is decreasing\"\n    else\n        echo \"The array is increasing\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n\n    for ((i=0; i<len-1; i++))\n    do\n        if [ ${array[i]} -gt ${array[i+1]} ]; then\n            flag1=1\n        fi\n        if [ ${array[i]} -lt ${array[i+1]} ]; then\n            flag2=1\n        fi\n    done\n\n    for ((i=0; i<len-1; i++))\n    do\n        if [ ${array[i]} -eq ${array[i+1]} ]; then\n            flag3=1\n        fi\n    done\n\n    if [ $flag1 -eq 1 ] && [ $flag2 -eq 1 ]; then\n        flag4=1\n    fi\n\n    if [ $flag3 -eq 1 ] && [ $flag4 -eq 1 ]; then\n        flag=1\n    fi\n\n    if [ $flag -eq 1 ]; then\n        echo \"0\"\n    else\n        echo \"1\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    for ((i=0; i<n-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag=1\n            break\n        fi\n    done\n    if [[ $flag -eq 0 ]]; then\n        echo \"Array is monotonic\"\n    else\n        echo \"Array is not monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++))\n    do\n        if [ ${array[$i]} -lt ${array[$i+1]} ]\n        then\n            flag1=1\n        elif [ ${array[$i]} -gt ${array[$i+1]} ]\n        then\n            flag2=1\n        fi\n    done\n    if [ $flag1 -eq 1 -a $flag2 -eq 0 ]\n    then\n        echo \"The array is monotonic increasing.\"\n    elif [ $flag1 -eq 0 -a $flag2 -eq 1 ]\n    then\n        echo \"The array is monotonic decreasing.\"\n    else\n        echo \"The array is not monotonic.\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n    local -i fff\n    local -i ggg\n    local -i hhh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaaa\n    local -i bbbb\n    local -i cccc\n    local -\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_monotonic=0\n\n    if [ $len -eq 1 ]; then\n        is_monotonic=1\n    else\n        for ((i=0; i<len-1; i++)); do\n            if [ ${arr[i]} -lt ${arr[i+1]} ]; then\n                is_increasing=1\n            elif [ ${arr[i]} -gt ${arr[i+1]} ]; then\n                is_decreasing=1\n            fi\n        done\n        if [ $is_increasing -eq 1 -a $is_decreasing -eq 0 ]; then\n            is_monotonic=1\n        elif [ $is_increasing -eq 0 -a $is_decreasing -eq 1 ]; then\n            is_monotonic=1\n        fi\n    fi\n    echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for ((i=0;i<n-1;i++))\n    do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]\n        then\n            flag=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]\n        then\n            flag=2\n        else\n            flag=0\n        fi\n        if [[ $flag -eq 1 ]]\n        then\n            flag1=1\n        elif [[ $flag -eq 2 ]]\n        then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 0 ]]\n    then\n        echo \"The given array is monotonic\"\n    elif [[ $flag2 -eq 1 && $flag1 -eq 0 ]]\n    then\n        echo \"The given array is monotonic\"\n    else\n        echo \"The given array is not monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -a array_sorted=($(printf \"%s\\n\" \"${array[@]}\" | sort -n))\n    [[ \"${array[*]}\" == \"${array_sorted[*]}\" ]] && echo \"Monotonic\" || echo \"Not Monotonic\"\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local arr=($1)\n    local len=${#arr[@]}\n    local i=0\n    local is_ascending=1\n    local is_descending=1\n    while [ $i -lt $len ]; do\n        if [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n            is_ascending=0\n        fi\n        if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n            is_descending=0\n        fi\n        ((i++))\n    done\n    if [ $is_ascending -eq 1 ] || [ $is_descending -eq 1 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpsv_9vj40.sh: line 12: [: 4: unary operator expected\\n/tmp/tmpsv_9vj40.sh: line 15: [: 4: unary operator expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag=1\n        fi\n    done\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            flag2=1\n        fi\n    done\n    if [[ $flag -eq 1 && $flag2 -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i j=1\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    local -i is_monotonic=0\n\n    while [ $i -lt $len ]; do\n        if [ $i -eq 0 ]; then\n            ((i++))\n            continue\n        fi\n\n        if [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n            is_decreasing=0\n        elif [ ${arr[$i]} -lt ${arr[$i-1]} ]; then\n            is_increasing=0\n        fi\n\n        ((i++))\n    done\n\n    if [ $is_increasing -eq 1 ] || [ $is_decreasing -eq 1 ]; then\n        is_monotonic=1\n    fi\n\n    echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for (( i=0; i<len-1; i++ )); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag1=1\n        fi\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 1 ]]; then\n        flag=0\n    else\n        flag=1\n    fi\n    echo $flag\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n    local -i bp=0\n    local -i b\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -a arr_sorted=($(echo ${arr[@]} | tr ' ' '\\n' | sort -n))\n    local -a arr_sorted_r=($(echo ${arr[@]} | tr ' ' '\\n' | sort -nr))\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_r[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local -i n=${#arr[@]}\n  local -i flag=0\n  for ((i=0; i<n-1; i++))\n  do\n    if [[ ${arr[i]} -gt ${arr[i+1]} ]]\n    then\n      flag=1\n      break\n    fi\n  done\n  if [[ $flag -eq 1 ]]\n  then\n    for ((j=i; j<n-1; j++))\n    do\n      if [[ ${arr[j]} -lt ${arr[j+1]} ]]\n      then\n        echo \"Array is not monotonic\"\n        return\n      fi\n    done\n  fi\n  echo \"Array is monotonic\"\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr\n    local -i i\n    local -i len\n    local -i flag\n    local -i flag2\n\n    arr=($1)\n    len=${#arr[@]}\n    flag=0\n    flag2=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag=1\n        fi\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            flag2=1\n        fi\n    done\n\n    if [[ $flag -eq 1 && $flag2 -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_monotonic=0\n\n    if [ $len -lt 2 ]; then\n        return 1\n    fi\n\n    for ((i=0; i<len-1; i++)); do\n        if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n            is_increasing=1\n        elif [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n            is_decreasing=1\n        fi\n    done\n\n    if [ $is_increasing -eq 1 -a $is_decreasing -eq 0 ]; then\n        is_monotonic=1\n    elif [ $is_increasing -eq 0 -a $is_decreasing -eq 1 ]; then\n        is_monotonic=1\n    fi\n\n    return $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr\n    local -i i\n    local -i len\n    local -i is_monotonic\n    local -i is_increasing\n    local -i is_decreasing\n\n    arr=($1)\n    len=${#arr[@]}\n\n    if [ $len -le 1 ]; then\n        echo \"true\"\n        return\n    fi\n\n    is_increasing=1\n    is_decreasing=1\n    for (( i=1; i<len; i++ )); do\n        if [ ${arr[$i]} -lt ${arr[$i-1]} ]; then\n            is_increasing=0\n        fi\n        if [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n            is_decreasing=0\n        fi\n    done\n\n    is_monotonic=$(( is_increasing || is_decreasing ))\n    if [ $is_monotonic -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i n\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -i\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local arr=( $1 )\n    local len=${#arr[@]}\n    local i=0\n    local prev=${arr[0]}\n    local is_increasing=true\n    local is_decreasing=true\n    while [ $i -lt $len ]; do\n        if [ ${arr[$i]} -lt $prev ]; then\n            is_increasing=false\n        fi\n        if [ ${arr[$i]} -gt $prev ]; then\n            is_decreasing=false\n        fi\n        prev=${arr[$i]}\n        (( i++ ))\n    done\n    if [ $is_increasing = true ] || [ $is_decreasing = true ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++))\n    do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]\n        then\n            flag=1\n        fi\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]\n        then\n            flag2=1\n        fi\n    done\n    if [[ $flag -eq 1 && $flag2 -eq 1 ]]\n    then\n        echo \"Not monotonic\"\n    else\n        echo \"Monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i res=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            inc=$((inc+1))\n        elif [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            dec=$((dec+1))\n        else\n            eq=$((eq+1))\n        fi\n    done\n\n    if [[ $inc -eq $((len-1)) ]]; then\n        res=1\n    elif [[ $dec -eq $((len-1)) ]]; then\n        res=1\n    elif [[ $eq -eq $((len-1)) ]]; then\n        res=1\n    fi\n\n    echo $res\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    for ((i=0; i<n-1; i++))\n    do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]\n        then\n            flag=1\n            break\n        fi\n    done\n    if [[ $flag -eq 1 ]]\n    then\n        for ((j=0; j<n-1; j++))\n        do\n            if [[ ${arr[j]} -lt ${arr[j+1]} ]]\n            then\n                flag=0\n                break\n            fi\n        done\n    fi\n    if [[ $flag -eq 1 ]]\n    then\n        echo \"Array is monotonic\"\n    else\n        echo \"Array is not monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    local -i is_monotonic=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 || $is_decreasing -eq 1 ]]; then\n        is_monotonic=1\n    fi\n\n    echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    local -a arr_sorted_r=($(printf \"%s\\n\" \"${arr[@]}\" | sort -nr))\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_r[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr\n    arr=($1)\n    local len=${#arr[@]}\n    local i=0\n    local is_ascending=1\n    local is_descending=1\n    while [ $i -lt $len ]; do\n        if [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n            is_ascending=0\n        fi\n        if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n            is_descending=0\n        fi\n        i=$((i+1))\n    done\n    if [ $is_ascending -eq 1 ] || [ $is_descending -eq 1 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp20a_8ht5.sh: line 13: [: 4: unary operator expected\\n/tmp/tmp20a_8ht5.sh: line 16: [: 4: unary operator expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    for ((i=0; i<n-1; i++))\n    do\n        if [[ ${array[i]} -lt ${array[i+1]} ]]\n        then\n            flag1=1\n        elif [[ ${array[i]} -gt ${array[i+1]} ]]\n        then\n            flag2=1\n        else\n            flag3=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 0 && $flag3 -eq 0 ]]\n    then\n        echo \"The given array is monotonic\"\n    elif [[ $flag1 -eq 0 && $flag2 -eq 1 && $flag3 -eq 0 ]]\n    then\n        echo \"The given array is monotonic\"\n    else\n        echo \"The given array is not monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    local -i is_monotonic=0\n    local -i prev=0\n    local -i curr=0\n\n    if (( len < 2 )); then\n        echo \"Array must have at least 2 elements\"\n        return 1\n    fi\n\n    prev=${array[0]}\n    for (( i=1; i<len; i++ )); do\n        curr=${array[i]}\n        if (( curr < prev )); then\n            is_increasing=0\n        elif (( curr > prev )); then\n            is_decreasing=0\n        fi\n        prev=$curr\n    done\n\n    if (( is_increasing || is_decreasing )); then\n        is_monotonic=1\n    fi\n\n    echo \"is_monotonic: $is_monotonic\"\n    return 0\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a array=($1)\n  local -i i=0\n  local -i len=${#array[@]}\n  local -i is_monotonic=1\n  local -i is_increasing=0\n  local -i is_decreasing=0\n  local -i is_equal=0\n  local -i is_equal_count=0\n  local -i is_increasing_count=0\n  local -i is_decreasing_count=0\n\n  for ((i=0; i<len-1; i++)); do\n    if [[ ${array[i]} -eq ${array[i+1]} ]]; then\n      is_equal=1\n      is_equal_count=$((is_equal_count+1))\n    elif [[ ${array[i]} -lt ${array[i+1]} ]]; then\n      is_increasing=1\n      is_increasing_count=$((is_increasing_count+1))\n    elif [[ ${array[i]} -gt ${array[i+1]} ]]; then\n      is_decreasing=1\n      is_decreasing_count=$((is_decreasing_count+1))\n    fi\n  done\n\n  if [[ $is_increasing -eq 1 && $is_decreasing -eq 1 ]]; then\n    is_monotonic=0\n  elif [[ $is_equal -eq 1 && $is_equal_count -eq $len ]]; then\n    is_monotonic=1\n  elif [[ $is_increasing -eq 1 && $is_increasing_count -eq $len-1 ]]; then\n    is_monotonic=1\n  elif [[ $is_decreasing -eq 1 && $is_decreasing_count -eq $len-1 ]]; then\n    is_monotonic=1\n  else\n    is_monotonic=0\n  fi\n\n  echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n            flag1=1\n        elif [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 0 ]]; then\n        echo \"Monotonic\"\n    elif [[ $flag1 -eq 0 && $flag2 -eq 1 ]]; then\n        echo \"Monotonic\"\n    else\n        echo \"Not Monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i inc=0\n    local -i dec=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            inc=1\n        elif [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            dec=1\n        fi\n    done\n\n    if [[ $inc -eq 1 && $dec -eq 0 ]]; then\n        echo \"Increasing\"\n    elif [[ $inc -eq 0 && $dec -eq 1 ]]; then\n        echo \"Decreasing\"\n    else\n        echo \"Neither\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a arr=(\"$@\")\n  local -i i=0\n  local -i j=0\n  local -i len=${#arr[@]}\n  local -i flag=0\n  local -i flag1=0\n  local -i flag2=0\n  local -i flag3=0\n  local -i flag4=0\n  local -i flag5=0\n  local -i flag6=0\n  local -i flag7=0\n  local -i flag8=0\n  local -i flag9=0\n  local -i flag10=0\n  local -i flag11=0\n  local -i flag12=0\n  local -i flag13=0\n  local -i flag14=0\n  local -i flag15=0\n  local -i flag16=0\n  local -i flag17=0\n  local -i flag18=0\n  local -i flag19=0\n  local -i flag20=0\n  local -i flag21=0\n  local -i flag22=0\n  local -i flag23=0\n  local -i flag24=0\n  local -i flag25=0\n  local -i flag26=0\n  local -i flag27=0\n  local -i flag28=0\n  local -i flag29=0\n  local -i flag30=0\n  local -i flag31=0\n  local -i flag32=0\n  local -i flag33=0\n  local -i flag34=0\n  local -i flag35=0\n  local -i flag36=0\n  local -i flag37=0\n  local -i flag38=0\n  local -i flag39=0\n  local -i flag40=0\n  local -i flag41=0\n  local -i flag42=0\n  local -i flag43=0\n  local -i flag44=0\n  local -i flag45=0\n  local -i flag46=0\n  local -i flag47=0\n  local -i flag48=0\n  local -i flag49=0\n  local -i flag50=0\n  local -i flag51=0\n  local -i\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=0\n    local -i is_decreasing=0\n\n    if [ $len -eq 1 ]; then\n        return 0\n    fi\n\n    for ((i=0; i<len-1; i++)); do\n        if [ ${arr[i]} -lt ${arr[i+1]} ]; then\n            is_increasing=1\n        elif [ ${arr[i]} -gt ${arr[i+1]} ]; then\n            is_decreasing=1\n        fi\n    done\n\n    if [ $is_increasing -eq 1 -a $is_decreasing -eq 0 ]; then\n        return 0\n    elif [ $is_increasing -eq 0 -a $is_decreasing -eq 1 ]; then\n        return 0\n    else\n        return 1\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    local -a arr_sorted_r=($(printf \"%s\\n\" \"${arr[@]}\" | sort -nr))\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_r[*]}\" ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 || $is_decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -i\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local array=($1)\n    local i=0\n    local len=${#array[@]}\n    local flag=0\n    local flag1=0\n    local flag2=0\n    local flag3=0\n    local flag4=0\n    local flag5=0\n    local flag6=0\n    local flag7=0\n    local flag8=0\n    local flag9=0\n    local flag10=0\n    local flag11=0\n    local flag12=0\n    local flag13=0\n    local flag14=0\n    local flag15=0\n    local flag16=0\n    local flag17=0\n    local flag18=0\n    local flag19=0\n    local flag20=0\n    local flag21=0\n    local flag22=0\n    local flag23=0\n    local flag24=0\n    local flag25=0\n    local flag26=0\n    local flag27=0\n    local flag28=0\n    local flag29=0\n    local flag30=0\n    local flag31=0\n    local flag32=0\n    local flag33=0\n    local flag34=0\n    local flag35=0\n    local flag36=0\n    local flag37=0\n    local flag38=0\n    local flag39=0\n    local flag40=0\n    local flag41=0\n    local flag42=0\n    local flag43=0\n    local flag44=0\n    local flag45=0\n    local flag46=0\n    local flag47=0\n    local flag48=0\n    local flag49=0\n    local flag50=0\n    local flag51=0\n    local flag52=0\n    local flag53=0\n    local flag54=0\n    local flag55=0\n    local flag56=0\n    local flag57=0\n    local flag58=0\n    local flag59=0\n    local flag60=0\n    local flag61=0\n    local flag62=0\n    local flag63=0\n    local flag64=0\n    local flag65=0\n    local flag66=0\n    local flag67=0\n    local flag68=0\n    local flag69\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array\n    local -i i\n    local -i len\n    local -i monotonic\n    local -i increasing\n    local -i decreasing\n\n    array=($1)\n    len=${#array[@]}\n    increasing=1\n    decreasing=1\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            increasing=0\n        fi\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            decreasing=0\n        fi\n    done\n    monotonic=$increasing+$decreasing\n    if [[ monotonic -eq 1 ]]; then\n        echo \"Monotonic\"\n    else\n        echo \"Not monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    local -a arr_sorted_r=($(printf \"%s\\n\" \"${arr[@]}\" | sort -nr))\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_r[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for (( i=0; i<len-1; i++ ))\n    do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]\n        then\n            flag1=1\n        elif [[ ${arr[i]} -lt ${arr[i+1]} ]]\n        then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 1 ]]\n    then\n        echo \"Not Monotonic\"\n    else\n        echo \"Monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a arr=(\"$@\")\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i flag=0\n  local -i flag2=0\n  local -i flag3=0\n  local -i flag4=0\n  local -i flag5=0\n  local -i flag6=0\n  local -i flag7=0\n  local -i flag8=0\n  local -i flag9=0\n  local -i flag10=0\n  local -i flag11=0\n  local -i flag12=0\n  local -i flag13=0\n  local -i flag14=0\n  local -i flag15=0\n  local -i flag16=0\n  local -i flag17=0\n  local -i flag18=0\n  local -i flag19=0\n  local -i flag20=0\n  local -i flag21=0\n  local -i flag22=0\n  local -i flag23=0\n  local -i flag24=0\n  local -i flag25=0\n  local -i flag26=0\n  local -i flag27=0\n  local -i flag28=0\n  local -i flag29=0\n  local -i flag30=0\n  local -i flag31=0\n  local -i flag32=0\n  local -i flag33=0\n  local -i flag34=0\n  local -i flag35=0\n  local -i flag36=0\n  local -i flag37=0\n  local -i flag38=0\n  local -i flag39=0\n  local -i flag40=0\n  local -i flag41=0\n  local -i flag42=0\n  local -i flag43=0\n  local -i flag44=0\n  local -i flag45=0\n  local -i flag46=0\n  local -i flag47=0\n  local -i flag48=0\n  local -i flag49=0\n  local -i flag50=0\n  local -i flag51=0\n  local -i flag52=0\n  local -i flag53=0\n  local -\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a arr=($1)\n  local -i i=0\n  local -i j=0\n  local -i len=${#arr[@]}\n  local -i flag=0\n  for ((i=0;i<len-1;i++))\n  do\n    if [ ${arr[i]} -gt ${arr[i+1]} ]; then\n      flag=1\n      break\n    fi\n  done\n  if [ $flag -eq 1 ]; then\n    echo \"Array is not monotonic\"\n  else\n    echo \"Array is monotonic\"\n  fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local arr=($1)\n    local i=0\n    local len=${#arr[@]}\n    local is_increasing=true\n    local is_decreasing=true\n    while [ $i -lt $len ]; do\n        if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n            is_decreasing=false\n        elif [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n            is_increasing=false\n        fi\n        i=$((i+1))\n    done\n    if [ $is_increasing = true ] || [ $is_decreasing = true ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpquzle075.sh: line 12: [: 4: unary operator expected\\n/tmp/tmpquzle075.sh: line 14: [: 4: unary operator expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -a arr_sorted=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -n))\n    local -a arr_sorted_r=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -nr))\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_r[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=0\n    local -i is_decreasing=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            is_increasing=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            is_decreasing=1\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 && $is_decreasing -eq 0 ]]; then\n        echo \"Increasing\"\n    elif [[ $is_increasing -eq 0 && $is_decreasing -eq 1 ]]; then\n        echo \"Decreasing\"\n    else\n        echo \"Not monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            flag1=1\n        fi\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            flag2=1\n        fi\n        if [[ ${array[i]} -eq ${array[i+1]} ]]; then\n            flag3=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 0 && $flag3 -eq 0 ]]; then\n        echo \"Increasing\"\n    elif [[ $flag1 -eq 0 && $flag2 -eq 1 && $flag3 -eq 0 ]]; then\n        echo \"Decreasing\"\n    elif [[ $flag1 -eq 0 && $flag2 -eq 0 && $flag3 -eq 1 ]]; then\n        echo \"Constant\"\n    else\n        echo \"Non-monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i flag=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc=$((inc+1))\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec=$((dec+1))\n        else\n            eq=$((eq+1))\n        fi\n    done\n\n    if [[ $inc -eq $((len-1)) ]]; then\n        flag=1\n    elif [[ $dec -eq $((len-1)) ]]; then\n        flag=1\n    elif [[ $eq -eq $((len-1)) ]]; then\n        flag=1\n    fi\n\n    echo $flag\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -a sorted=($(echo ${array[@]} | tr ' ' '\\n' | sort -n))\n    local -a reversed=($(echo ${array[@]} | tr ' ' '\\n' | sort -rn))\n    if [[ \"${array[@]}\" == \"${sorted[@]}\" ]] || [[ \"${array[@]}\" == \"${reversed[@]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a list=($1)\n    local -a list_sorted=($(echo \"${list[@]}\" | tr ' ' '\\n' | sort -n))\n    [[ \"${list[*]}\" == \"${list_sorted[*]}\" ]] && echo \"Monotonic\" || echo \"Not monotonic\"\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n   \n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    for ((i=0; i<len-1; i++)); do\n        if (( arr[i] < arr[i+1] )); then\n            inc=1\n        elif (( arr[i] > arr[i+1] )); then\n            dec=1\n        fi\n    done\n    if (( inc && dec )); then\n        echo \"0\"\n    else\n        echo \"1\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]]; then\n        echo \"Monotonic\"\n    else\n        echo \"Not monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local array=($1)\n    local i=0\n    local is_monotonic=1\n    local prev=${array[0]}\n    local curr=0\n    local len=${#array[@]}\n    while [ $i -lt $len ]; do\n        curr=${array[$i]}\n        if [ $prev -gt $curr ]; then\n            is_monotonic=0\n            break\n        fi\n        prev=$curr\n        i=$((i+1))\n    done\n    echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i increasing=0\n    local -i decreasing=0\n    local -i equal=0\n\n    for (( i=0; i<len-1; i++ )); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            increasing=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            decreasing=1\n        else\n            equal=1\n        fi\n    done\n\n    if [[ $increasing -eq 1 && $decreasing -eq 0 ]]; then\n        echo \"Increasing\"\n    elif [[ $increasing -eq 0 && $decreasing -eq 1 ]]; then\n        echo \"Decreasing\"\n    elif [[ $equal -eq 1 ]]; then\n        echo \"Equal\"\n    else\n        echo \"Not Monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            flag1=1\n        fi\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 1 ]]; then\n        echo \"Array is not monotonic\"\n    else\n        echo \"Array is monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n\tlocal -a array=($1)\n\tlocal -i i=0\n\tlocal -i j=0\n\tlocal -i k=0\n\tlocal -i l=0\n\tlocal -i m=0\n\tlocal -i n=0\n\tlocal -i o=0\n\tlocal -i p=0\n\tlocal -i q=0\n\tlocal -i r=0\n\tlocal -i s=0\n\tlocal -i t=0\n\tlocal -i u=0\n\tlocal -i v=0\n\tlocal -i w=0\n\tlocal -i x=0\n\tlocal -i y=0\n\tlocal -i z=0\n\tlocal -i aa=0\n\tlocal -i bb=0\n\tlocal -i cc=0\n\tlocal -i dd=0\n\tlocal -i ee=0\n\tlocal -i ff=0\n\tlocal -i gg=0\n\tlocal -i hh=0\n\tlocal -i ii=0\n\tlocal -i jj=0\n\tlocal -i kk=0\n\tlocal -i ll=0\n\tlocal -i mm=0\n\tlocal -i nn=0\n\tlocal -i oo=0\n\tlocal -i pp=0\n\tlocal -i qq=0\n\tlocal -i rr=0\n\tlocal -i ss=0\n\tlocal -i tt=0\n\tlocal -i uu=0\n\tlocal -i vv=0\n\tlocal -i ww=0\n\tlocal -i xx=0\n\tlocal -i yy=0\n\tlocal -i zz=0\n\tlocal -i aaa=0\n\tlocal -i bbb=0\n\tlocal -i ccc=0\n\tlocal -i ddd=0\n\tlocal -i eee=0\n\tlocal -i fff=0\n\tlocal -i ggg=0\n\tlocal -i hhh=0\n\tlocal -i iii=0\n\tlocal -i jjj=0\n\tlocal -i kkk=0\n\tlocal -i lll=0\n\tlocal -i mmm=0\n\tlocal -i nnn=0\n\tlocal -i ooo=\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            flag1=1\n        elif [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a array=(\"$@\")\n  local -i i=0\n  local -i len=${#array[@]}\n  local -i is_increasing=1\n  local -i is_decreasing=1\n  local -i is_monotonic=0\n\n  while [ $i -lt $len ]; do\n    if [ $i -eq 0 ]; then\n      ((i++))\n      continue\n    fi\n\n    if [ ${array[$i]} -gt ${array[$i-1]} ]; then\n      is_decreasing=0\n    elif [ ${array[$i]} -lt ${array[$i-1]} ]; then\n      is_increasing=0\n    fi\n\n    ((i++))\n  done\n\n  if [ $is_increasing -eq 1 ] || [ $is_decreasing -eq 1 ]; then\n    is_monotonic=1\n  fi\n\n  echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    if [ $len -le 1 ]\n    then\n        echo \"True\"\n        return\n    fi\n    for ((i=0; i<len-1; i++))\n    do\n        if [ ${arr[$i]} -lt ${arr[$i+1]} ]\n        then\n            flag=1\n        fi\n        if [ ${arr[$i]} -gt ${arr[$i+1]} ]\n        then\n            flag2=1\n        fi\n        if [ ${arr[$i]} -eq ${arr[$i+1]} ]\n        then\n            flag3=1\n        fi\n    done\n    if [ $flag -eq 1 -a $flag2 -eq 0 ]\n    then\n        echo \"True\"\n        return\n    fi\n    if [ $flag -eq 0 -a $flag2 -eq 1 ]\n    then\n        echo \"True\"\n        return\n    fi\n    if [ $flag -eq 0 -a $flag2 -eq 0 -a $flag3 -eq 1 ]\n    then\n        echo \"True\"\n        return\n    fi\n    echo \"False\"\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            flag=1\n            break\n        fi\n    done\n    for ((j=0; j<len-1; j++)); do\n        if [[ ${array[j]} -lt ${array[j+1]} ]]; then\n            flag2=1\n            break\n        fi\n    done\n    if [[ $flag -eq 1 && $flag2 -eq 1 ]]; then\n        echo \"Not Monotonic\"\n    else\n        echo \"Monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=1\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -a arr_sorted=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -n))\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]]; then\n        echo \"Monotonic\"\n    else\n        echo \"Not monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -i\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a a=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i flag=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc=$((inc+1))\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec=$((dec+1))\n        else\n            eq=$((eq+1))\n        fi\n    done\n\n    if [[ $inc -eq $((len-1)) ]]; then\n        flag=1\n    elif [[ $dec -eq $((len-1)) ]]; then\n        flag=1\n    elif [[ $eq -eq $((len-1)) ]]; then\n        flag=1\n    fi\n\n    if [[ $flag -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n    if [[ $is_increasing -eq 1 ]]; then\n        echo \"Increasing\"\n    elif [[ $is_decreasing -eq 1 ]]; then\n        echo \"Decreasing\"\n    else\n        echo \"Neither\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local arr=($1)\n    local len=${#arr[@]}\n    local i=0\n    local inc=0\n    local dec=0\n    while [ $i -lt $len ]; do\n        if [ $i -eq 0 ]; then\n            inc=1\n            dec=1\n        else\n            if [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n                inc=1\n            else\n                inc=0\n            fi\n            if [ ${arr[$i]} -lt ${arr[$i-1]} ]; then\n                dec=1\n            else\n                dec=0\n            fi\n        fi\n        if [ $inc -eq 0 ] && [ $dec -eq 0 ]; then\n            echo \"Not Monotonic\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"Monotonic\"\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a arr=($1)\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i flag=0\n  local -i flag2=0\n  local -i flag3=0\n  local -i flag4=0\n  local -i flag5=0\n  local -i flag6=0\n  local -i flag7=0\n  local -i flag8=0\n  local -i flag9=0\n  local -i flag10=0\n  local -i flag11=0\n  local -i flag12=0\n  local -i flag13=0\n  local -i flag14=0\n  local -i flag15=0\n  local -i flag16=0\n  local -i flag17=0\n  local -i flag18=0\n  local -i flag19=0\n  local -i flag20=0\n  local -i flag21=0\n  local -i flag22=0\n  local -i flag23=0\n  local -i flag24=0\n  local -i flag25=0\n  local -i flag26=0\n  local -i flag27=0\n  local -i flag28=0\n  local -i flag29=0\n  local -i flag30=0\n  local -i flag31=0\n  local -i flag32=0\n  local -i flag33=0\n  local -i flag34=0\n  local -i flag35=0\n  local -i flag36=0\n  local -i flag37=0\n  local -i flag38=0\n  local -i flag39=0\n  local -i flag40=0\n  local -i flag41=0\n  local -i flag42=0\n  local -i flag43=0\n  local -i flag44=0\n  local -i flag45=0\n  local -i flag46=0\n  local -i flag47=0\n  local -i flag48=0\n  local -i flag49=0\n  local -i flag50=0\n  local -i flag51=0\n  local -i flag52=0\n  local -i flag53=0\n  local -i\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    for ((i=0; i<n-1; i++))\n    do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]\n        then\n            flag1=1\n        fi\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]\n        then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 1 ]]\n    then\n        echo \"No\"\n    else\n        echo \"Yes\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local array=(\"$@\")\n    local is_monotonic=1\n    local i=0\n    local j=0\n    local len=${#array[@]}\n    local is_increasing=0\n    local is_decreasing=0\n\n    for ((i=0; i<len-1; i++))\n    do\n        if [[ ${array[$i]} -gt ${array[$i+1]} ]]\n        then\n            is_decreasing=1\n        elif [[ ${array[$i]} -lt ${array[$i+1]} ]]\n        then\n            is_increasing=1\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 && $is_decreasing -eq 1 ]]\n    then\n        is_monotonic=0\n    fi\n\n    echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a array=($1)\n  local -i i=0\n  local -i len=${#array[@]}\n  local -i inc=0\n  local -i dec=0\n  local -i eq=0\n  local -i ret=0\n\n  for ((i=0; i<len-1; i++)); do\n    if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n      inc=$((inc+1))\n    elif [[ ${array[i]} -gt ${array[i+1]} ]]; then\n      dec=$((dec+1))\n    else\n      eq=$((eq+1))\n    fi\n  done\n\n  if [[ $inc -eq $((len-1)) ]]; then\n    ret=1\n  elif [[ $dec -eq $((len-1)) ]]; then\n    ret=1\n  elif [[ $eq -eq $((len-1)) ]]; then\n    ret=1\n  fi\n\n  echo $ret\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -a sorted=($(echo \"${array[@]}\" | tr ' ' '\\n' | sort -n))\n    local -a reversed=($(echo \"${array[@]}\" | tr ' ' '\\n' | sort -nr))\n    if [[ \"${array[@]}\" == \"${sorted[@]}\" ]] || [[ \"${array[@]}\" == \"${reversed[@]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=1\n    local -i len=${#array[@]}\n    local -i is_increasing=0\n    local -i is_decreasing=0\n\n    for ((i=1; i<len; i++)); do\n        if [[ ${array[i]} -gt ${array[i-1]} ]]; then\n            is_increasing=1\n        elif [[ ${array[i]} -lt ${array[i-1]} ]]; then\n            is_decreasing=1\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 && $is_decreasing -eq 0 ]]; then\n        echo \"Increasing\"\n    elif [[ $is_increasing -eq 0 && $is_decreasing -eq 1 ]]; then\n        echo \"Decreasing\"\n    else\n        echo \"Neither\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a arr=(\"$@\")\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i flag=0\n  local -i flag2=0\n  local -i flag3=0\n  local -i flag4=0\n  local -i flag5=0\n  local -i flag6=0\n  local -i flag7=0\n  local -i flag8=0\n  local -i flag9=0\n  local -i flag10=0\n  local -i flag11=0\n  local -i flag12=0\n  local -i flag13=0\n  local -i flag14=0\n  local -i flag15=0\n  local -i flag16=0\n  local -i flag17=0\n  local -i flag18=0\n  local -i flag19=0\n  local -i flag20=0\n  local -i flag21=0\n  local -i flag22=0\n  local -i flag23=0\n  local -i flag24=0\n  local -i flag25=0\n  local -i flag26=0\n  local -i flag27=0\n  local -i flag28=0\n  local -i flag29=0\n  local -i flag30=0\n  local -i flag31=0\n  local -i flag32=0\n  local -i flag33=0\n  local -i flag34=0\n  local -i flag35=0\n  local -i flag36=0\n  local -i flag37=0\n  local -i flag38=0\n  local -i flag39=0\n  local -i flag40=0\n  local -i flag41=0\n  local -i flag42=0\n  local -i flag43=0\n  local -i flag44=0\n  local -i flag45=0\n  local -i flag46=0\n  local -i flag47=0\n  local -i flag48=0\n  local -i flag49=0\n  local -i flag50=0\n  local -i flag51=0\n  local -i flag52=0\n  local -i flag53=0\n  local -\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=(\"$@\")\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a array\n  local -i i\n  local -i len\n  local -i flag\n  local -i flag2\n  local -i flag3\n  local -i flag4\n  array=($1)\n  len=${#array[@]}\n  flag=0\n  flag2=0\n  flag3=0\n  flag4=0\n  for ((i=0; i<len-1; i++)); do\n    if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n      flag=1\n    elif [[ ${array[i]} -gt ${array[i+1]} ]]; then\n      flag2=1\n    fi\n  done\n  for ((i=0; i<len-1; i++)); do\n    if [[ ${array[i]} -le ${array[i+1]} ]]; then\n      flag3=1\n    elif [[ ${array[i]} -ge ${array[i+1]} ]]; then\n      flag4=1\n    fi\n  done\n  if [[ $flag -eq 1 && $flag2 -eq 0 ]]; then\n    echo \"True\"\n  elif [[ $flag3 -eq 1 && $flag4 -eq 0 ]]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local i=0\n    local is_increasing=0\n    local is_decreasing=0\n    local is_monotonic=0\n    local arr_len=${#arr[@]}\n    local arr_len_minus_one=$((arr_len-1))\n    local arr_len_minus_two=$((arr_len-2))\n\n    # check if the array is increasing\n    for ((i=0; i<arr_len_minus_one; i++)); do\n        if [[ ${arr[$i]} -lt ${arr[$((i+1))]} ]]; then\n            is_increasing=1\n        else\n            is_increasing=0\n            break\n        fi\n    done\n\n    # check if the array is decreasing\n    for ((i=0; i<arr_len_minus_one; i++)); do\n        if [[ ${arr[$i]} -gt ${arr[$((i+1))]} ]]; then\n            is_decreasing=1\n        else\n            is_decreasing=0\n            break\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 || $is_decreasing -eq 1 ]]; then\n        is_monotonic=1\n    fi\n\n    echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a arr=(\"$@\")\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i is_increasing=0\n  local -i is_decreasing=0\n\n  for ((i=0; i<len-1; i++)); do\n    if (( arr[i] < arr[i+1] )); then\n      is_increasing=1\n    elif (( arr[i] > arr[i+1] )); then\n      is_decreasing=1\n    fi\n  done\n\n  if (( is_increasing == 1 && is_decreasing == 0 )); then\n    echo \"The array is increasing.\"\n  elif (( is_decreasing == 1 && is_increasing == 0 )); then\n    echo \"The array is decreasing.\"\n  else\n    echo \"The array is neither increasing nor decreasing.\"\n  fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag=1\n            break\n        fi\n    done\n\n    if [[ $flag -eq 1 ]]; then\n        for ((j=0; j<len-1; j++)); do\n            if [[ ${arr[j]} -lt ${arr[j+1]} ]]; then\n                echo \"Not Monotonic\"\n                return 1\n            fi\n        done\n    fi\n\n    echo \"Monotonic\"\n    return 0\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a array=(\"$@\")\n  local -i len=${#array[@]}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n  local -i bo=0\n\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i flag=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc=$((inc+1))\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec=$((dec+1))\n        else\n            eq=$((eq+1))\n        fi\n    done\n\n    if [[ $inc -eq $((len-1)) ]]; then\n        flag=1\n    elif [[ $dec -eq $((len-1)) ]]; then\n        flag=1\n    elif [[ $eq -eq $((len-1)) ]]; then\n        flag=1\n    fi\n\n    echo $flag\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag=1\n        fi\n    done\n    for ((j=0; j<len-1; j++)); do\n        if [[ ${arr[j]} -lt ${arr[j+1]} ]]; then\n            flag2=1\n        fi\n    done\n    if [[ $flag -eq 1 && $flag2 -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -a arr_sorted=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -n))\n    local -a arr_sorted_r=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -nr))\n    if [ \"${arr[*]}\" == \"${arr_sorted[*]}\" ] || [ \"${arr[*]}\" == \"${arr_sorted_r[*]}\" ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=1\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a arr=($1)\n  local -a arr_sorted=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -n))\n  if [[ \"${arr[@]}\" == \"${arr_sorted[@]}\" ]]; then\n    echo \"Array is monotonic\"\n  else\n    echo \"Array is not monotonic\"\n  fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]]; then\n        echo \"Monotonic\"\n    else\n        echo \"Not monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a array=(\"$@\")\n  local -a sorted=(\"${array[@]}\")\n  local -a reversed=(\"${array[@]}\")\n  local -a sorted_reversed=(\"${array[@]}\")\n  local -a reversed_sorted=(\"${array[@]}\")\n  local -i i=0\n  local -i j=0\n  local -i n=${#array[@]}\n  local -i is_monotonic=0\n  local -i is_monotonic_reversed=0\n  local -i is_monotonic_sorted=0\n  local -i is_monotonic_reversed_sorted=0\n  local -i is_monotonic_sorted_reversed=0\n  local -i is_monotonic_sorted_reversed_reversed=0\n  local -i is_monotonic_reversed_sorted_reversed=0\n  local -i is_monotonic_reversed_reversed_sorted=0\n  local -i is_monotonic_reversed_reversed_sorted_reversed=0\n  local -i is_monotonic_sorted_reversed_reversed_sorted=0\n  local -i is_monotonic_sorted_reversed_sorted_reversed=0\n  local -i is_monotonic_sorted_sorted_reversed_reversed=0\n  local -i is_monotonic_sorted_sorted_reversed_reversed_reversed=0\n  local -i is_monotonic_sorted_sorted_reversed_reversed_reversed_reversed=0\n  local -i is_monotonic_sorted_sorted_reversed_reversed_reversed_reversed_reversed=0\n  local -i is_monotonic_sorted_sorted_reversed_reversed_reversed_reversed_reversed_reversed=0\n  local -i is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a arr=($1)\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i inc=0\n  local -i dec=0\n  local -i eq=0\n  local -i flag=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec=1\n        else\n            eq=1\n        fi\n        if [[ $inc -eq 1 && $dec -eq 1 ]]; then\n            flag=1\n            break\n        fi\n    done\n    if [[ $flag -eq 1 ]]; then\n        echo \"Not Monotonic\"\n    elif [[ $inc -eq 1 ]]; then\n        echo \"Increasing\"\n    elif [[ $dec -eq 1 ]]; then\n        echo \"Decreasing\"\n    else\n        echo \"Constant\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n\n    while [ $i -lt $len ]; do\n        if [ $i -eq 0 ]; then\n            ((i++))\n            continue\n        fi\n        if [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n            ((inc++))\n        elif [ ${arr[$i]} -lt ${arr[$i-1]} ]; then\n            ((dec++))\n        else\n            ((eq++))\n        fi\n        ((i++))\n    done\n\n    if [ $inc -eq $len -o $dec -eq $len -o $eq -eq $len ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_monotonic=1\n    local -i is_increasing=0\n    local -i is_decreasing=0\n\n    if [ $len -le 1 ]; then\n        echo \"true\"\n        return\n    fi\n\n    for ((i=0; i<len-1; i++)); do\n        if [ ${array[i]} -lt ${array[i+1]} ]; then\n            is_increasing=1\n        elif [ ${array[i]} -gt ${array[i+1]} ]; then\n            is_decreasing=1\n        fi\n        if [ $is_increasing -eq 1 -a $is_decreasing -eq 1 ]; then\n            is_monotonic=0\n            break\n        fi\n    done\n\n    if [ $is_monotonic -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a array=($1)\n  local -i i=0\n  local -i len=${#array[@]}\n  local -i direction=0\n  local -i last_direction=0\n  local -i last_index=0\n  local -i last_value=0\n  local -i value=0\n  local -i direction_change=0\n\n  for ((i=0; i < len; i++)); do\n    value=${array[$i]}\n    if ((i > 0)); then\n      if ((value > last_value)); then\n        direction=1\n      elif ((value < last_value)); then\n        direction=-1\n      else\n        direction=0\n      fi\n      if ((direction != last_direction)); then\n        if ((direction_change > 0)); then\n          echo \"Not monotonic\"\n          return 1\n        fi\n        direction_change=1\n      fi\n    fi\n    last_direction=$direction\n    last_value=$value\n  done\n  echo \"Monotonic\"\n  return 0\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr\n    local -i i\n    local -i len\n    local -i is_monotonic\n    local -i is_increasing\n    local -i is_decreasing\n\n    arr=($1)\n    len=${#arr[@]}\n    is_monotonic=1\n    is_increasing=1\n    is_decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            is_decreasing=0\n        fi\n        if [[ $is_increasing -eq 0 && $is_decreasing -eq 0 ]]; then\n            is_monotonic=0\n            break\n        fi\n    done\n\n    echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a arr=(\"$@\")\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i is_increasing=0\n  local -i is_decreasing=0\n  local -i is_monotonic=0\n  local -i is_constant=0\n\n  if [ $len -eq 1 ]; then\n    is_constant=1\n  else\n    for (( i=0; i<$len-1; i++ )); do\n      if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n        is_increasing=1\n      elif [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n        is_decreasing=1\n      fi\n    done\n  fi\n\n  if [ $is_increasing -eq 1 ] && [ $is_decreasing -eq 0 ]; then\n    is_monotonic=1\n  elif [ $is_decreasing -eq 1 ] && [ $is_increasing -eq 0 ]; then\n    is_monotonic=1\n  elif [ $is_constant -eq 1 ]; then\n    is_monotonic=1\n  fi\n\n  echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a arr=(\"$@\")\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i is_monotonic=1\n  local -i is_increasing=1\n  local -i is_decreasing=1\n\n  while [ $i -lt $len ]; do\n    if [ $i -eq 0 ]; then\n      ((i++))\n      continue\n    fi\n\n    if [ ${arr[$i]} -lt ${arr[$i-1]} ]; then\n      is_increasing=0\n    elif [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n      is_decreasing=0\n    fi\n\n    if [ $is_increasing -eq 0 ] && [ $is_decreasing -eq 0 ]; then\n      is_monotonic=0\n      break\n    fi\n\n    ((i++))\n  done\n\n  echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr\n    local i\n    local -i len\n    local -i result=0\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    arr=($1)\n    len=${#arr[@]}\n    for ((i=1; i<len; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i-1]} ]]; then\n            is_decreasing=0\n        elif [[ ${arr[i]} -lt ${arr[i-1]} ]]; then\n            is_increasing=0\n        fi\n    done\n    if [[ $is_increasing -eq 1 || $is_decreasing -eq 1 ]]; then\n        result=1\n    fi\n    echo $result\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=(\"$@\")\n    local -a sorted_array=(\"$@\")\n    local -a reversed_array=(\"$@\")\n    local -a sorted_reversed_array=(\"$@\")\n    local -a reversed_sorted_array=(\"$@\")\n\n    # sort the array\n    IFS=$'\\n' sorted_array=($(sort <<<\"${array[*]}\"))\n    unset IFS\n\n    # reverse the array\n    IFS=$'\\n' reversed_array=($(sort -r <<<\"${array[*]}\"))\n    unset IFS\n\n    # sort the reversed array\n    IFS=$'\\n' sorted_reversed_array=($(sort <<<\"${reversed_array[*]}\"))\n    unset IFS\n\n    # reverse the sorted array\n    IFS=$'\\n' reversed_sorted_array=($(sort -r <<<\"${sorted_array[*]}\"))\n    unset IFS\n\n    # compare the arrays\n    if [[ \"${array[*]}\" == \"${sorted_array[*]}\" || \"${array[*]}\" == \"${reversed_array[*]}\" || \"${array[*]}\" == \"${sorted_reversed_array[*]}\" || \"${array[*]}\" == \"${reversed_sorted_array[*]}\" ]]; then\n        echo \"The array is monotonic\"\n    else\n        echo \"The array is not monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a array=($1)\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i n=${#array[@]}\n  local -i flag=0\n  local -i flag1=0\n  local -i flag2=0\n  local -i flag3=0\n  local -i flag4=0\n  local -i flag5=0\n  local -i flag6=0\n  local -i flag7=0\n  local -i flag8=0\n  local -i flag9=0\n  local -i flag10=0\n  local -i flag11=0\n  local -i flag12=0\n  local -i flag13=0\n  local -i flag14=0\n  local -i flag15=0\n  local -i flag16=0\n  local -i flag17=0\n  local -i flag18=0\n  local -i flag19=0\n  local -i flag20=0\n  local -i flag21=0\n  local -i flag22=0\n  local -i flag23=0\n  local -i flag24=0\n  local -i flag25=0\n  local -i flag26=0\n  local -i flag27=0\n  local -i flag28=0\n  local -i flag29=0\n  local -i flag30=0\n  local -i flag31=0\n  local -i flag32=0\n  local -i flag33=0\n  local -i flag34=0\n  local -i flag35=0\n  local -i flag36=0\n  local -i flag37=0\n  local -i flag38=0\n  local -i flag39=0\n  local -i flag40=0\n  local -i flag41=0\n  local -i flag42=0\n  local -i flag43=0\n  local -i flag44=0\n  local -i flag45=0\n  local -i flag46=0\n  local -i flag47=0\n  local -i flag48=0\n  local -i flag49=0\n  local -i flag50=0\n  local -i flag51\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -a arr_sorted=(\"${arr[@]}\")\n    local -a arr_sorted_r=(\"${arr[@]}\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_monotonic=1\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_constant=0\n    local -i is_increasing_or_constant=0\n    local -i is_decreasing_or_constant=0\n    local -i is_increasing_or_decreasing=0\n    local -i is_increasing_or_decreasing_or_constant=0\n\n    if [[ $len -le 1 ]]; then\n        echo \"1\"\n        return\n    fi\n\n    for ((i=1; i<len; i++)); do\n        if [[ ${arr[$i]} -gt ${arr[$i-1]} ]]; then\n            is_increasing=1\n        elif [[ ${arr[$i]} -lt ${arr[$i-1]} ]]; then\n            is_decreasing=1\n        else\n            is_constant=1\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 && $is_decreasing -eq 0 ]]; then\n        is_increasing_or_constant=1\n    elif [[ $is_decreasing -eq 1 && $is_increasing -eq 0 ]]; then\n        is_decreasing_or_constant=1\n    elif [[ $is_increasing -eq 1 && $is_decreasing -eq 1 ]]; then\n        is_increasing_or_decreasing=1\n    elif [[ $is_constant -eq 1 ]]; then\n        is_increasing_or_decreasing_or_constant=1\n    fi\n\n    if [[ $is_increasing_or_decreasing -eq 1 || $is_increasing_or_decreasing_or_constant -eq 1 ]]; then\n        is_monotonic=1\n    else\n        is_monotonic=0\n    fi\n\n    echo \"$is_monotonic\"\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    local -i is_monotonic=0\n\n    if [ $len -eq 0 ]; then\n        echo \"Array is empty\"\n        return 1\n    fi\n\n    for ((i=0; i<len-1; i++)); do\n        if [ ${arr[i]} -gt ${arr[i+1]} ]; then\n            is_increasing=0\n        fi\n        if [ ${arr[i]} -lt ${arr[i+1]} ]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [ $is_increasing -eq 1 ] || [ $is_decreasing -eq 1 ]; then\n        is_monotonic=1\n    fi\n\n    echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_monotonic=0\n    local -i is_constant=0\n    local -i is_not_monotonic=0\n\n    if [[ $len -eq 1 ]]; then\n        is_constant=1\n    else\n        for ((i=0; i<len-1; i++)); do\n            if [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n                is_increasing=1\n            elif [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n                is_decreasing=1\n            fi\n            if [[ $is_increasing -eq 1 && $is_decreasing -eq 1 ]]; then\n                is_not_monotonic=1\n                break\n            fi\n        done\n        if [[ $is_increasing -eq 1 && $is_decreasing -eq 0 ]]; then\n            is_monotonic=1\n        elif [[ $is_decreasing -eq 1 && $is_increasing -eq 0 ]]; then\n            is_monotonic=1\n        fi\n    fi\n\n    if [[ $is_monotonic -eq 1 ]]; then\n        echo \"The array is monotonic\"\n    elif [[ $is_constant -eq 1 ]]; then\n        echo \"The array is constant\"\n    else\n        echo \"The array is not monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -i\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr\n    IFS=' ' read -r -a arr <<< \"$1\"\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    while [ $i -lt $len ]; do\n        if [ $i -eq 0 ]; then\n            inc=1\n            dec=1\n        else\n            if [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n                dec=0\n            elif [ ${arr[$i]} -lt ${arr[$i-1]} ]; then\n                inc=0\n            fi\n        fi\n        i=$i+1\n    done\n    if [ $inc -eq 1 ] || [ $dec -eq 1 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            inc=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            dec=1\n        else\n            eq=1\n        fi\n    done\n\n    if [[ $inc -eq 1 && $dec -eq 0 && $eq -eq 0 ]]; then\n        echo \"Increasing\"\n    elif [[ $inc -eq 0 && $dec -eq 1 && $eq -eq 0 ]]; then\n        echo \"Decreasing\"\n    elif [[ $inc -eq 0 && $dec -eq 0 && $eq -eq 1 ]]; then\n        echo \"Equal\"\n    else\n        echo \"Not monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_monotonic=1\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            is_increasing=0\n        elif [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 0 && $is_decreasing -eq 0 ]]; then\n        is_monotonic=0\n    fi\n\n    echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag=1\n            break\n        fi\n    done\n    if [[ $flag -eq 0 ]]; then\n        echo \"Monotonic\"\n    else\n        echo \"Not Monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i flag=0\n    for ((i=0; i<n-1; i++))\n    do\n        if ((array[i] > array[i+1]))\n        then\n            flag=1\n            break\n        fi\n    done\n    if ((flag == 1))\n    then\n        for ((j=0; j<n-1; j++))\n        do\n            if ((array[j] < array[j+1]))\n            then\n                flag=2\n                break\n            fi\n        done\n    fi\n    if ((flag == 0))\n    then\n        echo \"Array is monotonic\"\n    elif ((flag == 1))\n    then\n        echo \"Array is decreasing\"\n    elif ((flag == 2))\n    then\n        echo \"Array is increasing\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a arr=(\"$@\")\n  local -a arr_sorted=(\"${arr[@]}\")\n  local -a arr_sorted_r=(\"${arr[@]}\")\n  local -i len=${#arr[@]}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a array=($1)\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n  local -i bo=0\n  local -i bp=0\n  local -i b\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 || $is_decreasing -eq 1 ]]; then\n        echo \"Monotonic\"\n    else\n        echo \"Not Monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    local -a arr_sorted_rev=($(printf \"%s\\n\" \"${arr[@]}\" | sort -nr))\n\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_rev[*]}\" ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    for ((i=0;i<n-1;i++))\n    do\n        if [[ ${array[$i]} -gt ${array[$i+1]} ]]\n        then\n            flag1=1\n        fi\n        if [[ ${array[$i]} -lt ${array[$i+1]} ]]\n        then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 1 ]]\n    then\n        echo \"No\"\n    else\n        echo \"Yes\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n\tlocal -a arr\n\tlocal -i i\n\tlocal -i len\n\tlocal -i is_monotonic\n\tlocal -i is_increasing\n\tlocal -i is_decreasing\n\tarr=($1)\n\tlen=${#arr[@]}\n\tis_monotonic=1\n\tis_increasing=1\n\tis_decreasing=1\n\tfor ((i=1; i<len; i++)); do\n\t\tif [[ ${arr[i-1]} -gt ${arr[i]} ]]; then\n\t\t\tis_increasing=0\n\t\telif [[ ${arr[i-1]} -lt ${arr[i]} ]]; then\n\t\t\tis_decreasing=0\n\t\tfi\n\tdone\n\tif [[ $is_increasing -eq 0 && $is_decreasing -eq 0 ]]; then\n\t\tis_monotonic=0\n\tfi\n\treturn $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i n=${#array[@]}\n    local -i increasing=1\n    local -i decreasing=1\n\n    for ((i=0; i<n-1; i++)); do\n        if [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n            increasing=0\n        elif [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n            decreasing=0\n        fi\n    done\n\n    if [[ $increasing -eq 1 ]] || [[ $decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local arr=($1)\n    local i=0\n    local is_increasing=1\n    local is_decreasing=1\n    for (( i=0; i<${#arr[@]}-1; i++ )); do\n        if [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n    if [[ $is_increasing -eq 1 ]]; then\n        echo \"The array is increasing.\"\n    elif [[ $is_decreasing -eq 1 ]]; then\n        echo \"The array is decreasing.\"\n    else\n        echo \"The array is not monotonic.\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -a arr_sorted=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -n))\n    local -a arr_sorted_reverse=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -nr))\n    if [[ \"${arr[@]}\" == \"${arr_sorted[@]}\" ]] || [[ \"${arr[@]}\" == \"${arr_sorted_reverse[@]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    local -a arr_sorted_r=($(printf \"%s\\n\" \"${arr[@]}\" | sort -nr))\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_r[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i increasing=1\n    local -i decreasing=1\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            increasing=0\n        elif [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            decreasing=0\n        fi\n    done\n    if [[ $increasing -eq 1 || $decreasing -eq 1 ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    local -i is_monotonic=0\n\n    if [[ $len -lt 2 ]]; then\n        is_monotonic=1\n    else\n        for ((i=1; i<len; i++)); do\n            if [[ ${array[$i]} -lt ${array[$i-1]} ]]; then\n                is_increasing=0\n            fi\n            if [[ ${array[$i]} -gt ${array[$i-1]} ]]; then\n                is_decreasing=0\n            fi\n        done\n        if [[ $is_increasing -eq 1 || $is_decreasing -eq 1 ]]; then\n            is_monotonic=1\n        fi\n    fi\n    echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i ret=0\n\n    if [ $len -lt 2 ]; then\n        echo \"Array is too small\"\n        return 1\n    fi\n\n    for ((i=0; i<len-1; i++)); do\n        if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n            inc=$((inc+1))\n        elif [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n            dec=$((dec+1))\n        else\n            eq=$((eq+1))\n        fi\n    done\n\n    if [ $inc -eq $((len-1)) ]; then\n        echo \"Array is monotonic increasing\"\n        ret=0\n    elif [ $dec -eq $((len-1)) ]; then\n        echo \"Array is monotonic decreasing\"\n        ret=0\n    elif [ $eq -eq $((len-1)) ]; then\n        echo \"Array is monotonic equal\"\n        ret=0\n    else\n        echo \"Array is not monotonic\"\n        ret=1\n    fi\n\n    return $ret\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_inc=0\n    local -i is_dec=0\n    local -i is_mono=0\n\n    if [ $len -eq 1 ]; then\n        is_mono=1\n    else\n        for (( i=0; i<len-1; i++ )); do\n            if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n                is_inc=1\n            elif [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n                is_dec=1\n            fi\n        done\n        if [ $is_inc -eq 1 -a $is_dec -eq 0 ]; then\n            is_mono=1\n        elif [ $is_inc -eq 0 -a $is_dec -eq 1 ]; then\n            is_mono=1\n        fi\n    fi\n    echo $is_mono\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local i=0\n    local j=0\n    local len=${#arr[@]}\n    local is_increasing=0\n    local is_decreasing=0\n\n    for (( i=0; i<len-1; i++ )); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            is_increasing=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            is_decreasing=1\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 && $is_decreasing -eq 0 ]]; then\n        echo \"Increasing\"\n    elif [[ $is_increasing -eq 0 && $is_decreasing -eq 1 ]]; then\n        echo \"Decreasing\"\n    else\n        echo \"Not monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n\n    for (( i=0; i<len-1; i++ )); do\n        if (( arr[i] < arr[i+1] )); then\n            inc+=1\n        elif (( arr[i] > arr[i+1] )); then\n            dec+=1\n        else\n            eq+=1\n        fi\n    done\n\n    if (( inc == len-1 || dec == len-1 || eq == len-1 )); then\n        echo 1\n    else\n        echo 0\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a array=($1)\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local arr=($1)\n    local i=0\n    local len=${#arr[@]}\n    local is_increasing=0\n    local is_decreasing=0\n\n    while [ $i -lt $len ]; do\n        if [ $i -eq 0 ]; then\n            is_increasing=1\n            is_decreasing=1\n        else\n            if [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n                is_decreasing=0\n            elif [ ${arr[$i]} -lt ${arr[$i-1]} ]; then\n                is_increasing=0\n            fi\n        fi\n        i=$((i+1))\n    done\n\n    if [ $is_increasing -eq 1 ] || [ $is_decreasing -eq 1 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local array=(\"$@\")\n    local is_increasing=true\n    local is_decreasing=true\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            is_increasing=false\n        fi\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            is_decreasing=false\n        fi\n    done\n    if [[ $is_increasing == true || $is_decreasing == true ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    for ((i=0; i<n-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag=1\n            break\n        fi\n    done\n    if [[ $flag -eq 0 ]]; then\n        echo \"Monotonic\"\n    else\n        for ((j=0; j<n-1; j++)); do\n            if [[ ${arr[j]} -lt ${arr[j+1]} ]]; then\n                flag=0\n                break\n            fi\n        done\n        if [[ $flag -eq 0 ]]; then\n            echo \"Monotonic\"\n        else\n            echo \"Not Monotonic\"\n        fi\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_monotonic=1\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_constant=0\n\n    if [ $len -eq 1 ]; then\n        is_constant=1\n    elif [ $len -eq 2 ]; then\n        if [ ${arr[0]} -eq ${arr[1]} ]; then\n            is_constant=1\n        elif [ ${arr[0]} -lt ${arr[1]} ]; then\n            is_increasing=1\n        else\n            is_decreasing=1\n        fi\n    else\n        if [ ${arr[0]} -eq ${arr[1]} ]; then\n            is_constant=1\n        elif [ ${arr[0]} -lt ${arr[1]} ]; then\n            is_increasing=1\n        else\n            is_decreasing=1\n        fi\n        for ((i=1; i<len-1; i++)); do\n            if [ ${arr[$i]} -eq ${arr[$i+1]} ]; then\n                is_constant=1\n            elif [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n                is_increasing=1\n            else\n                is_decreasing=1\n            fi\n        done\n    fi\n\n    if [ $is_increasing -eq 1 -a $is_decreasing -eq 1 ]; then\n        is_monotonic=0\n    fi\n\n    return $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -a arr_sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    local -a arr_sorted_rev=($(printf \"%s\\n\" \"${arr[@]}\" | sort -nr))\n    if [[ \"${arr[*]}\" == \"${arr_sorted[*]}\" ]] || [[ \"${arr[*]}\" == \"${arr_sorted_rev[*]}\" ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n\tlocal -a a=($1)\n\tlocal -i i=0\n\tlocal -i len=${#a[@]}\n\tlocal -i inc=0\n\tlocal -i dec=0\n\tlocal -i eq=0\n\tlocal -i ret=0\n\n\twhile [ $i -lt $len ]; do\n\t\tif [ $i -eq 0 ]; then\n\t\t\tinc=1\n\t\t\tdec=1\n\t\t\teq=1\n\t\telse\n\t\t\tif [ ${a[$i]} -gt ${a[$i-1]} ]; then\n\t\t\t\tinc=1\n\t\t\t\tdec=0\n\t\t\t\teq=0\n\t\t\telif [ ${a[$i]} -lt ${a[$i-1]} ]; then\n\t\t\t\tinc=0\n\t\t\t\tdec=1\n\t\t\t\teq=0\n\t\t\telse\n\t\t\t\tinc=0\n\t\t\t\tdec=0\n\t\t\t\teq=1\n\t\t\tfi\n\t\tfi\n\t\t((i++))\n\tdone\n\tif [ $inc -eq 1 ]; then\n\t\techo \"Increasing\"\n\t\tret=1\n\telif [ $dec -eq 1 ]; then\n\t\techo \"Decreasing\"\n\t\tret=1\n\telif [ $eq -eq 1 ]; then\n\t\techo \"Equal\"\n\t\tret=1\n\telse\n\t\techo \"Not monotonic\"\n\t\tret=0\n\tfi\n\treturn $ret\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array\n    array=($1)\n    local i\n    local len=${#array[@]}\n    local increasing=1\n    local decreasing=1\n    for ((i=1; i<len; i++)); do\n        if [[ ${array[$i]} -lt ${array[$((i-1))]} ]]; then\n            increasing=0\n        fi\n        if [[ ${array[$i]} -gt ${array[$((i-1))]} ]]; then\n            decreasing=0\n        fi\n    done\n    if [[ $increasing -eq 1 || $decreasing -eq 1 ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a ary=($1)\n    local -i i=0\n    local -i len=${#ary[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${ary[i]} -lt ${ary[i+1]} ]]; then\n            inc=1\n        elif [[ ${ary[i]} -gt ${ary[i+1]} ]]; then\n            dec=1\n        else\n            eq=1\n        fi\n    done\n\n    if [[ $inc -eq 1 && $dec -eq 0 ]]; then\n        echo \"Increasing\"\n    elif [[ $inc -eq 0 && $dec -eq 1 ]]; then\n        echo \"Decreasing\"\n    elif [[ $eq -eq 1 ]]; then\n        echo \"Equal\"\n    else\n        echo \"Neither\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    while [ $i -lt $len ]; do\n        if [ $i -gt 0 ]; then\n            if [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n                is_decreasing=0\n            fi\n            if [ ${arr[$i]} -lt ${arr[$i-1]} ]; then\n                is_increasing=0\n            fi\n        fi\n        i=$i+1\n    done\n    if [ $is_increasing -eq 1 ] || [ $is_decreasing -eq 1 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a arr=(\"$@\")\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i is_increasing=0\n  local -i is_decreasing=0\n  local -i is_monotonic=0\n\n  if [[ $len -le 1 ]]; then\n    is_monotonic=1\n  else\n    for ((i=0; i<len-1; i++)); do\n      if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n        is_increasing=1\n      elif [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n        is_decreasing=1\n      fi\n    done\n    if [[ $is_increasing -eq 1 && $is_decreasing -eq 0 ]]; then\n      is_monotonic=1\n    elif [[ $is_decreasing -eq 1 && $is_increasing -eq 0 ]]; then\n      is_monotonic=1\n    fi\n  fi\n  echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 || $is_decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array\n    local -i i\n    local -i len\n    local -i is_monotonic\n    local -i is_increasing\n    local -i is_decreasing\n    local -i is_equal\n\n    array=($1)\n    len=${#array[@]}\n    is_monotonic=1\n    is_increasing=1\n    is_decreasing=1\n    is_equal=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            is_increasing=0\n        elif [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            is_decreasing=0\n        else\n            is_equal=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 0 && $is_decreasing -eq 0 && $is_equal -eq 0 ]]; then\n        is_monotonic=0\n    fi\n\n    echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a array=(\"$@\")\n  local -i i=0\n  local -i len=${#array[@]}\n  local -i is_increasing=0\n  local -i is_decreasing=0\n  local -i is_monotonic=0\n\n  if [[ len -le 1 ]]; then\n    is_monotonic=1\n  else\n    for (( i=0; i<len-1; i++ )); do\n      if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n        is_increasing=1\n      elif [[ ${array[i]} -gt ${array[i+1]} ]]; then\n        is_decreasing=1\n      fi\n    done\n    if [[ is_increasing -eq 1 && is_decreasing -eq 0 ]]; then\n      is_monotonic=1\n    elif [[ is_decreasing -eq 1 && is_increasing -eq 0 ]]; then\n      is_monotonic=1\n    fi\n  fi\n\n  echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    for ((i=0; i<len-1; i++))\n    do\n        if [ ${arr[$i]} -gt ${arr[$i+1]} ]\n        then\n            flag=1\n        fi\n        if [ ${arr[$i]} -lt ${arr[$i+1]} ]\n        then\n            flag2=1\n        fi\n        if [ ${arr[$i]} -eq ${arr[$i+1]} ]\n        then\n            flag3=1\n        fi\n    done\n    if [ $flag -eq 1 -a $flag2 -eq 0 ]\n    then\n        flag4=1\n    fi\n    if [ $flag -eq 0 -a $flag2 -eq 1 ]\n    then\n        flag4=1\n    fi\n    if [ $flag -eq 0 -a $flag2 -eq 0 -a $flag3 -eq 1 ]\n    then\n        flag4=1\n    fi\n    echo $flag4\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr\n    arr=($1)\n    local len=${#arr[@]}\n    local i=0\n    local increasing=0\n    local decreasing=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[$i]} -lt ${arr[$i+1]} ]]; then\n            increasing=1\n        elif [[ ${arr[$i]} -gt ${arr[$i+1]} ]]; then\n            decreasing=1\n        fi\n    done\n    if [[ $increasing -eq 1 && $decreasing -eq 0 ]]; then\n        echo \"Increasing\"\n    elif [[ $increasing -eq 0 && $decreasing -eq 1 ]]; then\n        echo \"Decreasing\"\n    else\n        echo \"Not monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local array=($1)\n    local i=0\n    local j=0\n    local len=${#array[@]}\n    local is_monotonic=1\n    local is_increasing=1\n    local is_decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${array[i]} -gt ${array[i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 0 && $is_decreasing -eq 0 ]]; then\n        is_monotonic=0\n    fi\n\n    echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_monotonic=1\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_first_element=1\n\n    while [ $i -lt $len ]; do\n        if [ $is_first_element -eq 1 ]; then\n            is_first_element=0\n            prev_element=${array[$i]}\n        else\n            if [ $is_increasing -eq 0 ] && [ $is_decreasing -eq 0 ]; then\n                if [ ${array[$i]} -gt $prev_element ]; then\n                    is_increasing=1\n                elif [ ${array[$i]} -lt $prev_element ]; then\n                    is_decreasing=1\n                fi\n            elif [ $is_increasing -eq 1 ]; then\n                if [ ${array[$i]} -lt $prev_element ]; then\n                    is_monotonic=0\n                    break\n                fi\n            elif [ $is_decreasing -eq 1 ]; then\n                if [ ${array[$i]} -gt $prev_element ]; then\n                    is_monotonic=0\n                    break\n                fi\n            fi\n            prev_element=${array[$i]}\n        fi\n        i=$i+1\n    done\n    echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -a sorted=($(printf \"%s\\n\" \"${arr[@]}\" | sort -n))\n    local -a reversed=($(printf \"%s\\n\" \"${arr[@]}\" | sort -nr))\n    if [[ \"${arr[*]}\" == \"${sorted[*]}\" ]]; then\n        echo \"Monotonic\"\n    elif [[ \"${arr[*]}\" == \"${reversed[*]}\" ]]; then\n        echo \"Monotonic\"\n    else\n        echo \"Not Monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    for ((i=0; i<len-1; i++))\n    do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]\n        then\n            flag=1\n            break\n        fi\n    done\n    if [[ $flag -eq 0 ]]\n    then\n        echo \"Monotonic\"\n    else\n        echo \"Not Monotonic\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a array=($1)\n  local -i i=0\n  local -i j=1\n  local -i len=${#array[@]}\n  local -i flag=1\n  local -i flag2=1\n  local -i flag3=1\n  local -i flag4=1\n  local -i flag5=1\n  local -i flag6=1\n  local -i flag7=1\n  local -i flag8=1\n  local -i flag9=1\n  local -i flag10=1\n  local -i flag11=1\n  local -i flag12=1\n  local -i flag13=1\n  local -i flag14=1\n  local -i flag15=1\n  local -i flag16=1\n  local -i flag17=1\n  local -i flag18=1\n  local -i flag19=1\n  local -i flag20=1\n  local -i flag21=1\n  local -i flag22=1\n  local -i flag23=1\n  local -i flag24=1\n  local -i flag25=1\n  local -i flag26=1\n  local -i flag27=1\n  local -i flag28=1\n  local -i flag29=1\n  local -i flag30=1\n  local -i flag31=1\n  local -i flag32=1\n  local -i flag33=1\n  local -i flag34=1\n  local -i flag35=1\n  local -i flag36=1\n  local -i flag37=1\n  local -i flag38=1\n  local -i flag39=1\n  local -i flag40=1\n  local -i flag41=1\n  local -i flag42=1\n  local -i flag43=1\n  local -i flag44=1\n  local -i flag45=1\n  local -i flag46=1\n  local -i flag47=1\n  local -i flag48=1\n  local -i flag49=1\n  local -i flag50=1\n  local -i flag51=1\n  local -i flag52=1\n  local -i flag\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n  local -a arr=($1)\n  local -i i=0\n  local -i j=1\n  local -i len=${#arr[@]}\n  local -i flag=0\n  local -i flag1=0\n  local -i flag2=0\n  local -i flag3=0\n  local -i flag4=0\n  local -i flag5=0\n  local -i flag6=0\n  local -i flag7=0\n  local -i flag8=0\n  local -i flag9=0\n  local -i flag10=0\n  local -i flag11=0\n  local -i flag12=0\n  local -i flag13=0\n  local -i flag14=0\n  local -i flag15=0\n  local -i flag16=0\n  local -i flag17=0\n  local -i flag18=0\n  local -i flag19=0\n  local -i flag20=0\n  local -i flag21=0\n  local -i flag22=0\n  local -i flag23=0\n  local -i flag24=0\n  local -i flag25=0\n  local -i flag26=0\n  local -i flag27=0\n  local -i flag28=0\n  local -i flag29=0\n  local -i flag30=0\n  local -i flag31=0\n  local -i flag32=0\n  local -i flag33=0\n  local -i flag34=0\n  local -i flag35=0\n  local -i flag36=0\n  local -i flag37=0\n  local -i flag38=0\n  local -i flag39=0\n  local -i flag40=0\n  local -i flag41=0\n  local -i flag42=0\n  local -i flag43=0\n  local -i flag44=0\n  local -i flag45=0\n  local -i flag46=0\n  local -i flag47=0\n  local -i flag48=0\n  local -i flag49=0\n  local -i flag50=0\n  local -i flag51=0\n  local -i flag\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local array=(\"$@\")\n    local i=0\n    local j=0\n    local is_increasing=0\n    local is_decreasing=0\n    local is_monotonic=0\n\n    # Check if the array is increasing\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        if [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n            is_increasing=1\n            break\n        fi\n    done\n\n    # Check if the array is decreasing\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        if [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n            is_decreasing=1\n            break\n        fi\n    done\n\n    if [[ $is_increasing -eq 0 || $is_decreasing -eq 0 ]]; then\n        is_monotonic=1\n    fi\n\n    echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -i\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a array=($1)\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\n    for (( i=0; i<len-1; i++ )); do\n        if [[ ${array[$i]} -gt ${array[$i+1]} ]]; then\n            is_increasing=0\n        fi\n        if [[ ${array[$i]} -lt ${array[$i+1]} ]]; then\n            is_decreasing=0\n        fi\n    done\n\n    if [[ $is_increasing -eq 1 || $is_decreasing -eq 1 ]]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i eq=0\n    local -i ret=0\n\n    while [ $i -lt $len ]; do\n        if [ $i -eq 0 ]; then\n            ((eq++))\n        elif [ ${arr[$i]} -gt ${arr[$((i-1))]} ]; then\n            ((inc++))\n        elif [ ${arr[$i]} -lt ${arr[$((i-1))]} ]; then\n            ((dec++))\n        else\n            ((eq++))\n        fi\n        ((i++))\n    done\n\n    if [ $inc -eq $len -o $dec -eq $len -o $eq -eq $len ]; then\n        ret=1\n    fi\n\n    echo $ret\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n\tlocal arr=($1)\n\tlocal len=${#arr[@]}\n\tlocal i=0\n\tlocal inc=0\n\tlocal dec=0\n\twhile [ $i -lt $len ]; do\n\t\tif [ $i -eq 0 ]; then\n\t\t\tinc=1\n\t\t\tdec=1\n\t\telse\n\t\t\tif [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n\t\t\t\tinc=1\n\t\t\tfi\n\t\t\tif [ ${arr[$i]} -lt ${arr[$i-1]} ]; then\n\t\t\t\tdec=1\n\t\t\tfi\n\t\tfi\n\t\ti=$((i+1))\n\tdone\n\tif [ $inc -eq 1 -a $dec -eq 1 ]; then\n\t\techo \"No\"\n\telse\n\t\techo \"Yes\"\n\tfi\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n    local -a ary=($1)\n    local -i i=0\n    local -i len=${#ary[@]}\n    local -i is_monotonic=1\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    local -i prev=${ary[0]}\n\n    for (( i=1; i<len; i++ )); do\n        if [[ ${ary[i]} -gt prev ]]; then\n            is_decreasing=0\n        elif [[ ${ary[i]} -lt prev ]]; then\n            is_increasing=0\n        fi\n        prev=${ary[i]}\n    done\n\n    if [[ is_decreasing -eq 0 && is_increasing -eq 0 ]]; then\n        is_monotonic=0\n    fi\n\n    echo $is_monotonic\n}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191262,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
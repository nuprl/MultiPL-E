{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local power=0\n  while [ $n -gt 0 ]; do\n    if [ $((n % 2)) -eq 1 ]; then\n      sum=$((sum + 2**power))\n    fi\n    n=$((n / 2))\n    power=$((power + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=0\n    while [ $num -gt 0 ]; do\n        if [ $((num % 2)) -eq 1 ]; then\n            sum=$((sum + 2**power))\n        fi\n        num=$((num / 2))\n        power=$((power + 1))\n    done\n    if [ $sum -eq $1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $((n%2)) -eq 1 ]; then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n & 1)) -eq 1 ]\n        then\n            sum=$((sum + 2**i))\n        fi\n        n=$((n >> 1))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local num=$1\n  local sum=0\n  local i=0\n  while [ $num -gt 0 ]\n  do\n    if [ $((num%2)) -eq 1 ]\n    then\n      sum=$((sum+2**i))\n    fi\n    num=$((num/2))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [ $sum -lt $n ]\n  do\n    sum=$((2**i))\n    if [ $sum -eq $n ]\n    then\n      return 0\n    fi\n    i=$((i+1))\n  done\n  return 1\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [ $n -gt 0 ]\n  do\n    if [ $((n % 2)) -eq 1 ]\n    then\n      sum=$((sum + 2**i))\n    fi\n    n=$((n / 2))\n    i=$((i + 1))\n  done\n  if [ $sum -eq $1 ]\n  then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $((n % 2)) -eq 1 ]; then\n            sum=$((sum + 2**i))\n        fi\n        n=$((n / 2))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [ $sum -lt $n ]\n  do\n    sum=$((2**i + sum))\n    i=$((i + 1))\n  done\n  if [ $sum -eq $n ]\n  then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local i=0\n    local sum=0\n    while [ $i -lt $n ]\n    do\n        if [ $(( $n & (1 << $i) )) -ne 0 ]\n        then\n            sum=$(( $sum + (1 << $i) ))\n        fi\n        i=$(( $i + 1 ))\n    done\n    if [ $sum -eq $n ]\n    then\n        echo \"Yes\"\n    else\n        echo \"No\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [ $n -gt 0 ]; do\n    if [ $((n%2)) -eq 1 ]; then\n      sum=$((sum+2**i))\n    fi\n    n=$((n/2))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local pow=1\n    while [ $num -gt 0 ]; do\n        if [ $((num % 2)) -eq 1 ]; then\n            sum=$((sum + pow))\n        fi\n        num=$((num / 2))\n        pow=$((pow * 2))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $num ]\n    do\n        sum=$((2**$i))\n        if [ $sum -eq $num ]\n        then\n            echo \"True\"\n            return 0\n        fi\n        i=$((i+1))\n    done\n    echo \"False\"\n    return 1\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local p=1\n  local sum=0\n  while [ $sum -lt $n ]; do\n    sum=$((sum+p))\n    p=$((p*2))\n  done\n  if [ $sum -eq $n ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    while [ $number -gt 0 ]; do\n        if [ $((number & 1)) -eq 1 ]; then\n            sum=$((sum + 2 ** power))\n        fi\n        number=$((number >> 1))\n        power=$((power + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local number=$1\n  local sum=0\n  local i=0\n  while [ $number -gt 0 ]\n  do\n    if [ $((number % 2)) -eq 1 ]\n    then\n      sum=$((sum + 2**i))\n    fi\n    number=$((number / 2))\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local number=$1\n  local sum=0\n  local power=0\n  while [[ $number -gt 0 ]]; do\n    power=$((number & 1))\n    if [[ $power -eq 1 ]]; then\n      sum=$((sum + power))\n    fi\n    number=$((number >> 1))\n  done\n  if [[ $sum -eq 1 ]]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $n ]\n    do\n        sum=$((sum + 2**$i))\n        i=$((i + 1))\n    done\n    if [ $sum -eq $n ]\n    then\n        echo \"Yes\"\n    else\n        echo \"No\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local p=1\n  while [ $n -gt 0 ]; do\n    if [ $((n%2)) -eq 1 ]; then\n      sum=$((sum+p))\n    fi\n    n=$((n/2))\n    p=$((p*2))\n  done\n  if [ $sum -eq $1 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local num=$1\n  local sum=0\n  local i=0\n  while [ $sum -lt $num ]\n  do\n    sum=$((2**$i))\n    if [ $sum -eq $num ]\n    then\n      return 0\n    fi\n    i=$((i+1))\n  done\n  return 1\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=0\n    while [ $num -gt 0 ]\n    do\n        if [ $((num%2)) -eq 1 ]\n        then\n            sum=$((sum+2**power))\n        fi\n        num=$((num/2))\n        power=$((power+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $((n%2)) -eq 1 ]; then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=1\n    while [ $sum -lt $num ]; do\n        sum=$((sum + power))\n        power=$((power * 2))\n    done\n    if [ $sum -eq $num ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local pow=1\n    while [ $num -gt 0 ]; do\n        if [ $((num % 2)) -eq 1 ]; then\n            sum=$((sum + pow))\n        fi\n        num=$((num / 2))\n        pow=$((pow * 2))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    if [[ $1 -eq 0 ]]; then\n        echo \"0 is not a sum of powers of 2\"\n        return 1\n    fi\n\n    local n=$1\n    local sum=0\n    local power=1\n    while [[ $n -gt 0 ]]; do\n        if [[ $((n & 1)) -eq 1 ]]; then\n            sum=$((sum + power))\n        fi\n        power=$((power * 2))\n        n=$((n >> 1))\n    done\n\n    if [[ $sum -eq $1 ]]; then\n        echo \"$1 is a sum of powers of 2\"\n        return 0\n    else\n        echo \"$1 is not a sum of powers of 2\"\n        return 1\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $num ]; do\n        sum=$((2**i))\n        if [ $sum -eq $num ]; then\n            return 0\n        fi\n        i=$((i+1))\n    done\n    return 1\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [ $n -gt 0 ]; do\n    if [ $((n%2)) -eq 1 ]; then\n      sum=$((sum+2**i))\n    fi\n    n=$((n/2))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $n ]\n    do\n        sum=$((2**$i))\n        if [ $sum -eq $n ]\n        then\n            return 0\n        fi\n        i=$((i+1))\n    done\n    return 1\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -ne 0 ]\n    do\n        if [ $((num%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        num=$((num/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=1\n    while [ $power -lt $number ]\n    do\n        power=$((2*power))\n        if [ $((number-sum)) -lt $power ]\n        then\n            continue\n        fi\n        sum=$((sum+power))\n    done\n    if [ $sum -eq $number ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]; do\n        if [ $((num & 1)) -eq 1 ]; then\n            sum=$((sum + 2**i))\n        fi\n        num=$((num >> 1))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]\n    do\n        if [ $((num & 1)) -eq 1 ]\n        then\n            sum=$((sum + 2**i))\n        fi\n        num=$((num >> 1))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=0\n    while [ $num -gt 0 ]\n    do\n        if [ $((num%2)) -eq 1 ]\n        then\n            sum=$((sum+2**power))\n        fi\n        power=$((power+1))\n        num=$((num/2))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local num=$1\n  local sum=0\n  local power=0\n  while [ $((2**power)) -le $num ]; do\n    if [ $((num - 2**power)) -ge 0 ]; then\n      num=$((num - 2**power))\n      sum=$((sum + 2**power))\n    fi\n    power=$((power + 1))\n  done\n  if [ $num -eq 0 ]; then\n    echo \"$sum\"\n  else\n    echo \"0\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local num=$1\n  local sum=0\n  local i=0\n  while [ $num -gt 0 ]; do\n    if [ $((num % 2)) -eq 1 ]; then\n      sum=$((sum + 2**i))\n    fi\n    num=$((num / 2))\n    i=$((i + 1))\n  done\n  if [ $sum -eq $1 ]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [ $n -gt 0 ]; do\n    if [ $((n%2)) -eq 1 ]; then\n      sum=$((sum+2**i))\n    fi\n    n=$((n/2))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local number=$1\n  local sum=0\n  local power=0\n  while [ $number -gt 0 ]; do\n    if [ $((number % 2)) -eq 1 ]; then\n      sum=$((sum + 2**power))\n    fi\n    number=$((number / 2))\n    power=$((power + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n\tlocal num=$1\n\tlocal sum=0\n\tlocal i=0\n\twhile [ $sum -lt $num ]\n\tdo\n\t\tsum=$(( 2**$i + $sum ))\n\t\ti=$(( $i + 1 ))\n\tdone\n\tif [ $sum -eq $num ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local num=$1\n  local sum=0\n  local power=1\n  while [ $power -le $num ]\n  do\n    if [ $(( $num & $power )) -ne 0 ]\n    then\n      sum=$(( $sum + $power ))\n    fi\n    power=$(( $power * 2 ))\n  done\n  if [ $sum -eq $num ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( 2**$i + $sum ))\n        i=$(( $i + 1 ))\n    done\n    if [ $sum -eq $n ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=1\n    while [ $sum -lt $number ]; do\n        sum=$((sum + power))\n        power=$((power * 2))\n    done\n    if [ $sum -eq $number ]; then\n        echo \"Yes\"\n    else\n        echo \"No\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]; do\n        if [ $((num & 1)) -eq 1 ]; then\n            sum=$((sum + 2**i))\n        fi\n        i=$((i + 1))\n        num=$((num >> 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n\tif [ $1 -lt 0 ]; then\n\t\techo \"Invalid input\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 0 ]; then\n\t\techo \"Yes\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 1 ]; then\n\t\techo \"No\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 2 ]; then\n\t\techo \"Yes\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 3 ]; then\n\t\techo \"No\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 4 ]; then\n\t\techo \"Yes\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 5 ]; then\n\t\techo \"No\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 6 ]; then\n\t\techo \"No\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 7 ]; then\n\t\techo \"No\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 8 ]; then\n\t\techo \"Yes\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 9 ]; then\n\t\techo \"No\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 10 ]; then\n\t\techo \"No\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 11 ]; then\n\t\techo \"No\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 12 ]; then\n\t\techo \"No\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 13 ]; then\n\t\techo \"No\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 14 ]; then\n\t\techo \"No\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 15 ]; then\n\t\techo \"No\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 16 ]; then\n\t\techo \"Yes\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 17 ]; then\n\t\techo \"No\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 18 ]; then\n\t\techo \"No\"\n\t\treturn\n\tfi\n\tif [ $1 -eq 19 ]; then\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpblmoktx4.sh: line 87: syntax error near unexpected token `}'\\n/tmp/tmpblmoktx4.sh: line 87: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    local power_of_two=1\n    while [ $sum -lt $number ]; do\n        sum=$((sum + power_of_two))\n        power_of_two=$((power_of_two * 2))\n        power=$((power + 1))\n    done\n    if [ $sum -eq $number ]; then\n        echo \"The number $number can be represented as sum of non-zero powers of 2.\"\n        echo \"The number $number can be represented as sum of $power powers of 2.\"\n    else\n        echo \"The number $number can not be represented as sum of non-zero powers of 2.\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]\n    do\n        if [ $((num & 1)) -eq 1 ]\n        then\n            sum=$((sum + 2**i))\n        fi\n        num=$((num >> 1))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    while [ $number -gt 0 ]; do\n        if [ $((number%2)) -eq 1 ]; then\n            sum=$((sum+2**power))\n        fi\n        number=$((number/2))\n        power=$((power+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n & 1)) -eq 1 ]\n        then\n            sum=$((sum + 2**i))\n        fi\n        n=$((n >> 1))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n\n    while [ $n -gt 0 ]; do\n        if [ $((n % 2)) -eq 1 ]; then\n            sum=$((sum + 2 ** i))\n        fi\n        n=$((n / 2))\n        i=$((i + 1))\n    done\n\n    if [ $sum -eq $1 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]\n    do\n        if [ $((num & 1)) -eq 1 ]\n        then\n            sum=$((sum + 2**i))\n        fi\n        num=$((num >> 1))\n        i=$((i + 1))\n    done\n    if [ $sum -eq $1 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local number=$1\n  local sum=0\n  local power=1\n  while [ $sum -lt $number ]; do\n    sum=$((sum+power))\n    power=$((power*2))\n  done\n  if [ $sum -eq $number ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local number=$1\n  local sum=0\n  local power=0\n  local result=0\n  while [ $number -gt 0 ]; do\n    result=$((number % 2))\n    if [ $result -eq 1 ]; then\n      sum=$((sum + 2**power))\n    fi\n    number=$((number / 2))\n    power=$((power + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    while [ $sum -lt $number ]\n    do\n        power=$((power+1))\n        sum=$((sum+2**power))\n    done\n    if [ $sum -eq $number ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]\n    do\n        if [ $((num%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        num=$((num/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]\n    do\n        if [ $((num%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        i=$((i+1))\n        num=$((num/2))\n    done\n    if [ $sum -eq $1 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $n ]\n    do\n        sum=$((2**i))\n        ((i++))\n    done\n    if [ $sum -eq $n ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $num ]\n    do\n        sum=$((2**i))\n        i=$((i+1))\n    done\n    if [ $sum -eq $num ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local power=1\n    while [ $sum -lt $n ]\n    do\n        sum=$((sum+power))\n        power=$((power*2))\n    done\n    if [ $sum -eq $n ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [ $n -ne 0 ]\n  do\n    if [ $((n%2)) -eq 1 ]\n    then\n      sum=$((sum+2**i))\n    fi\n    n=$((n/2))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=0\n    while [ $num -gt 0 ]; do\n        if [ $((num%2)) -eq 1 ]; then\n            sum=$((sum + 2**power))\n        fi\n        num=$((num/2))\n        power=$((power+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $((n%2)) -eq 1 ]; then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local num=$1\n  local sum=0\n  local i=0\n  while [ $num -gt 0 ]\n  do\n    if [ $((num%2)) -eq 1 ]\n    then\n      sum=$((sum+2**i))\n    fi\n    num=$((num/2))\n    i=$((i+1))\n  done\n  if [ $sum -eq $1 ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]\n    do\n        if [ $((num%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        i=$((i+1))\n        num=$((num/2))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    while [ $number -gt 0 ]; do\n        local remainder=$(( number % 2 ))\n        if [ $remainder -eq 1 ]; then\n            sum=$(( sum + 2**power ))\n        fi\n        number=$(( number / 2 ))\n        power=$(( power + 1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local p=1\n    local sum=0\n    while [ $n -gt 0 ]; do\n        if [ $((n&1)) -eq 1 ]; then\n            sum=$((sum+p))\n        fi\n        p=$((p*2))\n        n=$((n>>1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    while [ $number -gt 0 ]\n    do\n        if [ $((number % 2)) -eq 1 ]\n        then\n            sum=$((sum + 2**power))\n        fi\n        number=$((number / 2))\n        power=$((power + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local pow=1\n    while [ $n -gt 0 ]; do\n        if [ $(( n % 2 )) -eq 1 ]; then\n            sum=$(( sum + pow ))\n        fi\n        pow=$(( pow * 2 ))\n        n=$(( n / 2 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $n ]\n    do\n        sum=$((2**$i))\n        if [ $sum -eq $n ]\n        then\n            echo \"true\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"false\"\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=0\n    while [ $num -gt 0 ]; do\n        if [ $((num % 2)) -eq 1 ]; then\n            sum=$((sum + 2**power))\n        fi\n        num=$((num / 2))\n        power=$((power + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [ $n -gt 0 ]; do\n    if [ $((n % 2)) -eq 1 ]; then\n      sum=$((sum + 2**i))\n    fi\n    n=$((n / 2))\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    while [ $number -ne 0 ]; do\n        if [ $((number%2)) -eq 1 ]; then\n            sum=$((sum+2**power))\n        fi\n        number=$((number/2))\n        power=$((power+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [[ $sum -lt $n ]]; do\n    let sum+=2**$i\n    let i+=1\n  done\n  if [[ $sum -eq $n ]]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $((n%2)) -eq 1 ]; then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    while [ $number -gt 0 ]; do\n        power=$((number & 1))\n        if [ $power -eq 1 ]; then\n            sum=$((sum + power))\n        fi\n        number=$((number >> 1))\n    done\n    if [ $sum -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local number=$1\n  local sum=0\n  local power=1\n  while [ $sum -lt $number ]; do\n    sum=$((sum + power))\n    power=$((power * 2))\n  done\n  if [ $sum -eq $number ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=1\n    while [ $sum -lt $number ]; do\n        sum=$((sum+power))\n        power=$((power*2))\n    done\n    if [ $sum -eq $number ]; then\n        echo \"$number is a sum of non-zero powers of 2\"\n    else\n        echo \"$number is not a sum of non-zero powers of 2\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local num=$1\n  local sum=0\n  local i=0\n  while [ $num -gt 0 ]\n  do\n    if [ $((num & 1)) -eq 1 ]\n    then\n      sum=$((sum + 2**i))\n    fi\n    num=$((num >> 1))\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $((2**i)) -le $n ]\n    do\n        if [ $((n - 2**i)) -ge 0 ]\n        then\n            n=$((n - 2**i))\n            sum=$((sum + 2**i))\n        fi\n        i=$((i + 1))\n    done\n    if [ $n -eq 0 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    local temp=0\n    while [ $number -gt 0 ]\n    do\n        temp=$((2**power))\n        if [ $temp -le $number ]\n        then\n            sum=$((sum+temp))\n            number=$((number-temp))\n        fi\n        power=$((power+1))\n    done\n    if [ $sum -eq $1 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while (( num > 0 )); do\n        if (( num & 1 )); then\n            sum=$(( sum + 2 ** i ))\n        fi\n        (( num >>= 1 ))\n        (( i++ ))\n    done\n    if (( sum == $1 )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=0\n    while [ $num -gt 0 ]; do\n        if [ $((num % 2)) -eq 1 ]; then\n            sum=$((sum + 2**power))\n        fi\n        num=$((num / 2))\n        power=$((power + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n % 2)) -eq 1 ]\n        then\n            sum=$((sum + 2**i))\n        fi\n        n=$((n / 2))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=1\n    while [ $sum -lt $num ]\n    do\n        sum=$((2**power))\n        if [ $sum -eq $num ]\n        then\n            echo \"True\"\n            return\n        fi\n        power=$((power+1))\n    done\n    echo \"False\"\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local power=0\n    while [ $n -gt 0 ]; do\n        if [ $((n % 2)) -eq 1 ]; then\n            sum=$((sum + 2**power))\n        fi\n        n=$((n / 2))\n        power=$((power + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [ $sum -lt $n ]\n  do\n    sum=$((2**i + sum))\n    i=$((i+1))\n  done\n  if [ $sum -eq $n ]\n  then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local power=1\n  while [ $sum -lt $n ]; do\n    sum=$((sum+power))\n    power=$((power*2))\n  done\n  if [ $sum -eq $n ]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=1\n    while [ $sum -lt $number ]; do\n        sum=$((sum + power))\n        power=$((power * 2))\n    done\n    if [ $sum -eq $number ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local number=$1\n  local sum=0\n  local power=0\n  while [ $number -gt 0 ]; do\n    power=$((number & -number))\n    sum=$((sum + power))\n    number=$((number - power))\n  done\n  if [ $sum -eq $1 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]\n    do\n        if [ $((num & 1)) -eq 1 ]\n        then\n            sum=$((sum + 2**i))\n        fi\n        num=$((num >> 1))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local p=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n%2)) -eq 1 ]\n        then\n            sum=$((sum+2**p))\n        fi\n        n=$((n/2))\n        p=$((p+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]\n    do\n        if [ $((num%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        num=$((num/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  if [ $1 -eq 0 ]; then\n    echo \"0 is not a sum of powers of 2\"\n    return 1\n  fi\n  if [ $1 -eq 1 ]; then\n    echo \"1 is a sum of powers of 2\"\n    return 0\n  fi\n  local n=$1\n  local p=0\n  local sum=0\n  while [ $n -gt 0 ]; do\n    if [ $((n % 2)) -eq 1 ]; then\n      sum=$((sum + 2**p))\n    fi\n    p=$((p + 1))\n    n=$((n / 2))\n  done\n  if [ $sum -eq $1 ]; then\n    echo \"$1 is a sum of powers of 2\"\n    return 0\n  else\n    echo \"$1 is not a sum of powers of 2\"\n    return 1\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $((n%2)) -eq 1 ]; then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    if [[ $1 -lt 1 ]]; then\n        return 1\n    fi\n    local n=$1\n    local sum=0\n    local power=1\n    while [[ $n -gt 0 ]]; do\n        if [[ $((n % 2)) -eq 1 ]]; then\n            sum=$((sum + power))\n        fi\n        n=$((n / 2))\n        power=$((power * 2))\n    done\n    if [[ $sum -eq $1 ]]; then\n        return 0\n    else\n        return 1\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [ $n -gt 0 ]; do\n    if [ $((n%2)) -eq 1 ]; then\n      sum=$((sum+2**i))\n    fi\n    n=$((n/2))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=0\n    while [ $num -gt 0 ]; do\n        if [ $((num % 2)) -eq 1 ]; then\n            sum=$((sum + 2**power))\n        fi\n        num=$((num / 2))\n        power=$((power + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [[ $num -gt 0 ]]; do\n        if [[ $((num & 1)) -eq 1 ]]; then\n            sum=$((sum + 2 ** i))\n        fi\n        num=$((num >> 1))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $number ]\n    do\n        sum=$((2**i))\n        if [ $sum -eq $number ]\n        then\n            echo \"True\"\n            return 0\n        fi\n        i=$((i+1))\n    done\n    echo \"False\"\n    return 1\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while (( sum < num ))\n    do\n        (( sum += 2 ** i ))\n        (( i++ ))\n    done\n    if (( sum == num ))\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]\n    do\n        if [ $((num%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        num=$((num/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local number=$1\n  local sum=0\n  local power=1\n  while [ $sum -lt $number ]\n  do\n    sum=$((2**power))\n    if [ $sum -eq $number ]\n    then\n      return 0\n    fi\n    power=$((power+1))\n  done\n  return 1\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    while [ $number -gt 0 ]; do\n        if [ $((number % 2)) -eq 1 ]; then\n            sum=$((sum + 2**power))\n        fi\n        number=$((number / 2))\n        power=$((power + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    if [ $sum -eq $1 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=0\n    while [ $num -gt 0 ]; do\n        if [ $((num % 2)) -eq 1 ]; then\n            sum=$((sum + 2 ** power))\n        fi\n        num=$((num / 2))\n        power=$((power + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while (( n > 0 )); do\n        if (( n & 1 )); then\n            (( sum += 2 ** i ))\n        fi\n        (( n >>= 1 ))\n        (( i++ ))\n    done\n    (( sum == $1 ))\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    while [ $number -gt 0 ]; do\n        power=$((number & 1))\n        if [ $power -eq 1 ]; then\n            sum=$((sum + power))\n        fi\n        number=$((number >> 1))\n    done\n    if [ $sum -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=0\n    while [ $num -gt 0 ]; do\n        if [ $((num % 2)) -eq 1 ]; then\n            sum=$((sum + 2**power))\n        fi\n        power=$((power + 1))\n        num=$((num / 2))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [ $n -gt 0 ]\n  do\n    if [ $((n%2)) -eq 1 ]\n    then\n      sum=$((sum+2**i))\n    fi\n    n=$((n/2))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local num=$1\n  local sum=0\n  local power=0\n  while [ $num -gt 0 ]; do\n    power=$((num & -num))\n    sum=$((sum + power))\n    num=$((num - power))\n  done\n  [ $sum -eq $1 ] && echo \"true\" || echo \"false\"\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=0\n    while [ $num -gt 0 ]; do\n        power=$((num & 1))\n        if [ $power -eq 1 ]; then\n            sum=$((sum + 2**$power))\n        fi\n        num=$((num >> 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    while [ $sum -lt $number ]\n    do\n        power=$((2**power))\n        sum=$((sum+power))\n    done\n    if [ $sum -eq $number ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local number=$1\n  local sum=0\n  local power=0\n  while [ $sum -lt $number ]; do\n    power=$((power+1))\n    sum=$((2**power))\n  done\n  if [ $sum -eq $number ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=1\n    while [ $sum -lt $num ]\n    do\n        sum=$(( $sum + $power ))\n        power=$(( $power * 2 ))\n    done\n    if [ $sum -eq $num ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    while [ $sum -lt $number ]; do\n        let power++\n        let sum+=(2**$power)\n    done\n    if [ $sum -eq $number ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local num=$1\n  local sum=0\n  local power=0\n  local i=0\n  for (( i=0; i<=num; i++ )); do\n    power=$((2**i))\n    if (( power > num )); then\n      break\n    fi\n    sum=$((sum+power))\n    if (( sum == num )); then\n      return 0\n    fi\n  done\n  return 1\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local num=$1\n  local sum=0\n  local i=0\n  while [ $sum -lt $num ]\n  do\n    sum=$((2**$i))\n    i=$((i+1))\n  done\n  if [ $sum -eq $num ]\n  then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local power=1\n  while [ $n -gt 0 ]; do\n    if [ $((n%2)) -eq 1 ]; then\n      sum=$((sum+power))\n    fi\n    n=$((n/2))\n    power=$((power*2))\n  done\n  if [ $sum -eq $1 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n\tlocal num=$1\n\tlocal sum=0\n\tlocal i=0\n\twhile [ $num -ne 0 ]\n\tdo\n\t\tif [ $((num%2)) -eq 1 ]\n\t\tthen\n\t\t\tsum=$((sum+2**i))\n\t\tfi\n\t\tnum=$((num/2))\n\t\ti=$((i+1))\n\tdone\n\techo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $sum + 2**$i ))\n        i=$(( $i + 1 ))\n    done\n    if [ $sum -eq $n ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  if [ $1 -eq 0 ]; then\n    echo \"0 is not a sum of powers of 2\"\n    return\n  fi\n  local num=$1\n  local sum=0\n  local power=0\n  while [ $num -gt 0 ]; do\n    power=$((num & -num))\n    num=$((num - power))\n    sum=$((sum + power))\n  done\n  if [ $sum -eq $1 ]; then\n    echo \"$1 is a sum of powers of 2\"\n  else\n    echo \"$1 is not a sum of powers of 2\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]; do\n        if [ $((num & 1)) -eq 1 ]; then\n            sum=$((sum + 2**i))\n        fi\n        num=$((num >> 1))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local num=$1\n  local sum=0\n  local i=0\n  while [ $sum -lt $num ]\n  do\n    sum=$((2**$i))\n    if [ $sum -eq $num ]\n    then\n      echo \"true\"\n      return\n    fi\n    i=$((i+1))\n  done\n  echo \"false\"\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $((n%2)) -eq 1 ]; then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=0\n    while [ $num -gt 0 ]; do\n        power=$(( $num & -$num ))\n        sum=$(( $sum + $power ))\n        num=$(( $num - $power ))\n    done\n    if [ $sum -eq $1 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  if [ $1 -lt 1 ]; then\n    return 1\n  fi\n  if [ $1 -eq 1 ]; then\n    return 0\n  fi\n  if [ $(( $1 % 2 )) -eq 0 ]; then\n    is_Sum_Of_Powers_Of_Two $(( $1 / 2 ))\n    return $?\n  fi\n  return 1\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $num ]\n    do\n        sum=$(( 2**$i + $sum ))\n        i=$(( $i + 1 ))\n    done\n    if [ $sum -eq $num ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local power=1\n    while [ $sum -lt $n ]\n    do\n        sum=$((sum + power))\n        power=$((power * 2))\n    done\n    if [ $sum -eq $n ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]\n    do\n        local rem=$(($num % 2))\n        if [ $rem -eq 1 ]\n        then\n            sum=$(($sum + 2 ** $i))\n        fi\n        num=$(($num / 2))\n        i=$(($i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n % 2)) -eq 1 ]\n        then\n            sum=$((sum + 2**i))\n        fi\n        i=$((i + 1))\n        n=$((n / 2))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]; do\n        if [ $((num % 2)) -eq 1 ]; then\n            sum=$((sum + 2**i))\n        fi\n        num=$((num / 2))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while (( n > 0 )); do\n    if (( n & 1 )); then\n      (( sum += 2 ** i ))\n    fi\n    (( n >>= 1 ))\n    (( i++ ))\n  done\n  (( sum == $1 ))\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $((n%2)) -eq 1 ]; then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local number=$1\n  local sum=0\n  local power=1\n  while [ $sum -lt $number ]; do\n    sum=$((sum+power))\n    power=$((power*2))\n  done\n  if [ $sum -eq $number ]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  if [ $1 -eq 0 ]; then\n    echo \"0 is not a sum of powers of 2\"\n    return 1\n  fi\n  if [ $1 -eq 1 ]; then\n    echo \"1 is a sum of powers of 2\"\n    return 0\n  fi\n  local n=$1\n  local i=0\n  local sum=0\n  while [ $n -gt 0 ]; do\n    if [ $((n%2)) -eq 1 ]; then\n      sum=$((sum+2**i))\n    fi\n    n=$((n/2))\n    i=$((i+1))\n  done\n  if [ $sum -eq $1 ]; then\n    echo \"$1 is a sum of powers of 2\"\n    return 0\n  else\n    echo \"$1 is not a sum of powers of 2\"\n    return 1\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $((n % 2)) -eq 1 ]; then\n            sum=$((sum + 2**i))\n        fi\n        n=$((n / 2))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [ $sum -lt $n ]\n  do\n    sum=$((2**$i))\n    if [ $sum -eq $n ]\n    then\n      return 0\n    fi\n    i=$((i+1))\n  done\n  return 1\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n\tlocal n=$1\n\tlocal sum=0\n\tlocal i=0\n\twhile [ $n -gt 0 ]\n\tdo\n\t\tif [ $(($n % 2)) -eq 1 ]\n\t\tthen\n\t\t\tsum=$(($sum + 2**$i))\n\t\tfi\n\t\tn=$(($n / 2))\n\t\ti=$(($i + 1))\n\tdone\n\techo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    while [ $number -gt 0 ]; do\n        power=$((number & 1))\n        if [ $power -eq 1 ]; then\n            sum=$((sum + power))\n        fi\n        number=$((number >> 1))\n    done\n    if [ $sum -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=0\n    while [ $num -gt 0 ]\n    do\n        if [ $((num%2)) -eq 1 ]\n        then\n            sum=$((sum+2**power))\n        fi\n        num=$((num/2))\n        power=$((power+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    local result=0\n    while [ $number -gt 0 ]\n    do\n        result=$((number%2))\n        if [ $result -eq 1 ]\n        then\n            sum=$((sum+2**power))\n        fi\n        power=$((power+1))\n        number=$((number/2))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while (( $n > 0 )); do\n        if (( $n % 2 == 1 )); then\n            sum=$(( sum + 2 ** i ))\n        fi\n        n=$(( n / 2 ))\n        (( i++ ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local i=1\n    local sum=0\n    while [ $sum -lt $num ]; do\n        sum=$((2**$i))\n        if [ $sum -eq $num ]; then\n            echo \"True\"\n            return 0\n        fi\n        i=$((i+1))\n    done\n    echo \"False\"\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local -i n=$1\n    local -i i=0\n    local -i sum=0\n    while (( sum < n )); do\n        (( sum += 2**i ))\n        (( i++ ))\n    done\n    (( sum == n ))\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local num=$1\n  local sum=0\n  local power=1\n  while [ $sum -lt $num ]; do\n    sum=$((sum + power))\n    power=$((power * 2))\n  done\n  if [ $sum -eq $num ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=1\n    while [ $sum -lt $number ]; do\n        sum=$((sum + power))\n        power=$((power * 2))\n    done\n    if [ $sum -eq $number ]; then\n        echo \"$number is a sum of powers of 2\"\n    else\n        echo \"$number is not a sum of powers of 2\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=1\n    while [ $sum -lt $number ]\n    do\n        sum=$(( $sum + $power ))\n        power=$(( $power * 2 ))\n    done\n    if [ $sum -eq $number ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n\tlocal n=$1\n\tlocal sum=0\n\tlocal i=0\n\twhile [ $n -gt 0 ]\n\tdo\n\t\tif [ $((n%2)) -eq 1 ]\n\t\tthen\n\t\t\tsum=$((sum+2**i))\n\t\tfi\n\t\tn=$((n/2))\n\t\ti=$((i+1))\n\tdone\n\techo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=1\n    while [ $num -gt 0 ]; do\n        if [ $((num & 1)) -eq 1 ]; then\n            sum=$((sum + power))\n        fi\n        power=$((power * 2))\n        num=$((num >> 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $((n%2)) -eq 1 ]; then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local pow=1\n    while [ $sum -lt $num ]; do\n        sum=$((sum + pow))\n        pow=$((pow * 2))\n    done\n    if [ $sum -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $n ]\n    do\n        sum=$((2**i))\n        if [ $sum -eq $n ]\n        then\n            echo \"True\"\n            return 0\n        fi\n        i=$((i+1))\n    done\n    echo \"False\"\n    return 1\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local i=0\n    local sum=0\n    while [ $((sum)) -lt $((n)) ]; do\n        sum=$((sum + 2**i))\n        i=$((i + 1))\n    done\n    if [ $((sum)) -eq $((n)) ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local number=$1\n  local sum=0\n  local power=1\n  while [ $sum -lt $number ]\n  do\n    sum=$((sum + power))\n    power=$((power * 2))\n  done\n  if [ $sum -eq $number ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local power=1\n    while [ $n -ne 0 ]; do\n        if [ $((n%2)) -eq 1 ]; then\n            sum=$((sum+power))\n        fi\n        power=$((power*2))\n        n=$((n/2))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local power=0\n    while [ $num -gt 0 ]; do\n        if [ $((num % 2)) -eq 1 ]; then\n            sum=$((sum + 2 ** power))\n        fi\n        num=$((num / 2))\n        power=$((power + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $((n%2)) -eq 1 ]; then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]; do\n        if [ $((num & 1)) -eq 1 ]; then\n            sum=$((sum + 2**i))\n        fi\n        num=$((num >> 1))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $num ]\n    do\n        sum=$((2**i))\n        if [ $sum -eq $num ]\n        then\n            return 0\n        fi\n        i=$((i+1))\n    done\n    return 1\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local number=$1\n  local sum=0\n  local power=0\n  while [ $number -gt 0 ]; do\n    power=$((number & 1))\n    if [ $power -eq 1 ]; then\n      sum=$((sum + power))\n    fi\n    number=$((number >> 1))\n  done\n  if [ $sum -eq 1 ]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    while [ $power -lt $number ]\n    do\n        power=$(( 2 ** $power ))\n        if [ $(( $number - $power )) -ge 0 ]\n        then\n            number=$(( $number - $power ))\n            sum=$(( $sum + $power ))\n        fi\n    done\n    if [ $sum -eq $1 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local power=1\n    while [ $sum -lt $n ]; do\n        sum=$((sum+power))\n        power=$((power*2))\n    done\n    if [ $sum -eq $n ]; then\n        echo \"$n is a sum of powers of 2\"\n    else\n        echo \"$n is not a sum of powers of 2\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $((n%2)) -eq 1 ]; then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]; do\n        if [ $((num%2)) -eq 1 ]; then\n            sum=$((sum+2**i))\n        fi\n        num=$((num/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local pow=0\n    while [ $num -gt 0 ]; do\n        pow=$((num & -num))\n        sum=$((sum + pow))\n        num=$((num - pow))\n    done\n    [ $sum -eq $1 ] && echo \"true\" || echo \"false\"\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    while (( $number > 0 )); do\n        (( power = number & -number ))\n        (( sum += power ))\n        (( number -= power ))\n    done\n    (( sum == $1 ))\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local num=$1\n  local sum=0\n  local i=0\n  while [ $sum -lt $num ]; do\n    sum=$((2**i))\n    if [ $sum -eq $num ]; then\n      return 0\n    fi\n    i=$((i+1))\n  done\n  return 1\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]\n    do\n        if [ $((num%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        num=$((num/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $n ]\n    do\n        sum=$((2**$i))\n        if [ $sum -eq $n ]\n        then\n            return 0\n        fi\n        i=$((i+1))\n    done\n    return 1\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local number=$1\n  local sum=0\n  local power=1\n  while [ $power -le $number ]; do\n    sum=$(( $sum + $power ))\n    power=$(( $power * 2 ))\n  done\n  if [ $sum -eq $number ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local power=0\n    while [ $number -gt 0 ]\n    do\n        power=$((number % 2))\n        if [ $power -eq 1 ]\n        then\n            sum=$((sum + power))\n        fi\n        number=$((number / 2))\n    done\n    if [ $sum -eq 1 ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [ $n -gt 0 ]\n  do\n    if [ $((n%2)) -eq 1 ]\n    then\n      sum=$((sum+2**i))\n    fi\n    n=$((n/2))\n    i=$((i+1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local p=0\n  while (( n > 0 )); do\n    (( n % 2 == 1 )) && (( sum += 2 ** p ))\n    (( n /= 2 ))\n    (( p++ ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $n ]; do\n        sum=$((2**i + sum))\n        i=$((i+1))\n    done\n    if [ $sum -eq $n ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local num=$1\n  local sum=0\n  local power=1\n  while [ $sum -lt $num ]; do\n    sum=$((sum+power))\n    power=$((power*2))\n  done\n  if [ $sum -eq $num ]; then\n    echo \"$num is a sum of powers of 2\"\n  else\n    echo \"$num is not a sum of powers of 2\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $n ]\n    do\n        sum=$((2**i + sum))\n        i=$((i+1))\n    done\n    if [ $sum -eq $n ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local pow=0\n    while [ $num -gt 0 ]; do\n        if [ $((num % 2)) -eq 1 ]; then\n            sum=$((sum + 2**pow))\n        fi\n        num=$((num / 2))\n        pow=$((pow + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local power=1\n    while [ $sum -lt $n ]; do\n        sum=$((sum+power))\n        power=$((power*2))\n    done\n    if [ $sum -eq $n ]; then\n        echo \"Yes\"\n    else\n        echo \"No\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n % 2)) -eq 1 ]\n        then\n            sum=$((sum + 2**i))\n        fi\n        n=$((n / 2))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while (( $num > 0 )); do\n        if (( $num & 1 )); then\n            (( sum += 2 ** i ))\n        fi\n        (( num >>= 1 ))\n        (( i++ ))\n    done\n    if (( $sum == $1 )); then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [ $n -gt 0 ]\n  do\n    if [ $((n % 2)) -eq 1 ]\n    then\n      sum=$((sum + 2**i))\n    fi\n    n=$((n / 2))\n    i=$((i + 1))\n  done\n  if [ $sum -eq $1 ]\n  then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $(( n % 2 )) -eq 1 ]; then\n            sum=$(( sum + 2 ** i ))\n        fi\n        n=$(( n / 2 ))\n        i=$(( i + 1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local x=1\n    local sum=0\n    while [ $sum -lt $n ]\n    do\n        sum=$((sum + x))\n        x=$((x * 2))\n    done\n    if [ $sum -eq $n ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local num=$1\n  local sum=0\n  local i=0\n\n  while [ $num -gt 0 ]; do\n    if [ $((num % 2)) -eq 1 ]; then\n      sum=$((sum + 2**i))\n    fi\n    i=$((i + 1))\n    num=$((num / 2))\n  done\n\n  if [ $sum -eq $1 ]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local num=$1\n    local sum=0\n    local i=0\n    while [ $num -gt 0 ]\n    do\n        if [ $((num % 2)) -eq 1 ]\n        then\n            sum=$((sum + 2**i))\n        fi\n        num=$((num / 2))\n        i=$((i + 1))\n    done\n    if [ $sum -eq $1 ]\n    then\n        echo \"Yes\"\n    else\n        echo \"No\"\n    fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local number=$1\n  local sum=0\n  local power=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n \n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $((n%2)) -eq 1 ]; then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local n=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $n ]; do\n        sum=$((2**i))\n        if [ $sum -eq $n ]; then\n            return 0\n        fi\n        i=$((i+1))\n    done\n    return 1\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n  local n=$1\n  local sum=0\n  local i=0\n  while [ $sum -lt $n ]\n  do\n    sum=$((2**i + sum))\n    i=$((i+1))\n  done\n  if [ $sum -eq $n ]\n  then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n    local number=$1\n    local sum=0\n    local i=0\n    while [ $number -gt 0 ]; do\n        if [ $((number & 1)) -eq 1 ]; then\n            sum=$((sum + 2**i))\n        fi\n        number=$((number >> 1))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190586,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
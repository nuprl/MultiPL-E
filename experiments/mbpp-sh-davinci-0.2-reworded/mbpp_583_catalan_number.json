{
  "name": "mbpp_583_catalan_number",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function which returns nth catalan number.\n#\n# $1 is an integer\ncatalan_number() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_583_catalan_number.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    catalan_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"16796\" ]]\n    [[ $(candidate \"9\") = \"4862\" ]]\n    [[ $(candidate \"7\") = \"429\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  if [ $1 -eq 0 ]; then\n    echo 1\n  else\n    local sum=0\n    for ((i=0; i<$1; i++)); do\n      sum=$(($sum + $(catalan_number $i) * $(catalan_number $(($1 - $i - 1)))))\n    done\n    echo $sum\n  fi",
    "    local n=$1\n    local i=0\n    local result=1\n    while ((i < n)); do\n        result=$((result * (n + i) / (i + 1)))\n        ((i++))\n    done\n    echo $result",
    "    local n=$1\n    local i=0\n    local c=1\n    while [ $i -lt $n ]; do\n        c=$((c*(4*i+2)/(i+2)))\n        i=$((i+1))\n    done\n    echo $c",
    "    local n=$1\n    local res=1\n    for ((i=0; i<n; i++)); do\n        res=$((res*(n+i)/(i+1)))\n    done\n    echo $res",
    "    local n=$1\n    local i=0\n    local result=1\n    while [ $i -lt $n ]; do\n        result=$((result * (n + i) / (i + 1)))\n        i=$((i + 1))\n    done\n    echo $result",
    "    local n=$1\n    local i\n    local j\n    local result=1\n    for ((i=0; i<n; i++)); do\n        result=$((result*(n+i)/(i+1)))\n    done\n    echo $result",
    "    local n=$1\n    local i\n    local result=1\n    for ((i=2; i<=n; i++)); do\n        result=$((result*(n+i)/i))\n    done\n    echo $result",
    "    local n=$1\n    local i=0\n    local result=1\n    while [ $i -lt $n ]; do\n        result=$((result * (n + i) / (i + 1)))\n        i=$((i + 1))\n    done\n    echo $result",
    "    if [[ $1 -eq 0 ]]; then\n        echo 1\n    else\n        local sum=0\n        for (( i = 0; i < $1; i++ )); do\n            sum=$(( $sum + $(catalan_number $i) * $(catalan_number $(( $1 - $i - 1 ))) ))\n        done\n        echo $sum\n    fi",
    "    local n=$1\n    local result=1\n    for ((i = 2; i <= n; i++)); do\n        result=$((result * (n + i) / i))\n    done\n    echo $result",
    "    local n=$1\n    local c=1\n    local i=0\n    while [ $i -lt $n ]; do\n        c=$((c * (2 * n - i) / (i + 1)))\n        i=$((i + 1))\n    done\n    echo $c",
    "    local n=$1\n    local i=0\n    local result=1\n    while [ $i -lt $n ]; do\n        result=$((result * (n + i) / (i + 1)))\n        i=$((i + 1))\n    done\n    echo $result",
    "    local n=$1\n    local i=0\n    local result=1\n    while [ $i -lt $n ]; do\n        result=$((result * (n + i) / (i + 1)))\n        i=$((i + 1))\n    done\n    echo $result",
    "    local n=$1\n    local result=1\n    for ((i=0; i < n; i++)); do\n        result=$((result * (n + i)))\n    done\n    for ((i=1; i <= n; i++)); do\n        result=$((result / i))\n    done\n    echo $result",
    "    local n=$1\n    local i=0\n    local c=1\n    while [ $i -lt $n ]; do\n        c=$((c * (n + i) / (i + 1)))\n        i=$((i + 1))\n    done\n    echo $c",
    "    local n=$1\n    local i=0\n    local result=1\n    while [ $i -lt $n ]; do\n        result=$((result * (n + i) / (i + 1)))\n        i=$((i + 1))\n    done\n    echo $result",
    "  local n=$1\n  local i=0\n  local catalan=1\n  while [ $i -lt $n ]; do\n    catalan=$((catalan * (n + i) / (i + 1)))\n    i=$((i + 1))\n  done\n  echo $catalan",
    "    local n=$1\n    local i=0\n    local result=1\n    while [ $i -lt $n ]; do\n        result=$((result * (n + i) / (i + 1)))\n        i=$((i + 1))\n    done\n    echo $result",
    "    if [ $1 -eq 0 ]; then\n        echo 1\n    else\n        local n=$1\n        local sum=0\n        for ((i=0; i<n; i++)); do\n            sum=$((sum + $(catalan_number $i) * $(catalan_number $((n-i-1)))))\n        done\n        echo $sum\n    fi",
    "    local n=$1\n    local i\n    local result=1\n    for ((i=0; i<n; i++)); do\n        result=$((result*(n+i)/(i+1)))\n    done\n    echo $result"
  ]
}
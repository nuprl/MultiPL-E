{
  "name": "mbpp_428_shell_sort",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to sort the given array by using shell sort.\n#\n# $1 is a space-separated list\nshell_sort() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_428_shell_sort.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    shell_sort \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12 23 4 5 3 2 12 81 56 95\") = \"2 3 4 5 12 12 23 56 81 95\" ]]\n    [[ $(candidate \"24 22 39 34 87 73 68\") = \"22 24 34 39 68 73 87\" ]]\n    [[ $(candidate \"32 30 16 96 82 83 74\") = \"16 30 32 74 82 83 96\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a array=(\"$@\")\n    local gap=${#array[@]}\n    local swapped=true\n    while (( gap > 1 || swapped )); do\n        if (( gap > 1 )); then\n            (( gap /= 2 ))\n        fi\n        swapped=false\n        for (( i = 0; i < ${#array[@]} - gap; i++ )); do\n            if (( array[i] > array[i + gap] )); then\n                local tmp=${array[i]}\n                array[i]=${array[i + gap]}\n                array[i + gap]=$tmp\n                swapped=true\n            fi\n        done\n    done\n    echo \"${array[@]}\"",
    "  local -a array=(\"$@\")\n  local -i gap=${#array[@]}\n  local -i i j temp\n  while (( gap /= 2 )); do\n    for (( i = gap; i < ${#array[@]}; i++ )); do\n      temp=${array[i]}\n      for (( j = i; j >= gap && array[j - gap] > temp; j -= gap )); do\n        array[j]=${array[j - gap]}\n      done\n      array[j]=$temp\n    done\n  done\n  echo \"${array[@]}\"",
    "    local -a arr=(\"$@\")\n    local gap=${#arr[@]}\n    local temp\n    local i\n    local j\n\n    while (( gap > 1 )); do\n        (( gap = gap / 2 ))\n        for (( i = gap; i < ${#arr[@]}; i++ )); do\n            temp=${arr[i]}\n            for (( j = i; j >= gap && arr[j - gap] > temp; j -= gap )); do\n                arr[j]=${arr[j - gap]}\n            done\n            arr[j]=$temp\n        done\n    done\n\n    echo \"${arr[@]}\"",
    "    local -a array\n    local gap=0\n    local i=0\n    local j=0\n    local temp=0\n    array=($1)\n    gap=${#array[@]}\n    while ((gap > 1))\n    do\n        ((gap = gap / 2))\n        for ((i = gap; i < ${#array[@]}; i++))\n        do\n            temp=${array[i]}\n            for ((j = i - gap; j >= 0 && temp < ${array[j]}; j -= gap))\n            do\n                array[j + gap]=${array[j]}\n            done\n            array[j + gap]=$temp\n        done\n    done\n    echo \"${array[@]}\"",
    "  local arr=(\"$@\")\n  local len=${#arr[@]}\n  local gap=0\n  local i=0\n  local j=0\n  local temp=0\n\n  while [ $((gap = gap * 3 + 1)) -lt $len ]; do\n    while [ $gap -lt $len ]; do\n      temp=${arr[$gap]}\n      i=$gap\n      while [ $((j = i - gap)) -ge 0 ] && [ ${arr[$j]} -gt $temp ]; do\n        arr[$((i = j))]=${arr[$j]}\n      done\n      arr[$i]=$temp\n      ((gap++))\n    done\n    gap=$(((gap - 1) / 3))\n  done\n  echo \"${arr[@]}\"",
    "    local -a arr\n    local -i i j k gap\n    arr=($1)\n    gap=${#arr[@]}\n    while ((gap > 1))\n    do\n        ((gap = gap / 2))\n        for ((i = gap; i < ${#arr[@]}; i++))\n        do\n            j=i\n            while ((j >= gap && arr[j - gap] > arr[j]))\n            do\n                ((k = j - gap))\n                tmp=${arr[j]}\n                arr[j]=${arr[k]}\n                arr[k]=$tmp\n                ((j -= gap))\n            done\n        done\n    done\n    echo ${arr[@]}",
    "    local -a arr=(\"$@\")\n    local -i i j gap=${#arr[@]}\n    local -i swapped=1\n    while ((gap > 1 || swapped)); do\n        if ((gap > 1)); then\n            ((gap /= 2))\n        fi\n        swapped=0\n        for ((i = 0; i < ${#arr[@]} - gap; i++)); do\n            if ((arr[i] > arr[i + gap])); then\n                ((swapped = 1))\n                j=arr[i]\n                arr[i]=${arr[i + gap]}\n                arr[i + gap]=$j\n            fi\n        done\n    done\n    echo \"${arr[@]}\"",
    "  local -a arr=(\"$@\")\n  local gap=${#arr[@]}\n  local i j temp\n\n  while (( gap > 1 )); do\n    (( gap /= 2 ))\n    for (( i = gap; i < ${#arr[@]}; ++i )); do\n      temp=${arr[i]}\n      for (( j = i; j >= gap && arr[j - gap] > temp; j -= gap )); do\n        arr[j]=${arr[j - gap]}\n      done\n      arr[j]=$temp\n    done\n  done\n\n  echo \"${arr[@]}\"",
    "    local -a array=(\"$@\")\n    local gap=${#array[@]}\n    local temp\n    while (( gap > 1 )); do\n        (( gap /= 2 ))\n        for (( i = gap; i < ${#array[@]}; i++ )); do\n            for (( j = i - gap; j >= 0 && array[j] > array[j + gap]; j -= gap )); do\n                temp=${array[j]}\n                array[j]=${array[j + gap]}\n                array[j + gap]=$temp\n            done\n        done\n    done\n    echo \"${array[@]}\"",
    "  local -a array=(\"$@\")\n  local gap=${#array[@]}\n  local tmp\n  local i\n  local j\n\n  while (( gap > 1 )); do\n    (( gap = gap * 10 / 13 ))\n    (( gap = gap == 9 || gap == 10 ? 11 : gap ))\n\n    for (( i = gap; i < ${#array[@]}; ++i )); do\n      tmp=${array[i]}\n      for (( j = i; j >= gap && tmp < array[j - gap]; j -= gap )); do\n        array[j]=${array[j - gap]}\n      done\n      array[j]=$tmp\n    done\n  done\n\n  echo \"${array[@]}\"",
    "  local -a array=(\"$@\")\n  local gap=${#array[@]}\n  local temp\n  local i\n  local j\n\n  while (( gap > 1 )); do\n    (( gap /= 2 ))\n\n    for (( i = gap; i < ${#array[@]}; i++ )); do\n      temp=${array[i]}\n      for (( j = i; j >= gap && array[j - gap] > temp; j -= gap )); do\n        array[j]=${array[j - gap]}\n      done\n      array[j]=$temp\n    done\n  done\n\n  echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local gap=${#array[@]}\n    local i j temp\n    while ((gap > 1)); do\n        ((gap = gap / 2))\n        for ((i = gap; i < ${#array[@]}; i++)); do\n            temp=${array[i]}\n            for ((j = i; j >= gap && array[j - gap] > temp; j -= gap)); do\n                array[j]=${array[j - gap]}\n            done\n            array[j]=$temp\n        done\n    done\n    echo \"${array[@]}\"",
    "\tlocal -a array=(\"$@\")\n\tlocal -i length=${#array[@]}\n\tlocal -i gap=length\n\tlocal -i i=0\n\tlocal -i j=0\n\tlocal -i temp=0\n\n\twhile [ $((gap /= 2)) -gt 0 ]; do\n\t\tfor ((i = gap; i < length; i++)) do\n\t\t\ttemp=${array[i]}\n\t\t\tfor ((j = i; j >= gap && array[j - gap] > temp; j -= gap)) do\n\t\t\t\tarray[j]=${array[j - gap]}\n\t\t\tdone\n\t\t\tarray[j]=$temp\n\t\tdone\n\tdone\n\n\techo ${array[@]}",
    "    local -a arr\n    IFS=' ' read -r -a arr <<< \"$1\"\n    local n=${#arr[@]}\n    local gap=0\n    local i=0\n    local j=0\n    local temp=0\n\n    while [[ $(($gap * 3 + 1)) -lt $n ]]; do\n        gap=$(($gap * 3 + 1))\n    done\n\n    while [[ $gap -gt 0 ]]; do\n        for ((i = $gap; i < $n; i++)); do\n            temp=${arr[$i]}\n            j=$i\n            while [[ $j -ge $gap && ${arr[$(($j - $gap))]} -gt $temp ]]; do\n                arr[$j]=${arr[$(($j - $gap))]}\n                j=$(($j - $gap))\n            done\n            arr[$j]=$temp\n        done\n        gap=$(($gap / 3))\n    done\n\n    echo \"${arr[@]}\"",
    "    local -a array=(\"$@\")\n    local gap=${#array[@]}\n    local i j temp\n\n    while ((gap > 1)); do\n        gap=$((gap / 2))\n        for ((i = gap; i < ${#array[@]}; i++)); do\n            temp=${array[i]}\n            for ((j = i - gap; j >= 0 && array[j] > temp; j -= gap)); do\n                array[j + gap]=${array[j]}\n            done\n            array[j + gap]=$temp\n        done\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i gap=${#array[@]}\n    local -i i j tmp\n\n    while (( gap /= 2 )); do\n        for (( i = gap; i < ${#array[@]}; i++ )); do\n            for (( j = i - gap; j >= 0 && array[j] > array[j + gap]; j -= gap )); do\n                tmp=${array[j]}\n                array[j]=${array[j + gap]}\n                array[j + gap]=$tmp\n            done\n        done\n    done\n\n    echo \"${array[@]}\"",
    "    local array=(\"$@\")\n    local gap=${#array[@]}\n    local temp\n    local i\n    local j\n\n    while (( gap > 1 )); do\n        gap=$(( gap / 2 ))\n        for (( i = gap; i < ${#array[@]}; i++ )); do\n            temp=${array[i]}\n            for (( j = i; j >= gap && array[j - gap] > temp; j -= gap )); do\n                array[j]=${array[j - gap]}\n            done\n            array[j]=$temp\n        done\n    done\n\n    echo \"${array[@]}\"",
    "    local -a arr=($1)\n    local -i i j k h\n    local -i n=${#arr[@]}\n    local -i hs=1\n    while [ $hs -lt $n ]\n    do\n        hs=$((hs * 3 + 1))\n    done\n    while [ $hs -gt 0 ]\n    do\n        h=$hs\n        while [ $h -lt $n ]\n        do\n            i=$h\n            while [ $i -ge $hs ]\n            do\n                j=$i\n                k=$((i - hs))\n                while [ $j -gt $k ]\n                do\n                    if [ ${arr[j]} -lt ${arr[k]} ]\n                    then\n                        tmp=${arr[j]}\n                        arr[j]=${arr[k]}\n                        arr[k]=$tmp\n                    fi\n                    j=$k\n                    k=$((k - hs))\n                done\n                i=$((i - hs))\n            done\n            h=$((h + 1))\n        done\n        hs=$((hs / 3))\n    done\n    echo ${arr[@]}",
    "    local -a array=(\"$@\")\n    local -i gap=${#array[@]}\n    local -i i j tmp\n\n    while (( gap /= 2 )); do\n        for (( i = gap; i < ${#array[@]}; i++ )); do\n            tmp=${array[i]}\n            for (( j = i; j >= gap && array[j-gap] > tmp; j -= gap )); do\n                array[j]=${array[j-gap]}\n            done\n            array[j]=$tmp\n        done\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i i j k gap\n    local -i n=${#array[@]}\n    local -i temp\n\n    for ((gap=n/2; gap>0; gap/=2))\n    do\n        for ((i=gap; i<n; i++))\n        do\n            for ((j=i-gap; j>=0 && array[j]>array[j+gap]; j-=gap))\n            do\n                temp=${array[j]}\n                array[j]=${array[j+gap]}\n                array[j+gap]=$temp\n            done\n        done\n    done\n\n    echo \"${array[@]}\""
  ]
}
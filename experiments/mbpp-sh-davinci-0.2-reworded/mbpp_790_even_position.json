{
  "name": "mbpp_790_even_position",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to check whether every even index contains even numbers of a given list.\n#\n# $1 is a space-separated list\neven_position() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_790_even_position.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    even_position \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 2 1\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\") = \"false\" ]]\n    [[ $(candidate \"2 1 4\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -n list=$1\n    for ((i=0; i<${#list[@]}; i+=2)); do\n        if ((list[i] % 2 == 1)); then\n            return 1\n        fi\n    done\n    return 0",
    "    local list=$1\n    local even_index=0\n    local even_number=0\n    for i in $list; do\n        if [ $even_index -eq 0 ]; then\n            if [ $((i % 2)) -eq 0 ]; then\n                even_number=$((even_number + 1))\n            fi\n        fi\n        even_index=$((even_index + 1))\n        even_index=$((even_index % 2))\n    done\n    if [ $even_index -eq 0 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local list=$1\n    local i=0\n    for n in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            if [ $((n % 2)) -ne 0 ]; then\n                return 1\n            fi\n        fi\n        i=$((i + 1))\n    done\n    return 0",
    "    local list=$1\n    local i=0\n    for num in $list; do\n        if [ $((i%2)) -eq 0 ]; then\n            if [ $((num%2)) -ne 0 ]; then\n                return 1\n            fi\n        fi\n        i=$((i+1))\n    done\n    return 0",
    "    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            echo \"$i is even\"\n        else\n            echo \"$i is not even\"\n        fi\n    done",
    "    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            echo $i\n        fi\n    done",
    "    local list=$1\n    local even_index=0\n    local even_count=0\n    for i in $list; do\n        if [ $even_index -eq 0 ]; then\n            if [ $((i % 2)) -eq 0 ]; then\n                even_count=$((even_count + 1))\n            fi\n            even_index=$((even_index + 1))\n        else\n            even_index=$((even_index - 1))\n        fi\n    done\n    if [ $even_count -eq 0 ]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local list=\"$1\"\n    local index=0\n    for i in $list; do\n        if [ $((index % 2)) -eq 0 ] && [ $((i % 2)) -ne 0 ]; then\n            echo \"False\"\n            return\n        fi\n        index=$((index + 1))\n    done\n    echo \"True\"",
    "    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            echo \"$i is even\"\n        else\n            echo \"$i is odd\"\n        fi\n    done",
    "    local list=$1\n    local i=0\n    local num\n    for num in $list\n    do\n        if [ $((i % 2)) -eq 0 ] && [ $((num % 2)) -ne 0 ]\n        then\n            echo \"False\"\n            return\n        fi\n        i=$((i + 1))\n    done\n    echo \"True\"",
    "    local list=$1\n    local index=0\n    for i in $list; do\n        if [ $((index % 2)) -eq 0 ]; then\n            if [ $((i % 2)) -ne 0 ]; then\n                return 1\n            fi\n        fi\n        index=$((index + 1))\n    done\n    return 0",
    "    local -a array=($1)\n    local -i i=0\n    for ((i=0; i<${#array[@]}; i+=2)); do\n        if [[ $((array[i] % 2)) -ne 0 ]]; then\n            return 1\n        fi\n    done\n    return 0",
    "    local list=$1\n    local index=0\n    for i in $list; do\n        if [ $((index % 2)) -eq 0 ]; then\n            if [ $((i % 2)) -ne 0 ]; then\n                echo \"False\"\n                return\n            fi\n        fi\n        index=$((index + 1))\n    done\n    echo \"True\"",
    "    local list=$1\n    local index=0\n    local result=0\n    for i in $list; do\n        if [ $((index % 2)) -eq 0 ]; then\n            if [ $((i % 2)) -ne 0 ]; then\n                result=1\n                break\n            fi\n        fi\n        index=$((index + 1))\n    done\n    echo $result",
    "    for i in $1; do\n        if [ $(( $i % 2 )) -eq 0 ]; then\n            echo \"$i is even\"\n        else\n            echo \"$i is odd\"\n        fi\n    done",
    "  local -a list=($1)\n  local -i i=0\n  local -i len=${#list[@]}\n  local -i even_count=0\n  local -i odd_count=0\n  for ((i=0; i<len; i++)); do\n    if ((i%2==0)); then\n      ((list[i]%2==0)) && ((even_count++))\n    else\n      ((list[i]%2==1)) && ((odd_count++))\n    fi\n  done\n  ((even_count==len/2)) && ((odd_count==len/2)) && echo \"True\" || echo \"False\"",
    "    local list=\"$1\"\n    local i=0\n    for n in $list; do\n        if [ $((i % 2)) -eq 0 ] && [ $((n % 2)) -ne 0 ]; then\n            echo \"False\"\n            return\n        fi\n        i=$((i + 1))\n    done\n    echo \"True\"",
    "    local list=$1\n    local i=0\n    for num in $list; do\n        if [ $((i % 2)) -eq 0 ] && [ $((num % 2)) -ne 0 ]; then\n            echo \"False\"\n            return\n        fi\n        i=$((i + 1))\n    done\n    echo \"True\"",
    "    local list=$1\n    local index=0\n    for i in $list; do\n        if [ $((index % 2)) -eq 0 ]; then\n            if [ $((i % 2)) -ne 0 ]; then\n                return 1\n            fi\n        fi\n        index=$((index + 1))\n    done\n    return 0",
    "    local list=$1\n    local even_index=0\n    local even_count=0\n    for i in $list; do\n        if [ $even_index -eq 0 ]; then\n            if [ $((i % 2)) -eq 0 ]; then\n                even_count=$((even_count + 1))\n            fi\n        fi\n        even_index=$((even_index + 1))\n    done\n    if [ $even_count -eq 0 ]; then\n        echo \"No even numbers in even positions\"\n    else\n        echo \"There are $even_count even numbers in even positions\"\n    fi"
  ]
}
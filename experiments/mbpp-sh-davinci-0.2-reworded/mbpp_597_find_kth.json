{
  "name": "mbpp_597_find_kth",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find kth element from the given two sorted arrays.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nfind_kth() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_597_find_kth.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    find_kth \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 6 7 9\" \"1 4 8 10\" \"5\") = \"6\" ]]\n    [[ $(candidate \"100 112 256 349 770\" \"72 86 113 119 265 445 892\" \"7\") = \"256\" ]]\n    [[ $(candidate \"3 4 7 8 10\" \"2 5 9 11\" \"6\") = \"8\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -lt ${#a[@]} -a $j -lt ${#b[@]} ]; then\n            if [ ${a[$i]} -lt ${b[$j]} ]; then\n                i=$((i+1))\n            else\n                j=$((j+1))\n            fi\n        elif [ $i -lt ${#a[@]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ $i -lt ${#a[@]} -a $j -lt ${#b[@]} ]; then\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n        else\n            echo ${b[$j]}\n        fi\n    elif [ $i -lt ${#a[@]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local a=($1)\n    local b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=()\n    while ((i < ${#a[@]} && j < ${#b[@]})); do\n        if ((a[i] < b[j])); then\n            c+=(${a[i]})\n            ((i++))\n        else\n            c+=(${b[j]})\n            ((j++))\n        fi\n    done\n    if ((i < ${#a[@]})); then\n        c+=(${a[@]:i})\n    else\n        c+=(${b[@]:j})\n    fi\n    echo ${c[k-1]}",
    "    local a=($1)\n    local b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=()\n    local len_a=${#a[@]}\n    local len_b=${#b[@]}\n    while [ $i -lt $len_a -a $j -lt $len_b ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            c[${#c[@]}]=${a[$i]}\n            i=$((i+1))\n        else\n            c[${#c[@]}]=${b[$j]}\n            j=$((j+1))\n        fi\n    done\n    while [ $i -lt $len_a ]; do\n        c[${#c[@]}]=${a[$i]}\n        i=$((i+1))\n    done\n    while [ $j -lt $len_b ]; do\n        c[${#c[@]}]=${b[$j]}\n        j=$((j+1))\n    done\n    echo ${c[$((k-1))]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        fi\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ $i -eq ${#a[@]} ]; then\n        echo ${b[$j]}\n    elif [ $j -eq ${#b[@]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${a[$i]}\n    fi",
    "  local a=($1)\n  local b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=()\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      c+=(${a[$i]})\n      i=$((i + 1))\n    else\n      c+=(${b[$j]})\n      j=$((j + 1))\n    fi\n  done\n  if [ $i -lt ${#a[@]} ]; then\n    c+=(${a[@]:$i})\n  else\n    c+=(${b[@]:$j})\n  fi\n  echo ${c[$((k - 1))]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -lt ${#a[@]} -a $j -lt ${#b[@]} ]; then\n            if [ ${a[$i]} -lt ${b[$j]} ]; then\n                ((i++))\n            else\n                ((j++))\n            fi\n        elif [ $i -lt ${#a[@]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ $i -lt ${#a[@]} -a $j -lt ${#b[@]} ]; then\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n        else\n            echo ${b[$j]}\n        fi\n    elif [ $i -lt ${#a[@]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "  local a=($1)\n  local b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=()\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      c+=(${a[$i]})\n      i=$((i+1))\n    else\n      c+=(${b[$j]})\n      j=$((j+1))\n    fi\n  done\n  while [ $i -lt ${#a[@]} ]; do\n    c+=(${a[$i]})\n    i=$((i+1))\n  done\n  while [ $j -lt ${#b[@]} ]; do\n    c+=(${b[$j]})\n    j=$((j+1))\n  done\n  echo ${c[$((k-1))]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    echo ${a[$i]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0 j=0\n  while [ $k -gt 0 ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    k=$((k-1))\n  done\n  if [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while (( c < k )) && (( i < ${#a[@]} )) && (( j < ${#b[@]} )); do\n        if (( a[i] < b[j] )); then\n            (( i++ ))\n        else\n            (( j++ ))\n        fi\n        (( c++ ))\n    done\n    if (( i < ${#a[@]} )); then\n        (( i += k - c ))\n    else\n        (( j += k - c ))\n    fi\n    if (( i < ${#a[@]} )); then\n        echo ${a[i]}\n    else\n        echo ${b[j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local n=${#a[@]}\n    local m=${#b[@]}\n    local c=0\n    while ((c < k)) && ((i < n)) && ((j < m)); do\n        if ((a[i] < b[j])); then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if ((i == n)); then\n        echo ${b[j]}\n    elif ((j == m)); then\n        echo ${a[i]}\n    else\n        echo ${a[i]}\n    fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      ((j++))\n    elif [ $j -eq ${#b[@]} ]; then\n      ((i++))\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((c++))\n  done\n  if [ $i -eq ${#a[@]} ]; then\n    echo ${b[$j]}\n  elif [ $j -eq ${#b[@]} ]; then\n    echo ${a[$i]}\n  elif [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -ge ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -ge ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      echo ${b[$j]}\n      return\n    elif [ $j -eq ${#b[@]} ]; then\n      echo ${a[$i]}\n      return\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((c++))\n  done\n  if [ $i -eq ${#a[@]} ]; then\n    echo ${b[$j]}\n  elif [ $j -eq ${#b[@]} ]; then\n    echo ${a[$i]}\n  elif [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -ge ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -ge ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      ((j++))\n    elif [ $j -eq ${#b[@]} ]; then\n      ((i++))\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((c++))\n  done\n  if [ $i -eq ${#a[@]} ]; then\n    echo ${b[$j]}\n  elif [ $j -eq ${#b[@]} ]; then\n    echo ${a[$i]}\n  elif [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "  local -a arr1=($1)\n  local -a arr2=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local count=0\n  while [ $count -lt $k ]; do\n    if [ ${arr1[$i]} -lt ${arr2[$j]} ]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((count++))\n  done\n  if [ ${arr1[$i]} -lt ${arr2[$j]} ]; then\n    echo ${arr1[$i]}\n  else\n    echo ${arr2[$j]}\n  fi",
    "  local -a array1=($1)\n  local -a array2=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local kth=0\n  while [ $i -lt ${#array1[@]} ] && [ $j -lt ${#array2[@]} ]; do\n    if [ ${array1[$i]} -lt ${array2[$j]} ]; then\n      kth=${array1[$i]}\n      ((i++))\n    else\n      kth=${array2[$j]}\n      ((j++))\n    fi\n    ((k--))\n    if [ $k -eq 0 ]; then\n      break\n    fi\n  done\n  if [ $k -gt 0 ]; then\n    if [ $i -lt ${#array1[@]} ]; then\n      while [ $k -gt 0 ]; do\n        kth=${array1[$i]}\n        ((i++))\n        ((k--))\n      done\n    else\n      while [ $k -gt 0 ]; do\n        kth=${array2[$j]}\n        ((j++))\n        ((k--))\n      done\n    fi\n  fi\n  echo $kth",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local kth=0\n  while [ $i -lt ${#list1[@]} ] && [ $j -lt ${#list2[@]} ]; do\n    if [ ${list1[$i]} -lt ${list2[$j]} ]; then\n      kth=${list1[$i]}\n      i=$((i+1))\n    else\n      kth=${list2[$j]}\n      j=$((j+1))\n    fi\n    if [ $((i+j)) -eq $k ]; then\n      break\n    fi\n  done\n  if [ $((i+j)) -lt $k ]; then\n    if [ $i -lt ${#list1[@]} ]; then\n      kth=${list1[$((k-j))]}\n    else\n      kth=${list2[$((k-i))]}\n    fi\n  fi\n  echo $kth",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            c=$i\n            i=$((i+1))\n        else\n            c=$j\n            j=$((j+1))\n        fi\n        if [ $c -eq $((k-1)) ]; then\n            echo ${a[$i]}\n            return\n        fi\n    done\n    echo ${a[$i]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n            if [ ${a[$i]} -lt ${b[$j]} ]; then\n                ((i++))\n            else\n                ((j++))\n            fi\n        elif [ $i -lt ${#a[@]} ]; then\n            ((i++))\n        elif [ $j -lt ${#b[@]} ]; then\n            ((j++))\n        else\n            echo \"Error: k is too large\"\n            return 1\n        fi\n        ((c++))\n    done\n    if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n        else\n            echo ${b[$j]}\n        fi\n    elif [ $i -lt ${#a[@]} ]; then\n        echo ${a[$i]}\n    elif [ $j -lt ${#b[@]} ]; then\n        echo ${b[$j]}\n    else\n        echo \"Error: k is too large\"\n        return 1\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while (( i < ${#a[@]} && j < ${#b[@]} )) ; do\n        if (( a[i] < b[j] )) ; then\n            (( i++ ))\n        else\n            (( j++ ))\n        fi\n        (( c++ ))\n        if (( c == k )) ; then\n            if (( i < ${#a[@]} )) ; then\n                echo ${a[i]}\n            else\n                echo ${b[j]}\n            fi\n            return\n        fi\n    done\n    if (( i < ${#a[@]} )) ; then\n        echo ${a[i]}\n    else\n        echo ${b[j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local m=${#a[@]}\n    local n=${#b[@]}\n    while ((i < m && j < n))\n    do\n        if ((a[i] < b[j]))\n        then\n            ((k--))\n            if ((k == 0))\n            then\n                echo ${a[i]}\n                return\n            fi\n            ((i++))\n        else\n            ((k--))\n            if ((k == 0))\n            then\n                echo ${b[j]}\n                return\n            fi\n            ((j++))\n        fi\n    done\n    while ((i < m))\n    do\n        ((k--))\n        if ((k == 0))\n        then\n            echo ${a[i]}\n            return\n        fi\n        ((i++))\n    done\n    while ((j < n))\n    do\n        ((k--))\n        if ((k == 0))\n        then\n            echo ${b[j]}\n            return\n        fi\n        ((j++))\n    done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      let j++\n    elif [ $j -eq ${#b[@]} ]; then\n      let i++\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      let i++\n    else\n      let j++\n    fi\n    let c++\n  done\n  if [ $i -eq ${#a[@]} ]; then\n    echo ${b[$j]}\n  elif [ $j -eq ${#b[@]} ]; then\n    echo ${a[$i]}\n  elif [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "  local a=($1)\n  local b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local n=${#a[@]}\n  local m=${#b[@]}\n  local c=()\n  while [ $i -lt $n -a $j -lt $m ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      c+=(${a[$i]})\n      i=$((i + 1))\n    else\n      c+=(${b[$j]})\n      j=$((j + 1))\n    fi\n  done\n  while [ $i -lt $n ]; do\n    c+=(${a[$i]})\n    i=$((i + 1))\n  done\n  while [ $j -lt $m ]; do\n    c+=(${b[$j]})\n    j=$((j + 1))\n  done\n  echo ${c[$((k - 1))]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  while [ $i -lt ${#a[@]} -a $j -lt ${#b[@]} ]; do\n    if [ $k -eq 1 ]; then\n      if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n      else\n        echo ${b[$j]}\n      fi\n      return\n    fi\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    k=$((k-1))\n  done\n  if [ $i -lt ${#a[@]} ]; then\n    echo ${a[$((i+k-1))]}\n  else\n    echo ${b[$((j+k-1))]}\n  fi",
    "    local a=($1)\n    local b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=()\n    while [ $i -lt ${#a[@]} -a $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            c+=(${a[$i]})\n            ((i++))\n        else\n            c+=(${b[$j]})\n            ((j++))\n        fi\n    done\n    if [ $i -lt ${#a[@]} ]; then\n        c+=(${a[@]:$i})\n    fi\n    if [ $j -lt ${#b[@]} ]; then\n        c+=(${b[@]:$j})\n    fi\n    echo ${c[$k]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            c=$i\n            let i++\n        else\n            c=$j\n            let j++\n        fi\n        if [ $c -eq $k ]; then\n            echo ${a[$i]}\n            return\n        fi\n    done\n    if [ $i -lt ${#a[@]} ]; then\n        echo ${a[$k]}\n    else\n        echo ${b[$k]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local n=${#a[@]}\n    local m=${#b[@]}\n    local c=0\n    while ((i < n && j < m))\n    do\n        if ((a[i] < b[j]))\n        then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n        if ((c == k))\n        then\n            if ((i < n && j < m))\n            then\n                if ((a[i] < b[j]))\n                then\n                    echo ${a[i]}\n                else\n                    echo ${b[j]}\n                fi\n            elif ((i < n))\n            then\n                echo ${a[i]}\n            else\n                echo ${b[j]}\n            fi\n            return\n        fi\n    done\n    echo \"k is out of range\"",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        fi\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    echo ${a[$i]}",
    "    local a=($1)\n    local b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=()\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            c+=(${a[$i]})\n            ((i++))\n        else\n            c+=(${b[$j]})\n            ((j++))\n        fi\n    done\n    while [ $i -lt ${#a[@]} ]; do\n        c+=(${a[$i]})\n        ((i++))\n    done\n    while [ $j -lt ${#b[@]} ]; do\n        c+=(${b[$j]})\n        ((j++))\n    done\n    echo ${c[$((k-1))]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ $i -eq ${#a[@]} ]; then\n        echo ${b[$j]}\n    elif [ $j -eq ${#b[@]} ]; then\n        echo ${a[$i]}\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a arr1=($1)\n    local -a arr2=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ ${arr1[$i]} -lt ${arr2[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ ${arr1[$i]} -lt ${arr2[$j]} ]; then\n        echo ${arr1[$i]}\n    else\n        echo ${arr2[$j]}\n    fi",
    "    local a=($1)\n    local b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=()\n    while [ $i -lt ${#a[@]} -a $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            c[${#c[@]}]=${a[$i]}\n            ((i++))\n        else\n            c[${#c[@]}]=${b[$j]}\n            ((j++))\n        fi\n    done\n    while [ $i -lt ${#a[@]} ]; do\n        c[${#c[@]}]=${a[$i]}\n        ((i++))\n    done\n    while [ $j -lt ${#b[@]} ]; do\n        c[${#c[@]}]=${b[$j]}\n        ((j++))\n    done\n    echo ${c[$k]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i + 1))\n        else\n            j=$((j + 1))\n        fi\n        c=$((c + 1))\n    done\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while (( c < k )) && (( i < ${#a[@]} )) && (( j < ${#b[@]} )); do\n    if (( a[i] < b[j] )); then\n      (( i++ ))\n    else\n      (( j++ ))\n    fi\n    (( c++ ))\n  done\n  if (( i == ${#a[@]} )); then\n    (( j += k - c ))\n    echo ${b[j]}\n  elif (( j == ${#b[@]} )); then\n    (( i += k - c ))\n    echo ${a[i]}\n  else\n    echo ${a[i]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a array1=($1)\n    local -a array2=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local kth=0\n\n    while [ $i -lt ${#array1[@]} ] && [ $j -lt ${#array2[@]} ]; do\n        if [ ${array1[$i]} -lt ${array2[$j]} ]; then\n            kth=${array1[$i]}\n            ((i++))\n        else\n            kth=${array2[$j]}\n            ((j++))\n        fi\n        ((k--))\n        if [ $k -eq 0 ]; then\n            break\n        fi\n    done\n\n    if [ $k -gt 0 ]; then\n        if [ $i -lt ${#array1[@]} ]; then\n            kth=${array1[$i]}\n        else\n            kth=${array2[$j]}\n        fi\n    fi\n\n    echo $kth",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ $i -eq ${#a[@]} ]; then\n        echo ${b[$j]}\n    elif [ $j -eq ${#b[@]} ]; then\n        echo ${a[$i]}\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a arr1=($1)\n    local -a arr2=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local count=0\n    local val=0\n    while [ $count -lt $k ]; do\n        if [ $i -eq ${#arr1[@]} ]; then\n            val=${arr2[$j]}\n            j=$((j+1))\n        elif [ $j -eq ${#arr2[@]} ]; then\n            val=${arr1[$i]}\n            i=$((i+1))\n        elif [ ${arr1[$i]} -lt ${arr2[$j]} ]; then\n            val=${arr1[$i]}\n            i=$((i+1))\n        else\n            val=${arr2[$j]}\n            j=$((j+1))\n        fi\n        count=$((count+1))\n    done\n    echo $val",
    "    local -a arr1=($1)\n    local -a arr2=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local kth=0\n    while [ $i -lt ${#arr1[@]} -a $j -lt ${#arr2[@]} ]; do\n        if [ ${arr1[$i]} -lt ${arr2[$j]} ]; then\n            kth=${arr1[$i]}\n            i=$((i+1))\n        else\n            kth=${arr2[$j]}\n            j=$((j+1))\n        fi\n        k=$((k-1))\n        if [ $k -eq 0 ]; then\n            break\n        fi\n    done\n    if [ $k -gt 0 ]; then\n        if [ $i -lt ${#arr1[@]} ]; then\n            kth=${arr1[$i]}\n        else\n            kth=${arr2[$j]}\n        fi\n    fi\n    echo $kth",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "  local a=($1)\n  local b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=()\n  while [ $i -lt ${#a[@]} -a $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      c[${#c[@]}]=${a[$i]}\n      i=$((i+1))\n    else\n      c[${#c[@]}]=${b[$j]}\n      j=$((j+1))\n    fi\n  done\n  while [ $i -lt ${#a[@]} ]; do\n    c[${#c[@]}]=${a[$i]}\n    i=$((i+1))\n  done\n  while [ $j -lt ${#b[@]} ]; do\n    c[${#c[@]}]=${b[$j]}\n    j=$((j+1))\n  done\n  echo ${c[$((k-1))]}",
    "    local a=($1)\n    local b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=()\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            c+=(${a[$i]})\n            ((i++))\n        else\n            c+=(${b[$j]})\n            ((j++))\n        fi\n    done\n    while [ $i -lt ${#a[@]} ]; do\n        c+=(${a[$i]})\n        ((i++))\n    done\n    while [ $j -lt ${#b[@]} ]; do\n        c+=(${b[$j]})\n        ((j++))\n    done\n    echo ${c[$((k-1))]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local n=${#a[@]}\n    local m=${#b[@]}\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq $n ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq $m ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while (( c < k )); do\n    if (( i >= ${#a[@]} )); then\n      (( j++ ))\n    elif (( j >= ${#b[@]} )); then\n      (( i++ ))\n    elif (( a[i] < b[j] )); then\n      (( i++ ))\n    else\n      (( j++ ))\n    fi\n    (( c++ ))\n  done\n  if (( i >= ${#a[@]} )); then\n    echo ${b[j]}\n  elif (( j >= ${#b[@]} )); then\n    echo ${a[i]}\n  elif (( a[i] < b[j] )); then\n    echo ${a[i]}\n  else\n    echo ${b[j]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  if [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n            if [ ${a[$i]} -lt ${b[$j]} ]; then\n                ((i++))\n            else\n                ((j++))\n            fi\n        elif [ $i -lt ${#a[@]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n        else\n            echo ${b[$j]}\n        fi\n    elif [ $i -lt ${#a[@]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      c=$i\n      i=$((i+1))\n    else\n      c=$j\n      j=$((j+1))\n    fi\n    if [ $c -eq $((k-1)) ]; then\n      echo \"kth element is ${a[$i]}\"\n      return\n    fi\n  done\n  if [ $i -lt ${#a[@]} ]; then\n    echo \"kth element is ${a[$((k-j-1))]}\"\n  else\n    echo \"kth element is ${b[$((k-i-1))]}\"\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((k--))\n    if [ $k -eq 0 ]; then\n      if [ $i -eq ${#a[@]} ]; then\n        echo ${b[$j]}\n      else\n        echo ${a[$i]}\n      fi\n      return\n    fi\n  done\n  if [ $i -eq ${#a[@]} ]; then\n    echo ${b[$j+$k-1]}\n  else\n    echo ${a[$i+$k-1]}\n  fi",
    "    local -a arr1=($1)\n    local -a arr2=($2)\n    local k=$3\n    local i=0\n    local j=0\n    while [ $i -lt ${#arr1[@]} ] && [ $j -lt ${#arr2[@]} ]; do\n        if [ ${arr1[$i]} -lt ${arr2[$j]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((k--))\n        if [ $k -eq 0 ]; then\n            if [ $i -eq ${#arr1[@]} ]; then\n                echo ${arr2[$j]}\n            elif [ $j -eq ${#arr2[@]} ]; then\n                echo ${arr1[$i]}\n            else\n                echo $(( ${arr1[$i]} < ${arr2[$j]} ? ${arr1[$i]} : ${arr2[$j]} ))\n            fi\n            return\n        fi\n    done\n    echo \"k is out of range\"",
    "    local a=($1)\n    local b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=()\n    while [ $i -lt ${#a[@]} -a $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            c+=(${a[$i]})\n            i=$((i+1))\n        else\n            c+=(${b[$j]})\n            j=$((j+1))\n        fi\n    done\n    while [ $i -lt ${#a[@]} ]; do\n        c+=(${a[$i]})\n        i=$((i+1))\n    done\n    while [ $j -lt ${#b[@]} ]; do\n        c+=(${b[$j]})\n        j=$((j+1))\n    done\n    echo ${c[$((k-1))]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n            if [ ${a[$i]} -lt ${b[$j]} ]; then\n                ((i++))\n            else\n                ((j++))\n            fi\n        elif [ $i -lt ${#a[@]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n        else\n            echo ${b[$j]}\n        fi\n    elif [ $i -lt ${#a[@]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n\n    local i=0\n    local j=0\n    local c=0\n\n    while [ $c -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local m=${#a[@]}\n    local n=${#b[@]}\n    local c=0\n    while [ $i -lt $m -a $j -lt $n -a $c -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ $i -lt $m -a $c -lt $k ]; then\n        echo ${a[$((k-c-1))]}\n    elif [ $j -lt $n -a $c -lt $k ]; then\n        echo ${b[$((k-c-1))]}\n    else\n        echo \"k is too large\"\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    echo ${a[$i]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  local n=${#a[@]}\n  local m=${#b[@]}\n  while [ $c -lt $k ]; do\n    if [ $i -lt $n ] && [ $j -lt $m ]; then\n      if [ ${a[$i]} -lt ${b[$j]} ]; then\n        let i++\n      else\n        let j++\n      fi\n    elif [ $i -lt $n ]; then\n      let i++\n    else\n      let j++\n    fi\n    let c++\n  done\n  if [ $i -lt $n ] && [ $j -lt $m ]; then\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      echo ${a[$i]}\n    else\n      echo ${b[$j]}\n    fi\n  elif [ $i -lt $n ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n            if [ ${a[$i]} -lt ${b[$j]} ]; then\n                i=$((i+1))\n            else\n                j=$((j+1))\n            fi\n        elif [ $i -lt ${#a[@]} ]; then\n            i=$((i+1))\n        elif [ $j -lt ${#b[@]} ]; then\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n        else\n            echo ${b[$j]}\n        fi\n    elif [ $i -lt ${#a[@]} ]; then\n        echo ${a[$i]}\n    elif [ $j -lt ${#b[@]} ]; then\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n            if [ ${a[$i]} -lt ${b[$j]} ]; then\n                ((i++))\n            else\n                ((j++))\n            fi\n        elif [ $i -lt ${#a[@]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n        else\n            echo ${b[$j]}\n        fi\n    elif [ $i -lt ${#a[@]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=(\"${!1}\")\n    local -a b=(\"${!2}\")\n    local k=$3\n    local i=0\n    local j=0\n    local kth=0\n    while (( i < ${#a[@]} && j < ${#b[@]} )); do\n        if (( a[i] < b[j] )); then\n            kth=${a[i]}\n            (( i++ ))\n        else\n            kth=${b[j]}\n            (( j++ ))\n        fi\n        (( k-- ))\n        if (( k == 0 )); then\n            break\n        fi\n    done\n    if (( k > 0 )); then\n        if (( i < ${#a[@]} )); then\n            kth=${a[i+k-1]}\n        else\n            kth=${b[j+k-1]}\n        fi\n    fi\n    echo $kth",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local kth=0\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      kth=${a[$i]}\n      ((i++))\n    else\n      kth=${b[$j]}\n      ((j++))\n    fi\n    ((k--))\n    if [ $k -eq 0 ]; then\n      break\n    fi\n  done\n  if [ $k -gt 0 ]; then\n    if [ $i -lt ${#a[@]} ]; then\n      kth=${a[$i]}\n    else\n      kth=${b[$j]}\n    fi\n  fi\n  echo $kth",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n\n    local i=0\n    local j=0\n    local kth=0\n\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            kth=${a[$i]}\n            ((i++))\n        else\n            kth=${b[$j]}\n            ((j++))\n        fi\n\n        ((k--))\n        if [ $k -eq 0 ]; then\n            break\n        fi\n    done\n\n    if [ $k -gt 0 ]; then\n        if [ $i -eq ${#a[@]} ]; then\n            kth=${b[$j]}\n        else\n            kth=${a[$i]}\n        fi\n    fi\n\n    echo $kth",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ ${a[$i]} -le ${b[$j]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ ${a[$i]} -le ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            let j++\n        elif [ $j -eq ${#b[@]} ]; then\n            let i++\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            let i++\n        else\n            let j++\n        fi\n        let c++\n    done\n    if [ $i -eq ${#a[@]} ]; then\n        echo ${b[$j]}\n    elif [ $j -eq ${#b[@]} ]; then\n        echo ${a[$i]}\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local a=($1)\n    local b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=()\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            c+=(${a[$i]})\n            ((i++))\n        else\n            c+=(${b[$j]})\n            ((j++))\n        fi\n    done\n    while [ $i -lt ${#a[@]} ]; do\n        c+=(${a[$i]})\n        ((i++))\n    done\n    while [ $j -lt ${#b[@]} ]; do\n        c+=(${b[$j]})\n        ((j++))\n    done\n    echo ${c[$((k-1))]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      echo ${b[$j]}\n      return\n    elif [ $j -eq ${#b[@]} ]; then\n      echo ${a[$i]}\n      return\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  if [ $i -eq ${#a[@]} ]; then\n    echo ${b[$j]}\n  elif [ $j -eq ${#b[@]} ]; then\n    echo ${a[$i]}\n  elif [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -ge ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -ge ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i + 1))\n        else\n            echo ${b[$j]}\n            j=$((j + 1))\n        fi\n        c=$((c + 1))\n    done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            ((j++))\n        elif [ $j -eq ${#b[@]} ]; then\n            ((i++))\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ $i -eq ${#a[@]} ]; then\n        echo ${b[$j]}\n    elif [ $j -eq ${#b[@]} ]; then\n        echo ${a[$i]}\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while ((i < ${#a[@]} && j < ${#b[@]})); do\n        if ((a[i] < b[j])); then\n            ((c++))\n            if ((c == k)); then\n                echo ${a[i]}\n                return\n            fi\n            ((i++))\n        else\n            ((c++))\n            if ((c == k)); then\n                echo ${b[j]}\n                return\n            fi\n            ((j++))\n        fi\n    done\n    while ((i < ${#a[@]})); do\n        ((c++))\n        if ((c == k)); then\n            echo ${a[i]}\n            return\n        fi\n        ((i++))\n    done\n    while ((j < ${#b[@]})); do\n        ((c++))\n        if ((c == k)); then\n            echo ${b[j]}\n            return\n        fi\n        ((j++))\n    done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      j=$((j+1))\n    elif [ $j -eq ${#b[@]} ]; then\n      i=$((i+1))\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  if [ $i -eq ${#a[@]} ]; then\n    echo ${b[$j]}\n  elif [ $j -eq ${#b[@]} ]; then\n    echo ${a[$i]}\n  elif [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while (( i < ${#a[@]} && j < ${#b[@]} )); do\n        if (( a[i] < b[j] )); then\n            (( i++ ))\n        else\n            (( j++ ))\n        fi\n        (( c++ ))\n        if (( c == k )); then\n            if (( a[i] < b[j] )); then\n                echo ${a[i]}\n            else\n                echo ${b[j]}\n            fi\n            return\n        fi\n    done\n    if (( i == ${#a[@]} )); then\n        echo ${b[j+k-c-1]}\n    else\n        echo ${a[i+k-c-1]}\n    fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((k--))\n    if [ $k -eq 0 ]; then\n      if [ $i -lt ${#a[@]} ]; then\n        echo ${a[$i]}\n      else\n        echo ${b[$j]}\n      fi\n      return\n    fi\n  done\n  if [ $i -lt ${#a[@]} ]; then\n    echo ${a[$k-1]}\n  else\n    echo ${b[$k-1]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      (( i++ ))\n    else\n      (( j++ ))\n    fi\n    (( k-- ))\n    if [ $k -eq 0 ]; then\n      if [ $i -lt ${#a[@]} ]; then\n        echo ${a[$i]}\n      else\n        echo ${b[$j]}\n      fi\n      return\n    fi\n  done\n  if [ $i -lt ${#a[@]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local kth=0\n    while [[ $kth -lt $k ]]; do\n        if [[ ${a[$i]} -lt ${b[$j]} ]]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((kth++))\n    done\n    if [[ ${a[$i]} -lt ${b[$j]} ]]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            ((c++))\n            if [ $c -eq $k ]; then\n                echo ${a[$i]}\n                return\n            fi\n            ((i++))\n        else\n            ((c++))\n            if [ $c -eq $k ]; then\n                echo ${b[$j]}\n                return\n            fi\n            ((j++))\n        fi\n    done\n    while [ $i -lt ${#a[@]} ]; do\n        ((c++))\n        if [ $c -eq $k ]; then\n            echo ${a[$i]}\n            return\n        fi\n        ((i++))\n    done\n    while [ $j -lt ${#b[@]} ]; do\n        ((c++))\n        if [ $c -eq $k ]; then\n            echo ${b[$j]}\n            return\n        fi\n        ((j++))\n    done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n      if [ ${a[$i]} -lt ${b[$j]} ]; then\n        ((i++))\n      else\n        ((j++))\n      fi\n    elif [ $i -lt ${#a[@]} ]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((c++))\n  done\n  if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      echo ${a[$i]}\n    else\n      echo ${b[$j]}\n    fi\n  elif [ $i -lt ${#a[@]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  if [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [[ $c -lt $k ]]; do\n    if [[ ${a[$i]} -lt ${b[$j]} ]]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((c++))\n  done\n  if [[ ${a[$i]} -lt ${b[$j]} ]]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local n=${#a[@]}\n  local m=${#b[@]}\n  local c=0\n  while [ $i -lt $n -a $j -lt $m ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      c=$((c+1))\n      if [ $c -eq $k ]; then\n        echo ${a[$i]}\n        return\n      fi\n      i=$((i+1))\n    else\n      c=$((c+1))\n      if [ $c -eq $k ]; then\n        echo ${b[$j]}\n        return\n      fi\n      j=$((j+1))\n    fi\n  done\n  while [ $i -lt $n ]; do\n    c=$((c+1))\n    if [ $c -eq $k ]; then\n      echo ${a[$i]}\n      return\n    fi\n    i=$((i+1))\n  done\n  while [ $j -lt $m ]; do\n    c=$((c+1))\n    if [ $c -eq $k ]; then\n      echo ${b[$j]}\n      return\n    fi\n    j=$((j+1))\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ ${a[i]} -lt ${b[j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  if [ ${a[i]} -lt ${b[j]} ]; then\n    echo ${a[i]}\n  else\n    echo ${b[j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n\n    local i=0\n    local j=0\n    local n=0\n    local m=0\n\n    while ((n < k)) && ((i < ${#a[@]}) || (j < ${#b[@]})); do\n        if ((i < ${#a[@]})) && ((j < ${#b[@]})); then\n            if ((a[i] < b[j])); then\n                m=${a[i]}\n                ((i++))\n            else\n                m=${b[j]}\n                ((j++))\n            fi\n        elif ((i < ${#a[@]})); then\n            m=${a[i]}\n            ((i++))\n        else\n            m=${b[j]}\n            ((j++))\n        fi\n        ((n++))\n    done\n\n    echo $m",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n      if [ ${a[$i]} -lt ${b[$j]} ]; then\n        i=$((i+1))\n      else\n        j=$((j+1))\n      fi\n    elif [ $i -lt ${#a[@]} ]; then\n      i=$((i+1))\n    elif [ $j -lt ${#b[@]} ]; then\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      echo ${a[$i]}\n    else\n      echo ${b[$j]}\n    fi\n  elif [ $i -lt ${#a[@]} ]; then\n    echo ${a[$i]}\n  elif [ $j -lt ${#b[@]} ]; then\n    echo ${b[$j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while (( c < k )); do\n        if (( i < ${#a[@]} && j < ${#b[@]} )); then\n            if (( a[i] < b[j] )); then\n                (( i++ ))\n            else\n                (( j++ ))\n            fi\n        elif (( i < ${#a[@]} )); then\n            (( i++ ))\n        else\n            (( j++ ))\n        fi\n        (( c++ ))\n    done\n    if (( i < ${#a[@]} && j < ${#b[@]} )); then\n        if (( a[i] < b[j] )); then\n            echo ${a[i]}\n        else\n            echo ${b[j]}\n        fi\n    elif (( i < ${#a[@]} )); then\n        echo ${a[i]}\n    else\n        echo ${b[j]}\n    fi",
    "  local a=($1)\n  local b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=()\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      c+=(${a[$i]})\n      i=$((i+1))\n    else\n      c+=(${b[$j]})\n      j=$((j+1))\n    fi\n  done\n  if [ $i -lt ${#a[@]} ]; then\n    c+=(${a[@]:$i})\n  else\n    c+=(${b[@]:$j})\n  fi\n  echo ${c[$((k-1))]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [[ $c -lt $k ]]; do\n        if [[ ${a[$i]} -lt ${b[$j]} ]]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [[ ${a[$i]} -lt ${b[$j]} ]]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            ((j++))\n        elif [ $j -eq ${#b[@]} ]; then\n            ((i++))\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ $i -eq ${#a[@]} ]; then\n        echo ${b[$j]}\n    elif [ $j -eq ${#b[@]} ]; then\n        echo ${a[$i]}\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ] && [ $c -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ $c -lt $k ]; then\n        if [ $i -lt ${#a[@]} ]; then\n            i=$((i+k-c))\n        else\n            j=$((j+k-c))\n        fi\n    fi\n    if [ $i -lt ${#a[@]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local list1=($1)\n    local list2=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local kth=0\n    while [[ $i -lt ${#list1[@]} && $j -lt ${#list2[@]} ]]; do\n        if [[ ${list1[$i]} -lt ${list2[$j]} ]]; then\n            kth=${list1[$i]}\n            i=$((i + 1))\n        else\n            kth=${list2[$j]}\n            j=$((j + 1))\n        fi\n        k=$((k - 1))\n        if [[ $k -eq 0 ]]; then\n            break\n        fi\n    done\n    if [[ $k -gt 0 ]]; then\n        if [[ $i -lt ${#list1[@]} ]]; then\n            kth=${list1[$i]}\n        else\n            kth=${list2[$j]}\n        fi\n    fi\n    echo $kth",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while true; do\n    if [ $i -eq ${#a[@]} ]; then\n      echo ${b[$j]}\n      break\n    elif [ $j -eq ${#b[@]} ]; then\n      echo ${a[$i]}\n      break\n    fi\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      c=$((c+1))\n      if [ $c -eq $k ]; then\n        echo ${a[$i]}\n        break\n      fi\n      i=$((i+1))\n    else\n      c=$((c+1))\n      if [ $c -eq $k ]; then\n        echo ${b[$j]}\n        break\n      fi\n      j=$((j+1))\n    fi\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      echo ${b[$j]}\n      return\n    elif [ $j -eq ${#b[@]} ]; then\n      echo ${a[$i]}\n      return\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((c++))\n  done\n  echo ${a[$i]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  if [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "  local list1=( $1 )\n  local list2=( $2 )\n  local k=$3\n  local i=0\n  local j=0\n  local kth=0\n\n  while [ $i -lt ${#list1[@]} -a $j -lt ${#list2[@]} ]; do\n    if [ ${list1[$i]} -lt ${list2[$j]} ]; then\n      kth=${list1[$i]}\n      ((i++))\n    else\n      kth=${list2[$j]}\n      ((j++))\n    fi\n    ((k--))\n    if [ $k -eq 0 ]; then\n      break\n    fi\n  done\n\n  if [ $k -gt 0 ]; then\n    if [ $i -lt ${#list1[@]} ]; then\n      kth=${list1[$i]}\n    else\n      kth=${list2[$j]}\n    fi\n  fi\n\n  echo $kth",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n        if [ $k -eq 1 ]; then\n            if [ ${a[$i]} -lt ${b[$j]} ]; then\n                echo ${a[$i]}\n            else\n                echo ${b[$j]}\n            fi\n            return\n        fi\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            let i++\n        else\n            let j++\n        fi\n        let k--\n    done\n    if [ $i -lt ${#a[@]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            c=$i\n            ((i++))\n        else\n            c=$j\n            ((j++))\n        fi\n        ((c++))\n        if [ $c -eq $k ]; then\n            echo ${a[$i]}\n            return\n        fi\n    done\n    if [ $i -lt ${#a[@]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "  local a=($1)\n  local b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=()\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      c+=(${a[$i]})\n      i=$((i+1))\n    else\n      c+=(${b[$j]})\n      j=$((j+1))\n    fi\n  done\n  while [ $i -lt ${#a[@]} ]; do\n    c+=(${a[$i]})\n    i=$((i+1))\n  done\n  while [ $j -lt ${#b[@]} ]; do\n    c+=(${b[$j]})\n    j=$((j+1))\n  done\n  echo ${c[$((k-1))]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while ((i < ${#a[@]} && j < ${#b[@]})); do\n        if ((a[i] < b[j])); then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n        if ((c == k)); then\n            if ((i == ${#a[@]})); then\n                echo ${b[j]}\n            else\n                echo ${a[i]}\n            fi\n            return\n        fi\n    done\n    if ((i < ${#a[@]})); then\n        echo ${a[i+k-c-1]}\n    else\n        echo ${b[j+k-c-1]}\n    fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((c++))\n  done\n  if [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n\n  local i=0\n  local j=0\n  local kth=0\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      kth=${a[$i]}\n      ((i++))\n    else\n      kth=${b[$j]}\n      ((j++))\n    fi\n    ((k--))\n    if [ $k -eq 0 ]; then\n      break\n    fi\n  done\n\n  if [ $k -eq 0 ]; then\n    echo $kth\n  else\n    if [ $i -lt ${#a[@]} ]; then\n      echo ${a[$i]}\n    else\n      echo ${b[$j]}\n    fi\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            c=$i\n            i=$((i+1))\n        else\n            c=$j\n            j=$((j+1))\n        fi\n        if [ $c -eq $((k-1)) ]; then\n            echo ${a[$i]}\n            return\n        fi\n    done\n    if [ $i -lt ${#a[@]} ]; then\n        echo ${a[$((k-j-1))]}\n    else\n        echo ${b[$((k-i-1))]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "    local -a arr1=($1)\n    local -a arr2=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local kth=0\n    while [ $i -lt ${#arr1[@]} ] && [ $j -lt ${#arr2[@]} ]; do\n        if [ ${arr1[$i]} -lt ${arr2[$j]} ]; then\n            kth=${arr1[$i]}\n            i=$((i+1))\n        else\n            kth=${arr2[$j]}\n            j=$((j+1))\n        fi\n        k=$((k-1))\n        if [ $k -eq 0 ]; then\n            break\n        fi\n    done\n    if [ $k -gt 0 ]; then\n        if [ $i -lt ${#arr1[@]} ]; then\n            kth=${arr1[$i]}\n        else\n            kth=${arr2[$j]}\n        fi\n    fi\n    echo $kth",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local kth=0\n    while ((i < ${#a[@]} && j < ${#b[@]})); do\n        if ((a[i] < b[j])); then\n            kth=$((a[i++]))\n        else\n            kth=$((b[j++]))\n        fi\n        ((--k))\n        if ((k == 0)); then\n            break\n        fi\n    done\n    if ((k > 0)); then\n        if ((i < ${#a[@]})); then\n            kth=$((a[i+k-1]))\n        else\n            kth=$((b[j+k-1]))\n        fi\n    fi\n    echo $kth",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      echo ${b[$j]}\n      return\n    elif [ $j -eq ${#b[@]} ]; then\n      echo ${a[$i]}\n      return\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  if [ $i -eq ${#a[@]} ]; then\n    echo ${b[$j]}\n  elif [ $j -eq ${#b[@]} ]; then\n    echo ${a[$i]}\n  elif [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while ((c < k)) && ((i < ${#a[@]}) || (j < ${#b[@]})); do\n    if ((i < ${#a[@]}) && ((j >= ${#b[@]}) || (a[i] < b[j]))); then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((c++))\n  done\n  if ((i < ${#a[@]})) && ((j >= ${#b[@]}) || (a[i] < b[j])); then\n    echo ${a[i]}\n  else\n    echo ${b[j]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      j=$((j+1))\n    elif [ $j -eq ${#b[@]} ]; then\n      i=$((i+1))\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  if [ $i -eq ${#a[@]} ]; then\n    echo ${b[$j]}\n  elif [ $j -eq ${#b[@]} ]; then\n    echo ${a[$i]}\n  elif [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while ((c < k)) && ((i < ${#a[@]}) || (j < ${#b[@]})); do\n    if ((i < ${#a[@]})) && ((j < ${#b[@]}) && ((a[i] < b[j])) || (j >= ${#b[@]})); then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((c++))\n  done\n  if ((i < ${#a[@]})) && ((j < ${#b[@]})); then\n    if ((a[i] < b[j])); then\n      echo ${a[i]}\n    else\n      echo ${b[j]}\n    fi\n  elif ((i < ${#a[@]})); then\n    echo ${a[i]}\n  else\n    echo ${b[j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            ((j++))\n        elif [ $j -eq ${#b[@]} ]; then\n            ((i++))\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ $i -eq ${#a[@]} ]; then\n        echo ${b[$j]}\n    elif [ $j -eq ${#b[@]} ]; then\n        echo ${a[$i]}\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      echo ${b[$j]}\n      return\n    elif [ $j -eq ${#b[@]} ]; then\n      echo ${a[$i]}\n      return\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  if [ $i -eq ${#a[@]} ]; then\n    echo ${b[$j]}\n  elif [ $j -eq ${#b[@]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${a[$i]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ $i -eq ${#a[@]} ]; then\n        echo ${b[$j]}\n    elif [ $j -eq ${#b[@]} ]; then\n        echo ${a[$i]}\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "  local a=($1)\n  local b=($2)\n  local k=$3\n\n  if [[ ${#a[@]} -eq 0 ]]; then\n    echo ${b[$((k-1))]}\n    return\n  fi\n\n  if [[ ${#b[@]} -eq 0 ]]; then\n    echo ${a[$((k-1))]}\n    return\n  fi\n\n  if [[ $k -eq 1 ]]; then\n    if [[ ${a[0]} -lt ${b[0]} ]]; then\n      echo ${a[0]}\n    else\n      echo ${b[0]}\n    fi\n    return\n  fi\n\n  local m=$((k/2))\n  local n=$((k-m))\n\n  if [[ $m -gt ${#a[@]} ]]; then\n    m=${#a[@]}\n    n=$((k-m))\n  fi\n\n  if [[ $n -gt ${#b[@]} ]]; then\n    n=${#b[@]}\n    m=$((k-n))\n  fi\n\n  if [[ ${a[$((m-1))]} -lt ${b[$((n-1))]} ]]; then\n    find_kth \"${a[@]:$m}\" \"${b[@]}\" $n\n  else\n    find_kth \"${a[@]}\" \"${b[@]:$n}\" $m\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      c=${a[$i]}\n      i=$((i+1))\n    else\n      c=${b[$j]}\n      j=$((j+1))\n    fi\n    if [ $((i+j)) -eq $k ]; then\n      echo $c\n      return\n    fi\n  done\n  if [ $i -lt ${#a[@]} ]; then\n    echo ${a[$((k-j))]}\n  else\n    echo ${b[$((k-i))]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local kth=0\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      kth=${a[$i]}\n      i=$((i+1))\n    else\n      kth=${b[$j]}\n      j=$((j+1))\n    fi\n    k=$((k-1))\n    if [ $k -eq 0 ]; then\n      break\n    fi\n  done\n  if [ $k -gt 0 ]; then\n    if [ $i -lt ${#a[@]} ]; then\n      kth=${a[$i]}\n    else\n      kth=${b[$j]}\n    fi\n  fi\n  echo $kth",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((c++))\n  done\n  if [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      echo ${b[$j]}\n      return\n    elif [ $j -eq ${#b[@]} ]; then\n      echo ${a[$i]}\n      return\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      echo ${a[$i]}\n      i=$((i+1))\n    else\n      echo ${b[$j]}\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((c++))\n  done\n  if [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local kth=0\n  while [[ $i -lt ${#a[@]} && $j -lt ${#b[@]} ]]; do\n    if [[ ${a[$i]} -lt ${b[$j]} ]]; then\n      kth=${a[$i]}\n      ((i++))\n    else\n      kth=${b[$j]}\n      ((j++))\n    fi\n    ((k--))\n    if [[ $k -eq 0 ]]; then\n      break\n    fi\n  done\n  if [[ $k -gt 0 ]]; then\n    if [[ $i -lt ${#a[@]} ]]; then\n      kth=${a[$i]}\n    else\n      kth=${b[$j]}\n    fi\n  fi\n  echo $kth",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ $i -eq ${#a[@]} ]; then\n        echo ${b[$j]}\n    elif [ $j -eq ${#b[@]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${a[$i]}\n    fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      echo ${b[$j]}\n      return\n    elif [ $j -eq ${#b[@]} ]; then\n      echo ${a[$i]}\n      return\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((c++))\n  done\n  if [ $i -eq ${#a[@]} ]; then\n    echo ${b[$j]}\n  elif [ $j -eq ${#b[@]} ]; then\n    echo ${a[$i]}\n  elif [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local count=0\n    local kth=0\n    while [ $count -lt $k ]; do\n        if [ ${list1[$i]} -lt ${list2[$j]} ]; then\n            kth=${list1[$i]}\n            ((i++))\n        else\n            kth=${list2[$j]}\n            ((j++))\n        fi\n        ((count++))\n    done\n    echo $kth",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n\n    local i=0\n    local j=0\n    local kth=0\n\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            kth=${a[$i]}\n            i=$((i+1))\n        else\n            kth=${b[$j]}\n            j=$((j+1))\n        fi\n\n        if [ $((i+j)) -eq $k ]; then\n            break\n        fi\n    done\n\n    if [ $((i+j)) -lt $k ]; then\n        if [ $i -eq ${#a[@]} ]; then\n            kth=${b[$((j+k-i-j))]}\n        else\n            kth=${a[$((i+k-i-j))]}\n        fi\n    fi\n\n    echo $kth",
    "    local -a arr1=($1)\n    local -a arr2=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local kth=0\n    while [ $i -lt ${#arr1[@]} ] && [ $j -lt ${#arr2[@]} ]; do\n        if [ ${arr1[$i]} -lt ${arr2[$j]} ]; then\n            kth=${arr1[$i]}\n            i=$((i+1))\n        else\n            kth=${arr2[$j]}\n            j=$((j+1))\n        fi\n        if [ $i + $j -eq $k ]; then\n            break\n        fi\n    done\n    if [ $i -eq ${#arr1[@]} ]; then\n        while [ $j -lt ${#arr2[@]} ]; do\n            kth=${arr2[$j]}\n            j=$((j+1))\n            if [ $i + $j -eq $k ]; then\n                break\n            fi\n        done\n    elif [ $j -eq ${#arr2[@]} ]; then\n        while [ $i -lt ${#arr1[@]} ]; do\n            kth=${arr1[$i]}\n            i=$((i+1))\n            if [ $i + $j -eq $k ]; then\n                break\n            fi\n        done\n    fi\n    echo $kth",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      echo ${b[$j]}\n      return\n    elif [ $j -eq ${#b[@]} ]; then\n      echo ${a[$i]}\n      return\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  if [ $i -eq ${#a[@]} ]; then\n    echo ${b[$j]}\n  elif [ $j -eq ${#b[@]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${a[$i]}\n  fi",
    "  local a=($1)\n  local b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=()\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      c+=(${a[$i]})\n      ((i++))\n    else\n      c+=(${b[$j]})\n      ((j++))\n    fi\n  done\n  while [ $i -lt ${#a[@]} ]; do\n    c+=(${a[$i]})\n    ((i++))\n  done\n  while [ $j -lt ${#b[@]} ]; do\n    c+=(${b[$j]})\n    ((j++))\n  done\n  echo ${c[$((k-1))]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      echo ${b[$j]}\n      return\n    elif [ $j -eq ${#b[@]} ]; then\n      echo ${a[$i]}\n      return\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  if [ $i -eq ${#a[@]} ]; then\n    echo ${b[$j]}\n  elif [ $j -eq ${#b[@]} ]; then\n    echo ${a[$i]}\n  elif [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while ((c < k)) && ((i < ${#a[@]}) || (j < ${#b[@]})); do\n        if ((i < ${#a[@]})) && ((j < ${#b[@]}) && ((a[i] < b[j]) || (j == ${#b[@]}))); then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if ((i < ${#a[@]})) && ((j < ${#b[@]})); then\n        echo \"${a[i]}\"\n    else\n        echo \"${b[j]}\"\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [[ $i -lt ${#a[@]} && $j -lt ${#b[@]} ]]; do\n        if [[ ${a[$i]} -lt ${b[$j]} ]]; then\n            c=$i\n            i=$((i+1))\n        else\n            c=$j\n            j=$((j+1))\n        fi\n        if [[ $c -eq $k ]]; then\n            echo ${a[$i]}\n            return\n        fi\n    done\n    if [[ $i -lt ${#a[@]} ]]; then\n        echo ${a[$k]}\n    else\n        echo ${b[$k]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n            if [ ${a[$i]} -lt ${b[$j]} ]; then\n                ((i++))\n            else\n                ((j++))\n            fi\n        elif [ $i -lt ${#a[@]} ]; then\n            ((i++))\n        elif [ $j -lt ${#b[@]} ]; then\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n        else\n            echo ${b[$j]}\n        fi\n    elif [ $i -lt ${#a[@]} ]; then\n        echo ${a[$i]}\n    elif [ $j -lt ${#b[@]} ]; then\n        echo ${b[$j]}\n    fi",
    "    local a=($1)\n    local b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=()\n    while [[ $i -lt ${#a[@]} && $j -lt ${#b[@]} ]]; do\n        if [[ ${a[$i]} -lt ${b[$j]} ]]; then\n            c+=(${a[$i]})\n            ((i++))\n        else\n            c+=(${b[$j]})\n            ((j++))\n        fi\n    done\n    if [[ $i -lt ${#a[@]} ]]; then\n        c+=(${a[@]:$i})\n    fi\n    if [[ $j -lt ${#b[@]} ]]; then\n        c+=(${b[@]:$j})\n    fi\n    echo ${c[$((k-1))]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local n=${#a[@]}\n    local m=${#b[@]}\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq $n ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq $m ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        fi\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ $i -eq ${#a[@]} ]; then\n        echo ${b[$j]}\n    elif [ $j -eq ${#b[@]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${a[$i]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n            if [ ${a[$i]} -lt ${b[$j]} ]; then\n                i=$((i + 1))\n            else\n                j=$((j + 1))\n            fi\n        elif [ $i -lt ${#a[@]} ]; then\n            i=$((i + 1))\n        else\n            j=$((j + 1))\n        fi\n        c=$((c + 1))\n    done\n    if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n        else\n            echo ${b[$j]}\n        fi\n    elif [ $i -lt ${#a[@]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i + 1))\n        else\n            j=$((j + 1))\n        fi\n        c=$((c + 1))\n    done\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -ge ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        fi\n        if [ $j -ge ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        fi\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ $i -ge ${#a[@]} ]; then\n        echo ${b[$j]}\n    else\n        echo ${a[$i]}\n    fi",
    "    local a=($1)\n    local b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=()\n\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            c+=(${a[$i]})\n            ((i++))\n        else\n            c+=(${b[$j]})\n            ((j++))\n        fi\n    done\n\n    while [ $i -lt ${#a[@]} ]; do\n        c+=(${a[$i]})\n        ((i++))\n    done\n\n    while [ $j -lt ${#b[@]} ]; do\n        c+=(${b[$j]})\n        ((j++))\n    done\n\n    echo ${c[$((k-1))]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ $i -eq ${#a[@]} ]; then\n        echo ${b[$j]}\n    elif [ $j -eq ${#b[@]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${a[$i]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        fi\n        if [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        fi\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n\n  while [ $c -lt $k ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n\n  if [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            ((j++))\n        elif [ $j -eq ${#b[@]} ]; then\n            ((i++))\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ $i -eq ${#a[@]} ]; then\n        echo ${b[$j]}\n    elif [ $j -eq ${#b[@]} ]; then\n        echo ${a[$i]}\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "  local list1=($1)\n  local list2=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local kth=0\n  while [ $i -lt ${#list1[@]} -a $j -lt ${#list2[@]} ]; do\n    if [ ${list1[$i]} -lt ${list2[$j]} ]; then\n      kth=${list1[$i]}\n      i=$((i+1))\n    else\n      kth=${list2[$j]}\n      j=$((j+1))\n    fi\n    if [ $i + $j -eq $k ]; then\n      break\n    fi\n  done\n  if [ $i -eq ${#list1[@]} ]; then\n    kth=${list2[$((k-i))]}\n  elif [ $j -eq ${#list2[@]} ]; then\n    kth=${list1[$((k-j))]}\n  fi\n  echo $kth",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    echo ${a[$i]}",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while (( i < ${#a[@]} && j < ${#b[@]} )); do\n        if (( a[i] < b[j] )); then\n            (( i++ ))\n        else\n            (( j++ ))\n        fi\n        (( c++ ))\n        if (( c == k )); then\n            echo \"${a[i-1]} ${b[j-1]}\"\n            return\n        fi\n    done\n    if (( i == ${#a[@]} )); then\n        echo \"${a[i-1]} ${b[j+k-c-1]}\"\n    else\n        echo \"${a[i+k-c-1]} ${b[j-1]}\"\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    local d=0\n    while [ $c -lt $k ]; do\n        if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n            if [ ${a[$i]} -lt ${b[$j]} ]; then\n                d=${a[$i]}\n                i=$((i+1))\n            else\n                d=${b[$j]}\n                j=$((j+1))\n            fi\n        elif [ $i -lt ${#a[@]} ]; then\n            d=${a[$i]}\n            i=$((i+1))\n        elif [ $j -lt ${#b[@]} ]; then\n            d=${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    echo $d",
    "    local -a arr1=($1)\n    local -a arr2=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local kth=0\n    while [ $i -lt ${#arr1[@]} ] && [ $j -lt ${#arr2[@]} ]; do\n        if [ ${arr1[$i]} -lt ${arr2[$j]} ]; then\n            kth=${arr1[$i]}\n            i=$((i+1))\n        else\n            kth=${arr2[$j]}\n            j=$((j+1))\n        fi\n        if [ $i+$j -eq $k ]; then\n            break\n        fi\n    done\n    if [ $i -eq ${#arr1[@]} ]; then\n        kth=${arr2[$((j+k-i))]}\n    elif [ $j -eq ${#arr2[@]} ]; then\n        kth=${arr1[$((i+k-j))]}\n    fi\n    echo $kth",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local n=${#a[@]}\n    local m=${#b[@]}\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -lt $n ] && [ $j -lt $m ]; then\n            if [ ${a[$i]} -lt ${b[$j]} ]; then\n                ((i++))\n            else\n                ((j++))\n            fi\n        elif [ $i -lt $n ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ $i -lt $n ] && [ $j -lt $m ]; then\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n        else\n            echo ${b[$j]}\n        fi\n    elif [ $i -lt $n ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local k=\"$3\"\n\n    local len1=$(echo \"$list1\" | wc -w)\n    local len2=$(echo \"$list2\" | wc -w)\n\n    if [ $len1 -eq 0 ]; then\n        echo \"$list2\" | cut -d' ' -f$k\n    elif [ $len2 -eq 0 ]; then\n        echo \"$list1\" | cut -d' ' -f$k\n    elif [ $k -eq 1 ]; then\n        local min1=$(echo \"$list1\" | cut -d' ' -f1)\n        local min2=$(echo \"$list2\" | cut -d' ' -f1)\n        if [ $min1 -lt $min2 ]; then\n            echo $min1\n        else\n            echo $min2\n        fi\n    else\n        local mid1=$((len1 / 2))\n        local mid2=$((len2 / 2))\n        local mid=$((mid1 + mid2))\n\n        if [ $mid -lt $k ]; then\n            local new_list1=$(echo \"$list1\" | cut -d' ' -f$((mid1 + 1))-)\n            local new_list2=$(echo \"$list2\" | cut -d' ' -f$((mid2 + 1))-)\n            find_kth \"$new_list1\" \"$new_list2\" $((k - mid))\n        else\n            local new_list1=$(echo \"$list1\" | cut -d' ' -f1-$mid1)\n            local new_list2=$(echo \"$list2\" | cut -d' ' -f1-$mid2)\n            find_kth \"$new_list1\" \"$new_list2\" $k\n        fi\n    fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local kth=0\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      kth=${a[$i]}\n      i=$((i+1))\n    else\n      kth=${b[$j]}\n      j=$((j+1))\n    fi\n    k=$((k-1))\n    if [ $k -eq 0 ]; then\n      break\n    fi\n  done\n  if [ $k -gt 0 ]; then\n    if [ $i -lt ${#a[@]} ]; then\n      kth=${a[$i]}\n    else\n      kth=${b[$j]}\n    fi\n  fi\n  echo $kth",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "  local a=($1)\n  local b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=()\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      c+=(${a[$i]})\n      i=$((i+1))\n    else\n      c+=(${b[$j]})\n      j=$((j+1))\n    fi\n  done\n  if [ $i -lt ${#a[@]} ]; then\n    c+=(${a[@]:$i})\n  fi\n  if [ $j -lt ${#b[@]} ]; then\n    c+=(${b[@]:$j})\n  fi\n  echo ${c[$((k-1))]}",
    "    local a=($1)\n    local b=($2)\n    local k=$3\n\n    local i=0\n    local j=0\n    local count=0\n    while [ $count -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((count++))\n    done\n\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -ge ${#a[@]} ]; then\n            ((j++))\n        elif [ $j -ge ${#b[@]} ]; then\n            ((i++))\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ $i -ge ${#a[@]} ]; then\n        echo ${b[$j]}\n    elif [ $j -ge ${#b[@]} ]; then\n        echo ${a[$i]}\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a arr1=($1)\n    local -a arr2=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local kth=0\n    while [ $i -lt ${#arr1[@]} ] && [ $j -lt ${#arr2[@]} ]; do\n        if [ ${arr1[$i]} -lt ${arr2[$j]} ]; then\n            kth=${arr1[$i]}\n            i=$((i+1))\n        else\n            kth=${arr2[$j]}\n            j=$((j+1))\n        fi\n        if [ $((i+j)) -eq $k ]; then\n            break\n        fi\n    done\n    if [ $((i+j)) -lt $k ]; then\n        if [ $i -eq ${#arr1[@]} ]; then\n            kth=${arr2[$((k-i-1))]}\n        else\n            kth=${arr1[$((k-j-1))]}\n        fi\n    fi\n    echo $kth",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    echo ${a[$i]}",
    "    local list1=($1)\n    local list2=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local kth=0\n    while [ $i -lt ${#list1[@]} ] && [ $j -lt ${#list2[@]} ]; do\n        if [ ${list1[$i]} -lt ${list2[$j]} ]; then\n            kth=${list1[$i]}\n            i=$((i+1))\n        else\n            kth=${list2[$j]}\n            j=$((j+1))\n        fi\n        if [ $i + $j -eq $k ]; then\n            break\n        fi\n    done\n    if [ $i -eq ${#list1[@]} ]; then\n        kth=${list2[$((k-i))]}\n    elif [ $j -eq ${#list2[@]} ]; then\n        kth=${list1[$((k-j))]}\n    fi\n    echo $kth",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while (( i < ${#a[@]} && j < ${#b[@]} )); do\n    if (( a[i] < b[j] )); then\n      (( i++ ))\n    else\n      (( j++ ))\n    fi\n    (( c++ ))\n    if (( c == k )); then\n      if (( i < ${#a[@]} )); then\n        echo ${a[i]}\n      else\n        echo ${b[j]}\n      fi\n      return\n    fi\n  done\n  if (( i < ${#a[@]} )); then\n    echo ${a[i]}\n  else\n    echo ${b[j]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  if [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      echo ${b[$j]}\n      return\n    elif [ $j -eq ${#b[@]} ]; then\n      echo ${a[$i]}\n      return\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      echo ${a[$i]}\n      i=$((i+1))\n    else\n      echo ${b[$j]}\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n            if [ ${a[$i]} -lt ${b[$j]} ]; then\n                ((i++))\n            else\n                ((j++))\n            fi\n        elif [ $i -lt ${#a[@]} ]; then\n            ((i++))\n        else\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n        else\n            echo ${b[$j]}\n        fi\n    elif [ $i -lt ${#a[@]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n      if [ ${a[$i]} -lt ${b[$j]} ]; then\n        ((i++))\n      else\n        ((j++))\n      fi\n    elif [ $i -lt ${#a[@]} ]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((c++))\n  done\n  if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      echo ${a[$i]}\n    else\n      echo ${b[$j]}\n    fi\n  elif [ $i -lt ${#a[@]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      echo ${b[$j]}\n      return\n    elif [ $j -eq ${#b[@]} ]; then\n      echo ${a[$i]}\n      return\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  echo ${a[$i]}",
    "    local -a arr1=($1)\n    local -a arr2=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local m=${#arr1[@]}\n    local n=${#arr2[@]}\n    local -a arr3\n    while (( i < m && j < n ))\n    do\n        if (( arr1[i] < arr2[j] ))\n        then\n            arr3[${#arr3[@]}]=${arr1[i]}\n            (( i++ ))\n        else\n            arr3[${#arr3[@]}]=${arr2[j]}\n            (( j++ ))\n        fi\n    done\n    while (( i < m ))\n    do\n        arr3[${#arr3[@]}]=${arr1[i]}\n        (( i++ ))\n    done\n    while (( j < n ))\n    do\n        arr3[${#arr3[@]}]=${arr2[j]}\n        (( j++ ))\n    done\n    echo ${arr3[k-1]}",
    "    local list1=($1)\n    local list2=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local kth=0\n    while [ $i -lt ${#list1[@]} ] && [ $j -lt ${#list2[@]} ]; do\n        if [ ${list1[$i]} -lt ${list2[$j]} ]; then\n            kth=${list1[$i]}\n            ((i++))\n        else\n            kth=${list2[$j]}\n            ((j++))\n        fi\n        ((k--))\n        if [ $k -eq 0 ]; then\n            break\n        fi\n    done\n    if [ $k -gt 0 ]; then\n        if [ $i -lt ${#list1[@]} ]; then\n            kth=${list1[$i]}\n        else\n            kth=${list2[$j]}\n        fi\n    fi\n    echo $kth",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while ((c < k)); do\n        if ((i < ${#a[@]} && j < ${#b[@]})); then\n            if ((a[i] < b[j])); then\n                ((i++))\n            else\n                ((j++))\n            fi\n        elif ((i < ${#a[@]})); then\n            ((i++))\n        elif ((j < ${#b[@]})); then\n            ((j++))\n        else\n            break\n        fi\n        ((c++))\n    done\n    if ((i < ${#a[@]} && j < ${#b[@]})); then\n        if ((a[i] < b[j])); then\n            echo ${a[i]}\n        else\n            echo ${b[j]}\n        fi\n    elif ((i < ${#a[@]})); then\n        echo ${a[i]}\n    elif ((j < ${#b[@]})); then\n        echo ${b[j]}\n    else\n        echo \"Error: k is too large\"\n    fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while (( i < ${#a[@]} && j < ${#b[@]} )); do\n    if (( a[i] < b[j] )); then\n      (( i++ ))\n    else\n      (( j++ ))\n    fi\n    (( c++ ))\n    if (( c == k )); then\n      if (( i == ${#a[@]} )); then\n        echo ${b[j]}\n      else\n        echo ${a[i]}\n      fi\n      return\n    fi\n  done\n  if (( i == ${#a[@]} )); then\n    echo ${b[j + k - c - 1]}\n  else\n    echo ${a[i + k - c - 1]}\n  fi",
    "    local a=($1)\n    local b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=()\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            c[${#c[@]}]=${a[$i]}\n            i=$((i+1))\n        else\n            c[${#c[@]}]=${b[$j]}\n            j=$((j+1))\n        fi\n    done\n    while [ $i -lt ${#a[@]} ]; do\n        c[${#c[@]}]=${a[$i]}\n        i=$((i+1))\n    done\n    while [ $j -lt ${#b[@]} ]; do\n        c[${#c[@]}]=${b[$j]}\n        j=$((j+1))\n    done\n    echo ${c[$((k-1))]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n      if [ ${a[$i]} -lt ${b[$j]} ]; then\n        ((i++))\n      else\n        ((j++))\n      fi\n    elif [ $i -lt ${#a[@]} ]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((c++))\n  done\n  if [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; then\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      echo ${a[$i]}\n    else\n      echo ${b[$j]}\n    fi\n  elif [ $i -lt ${#a[@]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local kth=0\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      kth=${a[$i]}\n      i=$((i+1))\n    else\n      kth=${b[$j]}\n      j=$((j+1))\n    fi\n    if [ $i + $j -eq $k ]; then\n      break\n    fi\n  done\n  if [ $i -eq ${#a[@]} ]; then\n    while [ $j -lt ${#b[@]} ]; do\n      kth=${b[$j]}\n      j=$((j+1))\n      if [ $i + $j -eq $k ]; then\n        break\n      fi\n    done\n  elif [ $j -eq ${#b[@]} ]; then\n    while [ $i -lt ${#a[@]} ]; do\n      kth=${a[$i]}\n      i=$((i+1))\n      if [ $i + $j -eq $k ]; then\n        break\n      fi\n    done\n  fi\n  echo $kth",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      echo ${b[$j]}\n      return\n    elif [ $j -eq ${#b[@]} ]; then\n      echo ${a[$i]}\n      return\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  echo ${a[$i]}",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ] && [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      ((i++))\n    else\n      ((j++))\n    fi\n    ((c++))\n  done\n  if [ $c -lt $k ]; then\n    if [ $i -lt ${#a[@]} ]; then\n      ((i+=$k-$c))\n    else\n      ((j+=$k-$c))\n    fi\n  fi\n  if [ $i -lt ${#a[@]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local k=\"$3\"\n\n    local len1=$(echo \"$list1\" | wc -w)\n    local len2=$(echo \"$list2\" | wc -w)\n\n    if [ $len1 -eq 0 ]; then\n        echo \"$list2\" | cut -d' ' -f$k\n    elif [ $len2 -eq 0 ]; then\n        echo \"$list1\" | cut -d' ' -f$k\n    elif [ $k -eq 1 ]; then\n        local min1=$(echo \"$list1\" | cut -d' ' -f1)\n        local min2=$(echo \"$list2\" | cut -d' ' -f1)\n        if [ $min1 -lt $min2 ]; then\n            echo $min1\n        else\n            echo $min2\n        fi\n    else\n        local mid1=$((len1 / 2))\n        local mid2=$((len2 / 2))\n        local mid=$((mid1 + mid2))\n\n        local val1=$(echo \"$list1\" | cut -d' ' -f$mid1)\n        local val2=$(echo \"$list2\" | cut -d' ' -f$mid2)\n\n        if [ $mid -lt $k ]; then\n            if [ $val1 -lt $val2 ]; then\n                find_kth \"$(echo \"$list1\" | cut -d' ' -f$((mid1 + 1))-)\" \"$list2\" $((k - mid1 - 1))\n            else\n                find_kth \"$list1\" \"$(echo \"$list2\" | cut -d' ' -f$((mid2 + 1))-)\" $((k - mid2 - 1))\n            fi\n        else\n            if [ $val1 -lt $val2 ]; then\n                find_kth \"$list1\" \"$(echo \"$list2\" | cut -d' ' -f1-$mid2)\" $k\n            else\n                find_kth \"$(echo \"$list1\" | cut -d' ' -f1-$mid1)\" \"$list2\" $k\n            fi\n        fi\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -ge ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        fi\n        if [ $j -ge ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        fi\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${b[$j]}\n    fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local n=${#a[@]}\n  local m=${#b[@]}\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq $n ]; then\n      echo ${b[$j]}\n      break\n    elif [ $j -eq $m ]; then\n      echo ${a[$i]}\n      break\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      echo ${a[$i]}\n      i=$((i+1))\n    else\n      echo ${b[$j]}\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n\n    local i=0\n    local j=0\n    local kth=0\n\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            kth=${a[$i]}\n            i=$((i + 1))\n        else\n            kth=${b[$j]}\n            j=$((j + 1))\n        fi\n\n        k=$((k - 1))\n        if [ $k -eq 0 ]; then\n            break\n        fi\n    done\n\n    if [ $k -gt 0 ]; then\n        if [ $i -eq ${#a[@]} ]; then\n            kth=${b[$j]}\n        else\n            kth=${a[$i]}\n        fi\n    fi\n\n    echo $kth",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while ((i < ${#a[@]} && j < ${#b[@]}))\n  do\n    if ((a[i] < b[j]))\n    then\n      ((c++))\n      if ((c == k))\n      then\n        echo ${a[i]}\n        return\n      fi\n      ((i++))\n    else\n      ((c++))\n      if ((c == k))\n      then\n        echo ${b[j]}\n        return\n      fi\n      ((j++))\n    fi\n  done\n  while ((i < ${#a[@]}))\n  do\n    ((c++))\n    if ((c == k))\n    then\n      echo ${a[i]}\n      return\n    fi\n    ((i++))\n  done\n  while ((j < ${#b[@]}))\n  do\n    ((c++))\n    if ((c == k))\n    then\n      echo ${b[j]}\n      return\n    fi\n    ((j++))\n  done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    while true; do\n        if [ $i -ge ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -ge ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        fi\n        if [ $k -eq 1 ]; then\n            if [ ${a[$i]} -lt ${b[$j]} ]; then\n                echo ${a[$i]}\n            else\n                echo ${b[$j]}\n            fi\n            return\n        fi\n        local mid=$((k / 2))\n        local ai=$((i + mid - 1))\n        local bj=$((j + mid - 1))\n        if [ $ai -ge ${#a[@]} ]; then\n            bj=$((bj - (ai - ${#a[@]} + 1)))\n            ai=${#a[@]}\n        elif [ $bj -ge ${#b[@]} ]; then\n            ai=$((ai - (bj - ${#b[@]} + 1)))\n            bj=${#b[@]}\n        fi\n        if [ ${a[$ai]} -lt ${b[$bj]} ]; then\n            i=$((ai + 1))\n            k=$((k - (ai - i + 1)))\n        else\n            j=$((bj + 1))\n            k=$((k - (bj - j + 1)))\n        fi\n    done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        elif [ ${a[$i]} -lt ${b[$j]} ]; then\n            echo ${a[$i]}\n            i=$((i+1))\n        else\n            echo ${b[$j]}\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $c -lt $k ]; do\n        if [ $i -eq ${#a[@]} ]; then\n            echo ${b[$j]}\n            return\n        elif [ $j -eq ${#b[@]} ]; then\n            echo ${a[$i]}\n            return\n        fi\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            i=$((i+1))\n        else\n            j=$((j+1))\n        fi\n        c=$((c+1))\n    done\n    if [ $i -eq ${#a[@]} ]; then\n        echo ${b[$j]}\n    elif [ $j -eq ${#b[@]} ]; then\n        echo ${a[$i]}\n    else\n        echo ${a[$i]}\n    fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n        if [ ${a[$i]} -lt ${b[$j]} ]; then\n            if [ $c -eq $k ]; then\n                echo ${a[$i]}\n                return\n            fi\n            ((i++))\n        else\n            if [ $c -eq $k ]; then\n                echo ${b[$j]}\n                return\n            fi\n            ((j++))\n        fi\n        ((c++))\n    done\n    if [ $i -lt ${#a[@]} ]; then\n        echo ${a[$((k-c))]}\n    else\n        echo ${b[$((k-c))]}\n    fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ $i -eq ${#a[@]} ]; then\n      echo ${b[$j]}\n      return\n    elif [ $j -eq ${#b[@]} ]; then\n      echo ${a[$i]}\n      return\n    elif [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  if [ $i -eq ${#a[@]} ]; then\n    echo ${b[$j]}\n  elif [ $j -eq ${#b[@]} ]; then\n    echo ${a[$i]}\n  elif [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "    local -a a=($1)\n    local -a b=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local c=0\n    while (( c < k )); do\n        if (( i < ${#a[@]} && j < ${#b[@]} )); then\n            if (( a[i] < b[j] )); then\n                (( i++ ))\n            else\n                (( j++ ))\n            fi\n        elif (( i < ${#a[@]} )); then\n            (( i++ ))\n        elif (( j < ${#b[@]} )); then\n            (( j++ ))\n        fi\n        (( c++ ))\n    done\n    if (( i < ${#a[@]} && j < ${#b[@]} )); then\n        if (( a[i] < b[j] )); then\n            echo ${a[i]}\n        else\n            echo ${b[j]}\n        fi\n    elif (( i < ${#a[@]} )); then\n        echo ${a[i]}\n    elif (( j < ${#b[@]} )); then\n        echo ${b[j]}\n    fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i+1))\n    else\n      j=$((j+1))\n    fi\n    c=$((c+1))\n  done\n  if [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "  local -a a=($1)\n  local -a b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=0\n  while [ $c -lt $k ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      i=$((i + 1))\n    else\n      j=$((j + 1))\n    fi\n    c=$((c + 1))\n  done\n  if [ ${a[$i]} -lt ${b[$j]} ]; then\n    echo ${a[$i]}\n  else\n    echo ${b[$j]}\n  fi",
    "    local -a array1=($1)\n    local -a array2=($2)\n    local k=$3\n    local i=0\n    local j=0\n    local kth=0\n    while [ $i -lt ${#array1[@]} ] && [ $j -lt ${#array2[@]} ]; do\n        if [ ${array1[$i]} -lt ${array2[$j]} ]; then\n            kth=${array1[$i]}\n            ((i++))\n        else\n            kth=${array2[$j]}\n            ((j++))\n        fi\n        ((k--))\n        if [ $k -eq 0 ]; then\n            break\n        fi\n    done\n    if [ $k -gt 0 ]; then\n        if [ $i -lt ${#array1[@]} ]; then\n            kth=${array1[$i]}\n        else\n            kth=${array2[$j]}\n        fi\n    fi\n    echo $kth",
    "  local a=($1)\n  local b=($2)\n  local k=$3\n  local i=0\n  local j=0\n  local c=()\n  while [ $i -lt ${#a[@]} ] && [ $j -lt ${#b[@]} ]; do\n    if [ ${a[$i]} -lt ${b[$j]} ]; then\n      c+=(${a[$i]})\n      i=$((i+1))\n    else\n      c+=(${b[$j]})\n      j=$((j+1))\n    fi\n  done\n  while [ $i -lt ${#a[@]} ]; do\n    c+=(${a[$i]})\n    i=$((i+1))\n  done\n  while [ $j -lt ${#b[@]} ]; do\n    c+=(${b[$j]})\n    j=$((j+1))\n  done\n  echo ${c[$((k-1))]}"
  ]
}
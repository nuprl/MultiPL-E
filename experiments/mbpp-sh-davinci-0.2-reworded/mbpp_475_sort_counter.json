{
  "name": "mbpp_475_sort_counter",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to sort a CSV by value.\n#\n# $1 is a two column CSV in key,value order\nsort_counter() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_475_sort_counter.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    sort_counter \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Math,81\\nPhysics,83\\nChemistry,87\") = \"Chemistry 87\\nPhysics 83\\nMath 81\" ]]\n    [[ $(candidate \"Math,400\\nPhysics,300\\nChemistry,250\") = \"Math 400\\nPhysics 300\\nChemistry 250\" ]]\n    [[ $(candidate \"Math,900\\nPhysics,1000\\nChemistry,1250\") = \"Chemistry 1250\\nPhysics 1000\\nMath 900\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r",
    "  awk -F, '{print $2 \",\" $1}' $1 | sort -t, -n -r | awk -F, '{print $2 \",\" $1}'",
    "  sort -t, -k2,2nr -k1,1",
    "    sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "    local csv=\"$1\"\n    local tmpfile=$(mktemp)\n    local tmpfile2=$(mktemp)\n    local tmpfile3=$(mktemp)\n    local tmpfile4=$(mktemp)\n    local tmpfile5=$(mktemp)\n    local tmpfile6=$(mktemp)\n    local tmpfile7=$(mktemp)\n    local tmpfile8=$(mktemp)\n    local tmpfile9=$(mktemp)\n    local tmpfile10=$(mktemp)\n    local tmpfile11=$(mktemp)\n    local tmpfile12=$(mktemp)\n    local tmpfile13=$(mktemp)\n    local tmpfile14=$(mktemp)\n    local tmpfile15=$(mktemp)\n    local tmpfile16=$(mktemp)\n    local tmpfile17=$(mktemp)\n    local tmpfile18=$(mktemp)\n    local tmpfile19=$(mktemp)\n    local tmpfile20=$(mktemp)\n    local tmpfile21=$(mktemp)\n    local tmpfile22=$(mktemp)\n    local tmpfile23=$(mktemp)\n    local tmpfile24=$(mktemp)\n    local tmpfile25=$(mktemp)\n    local tmpfile26=$(mktemp)\n    local tmpfile27=$(mktemp)\n    local tmpfile28=$(mktemp)\n    local tmpfile29=$(mktemp)\n    local tmpfile30=$(mktemp)\n    local tmpfile31=$(mktemp)\n    local tmpfile32=$(mktemp)\n    local tmpfile33=$(mktemp)\n    local tmpfile34=$(mktemp)\n    local tmpfile35=$(mktemp)\n    local tmpfile36=$(mktemp)\n    local tmpfile37=$(mktemp)\n    local tmpfile38=$(mktemp)\n    local tmpfile39=$(mktemp)\n    local tmpfile40=$(mktemp)\n    local tmpfile41=$(mktemp)\n    local tmpfile42=$(mktemp)\n    local tmpfile43=$(mktemp)\n    local tmpfile44=$(mktemp)\n    local tmpfile45=$(mktemp)\n    local tmpfile46=$(mk",
    "    local csv=$1\n    local tmp=$(mktemp)\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t, -k2,2rn\"\n    local sort_cmd=\"sort -t",
    "    sort -t, -k2 -n -r $1",
    "    sort -t, -k2,2nr -k1,1",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "  local csv=$1\n  local sorted=$(mktemp)\n  sort -t, -k2 -n -r $csv > $sorted\n  echo $sorted",
    "    sort -t, -k2 -n -r",
    "  # Sort the CSV by value\n  sort -t, -k2 -n -r $1",
    "  local csv=\"$1\"\n  local tmp=\"$(mktemp)\"\n  local tmp2=\"$(mktemp)\"\n  local tmp3=\"$(mktemp)\"\n  local tmp4=\"$(mktemp)\"\n  local tmp5=\"$(mktemp)\"\n  local tmp6=\"$(mktemp)\"\n  local tmp7=\"$(mktemp)\"\n  local tmp8=\"$(mktemp)\"\n  local tmp9=\"$(mktemp)\"\n  local tmp10=\"$(mktemp)\"\n  local tmp11=\"$(mktemp)\"\n  local tmp12=\"$(mktemp)\"\n  local tmp13=\"$(mktemp)\"\n  local tmp14=\"$(mktemp)\"\n  local tmp15=\"$(mktemp)\"\n  local tmp16=\"$(mktemp)\"\n  local tmp17=\"$(mktemp)\"\n  local tmp18=\"$(mktemp)\"\n  local tmp19=\"$(mktemp)\"\n  local tmp20=\"$(mktemp)\"\n  local tmp21=\"$(mktemp)\"\n  local tmp22=\"$(mktemp)\"\n  local tmp23=\"$(mktemp)\"\n  local tmp24=\"$(mktemp)\"\n  local tmp25=\"$(mktemp)\"\n  local tmp26=\"$(mktemp)\"\n  local tmp27=\"$(mktemp)\"\n  local tmp28=\"$(mktemp)\"\n  local tmp29=\"$(mktemp)\"\n  local tmp30=\"$(mktemp)\"\n  local tmp31=\"$(mktemp)\"\n  local tmp32=\"$(mktemp)\"\n  local tmp33=\"$(mktemp)\"\n  local tmp34=\"$(mktemp)\"\n  local tmp35=\"$(mktemp)\"\n  local tmp36=\"$(mktemp)\"\n  local tmp37=\"$(mktemp)\"\n  local tmp38=\"$(mktemp)\"\n  local tmp39=\"$(mktemp)\"\n  local tmp40=\"$(mktemp)\"\n  local tmp41=\"$(mktemp)\"\n  local tmp42=\"$(mktemp)\"\n  local tmp43=\"$(mktemp)\"\n  local tmp44=\"$(mktemp)\"\n  local tmp45=\"$(mktemp)\"\n  local tmp46=\"$(mk",
    "    cat $1 | sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r",
    "    sort -t, -k2,2nr -k1,1",
    "  sort -t, -k2 -n -r $1",
    "    sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r",
    "    local -r csv=\"$1\"\n    local -r tmp=\"$(mktemp)\"\n    local -r tmp2=\"$(mktemp)\"\n    local -r tmp3=\"$(mktemp)\"\n    local -r tmp4=\"$(mktemp)\"\n    local -r tmp5=\"$(mktemp)\"\n\n    # Sort by value\n    cut -d, -f2 \"$csv\" | sort -n > \"$tmp\"\n    # Get the unique values\n    uniq \"$tmp\" > \"$tmp2\"\n    # Get the number of unique values\n    wc -l \"$tmp2\" > \"$tmp3\"\n    # Get the number of unique values\n    cut -d' ' -f1 \"$tmp3\" > \"$tmp4\"\n    # Get the number of unique values\n    cat \"$tmp4\" > \"$tmp5\"\n    # Get the number of unique values\n    local -r num_unique=\"$(cat \"$tmp5\")\"\n\n    # Get the unique values\n    cat \"$tmp2\" > \"$tmp3\"\n    # Get the unique values\n    cat \"$tmp3\" > \"$tmp4\"\n    # Get the unique values\n    cat \"$tmp4\" > \"$tmp5\"\n    # Get the unique values\n    local -r unique_values=\"$(cat \"$tmp5\")\"\n\n    # Get the unique values\n    cat \"$tmp2\" > \"$tmp3\"\n    # Get the unique values\n    cat \"$tmp3\" > \"$tmp4\"\n    # Get the unique values\n    cat \"$tmp4\" > \"$tmp5\"\n    # Get the unique values\n    local -r unique_values=\"$(cat \"$tmp5\")\"\n\n    # Get the unique values\n    cat \"$tmp2\" > \"$tmp3\"\n    # Get the unique values\n    cat \"$tmp3\" > \"$tmp4\"\n    # Get the unique values\n    cat \"$tmp4\" > \"$tmp5\"\n    # Get the unique values\n    local -r unique_values=\"$(cat \"$tmp5\")\"\n\n    # Get the unique values\n    cat \"$tmp2\" > \"$tmp3\"\n    # Get the unique values\n    cat \"$tmp3\" > \"$tmp4\"\n    # Get the unique values\n    cat \"$tmp",
    "    sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2nr,2",
    "  sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r \"$1\"",
    "    sort -t, -k2 -r -n $1",
    "  sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r $1",
    "  cat $1 | sort -t, -k2 -nr",
    "    sort -t, -k2 -n -r",
    "    cat $1 | sort -t, -k2 -n -r",
    "  awk -F, '{print $2 \",\" $1}' $1 | sort -n | awk -F, '{print $2 \",\" $1}'",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r",
    "    sort -t, -k2,2nr -k1,1",
    "    sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r",
    "  cat $1 | sort -t, -k2 -n -r",
    "  cat $1 | sort -t, -k2 -n -r",
    "  cat $1 | sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2nr,2 -k1,1",
    "    sort -t',' -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r -o $1 $1",
    "  cat $1 | sort -t, -k2 -n -r",
    "  local csv=\"$1\"\n  local tmp=\"$(mktemp)\"\n  local sort_cmd=\"sort -t, -k2 -n -r\"\n  local header=\"$(head -n1 \"$csv\")\"\n  tail -n+2 \"$csv\" | $sort_cmd > \"$tmp\"\n  echo \"$header\"\n  cat \"$tmp\"\n  rm \"$tmp\"",
    "  sort -t, -k2,2nr",
    "  sort -t, -k2 -n -r -o \"$1\" \"$1\"",
    "  sort -t, -k2 -n -r",
    "    sort -t, -k2 -rn",
    "  sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r \"$1\"",
    "  local csv=\"$1\"\n  local sorted=\"$(mktemp)\"\n  sort -t, -k2 -n -r \"$csv\" > \"$sorted\"\n  cat \"$sorted\"\n  rm \"$sorted\"",
    "  local csv=\"$1\"\n  local tmp=$(mktemp)\n  local sorted=$(mktemp)\n  local key\n  local value\n  local total=0\n  while read key value; do\n    total=$((total + value))\n    echo \"$value $key\" >> $tmp\n  done < $csv\n  sort -nr $tmp > $sorted\n  while read value key; do\n    echo \"$key,$value\"\n  done < $sorted\n  echo \"total,$total\"\n  rm $tmp $sorted",
    "  cat $1 | sort -t, -k2 -n -r | sed -e 's/^/\\t/'",
    "  sort -t, -k2 -n -r $1",
    "    sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r",
    "  local file=$1\n  local tmp=$(mktemp)\n  local tmp2=$(mktemp)\n  local tmp3=$(mktemp)\n  # Sort by value\n  sort -t, -k2,2nr $file > $tmp\n  # Sort by key\n  sort -t, -k1,1 $tmp > $tmp2\n  # Remove the header\n  tail -n +2 $tmp2 > $tmp3\n  # Add the header back\n  cat $tmp3 > $file\n  rm $tmp $tmp2 $tmp3",
    "    sort -t, -k2 -n -r",
    "  sort -t, -k2,2nr -k1,1",
    "    sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -nr",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -rn $1",
    "    sort -t',' -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "    sort -t, -k2 -n -r",
    "  sort -t, -k2,2nr -k1,1",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "  local csv=\"$1\"\n  local tmpfile=$(mktemp)\n  local sort_cmd=\"sort -t, -k2,2nr -k1,1\"\n  # Sort the CSV, but if the values are the same, sort by key\n  cat \"$csv\" | $sort_cmd > \"$tmpfile\"\n  cat \"$tmpfile\"\n  rm \"$tmpfile\"",
    "    sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r $1",
    "    sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "  awk -F, '{print $2 \",\" $1}' $1 | sort -t, -n -r | awk -F, '{print $2 \",\" $1}'",
    "    sort -t, -k2,2n -k1,1",
    "  cat $1 | sort -t',' -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "  cat $1 | sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r $1",
    "    local file=\"$1\"\n    local tmpfile=\"$(mktemp)\"\n    local sort_command=\"sort -t, -k2,2nr -k1,1\"\n    if [ -f \"$file\" ]; then\n        # Sort the file\n        $sort_command \"$file\" > \"$tmpfile\"\n        # Replace the original file with the sorted file\n        mv \"$tmpfile\" \"$file\"\n    fi",
    "  sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "  sort -t, -k2,2nr -k1,1",
    "  sort -t, -k2 -n -r",
    "  cat $1 | sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "  local csv=\"$1\"\n  local tmpfile=$(mktemp)\n  # Sort the CSV by value\n  sort -t, -k2 -n -r \"$csv\" > \"$tmpfile\"\n  # Print the CSV\n  cat \"$tmpfile\"\n  # Remove the temporary file\n  rm \"$tmpfile\"",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r",
    "    sort -t, -k2 -nr",
    "  cat $1 | sort -t, -k2 -nr",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "    sort -t, -k2 -n -r",
    "  cat $1 | sort -t, -k2 -n -r",
    "  awk -F, '{print $2 \",\" $1}' $1 | sort -nr | awk -F, '{print $2 \",\" $1}'",
    "    sort -t, -k2 -n -r $1",
    "    sort -t, -k2 -n -r -o \"$1\" \"$1\"",
    "  sort -t, -k2 -nr -o \"$1\" \"$1\"",
    "    local csv=\"$1\"\n    local key_col=1\n    local val_col=2\n    local sort_col=${val_col}\n    local sort_order=\"-n\"\n    local sort_cmd=\"sort ${sort_order} -k ${sort_col},${sort_col}\"\n    local awk_cmd=\"awk -F, '{print \\$${key_col},\\$${val_col}}'\"\n    local cmd=\"${awk_cmd} ${csv} | ${sort_cmd}\"\n    eval ${cmd}",
    "  cat $1 | sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "  sort -t, -k2,2nr -k1,1",
    "    sort -t, -k2 -n -r $1",
    "    local csv=\"$1\"\n    local tmpfile=\"$(mktemp)\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -t, -k2,2rn -k1,1\"\n    local sort_cmd=\"sort -",
    "    sort -t, -k2 -n -r",
    "  if [ -z \"$1\" ]; then\n    echo \"Usage: sort_counter <csv>\"\n    return 1\n  fi\n  sort -t, -k2 -n -r $1",
    "    sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "  sort -t, -k2nr,2 $1",
    "  sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r \"$1\"",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r",
    "  cat $1 | sort -t, -k2 -n -r",
    "  sort -t , -k 2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r",
    "  local csv=\"$1\"\n  local sorted_csv=$(mktemp)\n  local sorted_csv_sorted=$(mktemp)\n  local sorted_csv_sorted_sorted=$(mktemp)\n  local sorted_csv_sorted_sorted_sorted=$(mktemp)\n  local sorted_csv_sorted_sorted_sorted_sorted=$(mktemp)\n  local sorted_csv_sorted_sorted_sorted_sorted_sorted=$(mktemp)\n  local sorted_csv_sorted_sorted_sorted_sorted_sorted_sorted=$(mktemp)\n  local sorted_csv_sorted_sorted_sorted_sorted_sorted_sorted_sorted=$(mktemp)\n  local sorted_csv_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=$(mktemp)\n  local sorted_csv_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=$(mktemp)\n  local sorted_csv_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=$(mktemp)\n  local sorted_csv_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=$(mktemp)\n  local sorted_csv_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=$(mktemp)\n  local sorted_csv_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=$(mktemp)\n  local sorted_csv_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=$(mktemp)\n  local sorted_csv_sorted_sorted_sorted_sorted_sorted_s",
    "    sort -t, -k2nr,2 \"$1\"",
    "  sort -t, -k2 -n -r",
    "  cat $1 | sort -t, -k2 -n -r",
    "  local csv=\"$1\"\n  local tmp=\"$(mktemp)\"\n  local sorted=\"$(mktemp)\"\n  local key\n  local value\n  while read key value; do\n    echo \"$value $key\" >> \"$tmp\"\n  done < \"$csv\"\n  sort -nr \"$tmp\" > \"$sorted\"\n  while read value key; do\n    echo \"$key,$value\"\n  done < \"$sorted\"\n  rm \"$tmp\"\n  rm \"$sorted\"",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "    cat $1 | sort -t, -k2 -n -r",
    "  local input=\"$1\"\n  local output=\"$2\"\n  local tmpfile=\"$(mktemp)\"\n  local tmpfile2=\"$(mktemp)\"\n  local tmpfile3=\"$(mktemp)\"\n  local tmpfile4=\"$(mktemp)\"\n  local tmpfile5=\"$(mktemp)\"\n\n  # Sort by value\n  sort -t, -k2 -n -r \"$input\" > \"$tmpfile\"\n\n  # Sort by key\n  sort -t, -k1 \"$tmpfile\" > \"$tmpfile2\"\n\n  # Remove duplicates\n  uniq \"$tmpfile2\" > \"$tmpfile3\"\n\n  # Sort by value\n  sort -t, -k2 -n -r \"$tmpfile3\" > \"$tmpfile4\"\n\n  # Sort by key\n  sort -t, -k1 \"$tmpfile4\" > \"$tmpfile5\"\n\n  # Remove duplicates\n  uniq \"$tmpfile5\" > \"$output\"\n\n  rm \"$tmpfile\" \"$tmpfile2\" \"$tmpfile3\" \"$tmpfile4\" \"$tmpfile5\"",
    "    sort -t, -k2 -nr",
    "    cat $1 | sort -t',' -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "  cat $1 | sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "    sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "  cat $1 | sort -t, -k2 -n -r",
    "  sort -t, -k2,2nr -k1,1",
    "  awk -F, '{print $2 \",\" $1}' $1 | sort -t, -n -r | awk -F, '{print $2 \",\" $1}'",
    "  sort -t, -k2 -n -r",
    "  local csv=\"$1\"\n  local tmp=\"$(mktemp)\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"sort -t, -k2,2nr\"\n  local sort_cmd=\"",
    "    sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2,2nr -k1,1",
    "  sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r $1",
    "  sort -t, -k2 -n -r $1",
    "    local csv=\"$1\"\n    local tmpfile=$(mktemp)\n    local tmpfile2=$(mktemp)\n    local tmpfile3=$(mktemp)\n    local tmpfile4=$(mktemp)\n    local tmpfile5=$(mktemp)\n    local tmpfile6=$(mktemp)\n    local tmpfile7=$(mktemp)\n    local tmpfile8=$(mktemp)\n    local tmpfile9=$(mktemp)\n    local tmpfile10=$(mktemp)\n    local tmpfile11=$(mktemp)\n    local tmpfile12=$(mktemp)\n    local tmpfile13=$(mktemp)\n    local tmpfile14=$(mktemp)\n    local tmpfile15=$(mktemp)\n    local tmpfile16=$(mktemp)\n    local tmpfile17=$(mktemp)\n    local tmpfile18=$(mktemp)\n    local tmpfile19=$(mktemp)\n    local tmpfile20=$(mktemp)\n    local tmpfile21=$(mktemp)\n    local tmpfile22=$(mktemp)\n    local tmpfile23=$(mktemp)\n    local tmpfile24=$(mktemp)\n    local tmpfile25=$(mktemp)\n    local tmpfile26=$(mktemp)\n    local tmpfile27=$(mktemp)\n    local tmpfile28=$(mktemp)\n    local tmpfile29=$(mktemp)\n    local tmpfile30=$(mktemp)\n    local tmpfile31=$(mktemp)\n    local tmpfile32=$(mktemp)\n    local tmpfile33=$(mktemp)\n    local tmpfile34=$(mktemp)\n    local tmpfile35=$(mktemp)\n    local tmpfile36=$(mktemp)\n    local tmpfile37=$(mktemp)\n    local tmpfile38=$(mktemp)\n    local tmpfile39=$(mktemp)\n    local tmpfile40=$(mktemp)\n    local tmpfile41=$(mktemp)\n    local tmpfile42=$(mktemp)\n    local tmpfile43=$(mktemp)\n    local tmpfile44=$(mktemp)\n    local tmpfile45=$(mktemp)\n    local tmpfile46=$(mk",
    "    awk -F, '{print $2 \",\" $1}' $1 | sort -t, -n -r | awk -F, '{print $2 \",\" $1}'",
    "  sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "    sort -t, -k2 -n -r",
    "    sort -t, -k2,2nr -k1,1",
    "    sort -t, -k2 -n -r",
    "  sort -t, -k2 -n -r",
    "  local csv=\"$1\"\n  local tmp=$(mktemp)\n  local tmp2=$(mktemp)\n  local tmp3=$(mktemp)\n  local tmp4=$(mktemp)\n\n  # Sort by value\n  cut -d, -f2 \"$csv\" | sort -n > \"$tmp\"\n  # Get the keys\n  cut -d, -f1 \"$csv\" > \"$tmp2\"\n  # Get the values\n  cut -d, -f2 \"$csv\" > \"$tmp3\"\n  # Join them\n  paste -d, \"$tmp2\" \"$tmp3\" > \"$tmp4\"\n  # Sort by key\n  sort -t, -k1,1 \"$tmp4\" > \"$tmp\"\n  # Get the keys\n  cut -d, -f1 \"$tmp\" > \"$tmp2\"\n  # Get the values\n  cut -d, -f2 \"$tmp\" > \"$tmp3\"\n  # Join them\n  paste -d, \"$tmp2\" \"$tmp3\" > \"$tmp4\"\n  # Sort by value\n  sort -t, -k2,2n \"$tmp4\" > \"$tmp\"\n  # Get the keys\n  cut -d, -f1 \"$tmp\" > \"$tmp2\"\n  # Get the values\n  cut -d, -f2 \"$tmp\" > \"$tmp3\"\n  # Join them\n  paste -d, \"$tmp2\" \"$tmp3\" > \"$tmp4\"\n  # Sort by key\n  sort -t, -k1,1 \"$tmp4\" > \"$tmp\"\n  # Get the keys\n  cut -d, -f1 \"$tmp\" > \"$tmp2\"\n  # Get the values\n  cut -d, -f2 \"$tmp\" > \"$tmp3\"\n  # Join them\n  paste -d, \"$tmp2\" \"$tmp3\" > \"$tmp4\"\n  # Sort by value\n  sort -t, -k2,2n \"$tmp4\" > \"$tmp\"\n  # Get the keys\n  cut -d, -f1 \"$tmp\" > \"$tmp2\"\n  # Get the values\n  cut -d, -f2 \"$tmp\" > \"$tmp3\"\n  # Join them\n  paste -d",
    "  cat $1 | sort -t, -k2 -n -r",
    "  awk -F, '{print $2 \",\" $1}' $1 | sort -n",
    "    sort -t, -k2 -n -r"
  ]
}
{
  "name": "mbpp_770_odd_num_sum",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find the sum of fourth power of first n odd natural numbers.\n#\n# $1 is an integer\nodd_num_sum() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_770_odd_num_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    odd_num_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"82\" ]]\n    [[ $(candidate \"3\") = \"707\" ]]\n    [[ $(candidate \"4\") = \"3108\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if [ $1 -lt 1 ]\n    then\n        echo \"Error: Only positive numbers are allowed\"\n        return 1\n    fi\n    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        sum=$(( $sum + $(( 2 * $i - 1 ))**4 ))\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++)); do\n        if [ $((i%2)) -ne 0 ]; then\n            sum=$((sum+i**4))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++))\n    do\n        if [ $((i%2)) -ne 0 ]\n        then\n            sum=$((sum+i**4))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    local i=1\n    while [ $i -le $1 ]; do\n        if [ $((i % 2)) -ne 0 ]; then\n            sum=$((sum + i**4))\n        fi\n        i=$((i + 1))\n    done\n    echo $sum",
    "\tlocal n=$1\n\tlocal sum=0\n\tlocal i=1\n\twhile [ $i -le $n ]\n\tdo\n\t\tif [ $((i%2)) -ne 0 ]\n\t\tthen\n\t\t\tsum=$((sum+((i**4))))\n\t\tfi\n\t\ti=$((i+1))\n\tdone\n\techo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++))\n    do\n        if [[ $((i%2)) -eq 1 ]]\n        then\n            sum=$((sum + i**4))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++))\n    do\n        if ((i%2 != 0))\n        then\n            sum=$((sum + i**4))\n        fi\n    done\n    echo $sum",
    "  local sum=0\n  for ((i=1; i<=$1; i++))\n  do\n    if ((i%2==1))\n    then\n      sum=$((sum+i**4))\n    fi\n  done\n  echo $sum",
    "\tsum=0\n\tfor (( i=1; i<=$1; i++ ))\n\tdo\n\t\tif [ $((i%2)) -ne 0 ]\n\t\tthen\n\t\t\tsum=$((sum+i**4))\n\t\tfi\n\tdone\n\techo $sum",
    "\tlocal sum=0\n\tfor ((i=1; i<=$1; i++))\n\tdo\n\t\tif [ $((i%2)) -ne 0 ]\n\t\tthen\n\t\t\tsum=$((sum+((i**4))))\n\t\tfi\n\tdone\n\techo $sum",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n\n    if ! [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n    fi\n\n    if [ $1 -eq 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    local sum=0\n    for (( i=1; i<=$1; i++ )); do\n        if [ $((i%2)) -eq 1 ]; then\n            sum=$((sum + i**4))\n        fi\n    done\n\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++))\n    do\n        if [ $(($i%2)) -ne 0 ]\n        then\n            sum=$(($sum+$i**4))\n        fi\n    done\n    echo $sum",
    "\tlocal sum=0\n\tfor (( i=1; i<=$1; i++ ))\n\tdo\n\t\tif [ $(( i%2 )) -ne 0 ]\n\t\tthen\n\t\t\tsum=$(( sum+((i**4)) ))\n\t\tfi\n\tdone\n\techo $sum",
    "  local sum=0\n  for ((i=1; i<=$1; i++))\n  do\n    if [ $((i%2)) -ne 0 ]\n    then\n      sum=$((sum+i**4))\n    fi\n  done\n  echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++)); do\n        if [ $((i % 2)) -ne 0 ]; then\n            sum=$((sum + i**4))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    local i=1\n    while [ $i -le $1 ]; do\n        if [ $((i%2)) -ne 0 ]; then\n            sum=$((sum+i**4))\n        fi\n        i=$((i+1))\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++)); do\n        if [ $((i%2)) -ne 0 ]; then\n            sum=$((sum+i**4))\n        fi\n    done\n    echo $sum",
    "\tlocal sum=0\n\tfor (( i=1; i<=$1; i++ ))\n\tdo\n\t\tif [ $(( i % 2 )) -ne 0 ]\n\t\tthen\n\t\t\tsum=$(( sum + (i**4) ))\n\t\tfi\n\tdone\n\techo $sum",
    "\tlocal sum=0\n\tfor (( i=1; i<=$1; i++ ))\n\tdo\n\t\tif [ $(( i % 2 )) -ne 0 ]\n\t\tthen\n\t\t\tsum=$(( sum + i**4 ))\n\t\tfi\n\tdone\n\techo $sum",
    "  local n=$1\n  local sum=0\n  local i=1\n  while [ $i -le $n ]\n  do\n    if [ $((i % 2)) -ne 0 ]\n    then\n      sum=$((sum + i**4))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum"
  ]
}
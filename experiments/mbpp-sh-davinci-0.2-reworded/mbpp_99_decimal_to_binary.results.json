{
  "name": "mbpp_99_decimal_to_binary",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_99_decimal_to_binary.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        local remainder=$((decimal % 2))\n        binary=\"$remainder$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=$1\n  local binary=''\n  local remainder=0\n  local quotient=0\n\n  while [[ $number -gt 0 ]]; do\n    remainder=$(( number % 2 ))\n    quotient=$(( number / 2 ))\n    number=$quotient\n    binary=\"$remainder$binary\"\n  done\n\n  echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local number=$1\n    local binary=\"\"\n\n    while [ $number -gt 0 ]; do\n        local remainder=$(( number % 2 ))\n        number=$(( number / 2 ))\n        binary=\"$remainder$binary\"\n    done\n\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local -i decimal=$1\n    local -i remainder\n    local -i quotient\n    local -i i=0\n    local -i j\n    local -a binary\n    local -a binary_reverse\n\n    while (( decimal > 0 )); do\n        (( quotient = decimal / 2 ))\n        (( remainder = decimal % 2 ))\n        binary[i]=$remainder\n        (( i++ ))\n        decimal=$quotient\n    done\n\n    for (( j=i-1; j>=0; j-- )); do\n        binary_reverse[i-j-1]=${binary[j]}\n    done\n\n    echo \"${binary_reverse[@]}\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local binary=\"\"\n    while [ $n -gt 0 ]; do\n        binary=\"$((n % 2))$binary\"\n        n=$((n / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=\"\"\n    while [ $n -gt 0 ]; do\n        result=\"$((n%2))$result\"\n        n=$((n/2))\n    done\n    echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=\"\"\n    while [ $n -gt 0 ]; do\n        result=\"$((n % 2))$result\"\n        n=$((n / 2))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=''\n    while ((n > 0)); do\n        result=\"$((n % 2))$result\"\n        n=$((n / 2))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=$1\n  local result=''\n  while [ $number -gt 0 ]; do\n    result=\"$(( number % 2 ))$result\"\n    number=$(( number / 2 ))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local binary=\"\"\n    while [ $n -gt 0 ]; do\n        binary=\"$((n % 2))$binary\"\n        n=$((n / 2))\n    done\n    echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local dec=$1\n    local bin=''\n    while [ $dec -gt 0 ]; do\n        bin=$((dec % 2))$bin\n        dec=$((dec / 2))\n    done\n    echo $bin\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local number=$1\n    local result=\"\"\n    while [ $number -gt 0 ]; do\n        local remainder=$(( number % 2 ))\n        result=\"$remainder$result\"\n        number=$(( number / 2 ))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while (( decimal > 0 )); do\n    local remainder=$(( decimal % 2 ))\n    binary=\"$remainder$binary\"\n    decimal=$(( decimal / 2 ))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=$1\n  local binary=''\n  while [ $number -gt 0 ]; do\n    binary=\"$(( number % 2 ))$binary\"\n    number=$(( number / 2 ))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=\"\"\n    while [ $n -gt 0 ]; do\n        result=$((n % 2))$result\n        n=$((n / 2))\n    done\n    echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local -i decimal=$1\n    local -i remainder\n    local -i quotient\n    local binary=\"\"\n\n    while (( decimal > 0 )); do\n        remainder=$(( decimal % 2 ))\n        decimal=$(( decimal / 2 ))\n        binary=\"$remainder$binary\"\n    done\n\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=''\n  while ((n > 0)); do\n    result=\"$((n % 2))$result\"\n    n=$((n / 2))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local -i decimal=$1\n  local -i remainder\n  local -i quotient\n  local -i i=0\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    remainder=$((decimal % 2))\n    decimal=$((decimal / 2))\n    binary=\"${remainder}${binary}\"\n  done\n  echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local binary=\"\"\n    while (( n > 0 )); do\n        binary=\"$(( n % 2 ))$binary\"\n        n=$(( n / 2 ))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=''\n  while (( n > 0 )); do\n    result=\"$(( n % 2 ))$result\"\n    (( n /= 2 ))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local -i n=$1\n    local -i r\n    local -i q\n    local -i b=0\n    local -i i=1\n    local -i j\n    local -i k\n    local -i m\n    local -i bin=0\n\n    while [ $n -gt 0 ]; do\n        r=$((n%2))\n        n=$((n/2))\n        bin=$((bin+r*i))\n        i=$((i*10))\n    done\n\n    echo $bin\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    local remainder=$((decimal % 2))\n    binary=\"$remainder$binary\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local -i dec=$1\n    local -i rem\n    local -i bin=0\n    local -i i=1\n\n    while [ $dec -gt 0 ]; do\n        rem=$((dec % 2))\n        dec=$((dec / 2))\n        bin=$((bin + rem * i))\n        i=$((i * 10))\n    done\n\n    echo $bin\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local number=$1\n    local binary=\"\"\n    while [ $number -gt 0 ]; do\n        binary=\"$((number % 2))$binary\"\n        number=$((number / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local number=$1\n    local binary=\"\"\n\n    while [ $number -gt 0 ]; do\n        binary=\"$((number % 2))$binary\"\n        number=$((number / 2))\n    done\n\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local number=$1\n    local binary=''\n    while (( number > 0 )); do\n        local remainder=$(( number % 2 ))\n        binary=\"${remainder}${binary}\"\n        number=$(( number / 2 ))\n    done\n    echo \"${binary}\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local binary=\"\"\n    while [ $n -gt 0 ]; do\n        binary=\"$((n % 2))$binary\"\n        n=$((n / 2))\n    done\n    echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local -i n=$1\n  local -i r\n  local -i i=0\n  local -i j\n  local -a b\n  while (( n > 0 )); do\n    (( r = n % 2 ))\n    (( n = n / 2 ))\n    b[i++]=$r\n  done\n  for (( j = i - 1; j >= 0; j-- )); do\n    echo -n \"${b[j]}\"\n  done\n  echo\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  local remainder=0\n\n  while [ $decimal -gt 0 ]; do\n    remainder=$((decimal % 2))\n    decimal=$((decimal / 2))\n    binary=\"$remainder$binary\"\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local binary=\"\"\n  while [ $n -gt 0 ]; do\n    binary=\"$((n%2))$binary\"\n    n=$((n/2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    local remainder=$((decimal % 2))\n    binary=\"$remainder$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=\"\"\n    while (( n > 0 )); do\n        result=\"$(( n % 2 ))$result\"\n        n=$(( n / 2 ))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local -i decimal=$1\n  local -i remainder\n  local binary=\"\"\n\n  while (( decimal > 0 )); do\n    (( remainder = decimal % 2 ))\n    (( decimal = decimal / 2 ))\n    binary=\"${remainder}${binary}\"\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=\"\"\n  while [ $n -gt 0 ]; do\n    result=\"$((n % 2))$result\"\n    n=$((n / 2))\n  done\n  echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=\"\"\n  while [ $n -gt 0 ]; do\n    result=\"$((n % 2))$result\"\n    n=$((n / 2))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=\"$1\"\n  local binary=\"\"\n  local remainder=0\n\n  while [ \"$number\" -gt 0 ]; do\n    remainder=$((number % 2))\n    number=$((number / 2))\n    binary=\"$remainder$binary\"\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local binary=\"\"\n    while [ $n -gt 0 ]; do\n        local remainder=$((n % 2))\n        binary=\"$remainder$binary\"\n        n=$((n / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=\"\"\n  while (( n > 0 )); do\n    result=\"$(( n % 2 ))$result\"\n    n=$(( n / 2 ))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    local remainder=$((decimal % 2))\n    decimal=$((decimal / 2))\n    binary=\"$remainder$binary\"\n  done\n  echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local -i dec=$1\n  local -i rem\n  local -i bin=0\n  local -i i=1\n  while [ $dec -gt 0 ]; do\n    rem=$((dec % 2))\n    dec=$((dec / 2))\n    bin=$((bin + rem * i))\n    i=$((i * 10))\n  done\n  echo $bin\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local -i n=$1\n    local -i r\n    local -i b=0\n    local -i i=1\n    while (( n > 0 )); do\n        (( r = n % 2 ))\n        (( n = n / 2 ))\n        (( b += r * i ))\n        (( i *= 10 ))\n    done\n    echo $b\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local binary=\"\"\n  while [ $n -gt 0 ]; do\n    local remainder=$(( n % 2 ))\n    binary=\"$remainder$binary\"\n    n=$(( n / 2 ))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=''\n    while [ $n -gt 0 ]; do\n        result=$((n % 2))$result\n        n=$((n / 2))\n    done\n    echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    local remainder=0\n    while [ $decimal -gt 0 ]; do\n        remainder=$((decimal % 2))\n        decimal=$((decimal / 2))\n        binary=\"$remainder$binary\"\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=''\n    while (( n > 0 )); do\n        (( result = n % 2 + result * 10 ))\n        (( n /= 2 ))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n\n    while (( decimal > 0 )); do\n        binary=\"$(( decimal % 2 ))$binary\"\n        decimal=$(( decimal / 2 ))\n    done\n\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=''\n    while [ $n -gt 0 ]; do\n        result=$((n % 2))$result\n        n=$((n / 2))\n    done\n    echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=''\n    while (( n > 0 )); do\n        result=$(( n % 2 ))$result\n        n=$(( n / 2 ))\n    done\n    echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        local remainder=$((decimal % 2))\n        binary=\"$remainder$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=\"\"\n  while [ $n -gt 0 ]; do\n    result=\"$((n % 2))$result\"\n    n=$((n / 2))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local binary=''\n    while (( n > 0 )); do\n        binary=\"$(( n % 2 ))$binary\"\n        n=$(( n / 2 ))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while (( decimal > 0 )); do\n    (( binary = (decimal % 2) + binary * 10 ))\n    (( decimal /= 2 ))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local -i decimal=$1\n  local -i remainder\n  local binary=\"\"\n\n  while (( decimal > 0 )); do\n    (( remainder = decimal % 2 ))\n    (( decimal /= 2 ))\n    binary=\"${remainder}${binary}\"\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=''\n    while [ $n -gt 0 ]; do\n        result=$((n % 2))$result\n        n=$((n / 2))\n    done\n    echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=''\n    while [ $n -gt 0 ]; do\n        result=$((n % 2))$result\n        n=$((n / 2))\n    done\n    echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local -i dec=$1\n  local -i bin=0\n  local -i i=1\n  local -i rem=0\n\n  while [ $dec -gt 0 ]; do\n    rem=$((dec % 2))\n    bin=$((bin + (i * rem)))\n    dec=$((dec / 2))\n    i=$((i * 10))\n  done\n\n  echo \"$bin\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local -i dec=$1\n  local -i rem\n  local -i bin=0\n  local -i i=1\n\n  while (( dec > 0 )); do\n    rem=$(( dec % 2 ))\n    dec=$(( dec / 2 ))\n    bin=$(( bin + rem * i ))\n    i=$(( i * 10 ))\n  done\n\n  echo \"$bin\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=''\n    while (( n > 0 )); do\n        result=\"$(( n % 2 ))$result\"\n        n=$(( n / 2 ))\n    done\n    echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local num=$1\n  local binary=\"\"\n\n  while [ $num -gt 0 ]; do\n    local remainder=$(( num % 2 ))\n    binary=\"$remainder$binary\"\n    num=$(( num / 2 ))\n  done\n\n  echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=$1\n  local binary=\"\"\n  local remainder=0\n\n  while [ $number -gt 0 ]; do\n    remainder=$((number % 2))\n    number=$((number / 2))\n    binary=\"$remainder$binary\"\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local number=$1\n    local binary=\"\"\n    while [ $number -gt 0 ]; do\n        binary=\"$((number % 2))$binary\"\n        number=$((number / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=$1\n  local binary=\"\"\n  local remainder=0\n\n  while [ $number -gt 0 ]; do\n    remainder=$(( number % 2 ))\n    number=$(( number / 2 ))\n    binary=\"$remainder$binary\"\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=''\n    while (( n > 0 )); do\n        result=$(( n % 2 ))$result\n        n=$(( n / 2 ))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=\"\"\n    while (( n > 0 )); do\n        result=\"$(( n % 2 ))$result\"\n        (( n /= 2 ))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=\"\"\n  while [ $n -gt 0 ]; do\n    result=\"$((n % 2))$result\"\n    n=$((n / 2))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=''\n    while [ $n -gt 0 ]; do\n        result=$((n % 2))$result\n        n=$((n / 2))\n    done\n    echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local num=$1\n    local result=\"\"\n    while [ $num -gt 0 ]; do\n        result=\"$((num % 2))$result\"\n        num=$((num / 2))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local binary=\"\"\n    while [ $n -gt 0 ]; do\n        local remainder=$((n % 2))\n        binary=\"$remainder$binary\"\n        n=$((n / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=''\n    while (( n > 0 )); do\n        result=\"$(( n % 2 ))$result\"\n        n=$(( n / 2 ))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=\"\"\n  while (( n > 0 )); do\n    result=\"$(( n % 2 ))$result\"\n    n=$(( n / 2 ))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=''\n  while (( decimal > 0 )); do\n    binary=\"$(( decimal % 2 ))$binary\"\n    decimal=$(( decimal / 2 ))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=\"\"\n  while [ $n -gt 0 ]; do\n    result=$((n % 2))$result\n    n=$((n / 2))\n  done\n  echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=\"\"\n    while [ $n -gt 0 ]; do\n        result=\"$((n%2))$result\"\n        n=$((n/2))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  local remainder=0\n\n  while [ $decimal -gt 0 ]; do\n    remainder=$((decimal % 2))\n    decimal=$((decimal / 2))\n    binary=\"$remainder$binary\"\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        local remainder=$((decimal % 2))\n        binary=\"$remainder$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local binary=\"\"\n  while (( n > 0 )); do\n    (( n % 2 == 0 )) && binary=\"0${binary}\" || binary=\"1${binary}\"\n    (( n /= 2 ))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local -i dec=$1\n  local -i rem\n  local -i bin=0\n  local -i i=1\n  while [ $dec -gt 0 ]; do\n    rem=$((dec%2))\n    dec=$((dec/2))\n    bin=$((bin+rem*i))\n    i=$((i*10))\n  done\n  echo \"$bin\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while (( decimal > 0 )); do\n    binary=\"$(( decimal % 2 ))$binary\"\n    decimal=$(( decimal / 2 ))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=$1\n  local binary=\"\"\n\n  while [ $number -gt 0 ]; do\n    binary=\"$((number % 2))$binary\"\n    number=$((number / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=$1\n  local binary=\"\"\n  while [ $number -gt 0 ]; do\n    binary=\"$((number % 2))$binary\"\n    number=$((number / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        local remainder=$(($decimal % 2))\n        binary=\"$remainder$binary\"\n        decimal=$(($decimal / 2))\n    done\n    echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local -i n=$1\n  local -i i=0\n  local -i r\n  local -a b\n  while (( n > 0 )); do\n    (( r = n % 2 ))\n    (( n /= 2 ))\n    b[i++]=$r\n  done\n  echo \"${b[*]}\" | rev\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=$1\n  local result=\"\"\n\n  while [ $number -gt 0 ]; do\n    local remainder=$(( number % 2 ))\n    result=\"$remainder$result\"\n    number=$(( number / 2 ))\n  done\n\n  echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=''\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=\"\"\n  while [ $n -gt 0 ]; do\n    result=\"$((n % 2))$result\"\n    n=$((n / 2))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=$1\n  local binary=\"\"\n  while [ $number -gt 0 ]; do\n    binary=\"$((number % 2))$binary\"\n    number=$((number / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while (( decimal > 0 )); do\n    binary=\"$(( decimal % 2 ))$binary\"\n    decimal=$(( decimal / 2 ))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local binary=\"\"\n    while (( n > 0 )); do\n        (( binary = n % 2 + binary * 10 ))\n        (( n /= 2 ))\n    done\n    echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=''\n  while (( n > 0 )); do\n    result=$(( n % 2 ))$result\n    n=$(( n / 2 ))\n  done\n  echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=''\n  while (( n > 0 )); do\n    result=$(( n % 2 ))$result\n    n=$(( n / 2 ))\n  done\n  echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=\"\"\n\n    while [ $n -gt 0 ]; do\n        result=\"$((n % 2))$result\"\n        n=$((n / 2))\n    done\n\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local num=$1\n  local result=\"\"\n  while [ $num -gt 0 ]; do\n    result=\"$((num % 2))$result\"\n    num=$((num / 2))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local number=$1\n    local result=\"\"\n    local remainder=0\n    while [ $number -gt 0 ]; do\n        remainder=$(( number % 2 ))\n        number=$(( number / 2 ))\n        result=\"$remainder$result\"\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=\"\"\n    while [ $n -gt 0 ]; do\n        result=\"$((n % 2))$result\"\n        n=$((n / 2))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while (( decimal > 0 )); do\n        local remainder=$(( decimal % 2 ))\n        binary=\"$remainder$binary\"\n        decimal=$(( decimal / 2 ))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=\"\"\n    while [ $n -gt 0 ]; do\n        result=\"$((n % 2))$result\"\n        n=$((n / 2))\n    done\n    echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=$1\n  local binary=\"\"\n  while [ $number -gt 0 ]; do\n    binary=\"$(( number % 2 ))$binary\"\n    number=$(( number / 2 ))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local number=$1\n    local binary=\"\"\n    while [ $number -gt 0 ]; do\n        binary=\"$((number % 2))$binary\"\n        number=$((number / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n\n    while [ $decimal -gt 0 ]; do\n        local remainder=$((decimal % 2))\n        binary=\"$remainder$binary\"\n        decimal=$((decimal / 2))\n    done\n\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  local remainder=0\n  while [ $decimal -gt 0 ]; do\n    remainder=$((decimal % 2))\n    decimal=$((decimal / 2))\n    binary=\"$remainder$binary\"\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=\"\"\n  while (( n > 0 )); do\n    (( result = n % 2 + result ))\n    (( n /= 2 ))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    local remainder=$((decimal % 2))\n    binary=\"$remainder$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=\"\"\n  while [ $n -gt 0 ]; do\n    result=\"$((n % 2))$result\"\n    n=$((n / 2))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=''\n    while [ $n -gt 0 ]; do\n        local remainder=$(( n % 2 ))\n        result=\"$remainder$result\"\n        n=$(( n / 2 ))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=\"\"\n    while (( n > 0 )); do\n        result=\"$(( n % 2 ))$result\"\n        n=$(( n / 2 ))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local num=$1\n    local bin=\"\"\n    while [ $num -gt 0 ]; do\n        bin=\"$((num % 2))$bin\"\n        num=$((num / 2))\n    done\n    echo \"$bin\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=\"\"\n    while (( n > 0 )); do\n        result=\"$(( n % 2 ))$result\"\n        n=$(( n / 2 ))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=''\n    while (( decimal > 0 )); do\n        binary=\"$(( decimal % 2 ))$binary\"\n        decimal=$(( decimal / 2 ))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local -i dec=$1\n    local -i rem\n    local bin=\"\"\n    while (( dec > 0 )); do\n        rem=$(( dec % 2 ))\n        bin=\"$rem$bin\"\n        dec=$(( dec / 2 ))\n    done\n    echo \"$bin\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=''\n    while (( n > 0 )); do\n        result=$(( n % 2 ))$result\n        n=$(( n / 2 ))\n    done\n    echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n\n    while [ $decimal -gt 0 ]; do\n        binary=\"$(( decimal % 2 ))$binary\"\n        decimal=$(( decimal / 2 ))\n    done\n\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=\"\"\n    while [ $n -gt 0 ]; do\n        result=\"$((n % 2))$result\"\n        n=$((n / 2))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  local remainder=0\n\n  while [ $decimal -gt 0 ]; do\n    remainder=$((decimal % 2))\n    decimal=$((decimal / 2))\n    binary=\"$remainder$binary\"\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=''\n    while (( n > 0 )); do\n        result=\"$(( n % 2 ))$result\"\n        n=$(( n / 2 ))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local -i decimal=$1\n  local -i remainder\n  local -i quotient\n  local -i i=0\n  local -a binary\n  while (( decimal > 0 )); do\n    (( quotient = decimal / 2 ))\n    (( remainder = decimal % 2 ))\n    decimal=$quotient\n    binary[$i]=$remainder\n    (( i++ ))\n  done\n  echo \"${binary[@]}\" | rev | tr -d ' '\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=''\n  local remainder=0\n  while [ $decimal -gt 0 ]; do\n    remainder=$((decimal % 2))\n    decimal=$((decimal / 2))\n    binary=\"${remainder}${binary}\"\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local binary=''\n    while [ $n -gt 0 ]; do\n        local remainder=$(( n % 2 ))\n        n=$(( n / 2 ))\n        binary=\"$remainder$binary\"\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while (( decimal > 0 )); do\n    binary=\"$(( decimal % 2 ))$binary\"\n    decimal=$(( decimal / 2 ))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        local remainder=$((decimal % 2))\n        binary=\"$remainder$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local binary=\"\"\n  while (( n > 0 )); do\n    (( binary = n % 2 + binary * 10 ))\n    (( n /= 2 ))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=\"\"\n  while (( n > 0 )); do\n    (( result = n % 2 + result * 10 ))\n    (( n /= 2 ))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$(( $decimal % 2 ))$binary\"\n    decimal=$(( $decimal / 2 ))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=''\n  while (( n > 0 )); do\n    result=$(( n % 2 ))$result\n    n=$(( n / 2 ))\n  done\n  echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=\"\"\n  while (( n > 0 )); do\n    (( result = n % 2 + result ))\n    (( n /= 2 ))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=\"\"\n  while (( n > 0 )); do\n    result=\"$(( n % 2 ))$result\"\n    n=$(( n / 2 ))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while (( decimal > 0 )); do\n        binary=\"$(( decimal % 2 ))$binary\"\n        decimal=$(( decimal / 2 ))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=''\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local -i n=$1\n    local -i r\n    local -i q\n    local -i i=0\n    local -i j\n    local -i k\n    local -i bin\n    local -i bin_array\n    local -i bin_array_size=0\n    local -i bin_array_size_max=32\n    local -i bin_array_size_min=1\n    local -i bin_array_size_mid\n    local -i bin_array_size_mid_prev\n    local -i bin_array_size_mid_next\n    local -i bin_array_size_mid_prev_prev\n    local -i bin_array_size_mid_next_next\n    local -i bin_array_size_mid_prev_prev_prev\n    local -i bin_array_size_mid_next_next_next\n    local -i bin_array_size_mid_prev_prev_prev_prev\n    local -i bin_array_size_mid_next_next_next_next\n    local -i bin_array_size_mid_prev_prev_prev_prev_prev\n    local -i bin_array_size_mid_next_next_next_next_next\n    local -i bin_array_size_mid_prev_prev_prev_prev_prev_prev\n    local -i bin_array_size_mid_next_next_next_next_next_next\n    local -i bin_array_size_mid_prev_prev_prev_prev_prev_prev_prev\n    local -i bin_array_size_mid_next_next_next_next_next_next_next\n    local -i bin_array_size_mid_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i bin_array_size_mid_next_next_next_next_next_next_next_next\n    local -i bin_array_size_mid_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i bin_array_size_mid_next_next_next_next_next_next_next_next_next\n    local -i bin_array_size\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=\"\"\n    while [ $n -gt 0 ]; do\n        result=\"$((n % 2))$result\"\n        n=$((n / 2))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local result=''\n    while ((n > 0)); do\n        result=$((n % 2))$result\n        n=$((n / 2))\n    done\n    echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local num=$1\n    local result=\"\"\n    while [ $num -gt 0 ]; do\n        result=\"$((num % 2))$result\"\n        num=$((num / 2))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=$1\n  local binary=\"\"\n\n  while [ $number -gt 0 ]; do\n    binary=\"$(( number % 2 ))$binary\"\n    number=$(( number / 2 ))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    local remainder=0\n\n    while [ $decimal -gt 0 ]; do\n        remainder=$((decimal % 2))\n        decimal=$((decimal / 2))\n        binary=\"$remainder$binary\"\n    done\n\n    echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local -i decimal=$1\n  local -i remainder\n  local -i quotient\n  local -i binary=0\n  local -i index=1\n\n  while [ $decimal -ne 0 ]; do\n    remainder=$((decimal % 2))\n    decimal=$((decimal / 2))\n    binary=$((binary + (remainder * index)))\n    index=$((index * 10))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local number=$1\n    local binary=''\n    while [[ $number -gt 0 ]]; do\n        binary=\"$((number % 2))$binary\"\n        number=$((number / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local number=$1\n    local binary=\"\"\n    while [ $number -gt 0 ]; do\n        binary=\"$((number % 2))$binary\"\n        number=$((number / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  local remainder=0\n\n  while [ $decimal -gt 0 ]; do\n    remainder=$((decimal % 2))\n    decimal=$((decimal / 2))\n    binary=\"$remainder$binary\"\n  done\n\n  echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local binary=\"\"\n    while [ $n -gt 0 ]; do\n        binary=\"$((n % 2))$binary\"\n        n=$((n / 2))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=\"\"\n  while (( n > 0 )); do\n    result=\"$(( n % 2 ))$result\"\n    (( n /= 2 ))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local binary=\"\"\n  while [ $n -gt 0 ]; do\n    local remainder=$((n % 2))\n    binary=\"$remainder$binary\"\n    n=$((n / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=''\n  while (( n > 0 )); do\n    result=$(( n % 2 ))$result\n    n=$(( n / 2 ))\n  done\n  echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while (( decimal > 0 )); do\n        binary=\"$(( decimal % 2 ))$binary\"\n        decimal=$(( decimal / 2 ))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local -i decimal=$1\n    local -i remainder\n    local -i quotient\n    local -i i=0\n    local -a binary\n    while (( decimal > 0 )); do\n        (( quotient = decimal / 2 ))\n        (( remainder = decimal % 2 ))\n        decimal=$quotient\n        binary[$i]=$remainder\n        (( i++ ))\n    done\n    echo \"${binary[@]}\" | rev\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=$1\n  local result=\"\"\n  while [ $number -gt 0 ]; do\n    result=\"$((number % 2))$result\"\n    number=$((number / 2))\n  done\n  echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=$1\n  local binary=\"\"\n  while [ $number -gt 0 ]; do\n    binary=\"$(( number % 2 ))$binary\"\n    number=$(( number / 2 ))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local -i n=$1\n  local -i m\n  local -i i=0\n  local -i j\n  local -i k\n  local -i l\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i cccc\n  local -i dddd\n  local -i eeee\n  local -i ffff\n  local -i ggg\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while [[ $decimal -gt 0 ]]; do\n    local remainder=$((decimal % 2))\n    binary=\"${remainder}${binary}\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=$1\n  local binary=\"\"\n  local remainder=0\n\n  while [ $number -gt 0 ]; do\n    remainder=$(( number % 2 ))\n    number=$(( number / 2 ))\n    binary=\"$remainder$binary\"\n  done\n\n  echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n\n  while [ $decimal -gt 0 ]; do\n    binary=\"$(( $decimal % 2 ))$binary\"\n    decimal=$(( $decimal / 2 ))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local number=$1\n  local binary=\"\"\n\n  while [ $number -gt 0 ]; do\n    binary=\"$((number % 2))$binary\"\n    number=$((number / 2))\n  done\n\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n\n    while [ $decimal -gt 0 ]; do\n        local remainder=$((decimal % 2))\n        binary=\"$remainder$binary\"\n        decimal=$((decimal / 2))\n    done\n\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local -i num=$1\n    local -i remainder\n    local -i quotient\n    local -i i=0\n    local -i binary_num=0\n    local -i base=1\n    local -i temp\n\n    while [ $num -gt 0 ]\n    do\n        remainder=$((num % 2))\n        binary_num=$((binary_num + remainder * base))\n        num=$((num / 2))\n        base=$((base * 10))\n    done\n\n    echo $binary_num\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local num=$1\n  local result=''\n\n  while [ $num -gt 0 ]; do\n    result=$((num % 2))$result\n    num=$((num / 2))\n  done\n\n  echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while (( decimal > 0 )); do\n        binary=\"$(( decimal % 2 ))$binary\"\n        decimal=$(( decimal / 2 ))\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local decimal=$1\n  local binary=\"\"\n  while [ $decimal -gt 0 ]; do\n    binary=\"$((decimal % 2))$binary\"\n    decimal=$((decimal / 2))\n  done\n  echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191458,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local -i n=$1\n  local -i r\n  local -i b=0\n  local -i i=1\n  while (( n > 0 )); do\n    (( r = n % 2 ))\n    (( n /= 2 ))\n    (( b += r * i ))\n    (( i *= 10 ))\n  done\n  echo $b\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local n=$1\n    local b=''\n    while [ $n -gt 0 ]; do\n        b=$((n % 2))$b\n        n=$((n / 2))\n    done\n    echo $b\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n\n    while [ $decimal -gt 0 ]; do\n        binary=\"$((decimal % 2))$binary\"\n        decimal=$((decimal / 2))\n    done\n\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local n=$1\n  local result=\"\"\n  while [ $n -gt 0 ]; do\n    result=$((n % 2))$result\n    n=$((n / 2))\n  done\n  echo $result\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    while [ $decimal -gt 0 ]; do\n        local remainder=$((decimal % 2))\n        decimal=$((decimal / 2))\n        binary=\"$remainder$binary\"\n    done\n    echo \"$binary\"\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n    local decimal=$1\n    local binary=\"\"\n    local remainder=0\n\n    while [ $decimal -gt 0 ]; do\n        remainder=$((decimal % 2))\n        decimal=$((decimal / 2))\n        binary=\"$remainder$binary\"\n    done\n\n    echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.\n#\n# $1 is an integer\ndecimal_to_binary() {\n  local -i decimal=$1\n  local -i remainder\n  local -i quotient\n  local -i binary=0\n  local -i i=1\n\n  while [ $decimal -gt 0 ]; do\n    remainder=$((decimal % 2))\n    quotient=$((decimal / 2))\n    decimal=$quotient\n    binary=$((binary + (i * remainder)))\n    i=$((i * 10))\n  done\n\n  echo $binary\n}\n\ncandidate() {\n    decimal_to_binary \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"8\") = \"1000\" ]]\n    [[ $(candidate \"18\") = \"10010\" ]]\n    [[ $(candidate \"7\") = \"111\" ]]\n}\n\nrun_test",
      "timestamp": 1667191459,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
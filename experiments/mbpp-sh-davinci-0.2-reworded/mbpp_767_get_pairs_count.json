{
  "name": "mbpp_767_get_pairs_count",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to count the number of pairs whose sum is equal to \u2018sum\u2019. The funtion gets as input a list of numbers and the sum,\n#\n# $1 is a space-separated list\n# $2 is an integer\nget_pairs_count() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_767_get_pairs_count.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    get_pairs_count \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 1 1\" \"2\") = \"6\" ]]\n    [[ $(candidate \"1 5 7 -1 5\" \"6\") = \"3\" ]]\n    [[ $(candidate \"1 -2 3\" \"1\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 3\" \"-3\") = \"1\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local sum=$2\n    local count=0\n    for i in $1; do\n        for j in $1; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local -n list=$1\n    local sum=$2\n    local count=0\n    for ((i=0; i<${#list[@]}; i++)); do\n        for ((j=i+1; j<${#list[@]}; j++)); do\n            if [[ $((list[i] + list[j])) -eq $sum ]]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count",
    "  local list=$1\n  local sum=$2\n  local count=0\n  local i=0\n  local j=0\n  local len=${#list[@]}\n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len; j++)); do\n      if [[ $((list[i] + list[j])) -eq $sum ]]; then\n        count=$((count + 1))\n      fi\n    done\n  done\n  echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [[ $((i+j)) -eq $sum ]]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "  local list=$1\n  local sum=$2\n  local count=0\n  for i in $list; do\n    for j in $list; do\n      if [ $((i + j)) -eq $sum ]; then\n        count=$((count + 1))\n      fi\n    done\n  done\n  echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "    local sum=$2\n    local list=$1\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i+j)) -eq $sum ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [[ $((i + j)) -eq $sum ]]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local pairs_count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                pairs_count=$((pairs_count + 1))\n            fi\n        done\n    done\n    echo $pairs_count",
    "  local sum=$2\n  local list=($1)\n  local count=0\n  for ((i=0; i<${#list[@]}; i++)); do\n    for ((j=i+1; j<${#list[@]}; j++)); do\n      if [[ $((${list[$i]} + ${list[$j]})) -eq $sum ]]; then\n        ((count++))\n      fi\n    done\n  done\n  echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count",
    "  local list=$1\n  local sum=$2\n  local count=0\n  for i in $list; do\n    for j in $list; do\n      if [ $((i + j)) -eq $sum ]; then\n        count=$((count + 1))\n      fi\n    done\n  done\n  echo $count",
    "    local list=\"$1\"\n    local sum=\"$2\"\n    local count=0\n    local i=0\n    local j=0\n    local list_len=0\n    local list_arr=()\n\n    list_arr=($list)\n    list_len=${#list_arr[@]}\n\n    for ((i=0; i<list_len; i++))\n    do\n        for ((j=i+1; j<list_len; j++))\n        do\n            if [[ $((${list_arr[$i]} + ${list_arr[$j]})) -eq $sum ]]\n            then\n                count=$(($count + 1))\n            fi\n        done\n    done\n\n    echo $count",
    "    local list=$1\n    local sum=$2\n    local count=0\n    for i in $list; do\n        for j in $list; do\n            if [ $((i + j)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count"
  ]
}
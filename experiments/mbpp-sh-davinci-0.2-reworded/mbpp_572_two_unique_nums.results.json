{
  "name": "mbpp_572_two_unique_nums",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_572_two_unique_nums.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local num=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local is_unique=0\n\n    for ((i=0; i<nums_len; i++)); do\n        num=${nums[$i]}\n        is_unique=0\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [[ ${unique_nums[$j]} -eq $num ]]; then\n                is_unique=1\n                break\n            fi\n        done\n        if [[ $is_unique -eq 0 ]]; then\n            unique_nums[$k]=$num\n            ((k++))\n            ((unique_nums_len++))\n        fi\n    done\n\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    echo \"$1\" | tr ' ' '\\n' | sort | uniq -u\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local num\n    local num_count\n    local unique_nums\n    local unique_num_count\n    local unique_num\n    local unique_num_count\n\n    for num in $nums; do\n        num_count=$(echo \"$nums\" | grep -c \"$num\")\n        if [ \"$num_count\" -eq 1 ]; then\n            unique_nums=\"$unique_nums $num\"\n        fi\n    done\n\n    unique_num_count=$(echo \"$unique_nums\" | wc -w)\n    if [ \"$unique_num_count\" -eq 2 ]; then\n        echo \"$unique_nums\"\n    else\n        two_unique_nums \"$unique_nums\"\n    fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191025,
      "stdout": "<_io.BufferedReader name=12>",
      "stderr": "<_io.BufferedReader name=14>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    echo \"$1\" | tr ' ' '\\n' | sort | uniq -u\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=$1\n  local num1=0\n  local num2=0\n  local num=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num\n\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local nums_unique=()\n    local nums_unique_len=0\n    local nums_unique_index=0\n    local nums_unique_index_found=0\n    local nums_unique_index_found_count=0\n    local nums_unique_index_found_count_max=0\n    local nums_unique_index_found_count_max_index=0\n    local nums_unique_index_found_count_max_index_found=0\n    local nums_unique_index_found_count_max_index_found_count=0\n    local nums_unique_index_found_count_max_index_found_count_max=0\n    local nums_unique_index_found_count_max_index_found_count_max_index=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found_count=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found_count_max=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found_count_max_index=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found_count_max_index_found=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found_count_max_index_found_count=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found_count_max_index_found_count_max=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found_count_max_index_\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local num1=0\n    local num2=0\n    local num=0\n    local i=0\n    local j=0\n    local k=0\n    local len=0\n    local tmp=0\n    local tmp1=0\n    local tmp2=0\n    local tmp3=0\n    local tmp4=0\n    local tmp5=0\n    local tmp6=0\n    local tmp7=0\n    local tmp8=0\n    local tmp9=0\n    local tmp10=0\n    local tmp11=0\n    local tmp12=0\n    local tmp13=0\n    local tmp14=0\n    local tmp15=0\n    local tmp16=0\n    local tmp17=0\n    local tmp18=0\n    local tmp19=0\n    local tmp20=0\n    local tmp21=0\n    local tmp22=0\n    local tmp23=0\n    local tmp24=0\n    local tmp25=0\n    local tmp26=0\n    local tmp27=0\n    local tmp28=0\n    local tmp29=0\n    local tmp30=0\n    local tmp31=0\n    local tmp32=0\n    local tmp33=0\n    local tmp34=0\n    local tmp35=0\n    local tmp36=0\n    local tmp37=0\n    local tmp38=0\n    local tmp39=0\n    local tmp40=0\n    local tmp41=0\n    local tmp42=0\n    local tmp43=0\n    local tmp44=0\n    local tmp45=0\n    local tmp46=0\n    local tmp47=0\n    local tmp48=0\n    local tmp49=0\n    local tmp50=0\n    local tmp51=0\n    local tmp52=0\n    local tmp53=0\n    local tmp54=0\n    local tmp55=0\n    local tmp56=0\n    local tmp57=0\n    local tmp58=0\n    local tmp59=0\n    local tmp60=0\n    local tmp61=0\n    local tmp62=0\n    local tmp63=0\n    local tmp64=0\n    local tmp65=0\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local -a nums=($1)\n    local -a unique_nums=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i nums_len=${#nums[@]}\n    local -i unique_nums_len=0\n    local -i is_unique=0\n    local -i is_duplicate=0\n    local -i is_duplicate_found=0\n    local -i is_duplicate_found_in_unique_nums=0\n    local -i is_duplicate_found_in_nums=0\n    local -i is_duplicate_found_in_nums_and_unique_nums=0\n    local -i is_duplicate_found_in_unique_nums_and_nums=0\n    local -i is_duplicate_found_in_nums_and_unique_nums_and_nums=0\n    local -i is_duplicate_found_in_unique_nums_and_nums_and_unique_nums=0\n    local -i is_duplicate_found_in_nums_and_unique_nums_and_unique_nums=0\n    local -i is_duplicate_found_in_unique_nums_and_nums_and_nums=0\n    local -i is_duplicate_found_in_nums_and_unique_nums_and_nums_and_unique_nums=0\n    local -i is_duplicate_found_in_unique_nums_and_nums_and_nums_and_unique_nums=0\n    local -i is_duplicate_found_in_nums_and_unique_nums_and_unique_nums_and_nums=0\n    local -i is_duplicate_found_in_unique_nums_and_nums_and_unique_nums_and_nums=0\n    local -i is_duplicate_found_in_nums_and_unique_nums_and_n\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num_counts=()\n    local num_count=0\n    local num_index=0\n\n    for num in ${nums[@]}; do\n        num_index=$(index_of $num ${unique_nums[@]})\n        if [ $num_index -eq -1 ]; then\n            unique_nums+=($num)\n            num_counts+=(1)\n        else\n            num_count=${num_counts[$num_index]}\n            num_counts[$num_index]=$((num_count + 1))\n        fi\n    done\n\n    for i in ${!unique_nums[@]}; do\n        num_count=${num_counts[$i]}\n        if [ $num_count -eq 2 ]; then\n            echo ${unique_nums[$i]}\n        fi\n    done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpiydg3hnb.sh: line 13: index_of: command not found\\n/tmp/tmpiydg3hnb.sh: line 14: [: -eq: unary operator expected\\n/tmp/tmpiydg3hnb.sh: line 13: index_of: command not found\\n/tmp/tmpiydg3hnb.sh: line 14: [: -eq: unary operator expected\\n/tmp/tmpiydg3hnb.sh: line 13: index_of: command not found\\n/tmp/tmpiydg3hnb.sh: line 14: [: -eq: unary operator expected\\n/tmp/tmpiydg3hnb.sh: line 13: index_of: command not found\\n/tmp/tmpiydg3hnb.sh: line 14: [: -eq: unary operator expected\\n/tmp/tmpiydg3hnb.sh: line 13: index_of: command not found\\n/tmp/tmpiydg3hnb.sh: line 14: [: -eq: unary operator expected\\n/tmp/tmpiydg3hnb.sh: line 13: index_of: command not found\\n/tmp/tmpiydg3hnb.sh: line 14: [: -eq: unary operator expected\\n/tmp/tmpiydg3hnb.sh: line 13: index_of: command not found\\n/tmp/tmpiydg3hnb.sh: line 14: [: -eq: unary operator expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local nums_arr=($nums)\n    local nums_len=${#nums_arr[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local is_unique=0\n    for ((i=0; i<nums_len; i++)); do\n        is_unique=1\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [[ ${nums_arr[i]} -eq ${unique_nums[j]} ]]; then\n                is_unique=0\n                break\n            fi\n        done\n        if [[ $is_unique -eq 1 ]]; then\n            unique_nums[k]=${nums_arr[i]}\n            ((k++))\n            ((unique_nums_len++))\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local nums_uniq=()\n    local nums_uniq_len=0\n    local i=0\n    local j=0\n    local is_dup=0\n    for ((i=0; i<nums_len; i++)); do\n        is_dup=0\n        for ((j=0; j<nums_uniq_len; j++)); do\n            if [[ ${nums[i]} -eq ${nums_uniq[j]} ]]; then\n                is_dup=1\n                break\n            fi\n        done\n        if [[ $is_dup -eq 0 ]]; then\n            nums_uniq[nums_uniq_len]=${nums[i]}\n            nums_uniq_len=$((nums_uniq_len+1))\n        fi\n    done\n    echo ${nums_uniq[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    # Remove duplicate numbers\n    local unique_nums=($(echo $1 | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n\n    # Print the first two numbers\n    echo ${unique_nums[0]} ${unique_nums[1]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local num1=$(echo $nums | cut -d ' ' -f 1)\n    local num2=$(echo $nums | cut -d ' ' -f 2)\n    if [[ $num1 -eq $num2 ]]; then\n        echo $num1\n    else\n        echo $nums\n    fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  for num in ${nums[@]}; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    echo \"$1\" | tr ' ' '\\n' | sort -n | uniq -u\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=( $1 )\n  local num1=${nums[0]}\n  local num2=${nums[1]}\n  if [[ $num1 -eq $num2 ]]; then\n    echo $num1\n  else\n    echo $num1 $num2\n  fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=\"$1\"\n  local num1=0\n  local num2=0\n  local num1_count=0\n  local num2_count=0\n  for num in $nums; do\n    if [ $num1 -eq $num ]; then\n      num1_count=$((num1_count + 1))\n    elif [ $num2 -eq $num ]; then\n      num2_count=$((num2_count + 1))\n    elif [ $num1_count -eq 0 ]; then\n      num1=$num\n      num1_count=1\n    elif [ $num2_count -eq 0 ]; then\n      num2=$num\n      num2_count=1\n    else\n      num1_count=$((num1_count - 1))\n      num2_count=$((num2_count - 1))\n    fi\n  done\n  echo \"$num1 $num2\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    # $1 is a space-separated list\n    # $2 is a space-separated list\n    # $3 is a space-separated list\n    # $4 is a space-separated list\n    # $5 is a space-separated list\n    # $6 is a space-separated list\n    # $7 is a space-separated list\n    # $8 is a space-separated list\n    # $9 is a space-separated list\n    # $10 is a space-separated list\n    # $11 is a space-separated list\n    # $12 is a space-separated list\n    # $13 is a space-separated list\n    # $14 is a space-separated list\n    # $15 is a space-separated list\n    # $16 is a space-separated list\n    # $17 is a space-separated list\n    # $18 is a space-separated list\n    # $19 is a space-separated list\n    # $20 is a space-separated list\n    # $21 is a space-separated list\n    # $22 is a space-separated list\n    # $23 is a space-separated list\n    # $24 is a space-separated list\n    # $25 is a space-separated list\n    # $26 is a space-separated list\n    # $27 is a space-separated list\n    # $28 is a space-separated list\n    # $29 is a space-separated list\n    # $30 is a space-separated list\n    # $31 is a space-separated list\n    # $32 is a space-separated list\n    # $33 is a space-separated list\n    # $34 is a space-separated list\n    # $35 is a space-separated list\n    # $36 is a space-separated list\n    # $37 is a space-separated list\n    # $38 is a space-separated list\n    # $39 is a space-separated list\n    # $40 is a space-separated list\n    # $41 is a space-separated list\n    # $42 is a space-separated list\n    # $43 is a space\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp6whgnt7a.sh: line 49: syntax error near unexpected token `}'\\n/tmp/tmp6whgnt7a.sh: line 49: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local -a nums=($1)\n    local -i i j\n    local -i n=${#nums[@]}\n    local -i m=0\n    local -i num\n    local -i unique_nums[$n]\n    local -i unique_num\n    local -i unique_nums_count=0\n    local -i unique_nums_count_max=0\n    local -i unique_nums_count_max_index=0\n    local -i unique_nums_count_max_num=0\n    local -i unique_nums_count_max_num_index=0\n    local -i unique_nums_count_max_num_index_2=0\n    local -i unique_nums_count_max_num_index_3=0\n    local -i unique_nums_count_max_num_index_4=0\n    local -i unique_nums_count_max_num_index_5=0\n    local -i unique_nums_count_max_num_index_6=0\n    local -i unique_nums_count_max_num_index_7=0\n    local -i unique_nums_count_max_num_index_8=0\n    local -i unique_nums_count_max_num_index_9=0\n    local -i unique_nums_count_max_num_index_10=0\n    local -i unique_nums_count_max_num_index_11=0\n    local -i unique_nums_count_max_num_index_12=0\n    local -i unique_nums_count_max_num_index_13=0\n    local -i unique_nums_count_max_num_index_14=0\n    local -i unique_nums_count_max_num_index_15=0\n    local -i unique_nums_count_max_num_index_16=0\n    local -i unique_nums_count_max_num_index_17=0\n    local -i unique_nums_count_max_num_index_18=0\n    local -i unique_\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local nums_arr=($nums)\n    local nums_arr_len=${#nums_arr[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n\n    for ((i=0; i<nums_arr_len; i++))\n    do\n        for ((j=0; j<unique_nums_len; j++))\n        do\n            if [ ${nums_arr[i]} -eq ${unique_nums[j]} ]; then\n                break\n            fi\n        done\n        if [ $j -eq $unique_nums_len ]; then\n            unique_nums[k]=${nums_arr[i]}\n            unique_nums_len=$((unique_nums_len+1))\n            k=$((k+1))\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num_counts=()\n    local i=0\n    local j=0\n\n    for ((i=0; i<${#nums[@]}; i++)); do\n        for ((j=0; j<${#unique_nums[@]}; j++)); do\n            if [[ ${nums[i]} -eq ${unique_nums[j]} ]]; then\n                ((num_counts[j]++))\n                break\n            fi\n        done\n\n        if [[ $j -eq ${#unique_nums[@]} ]]; then\n            unique_nums+=(${nums[i]})\n            num_counts+=(1)\n        fi\n    done\n\n    for ((i=0; i<${#unique_nums[@]}; i++)); do\n        if [[ ${num_counts[i]} -eq 1 ]]; then\n            echo ${unique_nums[i]}\n        fi\n    done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local num1=${nums[0]}\n    local num2=${nums[1]}\n    local num3=${nums[2]}\n    local num4=${nums[3]}\n    local num5=${nums[4]}\n    local num6=${nums[5]}\n    local num7=${nums[6]}\n    local num8=${nums[7]}\n    local num9=${nums[8]}\n    local num10=${nums[9]}\n    local num11=${nums[10]}\n    local num12=${nums[11]}\n    local num13=${nums[12]}\n    local num14=${nums[13]}\n    local num15=${nums[14]}\n    local num16=${nums[15]}\n    local num17=${nums[16]}\n    local num18=${nums[17]}\n    local num19=${nums[18]}\n    local num20=${nums[19]}\n    local num21=${nums[20]}\n    local num22=${nums[21]}\n    local num23=${nums[22]}\n    local num24=${nums[23]}\n    local num25=${nums[24]}\n    local num26=${nums[25]}\n    local num27=${nums[26]}\n    local num28=${nums[27]}\n    local num29=${nums[28]}\n    local num30=${nums[29]}\n    local num31=${nums[30]}\n    local num32=${nums[31]}\n    local num33=${nums[32]}\n    local num34=${nums[33]}\n    local num35=${nums[34]}\n    local num36=${nums[35]}\n    local num37=${nums[36]}\n    local num38=${nums[37]}\n    local num39=${nums[38]}\n    local num40=${nums[39]}\n    local num41=${nums[40]}\n    local num42=${nums[41\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp2kb9avmv.sh: line 63: syntax error: unexpected end of file\\n'",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local unique_nums_index=0\n    local unique_nums_found=0\n\n    for ((i=0; i<nums_len; i++)); do\n        unique_nums_found=0\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [[ ${nums[$i]} -eq ${unique_nums[$j]} ]]; then\n                unique_nums_found=1\n                break\n            fi\n        done\n        if [[ $unique_nums_found -eq 0 ]]; then\n            unique_nums[$unique_nums_index]=${nums[$i]}\n            unique_nums_index=$((unique_nums_index + 1))\n            unique_nums_len=$((unique_nums_len + 1))\n        fi\n    done\n\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    local nums_unique=()\n\n    for ((i=0; i<nums_len; i++)); do\n        tmp=${nums[$i]}\n        for ((j=0; j<i; j++)); do\n            if [ ${nums[$j]} -eq $tmp ]; then\n                break\n            fi\n        done\n        if [ $j -eq $i ]; then\n            nums_unique[$k]=$tmp\n            ((k++))\n        fi\n    done\n\n    echo ${nums_unique[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  for num in ${nums[@]}; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local num1=${nums[0]}\n    local num2=${nums[1]}\n    if [[ $num1 -eq $num2 ]]; then\n        echo $num1\n    else\n        echo $num1 $num2\n    fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local -a nums=($1)\n  local -a unique_nums=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i n=${#nums[@]}\n\n  for ((i=0; i<n; i++)); do\n    for ((j=i+1; j<n; j++)); do\n      if [[ ${nums[i]} == ${nums[j]} ]]; then\n        break\n      fi\n    done\n    if [[ $j == $n ]]; then\n      unique_nums[k++]=${nums[i]}\n    fi\n  done\n\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=(${num})\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local nums_array=($nums)\n    local unique_nums=()\n\n    for num in ${nums_array[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  for i in $1; do\n    for j in $1; do\n      if [ $i -eq $j ]; then\n        continue\n      fi\n      echo \"$i $j\"\n    done\n  done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=\"$1\"\n  local num1=0\n  local num2=0\n  local num_count=0\n  local num_count_max=0\n  local num_count_max_prev=0\n  local num_count_max_prev_prev=0\n  local num_count_max_prev_prev_prev=0\n  local num_count_max_prev_prev_prev_prev=0\n  local num_count_max_prev_prev_prev_prev_prev=0\n  local num_count_max_prev_prev_prev_prev_prev_prev=0\n  local num_count_max_prev_prev_prev_prev_prev_prev_prev=0\n  local num_count_max_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local num_count_max_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local num_count_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local num_count_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local num_count_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local num_count_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local num_count_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local num_count_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local num_count_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local num_count_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local i=0\n    local j=0\n    local k=0\n    local len=${#nums[@]}\n    local unique_nums=()\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if [[ ${nums[i]} -eq ${nums[j]} ]]; then\n                break\n            fi\n        done\n        if [[ $j -eq $len ]]; then\n            unique_nums[k]=${nums[i]}\n            ((k++))\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local list=\"$1\"\n    local nums=($list)\n    local num1=${nums[0]}\n    local num2=${nums[1]}\n    if [ $num1 -eq $num2 ]; then\n        echo $num1\n    else\n        echo $num1 $num2\n    fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=\"$1\"\n  local nums_arr=($nums)\n  local unique_nums=()\n  local nums_len=${#nums_arr[@]}\n  local i=0\n\n  while [ $i -lt $nums_len ]; do\n    local num=${nums_arr[$i]}\n    local j=$((i+1))\n    local found=0\n\n    while [ $j -lt $nums_len ]; do\n      if [ $num -eq ${nums_arr[$j]} ]; then\n        found=1\n        break\n      fi\n      j=$((j+1))\n    done\n\n    if [ $found -eq 0 ]; then\n      unique_nums+=($num)\n    fi\n\n    i=$((i+1))\n  done\n\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local unique_nums=\"\"\n    local num=\"\"\n    for num in $nums; do\n        if [[ $unique_nums != *\"$num\"* ]]; then\n            unique_nums=\"$unique_nums $num\"\n        fi\n    done\n    echo \"$unique_nums\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local unique_nums_len_prev=0\n    local num=0\n\n    for ((i=0; i<nums_len; i++)); do\n        num=${nums[i]}\n        unique_nums_len_prev=${#unique_nums[@]}\n        for ((j=0; j<unique_nums_len_prev; j++)); do\n            if [[ ${unique_nums[j]} -eq $num ]]; then\n                break\n            fi\n        done\n        if [[ $j -eq $unique_nums_len_prev ]]; then\n            unique_nums[$j]=$num\n        fi\n    done\n\n    unique_nums_len=${#unique_nums[@]}\n    for ((i=0; i<unique_nums_len; i++)); do\n        echo -n \"${unique_nums[i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=(${num})\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local nums_unique=()\n    local nums_unique_len=0\n    local nums_unique_idx=0\n    local nums_unique_found=0\n    local nums_unique_found_idx=0\n    local nums_unique_found_idx_prev=0\n    local nums_unique_found_idx_prev_prev=0\n    local nums_unique_found_idx_prev_prev_prev=0\n    local nums_unique_found_idx_prev_prev_prev_prev=0\n    local nums_unique_found_idx_prev_prev_prev_prev_prev=0\n    local nums_unique_found_idx_prev_prev_prev_prev_prev_prev=0\n    local nums_unique_found_idx_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_unique_found_idx_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_unique_found_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_unique_found_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_unique_found_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_unique_found_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_unique_found_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_unique_found_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_unique_found_idx_prev_prev_prev_prev_prev_prev_\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  for num in ${nums[@]}; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num_counts=()\n    local num_count=0\n    local num=0\n    local i=0\n    local j=0\n    local k=0\n\n    for ((i=0; i<${#nums[@]}; i++)); do\n        num=${nums[$i]}\n        num_count=0\n        for ((j=0; j<${#unique_nums[@]}; j++)); do\n            if [[ ${unique_nums[$j]} -eq $num ]]; then\n                num_count=${num_counts[$j]}\n                break\n            fi\n        done\n        num_count=$((num_count+1))\n        if [[ $num_count -eq 1 ]]; then\n            unique_nums[$j]=$num\n            num_counts[$j]=$num_count\n        elif [[ $num_count -eq 2 ]]; then\n            for ((k=0; k<${#unique_nums[@]}; k++)); do\n                if [[ ${unique_nums[$k]} -eq $num ]]; then\n                    unique_nums[$k]=0\n                    num_counts[$k]=0\n                    break\n                fi\n            done\n        fi\n    done\n\n    for ((i=0; i<${#unique_nums[@]}; i++)); do\n        if [[ ${unique_nums[$i]} -ne 0 ]]; then\n            echo ${unique_nums[$i]}\n        fi\n    done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local unique_num\n    local num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local first_num second_num\n    first_num=$(echo \"$nums\" | cut -d' ' -f1)\n    second_num=$(echo \"$nums\" | cut -d' ' -f2)\n    if [ \"$first_num\" -eq \"$second_num\" ]; then\n        echo \"$first_num\"\n    else\n        echo \"$nums\"\n    fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  local num\n\n  for num in ${nums[@]}; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n\n    for ((i=0; i<nums_len; i++))\n    do\n        for ((j=0; j<unique_nums_len; j++))\n        do\n            if [ ${nums[i]} -eq ${unique_nums[j]} ]\n            then\n                break\n            fi\n        done\n        if [ $j -eq $unique_nums_len ]\n        then\n            unique_nums[k]=${nums[i]}\n            unique_nums_len=$((unique_nums_len+1))\n            k=$((k+1))\n        fi\n    done\n\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local is_unique=1\n    local is_duplicate=0\n    local is_duplicate_found=0\n\n    for ((i=0; i<nums_len; i++)); do\n        is_unique=1\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [[ ${nums[i]} -eq ${unique_nums[j]} ]]; then\n                is_unique=0\n                break\n            fi\n        done\n        if [[ $is_unique -eq 1 ]]; then\n            unique_nums[unique_nums_len]=${nums[i]}\n            unique_nums_len=$((unique_nums_len+1))\n        fi\n    done\n\n    for ((i=0; i<unique_nums_len; i++)); do\n        is_duplicate=0\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [[ $i -eq $j ]]; then\n                continue\n            fi\n            if [[ ${unique_nums[i]} -eq ${unique_nums[j]} ]]; then\n                is_duplicate=1\n                break\n            fi\n        done\n        if [[ $is_duplicate -eq 0 ]]; then\n            is_duplicate_found=1\n            echo ${unique_nums[i]}\n            break\n        fi\n    done\n\n    if [[ $is_duplicate_found -eq 0 ]]; then\n        echo \"No unique number found\"\n    fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local is_unique=0\n\n    for ((i=0; i<nums_len; i++)); do\n        is_unique=1\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [[ ${nums[i]} -eq ${unique_nums[j]} ]]; then\n                is_unique=0\n                break\n            fi\n        done\n        if [[ $is_unique -eq 1 ]]; then\n            unique_nums[unique_nums_len]=${nums[i]}\n            unique_nums_len=$((unique_nums_len+1))\n        fi\n    done\n\n    for ((i=0; i<unique_nums_len; i++)); do\n        for ((j=i+1; j<unique_nums_len; j++)); do\n            if [[ ${unique_nums[i]} -gt ${unique_nums[j]} ]]; then\n                k=${unique_nums[i]}\n                unique_nums[i]=${unique_nums[j]}\n                unique_nums[j]=$k\n            fi\n        done\n    done\n\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local nums_len=${#nums[@]}\n  local nums_unique=()\n  local nums_unique_len=0\n  local nums_unique_idx=0\n\n  for ((i=0; i<nums_len; i++)); do\n    local num=${nums[$i]}\n    local num_is_unique=1\n\n    for ((j=0; j<nums_unique_len; j++)); do\n      local num_unique=${nums_unique[$j]}\n\n      if [[ $num == $num_unique ]]; then\n        num_is_unique=0\n        break\n      fi\n    done\n\n    if [[ $num_is_unique == 1 ]]; then\n      nums_unique[$nums_unique_idx]=$num\n      nums_unique_idx=$((nums_unique_idx + 1))\n    fi\n  done\n\n  nums_unique_len=${#nums_unique[@]}\n\n  if [[ $nums_unique_len -gt 2 ]]; then\n    echo \"More than two unique numbers in list.\"\n    exit 1\n  fi\n\n  echo \"${nums_unique[0]} ${nums_unique[1]}\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  for num in $1; do\n    if [ $num -gt $2 ]; then\n      echo $num\n    fi\n  done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp3lzojr06.sh: line 7: [: 1: unary operator expected\\n/tmp/tmp3lzojr06.sh: line 7: [: 2: unary operator expected\\n/tmp/tmp3lzojr06.sh: line 7: [: 3: unary operator expected\\n/tmp/tmp3lzojr06.sh: line 7: [: 2: unary operator expected\\n/tmp/tmp3lzojr06.sh: line 7: [: 3: unary operator expected\\n/tmp/tmp3lzojr06.sh: line 7: [: 4: unary operator expected\\n/tmp/tmp3lzojr06.sh: line 7: [: 5: unary operator expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num_counts=()\n    local i=0\n    local j=0\n    local k=0\n    local num=0\n\n    for ((i=0; i<${#nums[@]}; i++)); do\n        num=${nums[$i]}\n        for ((j=0; j<${#unique_nums[@]}; j++)); do\n            if [[ $num -eq ${unique_nums[$j]} ]]; then\n                ((num_counts[$j]++))\n                break\n            fi\n        done\n        if [[ $j -eq ${#unique_nums[@]} ]]; then\n            unique_nums[$j]=$num\n            num_counts[$j]=1\n        fi\n    done\n\n    for ((i=0; i<${#unique_nums[@]}; i++)); do\n        if [[ ${num_counts[$i]} -eq 1 ]]; then\n            echo ${unique_nums[$i]}\n            ((k++))\n            if [[ $k -eq 2 ]]; then\n                break\n            fi\n        fi\n    done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local nums_uniq=()\n    local nums_uniq_len=0\n    local i=0\n    local j=0\n    local k=0\n    local num=0\n    local found=0\n    for ((i=0; i<nums_len; i++)); do\n        num=${nums[$i]}\n        found=0\n        for ((j=0; j<nums_uniq_len; j++)); do\n            if [[ ${nums_uniq[$j]} -eq $num ]]; then\n                found=1\n                break\n            fi\n        done\n        if [[ $found -eq 0 ]]; then\n            nums_uniq[$nums_uniq_len]=$num\n            ((nums_uniq_len++))\n        fi\n    done\n    for ((k=0; k<nums_uniq_len; k++)); do\n        echo -n \"${nums_uniq[$k]} \"\n    done\n    echo\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local nums_arr=($nums)\n    local nums_len=${#nums_arr[@]}\n    local nums_uniq=()\n    local nums_uniq_len=0\n\n    for ((i=0; i<nums_len; i++)); do\n        local num=${nums_arr[$i]}\n        local num_is_uniq=1\n\n        for ((j=0; j<nums_uniq_len; j++)); do\n            if [[ ${nums_uniq[$j]} == $num ]]; then\n                num_is_uniq=0\n                break\n            fi\n        done\n\n        if [[ $num_is_uniq == 1 ]]; then\n            nums_uniq[$nums_uniq_len]=$num\n            nums_uniq_len=$((nums_uniq_len + 1))\n        fi\n    done\n\n    echo ${nums_uniq[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  for num in ${nums[@]}; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local num1=0\n    local num2=0\n    local num_count=0\n    local num_count_max=0\n    local num_count_max_index=0\n    local num_count_max_index_prev=0\n    local num_count_max_index_prev_prev=0\n    local num_count_max_index_prev_prev_prev=0\n    local num_count_max_index_prev_prev_prev_prev=0\n    local num_count_max_index_prev_prev_prev_prev_prev=0\n    local num_count_max_index_prev_prev_prev_prev_prev_prev=0\n    local num_count_max_index_prev_prev_prev_prev_prev_prev_prev=0\n    local num_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local num_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local num_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local num_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local num_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local num_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local num_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local num_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local num_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    # $1 is a space-separated list\n    # $2 is a space-separated list\n    # $3 is a space-separated list\n    # $4 is a space-separated list\n    # $5 is a space-separated list\n    # $6 is a space-separated list\n    # $7 is a space-separated list\n    # $8 is a space-separated list\n    # $9 is a space-separated list\n    # $10 is a space-separated list\n    # $11 is a space-separated list\n    # $12 is a space-separated list\n    # $13 is a space-separated list\n    # $14 is a space-separated list\n    # $15 is a space-separated list\n    # $16 is a space-separated list\n    # $17 is a space-separated list\n    # $18 is a space-separated list\n    # $19 is a space-separated list\n    # $20 is a space-separated list\n    # $21 is a space-separated list\n    # $22 is a space-separated list\n    # $23 is a space-separated list\n    # $24 is a space-separated list\n    # $25 is a space-separated list\n    # $26 is a space-separated list\n    # $27 is a space-separated list\n    # $28 is a space-separated list\n    # $29 is a space-separated list\n    # $30 is a space-separated list\n    # $31 is a space-separated list\n    # $32 is a space-separated list\n    # $33 is a space-separated list\n    # $34 is a space-separated list\n    # $35 is a space-separated list\n    # $36 is a space-separated list\n    # $37 is a space-separated list\n    # $38 is a space-separated list\n    # $39 is a space-separated list\n    # $40 is a space-separated list\n    # $41 is a space-separated list\n    # $42 is a space-separated list\n    # $43 is a space\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp6whgnt7a.sh: line 49: syntax error near unexpected token `}'\\n/tmp/tmp6whgnt7a.sh: line 49: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local i=0\n    local j=0\n\n    for ((i=0; i<${#nums[@]}; i++)); do\n        for ((j=i+1; j<${#nums[@]}; j++)); do\n            if [[ ${nums[i]} -eq ${nums[j]} ]]; then\n                unique_nums+=(${nums[i]})\n                break\n            fi\n        done\n    done\n\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    for num in $nums; do\n        local count=$(echo $nums | tr ' ' '\\n' | grep -c $num)\n        if [ $count -eq 1 ]; then\n            echo $num\n        fi\n    done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  for num in ${nums[@]}; do\n    if [[ $num -gt 0 ]]; then\n      echo $num\n      break\n    fi\n  done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  for i in ${nums[@]}; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${i} \" ]]; then\n      unique_nums+=($i)\n    fi\n  done\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local nums_uniq=($(printf \"%s\\n\" \"${nums[@]}\" | sort -u))\n    local nums_uniq_len=${#nums_uniq[@]}\n    if [ $nums_len -eq $nums_uniq_len ]; then\n        echo \"No duplicates\"\n    else\n        echo \"Duplicates\"\n    fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local nums_arr=($nums)\n    local nums_len=${#nums_arr[@]}\n    local unique_nums=()\n    local unique_nums_len=0\n    local i=0\n    local j=0\n    local unique=1\n\n    for ((i=0; i<nums_len; i++)); do\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [[ ${nums_arr[i]} -eq ${unique_nums[j]} ]]; then\n                unique=0\n                break\n            fi\n        done\n        if [[ $unique -eq 1 ]]; then\n            unique_nums[unique_nums_len]=${nums_arr[i]}\n            unique_nums_len=$((unique_nums_len+1))\n        fi\n        unique=1\n    done\n\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local nums_unique=()\n    local nums_unique_len=0\n    local nums_unique_index=0\n    local nums_unique_found=0\n    local nums_unique_found_index=0\n    local nums_unique_found_index_1=0\n    local nums_unique_found_index_2=0\n    local nums_unique_found_index_3=0\n    local nums_unique_found_index_4=0\n    local nums_unique_found_index_5=0\n    local nums_unique_found_index_6=0\n    local nums_unique_found_index_7=0\n    local nums_unique_found_index_8=0\n    local nums_unique_found_index_9=0\n    local nums_unique_found_index_10=0\n    local nums_unique_found_index_11=0\n    local nums_unique_found_index_12=0\n    local nums_unique_found_index_13=0\n    local nums_unique_found_index_14=0\n    local nums_unique_found_index_15=0\n    local nums_unique_found_index_16=0\n    local nums_unique_found_index_17=0\n    local nums_unique_found_index_18=0\n    local nums_unique_found_index_19=0\n    local nums_unique_found_index_20=0\n    local nums_unique_found_index_21=0\n    local nums_unique_found_index_22=0\n    local nums_unique_found_index_23=0\n    local nums_unique_found_index_24=0\n    local nums_unique_found_index_25=0\n    local nums_unique_found_index_26=0\n    local nums_unique_found_index_27=0\n    local nums_unique_found_index_28=0\n    local nums_unique_found_index_29\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=\"$1\"\n  local num_arr=($nums)\n  local unique_nums=\"\"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    # Remove duplicates from the list\n    local unique_nums=$(echo \"$1\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    # Get the first two numbers from the list\n    echo \"$unique_nums\" | cut -d ' ' -f 1,2\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    echo \"$1\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local nums_unique=($(echo \"${nums[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n    local nums_unique_len=${#nums_unique[@]}\n    local nums_duplicate=($(echo \"${nums[@]}\" | tr ' ' '\\n' | sort | uniq -d | tr '\\n' ' '))\n    local nums_duplicate_len=${#nums_duplicate[@]}\n    local nums_duplicate_index=0\n    local nums_duplicate_index_len=0\n    local nums_duplicate_index_len_max=0\n    local nums_duplicate_index_len_max_index=0\n    local nums_duplicate_index_len_max_index_len=0\n    local nums_duplicate_index_len_max_index_len_max=0\n    local nums_duplicate_index_len_max_index_len_max_index=0\n    local nums_duplicate_index_len_max_index_len_max_index_len=0\n    local nums_duplicate_index_len_max_index_len_max_index_len_max=0\n    local nums_duplicate_index_len_max_index_len_max_index_len_max_index=0\n    local nums_duplicate_index_len_max_index_len_max_index_len_max_index_len=0\n    local nums_duplicate_index_len_max_index_len_max_index_len_max_index_len_max=0\n    local nums_duplicate_index_len_max_index_len_max_index_len_max_index_len_max_index=0\n    local nums_duplicate_index_len_max_index_len_max_index_len_max_index_len_max_index_\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  for num in ${nums[@]}; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local nums_arr=($nums)\n    local nums_len=${#nums_arr[@]}\n    local nums_uniq=()\n    local nums_uniq_len=0\n    local nums_uniq_str=\"\"\n    local i=0\n    local j=0\n    local is_dup=0\n\n    for ((i=0; i<nums_len; i++)); do\n        is_dup=0\n        for ((j=0; j<nums_uniq_len; j++)); do\n            if [[ ${nums_arr[i]} -eq ${nums_uniq[j]} ]]; then\n                is_dup=1\n                break\n            fi\n        done\n        if [[ $is_dup -eq 0 ]]; then\n            nums_uniq[nums_uniq_len]=${nums_arr[i]}\n            nums_uniq_len=$((nums_uniq_len + 1))\n        fi\n    done\n\n    if [[ $nums_uniq_len -eq 2 ]]; then\n        nums_uniq_str=\"${nums_uniq[0]} ${nums_uniq[1]}\"\n    else\n        nums_uniq_str=\"-1\"\n    fi\n\n    echo $nums_uniq_str\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local num_array=($nums)\n    local num_len=${#num_array[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local is_unique=0\n    for ((i=0; i<num_len; i++)); do\n        is_unique=1\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [[ ${num_array[i]} -eq ${unique_nums[j]} ]]; then\n                is_unique=0\n                break\n            fi\n        done\n        if [[ $is_unique -eq 1 ]]; then\n            unique_nums[unique_nums_len]=${num_array[i]}\n            unique_nums_len=$((unique_nums_len + 1))\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local num_list=($nums)\n    local num_list_len=${#num_list[@]}\n    local i=0\n    local j=0\n    local k=0\n    local num_list_unique=()\n    local num_list_unique_len=0\n    local num_list_unique_str=\"\"\n    local num_list_unique_str_len=0\n    local num_list_unique_str_len_prev=0\n    local num_list_unique_str_len_diff=0\n    local num_list_unique_str_len_diff_prev=0\n    local num_list_unique_str_len_diff_max=0\n    local num_list_unique_str_len_diff_max_idx=0\n    local num_list_unique_str_len_diff_max_idx_prev=0\n    local num_list_unique_str_len_diff_max_idx_diff=0\n    local num_list_unique_str_len_diff_max_idx_diff_prev=0\n    local num_list_unique_str_len_diff_max_idx_diff_max=0\n    local num_list_unique_str_len_diff_max_idx_diff_max_idx=0\n    local num_list_unique_str_len_diff_max_idx_diff_max_idx_prev=0\n    local num_list_unique_str_len_diff_max_idx_diff_max_idx_diff=0\n    local num_list_unique_str_len_diff_max_idx_diff_max_idx_diff_prev=0\n    local num_list_unique_str_len_diff_max_idx_diff_max_idx_diff_max=0\n    local num_list_unique_str_len_diff_max_idx_diff_max_idx_diff_max_idx=0\n    local num_list_unique_str_len_diff_max_idx_diff_max_idx_diff_max_idx_prev=0\n\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=$1\n  local num_list=($nums)\n  local num_list_len=${#num_list[@]}\n  local num_list_len_half=$((num_list_len / 2))\n  local num_list_len_half_plus_one=$((num_list_len_half + 1))\n  local num_list_half_1=${num_list[@]:0:$num_list_len_half}\n  local num_list_half_2=${num_list[@]:$num_list_len_half_plus_one}\n  local unique_nums_1=($(echo \"${num_list_half_1[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n  local unique_nums_2=($(echo \"${num_list_half_2[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n  local unique_nums_1_len=${#unique_nums_1[@]}\n  local unique_nums_2_len=${#unique_nums_2[@]}\n  local unique_nums_1_len_half=$((unique_nums_1_len / 2))\n  local unique_nums_1_len_half_plus_one=$((unique_nums_1_len_half + 1))\n  local unique_nums_2_len_half=$((unique_nums_2_len / 2))\n  local unique_nums_2_len_half_plus_one=$((unique_nums_2_len_half + 1))\n  local unique_nums_1_half_1=${unique_nums_1[@]:0:$unique_nums_1_len_half}\n  local unique_nums_1_half_2=${unique_nums_1[@]:$unique_nums_1_len_half_plus_one}\n  local unique_nums_2_half_1=${unique_nums_2[@]:0:$unique_nums_2_len_half\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp2iq_5obo.sh: line 38: syntax error: unexpected end of file\\n'",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    echo \"$1\" | tr ' ' '\\n' | sort | uniq -u | tr '\\n' ' '\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  # $1 is a space-separated list\n  # $2 is a space-separated list\n  # $3 is a space-separated list\n  # $4 is a space-separated list\n  # $5 is a space-separated list\n  # $6 is a space-separated list\n  # $7 is a space-separated list\n  # $8 is a space-separated list\n  # $9 is a space-separated list\n  # $10 is a space-separated list\n  # $11 is a space-separated list\n  # $12 is a space-separated list\n  # $13 is a space-separated list\n  # $14 is a space-separated list\n  # $15 is a space-separated list\n  # $16 is a space-separated list\n  # $17 is a space-separated list\n  # $18 is a space-separated list\n  # $19 is a space-separated list\n  # $20 is a space-separated list\n  # $21 is a space-separated list\n  # $22 is a space-separated list\n  # $23 is a space-separated list\n  # $24 is a space-separated list\n  # $25 is a space-separated list\n  # $26 is a space-separated list\n  # $27 is a space-separated list\n  # $28 is a space-separated list\n  # $29 is a space-separated list\n  # $30 is a space-separated list\n  # $31 is a space-separated list\n  # $32 is a space-separated list\n  # $33 is a space-separated list\n  # $34 is a space-separated list\n  # $35 is a space-separated list\n  # $36 is a space-separated list\n  # $37 is a space-separated list\n  # $38 is a space-separated list\n  # $39 is a space-separated list\n  # $40 is a space-separated list\n  # $41 is a space-separated list\n  # $42 is a space-separated list\n  # $43 is a space\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp04cn4nuy.sh: line 49: syntax error near unexpected token `}'\\n/tmp/tmp04cn4nuy.sh: line 49: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=$1\n  local nums_array=($nums)\n  local unique_nums_array=()\n  local unique_nums=\"\"\n\n  for num in ${nums_array[@]}; do\n    if [[ ! \" ${unique_nums_array[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums_array+=($num)\n    fi\n  done\n\n  unique_nums=$(printf \" %s\" \"${unique_nums_array[@]}\")\n  unique_nums=${unique_nums:1}\n\n  echo $unique_nums\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local num=0\n    local is_unique=0\n\n    for ((i=0; i<nums_len; i++)); do\n        num=${nums[$i]}\n        is_unique=1\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [ $num -eq ${unique_nums[$j]} ]; then\n                is_unique=0\n                break\n            fi\n        done\n        if [ $is_unique -eq 1 ]; then\n            unique_nums[$unique_nums_len]=$num\n            unique_nums_len=$((unique_nums_len+1))\n        fi\n    done\n\n    for ((i=0; i<unique_nums_len; i++)); do\n        for ((j=i+1; j<unique_nums_len; j++)); do\n            if [ ${unique_nums[$i]} -gt ${unique_nums[$j]} ]; then\n                num=${unique_nums[$i]}\n                unique_nums[$i]=${unique_nums[$j]}\n                unique_nums[$j]=$num\n            fi\n        done\n    done\n\n    for ((i=0; i<unique_nums_len; i++)); do\n        echo -n \"${unique_nums[$i]} \"\n    done\n    echo\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local i=0\n    local j=0\n    local k=0\n\n    for ((i=0; i<${#nums[@]}; i++))\n    do\n        for ((j=0; j<${#unique_nums[@]}; j++))\n        do\n            if [[ ${nums[i]} -eq ${unique_nums[j]} ]]\n            then\n                break\n            fi\n        done\n        if [[ $j -eq ${#unique_nums[@]} ]]\n        then\n            unique_nums[k]=${nums[i]}\n            ((k++))\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local num_list=($nums)\n    local unique_nums=()\n    for num in ${num_list[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    echo \"$1\" | tr ' ' '\\n' | sort | uniq -u | tr '\\n' ' '\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    echo \"$1\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local num=0\n    local num_count=0\n    local num_count_max=0\n    local num_max=0\n    local num_max_index=0\n    local num_max_count=0\n    local num_max_count_index=0\n    local num_max_count_index_2=0\n    local num_max_count_index_2_count=0\n    local num_max_count_index_2_count_max=0\n    local num_max_count_index_2_count_max_index=0\n    local num_max_count_index_2_count_max_index_2=0\n    local num_max_count_index_2_count_max_index_2_count=0\n    local num_max_count_index_2_count_max_index_2_count_max=0\n    local num_max_count_index_2_count_max_index_2_count_max_index=0\n    local num_max_count_index_2_count_max_index_2_count_max_index_2=0\n    local num_max_count_index_2_count_max_index_2_count_max_index_2_count=0\n    local num_max_count_index_2_count_max_index_2_count_max_index_2_count_max=0\n    local num_max_count_index_2_count_max_index_2_count_max_index_2_count_max_index=0\n    local num_max_count_index_2_count_max_index_2_count_max_index_2_count_max_index_2=0\n    local num_max_count_index_2_count_max_index_2_count_max_index_2_count_max_index_2_count=0\n    local num_max_count_index_2_count_max_index_2_count_max_index_2\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local -a nums=($1)\n    local -a uniq_nums=()\n    local -a dup_nums=()\n    local -a uniq_dup_nums=()\n    local -a uniq_dup_nums_sorted=()\n    local -a uniq_dup_nums_sorted_uniq=()\n    local -a uniq_dup_nums_sorted_uniq_dup=()\n    local -a uniq_dup_nums_sorted_uniq_dup_sorted=()\n    local -a uniq_dup_nums_sorted_uniq_dup_sorted_uniq=()\n\n    for num in ${nums[@]}; do\n        if [[ ! \" ${uniq_nums[@]} \" =~ \" ${num} \" ]]; then\n            uniq_nums+=($num)\n        else\n            dup_nums+=($num)\n        fi\n    done\n\n    for num in ${uniq_nums[@]}; do\n        if [[ ! \" ${dup_nums[@]} \" =~ \" ${num} \" ]]; then\n            uniq_dup_nums+=($num)\n        fi\n    done\n\n    for num in ${uniq_dup_nums[@]}; do\n        uniq_dup_nums_sorted+=($(echo \"${uniq_dup_nums[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '))\n    done\n\n    for num in ${uniq_dup_nums_sorted[@]}; do\n        if [[ ! \" ${uniq_dup_nums_sorted_uniq[@]} \" =~ \" ${num} \" ]]; then\n            uniq_dup_nums_sorted_uniq+=($num)\n        fi\n    done\n\n    for num in ${uniq_dup_nums_sorted_uniq[@]}; do\n        if [[ ! \" ${dup_nums[@]} \" =~ \" ${num} \" ]];\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmptgvh7uqj.sh: line 42: syntax error near unexpected token `}'\\n/tmp/tmptgvh7uqj.sh: line 42: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_count=0\n\n    for ((i=0; i<${#nums[@]}; i++)); do\n        for ((j=0; j<${#nums[@]}; j++)); do\n            if [[ ${nums[$i]} -eq ${nums[$j]} ]]; then\n                unique_nums[$k]=${nums[$i]}\n                k=$((k+1))\n            fi\n        done\n    done\n\n    unique_nums_count=${#unique_nums[@]}\n    echo $unique_nums_count\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num\n    for num in \"${nums[@]}\"; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo \"${unique_nums[@]}\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=\"$1\"\n  local nums_array=($nums)\n  local nums_length=${#nums_array[@]}\n  local unique_nums=()\n  local unique_nums_length=0\n  local i=0\n  local j=0\n  local k=0\n\n  for (( i=0; i<nums_length; i++ )); do\n    local num=${nums_array[$i]}\n    local is_unique=1\n    for (( j=0; j<unique_nums_length; j++ )); do\n      local unique_num=${unique_nums[$j]}\n      if [[ $num -eq $unique_num ]]; then\n        is_unique=0\n        break\n      fi\n    done\n    if [[ $is_unique -eq 1 ]]; then\n      unique_nums[$unique_nums_length]=$num\n      unique_nums_length=$((unique_nums_length + 1))\n    fi\n  done\n\n  for (( k=0; k<unique_nums_length; k++ )); do\n    echo -n \"${unique_nums[$k]} \"\n  done\n  echo\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num_counts=()\n    local i=0\n    local j=0\n\n    for ((i=0; i<${#nums[@]}; i++)); do\n        for ((j=0; j<${#unique_nums[@]}; j++)); do\n            if [[ ${nums[i]} -eq ${unique_nums[j]} ]]; then\n                ((num_counts[j]++))\n                break\n            fi\n        done\n        if [[ $j -eq ${#unique_nums[@]} ]]; then\n            unique_nums+=(${nums[i]})\n            num_counts+=(1)\n        fi\n    done\n\n    for ((i=0; i<${#unique_nums[@]}; i++)); do\n        if [[ ${num_counts[i]} -eq 1 ]]; then\n            echo ${unique_nums[i]}\n        fi\n    done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local nums_array=($nums)\n    local nums_array_len=${#nums_array[@]}\n    local nums_array_len_half=$((nums_array_len / 2))\n    local nums_array_len_half_plus_one=$((nums_array_len_half + 1))\n    local nums_array_len_half_minus_one=$((nums_array_len_half - 1))\n    local nums_array_len_half_minus_two=$((nums_array_len_half - 2))\n    local nums_array_len_half_minus_three=$((nums_array_len_half - 3))\n    local nums_array_len_half_minus_four=$((nums_array_len_half - 4))\n    local nums_array_len_half_minus_five=$((nums_array_len_half - 5))\n    local nums_array_len_half_minus_six=$((nums_array_len_half - 6))\n    local nums_array_len_half_minus_seven=$((nums_array_len_half - 7))\n    local nums_array_len_half_minus_eight=$((nums_array_len_half - 8))\n    local nums_array_len_half_minus_nine=$((nums_array_len_half - 9))\n    local nums_array_len_half_minus_ten=$((nums_array_len_half - 10))\n    local nums_array_len_half_minus_eleven=$((nums_array_len_half - 11))\n    local nums_array_len_half_minus_twelve=$((nums_array_len_half - 12))\n    local nums_array_len_half_minus_thirteen=$((nums_array_len_half - 13))\n    local nums_array_len_half_minus_fourteen=$((nums_array_len_half - 14))\n    local nums_array_len_half_minus_fifteen=$((nums_array_len_half - 15\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpku8gx9z6.sh: line 25: unexpected EOF while looking for matching `)'\\n/tmp/tmpku8gx9z6.sh: line 40: syntax error: unexpected end of file\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    # $1 is a space-separated list\n    # $2 is a space-separated list\n    # $3 is a space-separated list\n    # $4 is a space-separated list\n    # $5 is a space-separated list\n    # $6 is a space-separated list\n    # $7 is a space-separated list\n    # $8 is a space-separated list\n    # $9 is a space-separated list\n    # $10 is a space-separated list\n    # $11 is a space-separated list\n    # $12 is a space-separated list\n    # $13 is a space-separated list\n    # $14 is a space-separated list\n    # $15 is a space-separated list\n    # $16 is a space-separated list\n    # $17 is a space-separated list\n    # $18 is a space-separated list\n    # $19 is a space-separated list\n    # $20 is a space-separated list\n    # $21 is a space-separated list\n    # $22 is a space-separated list\n    # $23 is a space-separated list\n    # $24 is a space-separated list\n    # $25 is a space-separated list\n    # $26 is a space-separated list\n    # $27 is a space-separated list\n    # $28 is a space-separated list\n    # $29 is a space-separated list\n    # $30 is a space-separated list\n    # $31 is a space-separated list\n    # $32 is a space-separated list\n    # $33 is a space-separated list\n    # $34 is a space-separated list\n    # $35 is a space-separated list\n    # $36 is a space-separated list\n    # $37 is a space-separated list\n    # $38 is a space-separated list\n    # $39 is a space-separated list\n    # $40 is a space-separated list\n    # $41 is a space-separated list\n    # $42 is a space-separated list\n    # $43 is a space\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp6whgnt7a.sh: line 49: syntax error near unexpected token `}'\\n/tmp/tmp6whgnt7a.sh: line 49: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local num=0\n    local num_count=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local unique_nums_count=0\n\n    for ((i=0; i<nums_len; i++)); do\n        num=${nums[$i]}\n        num_count=0\n        for ((j=0; j<nums_len; j++)); do\n            if [ $num -eq ${nums[$j]} ]; then\n                num_count=$((num_count+1))\n            fi\n        done\n        if [ $num_count -eq 1 ]; then\n            unique_nums[$unique_nums_len]=$num\n            unique_nums_len=$((unique_nums_len+1))\n        fi\n    done\n\n    for ((i=0; i<unique_nums_len; i++)); do\n        num=${unique_nums[$i]}\n        num_count=0\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [ $num -eq ${unique_nums[$j]} ]; then\n                num_count=$((num_count+1))\n            fi\n        done\n        if [ $num_count -eq 1 ]; then\n            unique_nums_count=$((unique_nums_count+1))\n        fi\n    done\n\n    if [ $unique_nums_count -eq 2 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  local num\n  for num in \"${nums[@]}\"; do\n    if ! [[ \"${unique_nums[@]}\" =~ \"${num}\" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo \"${unique_nums[@]}\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local nums_unique=()\n    local nums_unique_len=0\n    local i=0\n    local j=0\n    local found=0\n\n    for ((i=0; i<nums_len; i++)); do\n        found=0\n        for ((j=0; j<nums_unique_len; j++)); do\n            if [[ ${nums[$i]} == ${nums_unique[$j]} ]]; then\n                found=1\n                break\n            fi\n        done\n        if [[ $found -eq 0 ]]; then\n            nums_unique[$nums_unique_len]=${nums[$i]}\n            nums_unique_len=$((nums_unique_len+1))\n        fi\n    done\n\n    echo ${nums_unique[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  for num in \"${nums[@]}\"; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo \"${unique_nums[@]}\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    # Get the first two unique numbers\n    local nums=($1)\n    local num1=${nums[0]}\n    local num2=${nums[1]}\n    if [ \"$num1\" = \"$num2\" ]; then\n        num2=${nums[2]}\n    fi\n\n    # Print the first two unique numbers\n    echo \"$num1 $num2\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local nums_array=($nums)\n    local nums_len=${#nums_array[@]}\n    local nums_unique_array=()\n    local nums_unique_len=0\n\n    for ((i=0; i<nums_len; i++)); do\n        local num=${nums_array[$i]}\n        local num_is_unique=1\n\n        for ((j=0; j<nums_unique_len; j++)); do\n            if [ \"$num\" == \"${nums_unique_array[$j]}\" ]; then\n                num_is_unique=0\n                break\n            fi\n        done\n\n        if [ \"$num_is_unique\" == \"1\" ]; then\n            nums_unique_array[$nums_unique_len]=$num\n            nums_unique_len=$((nums_unique_len + 1))\n        fi\n    done\n\n    echo ${nums_unique_array[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local nums_array=($nums)\n    local nums_array_len=${#nums_array[@]}\n    local nums_array_len_minus_one=$((nums_array_len - 1))\n    local nums_array_len_minus_two=$((nums_array_len - 2))\n    local nums_array_len_minus_three=$((nums_array_len - 3))\n    local nums_array_len_minus_four=$((nums_array_len - 4))\n    local nums_array_len_minus_five=$((nums_array_len - 5))\n    local nums_array_len_minus_six=$((nums_array_len - 6))\n    local nums_array_len_minus_seven=$((nums_array_len - 7))\n    local nums_array_len_minus_eight=$((nums_array_len - 8))\n    local nums_array_len_minus_nine=$((nums_array_len - 9))\n    local nums_array_len_minus_ten=$((nums_array_len - 10))\n    local nums_array_len_minus_eleven=$((nums_array_len - 11))\n    local nums_array_len_minus_twelve=$((nums_array_len - 12))\n    local nums_array_len_minus_thirteen=$((nums_array_len - 13))\n    local nums_array_len_minus_fourteen=$((nums_array_len - 14))\n    local nums_array_len_minus_fifteen=$((nums_array_len - 15))\n    local nums_array_len_minus_sixteen=$((nums_array_len - 16))\n    local nums_array_len_minus_seventeen=$((nums_array_len - 17))\n    local nums_array_len_minus_eighteen=$((nums_array_len - 18))\n    local nums_array_len_minus_nineteen=$((nums_array_len - 19))\n    local nums_\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local -a nums=($1)\n    local -a unique_nums=()\n    local -a unique_nums_indexes=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i nums_len=${#nums[@]}\n    local -i unique_nums_len=0\n    local -i unique_nums_indexes_len=0\n    local -i num_is_unique=0\n    local -i num_is_unique_index=0\n    local -i num_is_unique_index_index=0\n    local -i num_is_unique_index_index_index=0\n    local -i num_is_unique_index_index_index_index=0\n    local -i num_is_unique_index_index_index_index_index=0\n    local -i num_is_unique_index_index_index_index_index_index=0\n    local -i num_is_unique_index_index_index_index_index_index_index=0\n    local -i num_is_unique_index_index_index_index_index_index_index_index=0\n    local -i num_is_unique_index_index_index_index_index_index_index_index_index=0\n    local -i num_is_unique_index_index_index_index_index_index_index_index_index_index=0\n    local -i num_is_unique_index_index_index_index_index_index_index_index_index_index_index=0\n    local -i num_is_unique_index_index_index_index_index_index_index_index_index_index_index_index=0\n    local -i num_is_unique_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n    local -i num_is_unique_index_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n    local -i num_is_unique_index_index_index\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local list=$1\n  local num1=0\n  local num2=0\n  local num=0\n  local i=0\n  local j=0\n  local k=0\n  local num_list=($list)\n  local num_list_len=${#num_list[@]}\n  local num_list_len_minus_one=$((num_list_len - 1))\n  local num_list_len_minus_two=$((num_list_len - 2))\n  local num_list_len_minus_three=$((num_list_len - 3))\n  local num_list_len_minus_four=$((num_list_len - 4))\n  local num_list_len_minus_five=$((num_list_len - 5))\n  local num_list_len_minus_six=$((num_list_len - 6))\n  local num_list_len_minus_seven=$((num_list_len - 7))\n  local num_list_len_minus_eight=$((num_list_len - 8))\n  local num_list_len_minus_nine=$((num_list_len - 9))\n  local num_list_len_minus_ten=$((num_list_len - 10))\n  local num_list_len_minus_eleven=$((num_list_len - 11))\n  local num_list_len_minus_twelve=$((num_list_len - 12))\n  local num_list_len_minus_thirteen=$((num_list_len - 13))\n  local num_list_len_minus_fourteen=$((num_list_len - 14))\n  local num_list_len_minus_fifteen=$((num_list_len - 15))\n  local num_list_len_minus_sixteen=$((num_list_len - 16))\n  local num_list_len_minus_seventeen=$((num_list_len - 17))\n  local num_list_len_minus_eighteen=$((num_list_len - 18))\n  local num_list_len_minus_nineteen=$((num_list_len - 19))\n  local num_list_len_minus_twenty\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local is_unique=1\n\n    for ((i=0; i<nums_len; i++)); do\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [[ ${nums[$i]} -eq ${unique_nums[$j]} ]]; then\n                is_unique=0\n                break\n            fi\n        done\n        if [[ $is_unique -eq 1 ]]; then\n            unique_nums[$unique_nums_len]=${nums[$i]}\n            unique_nums_len=$((unique_nums_len+1))\n        fi\n        is_unique=1\n    done\n\n    for ((k=0; k<unique_nums_len; k++)); do\n        echo ${unique_nums[$k]}\n    done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    echo \"$1\" | tr ' ' '\\n' | sort | uniq -u\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local nums_len=${#nums[@]}\n  local nums_uniq=($(echo \"${nums[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n  local nums_uniq_len=${#nums_uniq[@]}\n  if [[ $nums_len -eq $nums_uniq_len ]]; then\n    echo \"All numbers are unique.\"\n  else\n    echo \"There are duplicate numbers.\"\n  fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  echo \"$1\" | tr ' ' '\\n' | sort -n | uniq -u\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local list=$1\n    local nums=($list)\n    local unique_nums=()\n    local i=0\n    local j=0\n    local k=0\n    local len=${#nums[@]}\n    local unique=1\n    for ((i=0; i<len; i++))\n    do\n        for ((j=0; j<len; j++))\n        do\n            if [ $i -ne $j ] && [ ${nums[$i]} -eq ${nums[$j]} ]\n            then\n                unique=0\n                break\n            fi\n        done\n        if [ $unique -eq 1 ]\n        then\n            unique_nums[$k]=${nums[$i]}\n            k=$((k+1))\n        fi\n        unique=1\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for ((i=0; i<${#nums[@]}; i++)); do\n        for ((j=i+1; j<${#nums[@]}; j++)); do\n            if [[ ${nums[i]} -eq ${nums[j]} ]]; then\n                unique_nums+=(${nums[i]})\n            fi\n        done\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local unique_nums=()\n    local unique_nums_len=0\n    local i=0\n    local j=0\n    local is_unique=1\n\n    for ((i=0; i<nums_len; i++)); do\n        is_unique=1\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [[ ${nums[i]} -eq ${unique_nums[j]} ]]; then\n                is_unique=0\n                break\n            fi\n        done\n        if [[ $is_unique -eq 1 ]]; then\n            unique_nums[unique_nums_len]=${nums[i]}\n            unique_nums_len=$((unique_nums_len+1))\n        fi\n    done\n\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local nums_arr=($nums)\n    local nums_len=${#nums_arr[@]}\n    local i=0\n    local j=0\n    local k=0\n    local nums_unique=()\n    for ((i=0; i<nums_len; i++)) {\n        for ((j=i+1; j<nums_len; j++)) {\n            if [[ ${nums_arr[i]} -eq ${nums_arr[j]} ]]; then\n                nums_arr[j]=0\n            fi\n        }\n    }\n    for ((k=0; k<nums_len; k++)) {\n        if [[ ${nums_arr[k]} -ne 0 ]]; then\n            nums_unique+=(${nums_arr[k]})\n        fi\n    }\n    echo \"${nums_unique[@]}\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  local num\n  for num in ${nums[@]}; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local nums_len=${#nums[@]}\n  local i=0\n  local j=0\n  local k=0\n  local unique_nums=()\n\n  for ((i=0; i < nums_len; i++)); do\n    for ((j=0; j < nums_len; j++)); do\n      if [[ ${nums[i]} -eq ${nums[j]} ]]; then\n        k=$((k + 1))\n      fi\n    done\n    if [[ $k -eq 1 ]]; then\n      unique_nums+=(${nums[i]})\n    fi\n    k=0\n  done\n\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n   \n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  local num\n  for num in ${nums[@]}; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in \"${nums[@]}\"; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo \"${unique_nums[@]}\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local num_list=($nums)\n    local num_list_len=${#num_list[@]}\n    local num_list_len_minus_1=$((num_list_len - 1))\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local unique_nums_len_minus_1=0\n    local found=0\n\n    for ((i=0; i<num_list_len; i++)); do\n        found=0\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [[ \"${num_list[$i]}\" == \"${unique_nums[$j]}\" ]]; then\n                found=1\n                break\n            fi\n        done\n        if [[ $found -eq 0 ]]; then\n            unique_nums[$unique_nums_len]=${num_list[$i]}\n            unique_nums_len=$((unique_nums_len + 1))\n        fi\n    done\n\n    unique_nums_len_minus_1=$((unique_nums_len - 1))\n    for ((i=0; i<unique_nums_len_minus_1; i++)); do\n        echo -n \"${unique_nums[$i]} \"\n    done\n    echo \"${unique_nums[$unique_nums_len_minus_1]}\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in \"${nums[@]}\"; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo \"${unique_nums[@]}\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local -a nums=($1)\n    local -a unique_nums=()\n    local -a unique_nums_count=()\n    local num\n    local i\n    local j\n    local k\n    local found\n\n    for ((i=0; i<${#nums[@]}; i++)); do\n        num=${nums[$i]}\n        found=0\n        for ((j=0; j<${#unique_nums[@]}; j++)); do\n            if [ \"$num\" == \"${unique_nums[$j]}\" ]; then\n                found=1\n                unique_nums_count[$j]=$((unique_nums_count[$j]+1))\n                break\n            fi\n        done\n        if [ \"$found\" == \"0\" ]; then\n            unique_nums[$j]=$num\n            unique_nums_count[$j]=1\n        fi\n    done\n\n    for ((i=0; i<${#unique_nums_count[@]}; i++)); do\n        if [ \"${unique_nums_count[$i]}\" == \"1\" ]; then\n            echo \"${unique_nums[$i]}\"\n        fi\n    done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local nums_arr=($nums)\n    local nums_len=${#nums_arr[@]}\n    local i=0\n    local j=0\n    local k=0\n    local nums_uniq=()\n    local nums_uniq_len=0\n    local nums_uniq_str=\"\"\n    local nums_uniq_arr=()\n    local nums_uniq_arr_len=0\n    local nums_uniq_arr_str=\"\"\n\n    for ((i=0; i<nums_len; i++)); do\n        for ((j=i+1; j<nums_len; j++)); do\n            if [[ ${nums_arr[$i]} -eq ${nums_arr[$j]} ]]; then\n                nums_uniq[$k]=${nums_arr[$i]}\n                k=$((k+1))\n                break\n            fi\n        done\n    done\n\n    nums_uniq_len=${#nums_uniq[@]}\n    nums_uniq_str=$(echo ${nums_uniq[@]} | tr ' ' '\\n' | sort -u)\n    nums_uniq_arr=($nums_uniq_str)\n    nums_uniq_arr_len=${#nums_uniq_arr[@]}\n    nums_uniq_arr_str=$(echo ${nums_uniq_arr[@]} | tr ' ' '\\n' | sort -u)\n\n    echo \"nums_uniq_len: $nums_uniq_len\"\n    echo \"nums_uniq_str: $nums_uniq_str\"\n    echo \"nums_uniq_arr_len: $nums_uniq_arr_len\"\n    echo \"nums_uniq_arr_str: $nums_uniq_arr_str\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  for num in ${nums[@]}; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local unique_nums_index=0\n\n    for ((i=0; i<nums_len; i++)); do\n        for ((j=i+1; j<nums_len; j++)); do\n            if [[ ${nums[$i]} -eq ${nums[$j]} ]]; then\n                break\n            fi\n        done\n        if [[ $j -eq $nums_len ]]; then\n            unique_nums[$unique_nums_index]=${nums[$i]}\n            ((unique_nums_index++))\n        fi\n    done\n    unique_nums_len=${#unique_nums[@]}\n    for ((k=0; k<unique_nums_len; k++)); do\n        echo -n \"${unique_nums[$k]} \"\n    done\n    echo\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local list=$1\n    local nums=($list)\n    local num1=${nums[0]}\n    local num2=${nums[1]}\n    if [[ $num1 -eq $num2 ]]; then\n        echo $num1\n    else\n        echo $num1 $num2\n    fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local nums_len=${#nums[@]}\n  local i j\n  for ((i=0; i<nums_len; i++)); do\n    for ((j=i+1; j<nums_len; j++)); do\n      if [[ ${nums[i]} -eq ${nums[j]} ]]; then\n        nums[j]=\n      fi\n    done\n  done\n  echo ${nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            continue\n        fi\n        unique_nums+=($num)\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local nums_arr=($nums)\n    local nums_len=${#nums_arr[@]}\n    local i=0\n    local j=0\n    local k=0\n    local nums_unique=()\n    local nums_unique_len=0\n    local nums_unique_str=\"\"\n\n    for ((i=0; i<nums_len; i++)); do\n        for ((j=0; j<nums_unique_len; j++)); do\n            if [[ ${nums_arr[i]} -eq ${nums_unique[j]} ]]; then\n                break\n            fi\n        done\n        if [[ $j -eq $nums_unique_len ]]; then\n            nums_unique[nums_unique_len]=${nums_arr[i]}\n            ((nums_unique_len++))\n        fi\n    done\n\n    for ((k=0; k<nums_unique_len; k++)); do\n        nums_unique_str=\"$nums_unique_str ${nums_unique[k]}\"\n    done\n    echo $nums_unique_str\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local nums_arr=($nums)\n    local nums_len=${#nums_arr[@]}\n    local nums_set=()\n    local nums_set_len=0\n    local nums_set_idx=0\n    local nums_set_idx_max=0\n    local nums_set_idx_min=0\n    local nums_set_idx_mid=0\n    local nums_set_idx_mid_val=0\n    local nums_set_idx_mid_val_prev=0\n    local nums_set_idx_mid_val_next=0\n    local nums_set_idx_mid_val_prev_diff=0\n    local nums_set_idx_mid_val_next_diff=0\n    local nums_set_idx_mid_val_prev_diff_abs=0\n    local nums_set_idx_mid_val_next_diff_abs=0\n    local nums_set_idx_mid_val_prev_diff_abs_min=0\n    local nums_set_idx_mid_val_next_diff_abs_min=0\n    local nums_set_idx_mid_val_prev_diff_abs_min_idx=0\n    local nums_set_idx_mid_val_next_diff_abs_min_idx=0\n    local nums_set_idx_mid_val_prev_diff_abs_min_idx_val=0\n    local nums_set_idx_mid_val_next_diff_abs_min_idx_val=0\n    local nums_set_idx_mid_val_prev_diff_abs_min_idx_val_prev=0\n    local nums_set_idx_mid_val_next_diff_abs_min_idx_val_next=0\n    local nums_set_idx_mid_val_prev_diff_abs_min_idx_val_prev_diff=0\n    local nums_set_id\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=\"$1\"\n  local nums_arr=($nums)\n  local nums_len=${#nums_arr[@]}\n  local nums_uniq=($(echo \"${nums_arr[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n  local nums_uniq_len=${#nums_uniq[@]}\n  local nums_dup_len=$((nums_len - nums_uniq_len))\n  local nums_dup_arr=()\n  local nums_dup_arr_len=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n \n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=\"$1\"\n  local nums_arr=($nums)\n  local unique_nums=()\n  local i=0\n  local j=0\n  local k=0\n  local nums_len=${#nums_arr[@]}\n  local unique_nums_len=0\n  local is_unique=0\n\n  for ((i=0; i<nums_len; i++)); do\n    is_unique=1\n    for ((j=0; j<unique_nums_len; j++)); do\n      if [[ ${nums_arr[i]} -eq ${unique_nums[j]} ]]; then\n        is_unique=0\n        break\n      fi\n    done\n    if [[ $is_unique -eq 1 ]]; then\n      unique_nums[k]=${nums_arr[i]}\n      k=$((k+1))\n      unique_nums_len=$((unique_nums_len+1))\n    fi\n  done\n\n  echo \"${unique_nums[@]}\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  local num\n  for num in \"${nums[@]}\"; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo \"${unique_nums[@]}\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  for num in ${nums[@]}; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local nums_uniq=()\n    local nums_uniq_len=0\n    local num_i=0\n\n    for ((i=0; i<nums_len; i++)); do\n        num_i=${nums[$i]}\n        if [[ \" ${nums_uniq[@]} \" =~ \" ${num_i} \" ]]; then\n            continue\n        fi\n        nums_uniq[nums_uniq_len]=$num_i\n        ((nums_uniq_len++))\n    done\n    echo ${nums_uniq[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_sorted=($(printf \"%s\\n\" \"${nums[@]}\" | sort -n))\n    local nums_sorted_uniq=($(printf \"%s\\n\" \"${nums_sorted[@]}\" | uniq))\n    local nums_sorted_uniq_len=${#nums_sorted_uniq[@]}\n    if [ $nums_sorted_uniq_len -eq 1 ]; then\n        echo ${nums_sorted_uniq[0]}\n    elif [ $nums_sorted_uniq_len -eq 2 ]; then\n        echo ${nums_sorted_uniq[@]}\n    else\n        echo \"More than 2 unique numbers\"\n    fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique=($(echo ${nums[@]} | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n    echo ${unique[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local num=0\n    for ((i=0; i<nums_len; i++)); do\n        num=${nums[$i]}\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [ $num -eq ${unique_nums[$j]} ]; then\n                break\n            fi\n        done\n        if [ $j -eq $unique_nums_len ]; then\n            unique_nums[$k]=$num\n            k=$((k+1))\n            unique_nums_len=$((unique_nums_len+1))\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local num_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n\n    for ((i=0; i<num_len; i++)); do\n        for ((j=i+1; j<num_len; j++)); do\n            if [[ ${nums[i]} -eq ${nums[j]} ]]; then\n                break\n            fi\n        done\n        if [[ $j -eq $num_len ]]; then\n            unique_nums[k]=${nums[i]}\n            ((k++))\n        fi\n    done\n    unique_nums_len=${#unique_nums[@]}\n    for ((i=0; i<unique_nums_len; i++)); do\n        echo ${unique_nums[i]}\n    done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local nums_len=${#nums[@]}\n  local nums_len_minus_1=$((nums_len - 1))\n  local nums_len_minus_2=$((nums_len - 2))\n  local nums_len_minus_3=$((nums_len - 3))\n\n  if [[ $nums_len -eq 2 ]]; then\n    echo ${nums[0]} ${nums[1]}\n  elif [[ $nums_len -eq 3 ]]; then\n    if [[ ${nums[0]} -eq ${nums[1]} ]]; then\n      echo ${nums[0]} ${nums[2]}\n    elif [[ ${nums[0]} -eq ${nums[2]} ]]; then\n      echo ${nums[0]} ${nums[1]}\n    elif [[ ${nums[1]} -eq ${nums[2]} ]]; then\n      echo ${nums[0]} ${nums[1]}\n    else\n      echo ${nums[0]} ${nums[1]} ${nums[2]}\n    fi\n  else\n    if [[ ${nums[0]} -eq ${nums[1]} ]]; then\n      two_unique_nums \"${nums[@]:2}\"\n    elif [[ ${nums[0]} -eq ${nums[2]} ]]; then\n      two_unique_nums \"${nums[@]:2}\"\n    elif [[ ${nums[0]} -eq ${nums[3]} ]]; then\n      two_unique_nums \"${nums[@]:2}\"\n    elif [[ ${nums[1]} -eq ${nums[2]} ]]; then\n      two_unique_nums \"${nums[@]:1}\"\n    elif [[ ${nums[1]} -eq ${nums[3]} ]]; then\n      two_unique_nums \"${nums[@]:1}\"\n    elif [[ ${nums[2]} -eq ${nums[3]} ]]; then\n      two_unique_nums \"${nums[@]:0:2} ${nums[@]:3\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp409dj7vs.sh: line 47: unexpected EOF while looking for matching `\"\\'\\n/tmp/tmp409dj7vs.sh: line 51: syntax error: unexpected end of file\\n'",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local nums_unique=()\n    local nums_unique_len=0\n\n    for ((i=0; i<nums_len; i++)); do\n        for ((j=i+1; j<nums_len; j++)); do\n            if [[ ${nums[$i]} -eq ${nums[$j]} ]]; then\n                unset nums[$i]\n            fi\n        done\n    done\n\n    nums_unique=(${nums[@]})\n    nums_unique_len=${#nums_unique[@]}\n\n    for ((k=0; k<nums_unique_len; k++)); do\n        echo ${nums_unique[$k]}\n    done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=$1\n  local nums_arr=($nums)\n  local nums_len=${#nums_arr[@]}\n  local nums_uniq=()\n  local nums_uniq_len=0\n  local nums_uniq_str=\"\"\n  local i=0\n  local j=0\n  local is_dup=0\n\n  for ((i=0; i<nums_len; i++)); do\n    is_dup=0\n    for ((j=0; j<nums_uniq_len; j++)); do\n      if [[ ${nums_arr[i]} -eq ${nums_uniq[j]} ]]; then\n        is_dup=1\n        break\n      fi\n    done\n    if [[ $is_dup -eq 0 ]]; then\n      nums_uniq+=(${nums_arr[i]})\n      nums_uniq_len=${#nums_uniq[@]}\n    fi\n  done\n\n  nums_uniq_str=$(printf \" %d\" \"${nums_uniq[@]}\")\n  echo \"${nums_uniq_str:1}\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local num_list=($nums)\n    local num_list_len=${#num_list[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local is_unique=0\n    for ((i=0; i<num_list_len; i++)); do\n        is_unique=1\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [ ${num_list[i]} -eq ${unique_nums[j]} ]; then\n                is_unique=0\n                break\n            fi\n        done\n        if [ $is_unique -eq 1 ]; then\n            unique_nums[k]=${num_list[i]}\n            k=$((k+1))\n            unique_nums_len=$((unique_nums_len+1))\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in \"${nums[@]}\"; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo \"${unique_nums[@]}\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    echo \"$1\" | tr ' ' '\\n' | sort | uniq -u | tr '\\n' ' '\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local num=0\n    local num_count=0\n    local unique_nums=()\n    local unique_nums_len=0\n\n    for ((i=0; i<nums_len; i++)); do\n        num=${nums[$i]}\n        num_count=0\n        for ((j=0; j<nums_len; j++)); do\n            if [ $num -eq ${nums[$j]} ]; then\n                num_count=$((num_count + 1))\n            fi\n        done\n        if [ $num_count -eq 1 ]; then\n            unique_nums+=($num)\n        fi\n    done\n    unique_nums_len=${#unique_nums[@]}\n    if [ $unique_nums_len -eq 2 ]; then\n        echo \"${unique_nums[0]} ${unique_nums[1]}\"\n    else\n        echo \"There are not exactly two unique numbers.\"\n    fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num_counts=()\n    for num in ${nums[@]}; do\n        if [[ -z ${num_counts[$num]} ]]; then\n            unique_nums+=($num)\n            num_counts[$num]=1\n        else\n            num_counts[$num]=$((num_counts[$num] + 1))\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    echo \"$1\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if [[ ${nums[i]} -eq ${nums[j]} ]]; then\n                break\n            fi\n        done\n        if [[ $j -eq $len ]]; then\n            unique_nums[$k]=${nums[i]}\n            ((k++))\n        fi\n    done\n    unique_nums_len=${#unique_nums[@]}\n    for ((i=0; i<unique_nums_len; i++)); do\n        echo ${unique_nums[i]}\n    done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local list=\"$1\"\n  local nums=($list)\n  local num_counts=()\n  local num_counts_index=0\n  local num_counts_index_max=0\n  local num_counts_index_max_value=0\n  local num_counts_index_max_index=0\n  local num_counts_index_max_index_value=0\n  local num_counts_index_max_index_value_count=0\n  local num_counts_index_max_index_value_count_max=0\n  local num_counts_index_max_index_value_count_max_value=0\n  local num_counts_index_max_index_value_count_max_value_index=0\n  local num_counts_index_max_index_value_count_max_value_index_value=0\n  local num_counts_index_max_index_value_count_max_value_index_value_count=0\n  local num_counts_index_max_index_value_count_max_value_index_value_count_max=0\n  local num_counts_index_max_index_value_count_max_value_index_value_count_max_value=0\n  local num_counts_index_max_index_value_count_max_value_index_value_count_max_value_index=0\n  local num_counts_index_max_index_value_count_max_value_index_value_count_max_value_index_value=0\n  local num_counts_index_max_index_value_count_max_value_index_value_count_max_value_index_value_count=0\n  local num_counts_index_max_index_value_count_max_value_index_value_count_max_value_index_value_count_max=0\n  local num_counts_index_max_index_value_count_max_value_index_value_count_max_value_index_value_count_max_value=0\n  local num_counts_index_max_\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local unique_num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=\"$1\"\n  local nums_array=($nums)\n  local nums_array_len=${#nums_array[@]}\n  local nums_array_len_half=$((nums_array_len/2))\n  local nums_array_len_half_plus_one=$((nums_array_len_half+1))\n  local nums_array_len_half_minus_one=$((nums_array_len_half-1))\n  local nums_array_len_minus_one=$((nums_array_len-1))\n  local nums_array_len_minus_two=$((nums_array_len-2))\n  local nums_array_len_minus_three=$((nums_array_len-3))\n  local nums_array_len_minus_four=$((nums_array_len-4))\n  local nums_array_len_minus_five=$((nums_array_len-5))\n  local nums_array_len_minus_six=$((nums_array_len-6))\n  local nums_array_len_minus_seven=$((nums_array_len-7))\n  local nums_array_len_minus_eight=$((nums_array_len-8))\n  local nums_array_len_minus_nine=$((nums_array_len-9))\n  local nums_array_len_minus_ten=$((nums_array_len-10))\n  local nums_array_len_minus_eleven=$((nums_array_len-11))\n  local nums_array_len_minus_twelve=$((nums_array_len-12))\n  local nums_array_len_minus_thirteen=$((nums_array_len-13))\n  local nums_array_len_minus_fourteen=$((nums_array_len-14))\n  local nums_array_len_minus_fifteen=$((nums_array_len-15))\n  local nums_array_len_minus_sixteen=$((nums_array_len-16))\n  local num\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    # $1 is a space-separated list\n    # $2 is a space-separated list\n    # $3 is a space-separated list\n    # $4 is a space-separated list\n    # $5 is a space-separated list\n    # $6 is a space-separated list\n    # $7 is a space-separated list\n    # $8 is a space-separated list\n    # $9 is a space-separated list\n    # $10 is a space-separated list\n    # $11 is a space-separated list\n    # $12 is a space-separated list\n    # $13 is a space-separated list\n    # $14 is a space-separated list\n    # $15 is a space-separated list\n    # $16 is a space-separated list\n    # $17 is a space-separated list\n    # $18 is a space-separated list\n    # $19 is a space-separated list\n    # $20 is a space-separated list\n    # $21 is a space-separated list\n    # $22 is a space-separated list\n    # $23 is a space-separated list\n    # $24 is a space-separated list\n    # $25 is a space-separated list\n    # $26 is a space-separated list\n    # $27 is a space-separated list\n    # $28 is a space-separated list\n    # $29 is a space-separated list\n    # $30 is a space-separated list\n    # $31 is a space-separated list\n    # $32 is a space-separated list\n    # $33 is a space-separated list\n    # $34 is a space-separated list\n    # $35 is a space-separated list\n    # $36 is a space-separated list\n    # $37 is a space-separated list\n    # $38 is a space-separated list\n    # $39 is a space-separated list\n    # $40 is a space-separated list\n    # $41 is a space-separated list\n    # $42 is a space-separated list\n    # $43 is a space\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp6whgnt7a.sh: line 49: syntax error near unexpected token `}'\\n/tmp/tmp6whgnt7a.sh: line 49: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_count=${#nums[@]}\n    local i=0\n    local j=0\n    local unique_nums=()\n    local unique_nums_count=0\n    local unique_nums_index=0\n    local num=0\n\n    for ((i=0; i<nums_count; i++)); do\n        num=${nums[$i]}\n        unique_nums_index=0\n        unique_nums_count=${#unique_nums[@]}\n        for ((j=0; j<unique_nums_count; j++)); do\n            if [ $num -eq ${unique_nums[$j]} ]; then\n                unique_nums_index=1\n                break\n            fi\n        done\n        if [ $unique_nums_index -eq 0 ]; then\n            unique_nums+=($num)\n        fi\n    done\n\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local -a nums\n    local i\n    local j\n    local k\n    local -i len\n    local -i len2\n    local -i len3\n    local -i flag\n    local -i flag2\n    local -i flag3\n    local -i flag4\n    local -i flag5\n    local -i flag6\n    local -i flag7\n    local -i flag8\n    local -i flag9\n    local -i flag10\n    local -i flag11\n    local -i flag12\n    local -i flag13\n    local -i flag14\n    local -i flag15\n    local -i flag16\n    local -i flag17\n    local -i flag18\n    local -i flag19\n    local -i flag20\n    local -i flag21\n    local -i flag22\n    local -i flag23\n    local -i flag24\n    local -i flag25\n    local -i flag26\n    local -i flag27\n    local -i flag28\n    local -i flag29\n    local -i flag30\n    local -i flag31\n    local -i flag32\n    local -i flag33\n    local -i flag34\n    local -i flag35\n    local -i flag36\n    local -i flag37\n    local -i flag38\n    local -i flag39\n    local -i flag40\n    local -i flag41\n    local -i flag42\n    local -i flag43\n    local -i flag44\n    local -i flag45\n    local -i flag46\n    local -i flag47\n    local -i flag48\n    local -i flag49\n    local -i flag50\n    local -i flag51\n    local -i flag52\n    local -i flag53\n    local -i flag54\n    local -i flag55\n    local -i flag56\n    local -i flag57\n    local -i flag58\n    local -i flag59\n    local -i flag60\n    local -i flag61\n    local -i flag62\n    local -i flag63\n    local -i flag64\n    local -i flag65\n    local -i flag66\n    local -i flag67\n    local -i\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=($(echo \"${nums[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n    echo \"${unique_nums[@]}\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  local num_counts=()\n  local i=0\n  local j=0\n  local num=0\n  local count=0\n\n  for num in ${nums[@]}; do\n    for j in ${!unique_nums[@]}; do\n      if [[ ${unique_nums[$j]} == $num ]]; then\n        ((num_counts[$j]++))\n        break\n      fi\n    done\n    if [[ $j -eq ${#unique_nums[@]} ]]; then\n      unique_nums+=($num)\n      num_counts+=(1)\n    fi\n  done\n\n  for i in ${!num_counts[@]}; do\n    if [[ ${num_counts[$i]} -eq 1 ]]; then\n      echo ${unique_nums[$i]}\n    fi\n  done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local nums_uniq=()\n    local nums_uniq_len=0\n    local nums_uniq_idx=0\n    local nums_uniq_found=0\n    local nums_uniq_idx_found=0\n    local nums_uniq_idx_found_prev=0\n    local nums_uniq_idx_found_prev_prev=0\n    local nums_uniq_idx_found_prev_prev_prev=0\n    local nums_uniq_idx_found_prev_prev_prev_prev=0\n    local nums_uniq_idx_found_prev_prev_prev_prev_prev=0\n    local nums_uniq_idx_found_prev_prev_prev_prev_prev_prev=0\n    local nums_uniq_idx_found_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_uniq_idx_found_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_uniq_idx_found_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_uniq_idx_found_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_uniq_idx_found_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_uniq_idx_found_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_uniq_idx_found_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_uniq_idx_found_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local nums_\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  for num in ${nums[@]}; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local nums_array=($nums)\n    local unique_nums=()\n    local num\n    for num in ${nums_array[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    # $1 is a space-separated list\n    # $2 is a space-separated list\n    # $3 is a space-separated list\n    # $4 is a space-separated list\n    # $5 is a space-separated list\n    # $6 is a space-separated list\n    # $7 is a space-separated list\n    # $8 is a space-separated list\n    # $9 is a space-separated list\n    # $10 is a space-separated list\n    # $11 is a space-separated list\n    # $12 is a space-separated list\n    # $13 is a space-separated list\n    # $14 is a space-separated list\n    # $15 is a space-separated list\n    # $16 is a space-separated list\n    # $17 is a space-separated list\n    # $18 is a space-separated list\n    # $19 is a space-separated list\n    # $20 is a space-separated list\n    # $21 is a space-separated list\n    # $22 is a space-separated list\n    # $23 is a space-separated list\n    # $24 is a space-separated list\n    # $25 is a space-separated list\n    # $26 is a space-separated list\n    # $27 is a space-separated list\n    # $28 is a space-separated list\n    # $29 is a space-separated list\n    # $30 is a space-separated list\n    # $31 is a space-separated list\n    # $32 is a space-separated list\n    # $33 is a space-separated list\n    # $34 is a space-separated list\n    # $35 is a space-separated list\n    # $36 is a space-separated list\n    # $37 is a space-separated list\n    # $38 is a space-separated list\n    # $39 is a space-separated list\n    # $40 is a space-separated list\n    # $41 is a space-separated list\n    # $42 is a space-separated list\n    # $43 is a space\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp6whgnt7a.sh: line 49: syntax error near unexpected token `}'\\n/tmp/tmp6whgnt7a.sh: line 49: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for ((i=0; i<${#nums[@]}; i++)); do\n        local num=${nums[$i]}\n        if [[ \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            continue\n        fi\n        unique_nums+=($num)\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local num1=0\n    local num2=0\n    local num=0\n    local i=0\n    local j=0\n    local k=0\n    local num_list=()\n    local num_list_len=0\n    local num_list_unique=()\n    local num_list_unique_len=0\n    local num_list_unique_str=''\n\n    # Convert the space-separated list to an array\n    num_list=($nums)\n    num_list_len=${#num_list[@]}\n\n    # Remove duplicates from the array\n    for ((i=0; i<num_list_len; i++)); do\n        num=${num_list[$i]}\n        for ((j=0; j<num_list_unique_len; j++)); do\n            if [ $num -eq ${num_list_unique[$j]} ]; then\n                break\n            fi\n        done\n        if [ $j -eq $num_list_unique_len ]; then\n            num_list_unique[$num_list_unique_len]=$num\n            num_list_unique_len=$((num_list_unique_len+1))\n        fi\n    done\n\n    # Convert the array to a space-separated list\n    for ((k=0; k<num_list_unique_len; k++)); do\n        num_list_unique_str=\"$num_list_unique_str ${num_list_unique[$k]}\"\n    done\n    num_list_unique_str=${num_list_unique_str:1}\n\n    # Return the space-separated list\n    echo $num_list_unique_str\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local i=0\n    local j=0\n    local k=0\n    local nums_len=${#nums[@]}\n    local unique_nums=()\n\n    for ((i=0; i<nums_len; i++)); do\n        for ((j=0; j<nums_len; j++)); do\n            if [[ ${nums[$i]} -eq ${nums[$j]} ]] && [[ $i -ne $j ]]; then\n                break\n            fi\n        done\n        if [[ $j -eq $nums_len ]]; then\n            unique_nums[$k]=${nums[$i]}\n            ((k++))\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local nums_arr=($nums)\n    local unique_nums_arr=()\n    local nums_arr_len=${#nums_arr[@]}\n    local i=0\n    local j=0\n    local num=0\n    local is_unique=true\n\n    for ((i=0; i<nums_arr_len; i++)); do\n        num=${nums_arr[$i]}\n        is_unique=true\n        for ((j=0; j<i; j++)); do\n            if [ ${nums_arr[$j]} -eq $num ]; then\n                is_unique=false\n                break\n            fi\n        done\n        if $is_unique; then\n            unique_nums_arr+=($num)\n        fi\n    done\n\n    echo ${unique_nums_arr[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local nums_unique=($(printf \"%s\\n\" \"${nums[@]}\" | sort -u))\n    local nums_unique_len=${#nums_unique[@]}\n    local nums_duplicates=($(printf \"%s\\n\" \"${nums[@]}\" | sort | uniq -d))\n    local nums_duplicates_len=${#nums_duplicates[@]}\n    local nums_duplicates_unique=($(printf \"%s\\n\" \"${nums_duplicates[@]}\" | sort -u))\n    local nums_duplicates_unique_len=${#nums_duplicates_unique[@]}\n    local nums_duplicates_unique_len_half=$((nums_duplicates_unique_len / 2))\n    local nums_duplicates_unique_len_half_mod=$((nums_duplicates_unique_len % 2))\n    local nums_duplicates_unique_len_half_mod_eq_0=$((nums_duplicates_unique_len_half_mod == 0))\n    local nums_duplicates_unique_len_half_mod_eq_1=$((nums_duplicates_unique_len_half_mod == 1))\n    local nums_duplicates_unique_len_half_mod_eq_1_and_nums_duplicates_unique_len_half_eq_0=$((nums_duplicates_unique_len_half_mod_eq_1 && nums_duplicates_unique_len_half_eq_0))\n    local nums_duplicates_unique_len_half_mod_eq_1_and_nums_duplicates_unique_len_half_eq_1=$((nums_duplicates_unique_len_half_mod_eq_1 && nums_duplicates_unique_len_half_eq_1))\n    local nums_duplicates_unique_len_half_mod_eq_1\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num_counts=()\n    local num_count=0\n    local num_index=0\n    local num_index_2=0\n    local num_index_3=0\n    local num_index_4=0\n    local num_index_5=0\n    local num_index_6=0\n    local num_index_7=0\n    local num_index_8=0\n    local num_index_9=0\n    local num_index_10=0\n    local num_index_11=0\n    local num_index_12=0\n    local num_index_13=0\n    local num_index_14=0\n    local num_index_15=0\n    local num_index_16=0\n    local num_index_17=0\n    local num_index_18=0\n    local num_index_19=0\n    local num_index_20=0\n    local num_index_21=0\n    local num_index_22=0\n    local num_index_23=0\n    local num_index_24=0\n    local num_index_25=0\n    local num_index_26=0\n    local num_index_27=0\n    local num_index_28=0\n    local num_index_29=0\n    local num_index_30=0\n    local num_index_31=0\n    local num_index_32=0\n    local num_index_33=0\n    local num_index_34=0\n    local num_index_35=0\n    local num_index_36=0\n    local num_index_37=0\n    local num_index_38=0\n    local num_index_39=0\n    local num_index_40=0\n    local num_index_41=0\n    local num_index_42=0\n    local num_index_43=0\n    local num_index_44=0\n    local num_index_45=0\n    local num_index_46=0\n    local num_index_47=0\n    local num_index_48=\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local first_num=${nums%% *}\n    local second_num=${nums##* }\n    echo \"${first_num} ${second_num}\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  for num in ${nums[@]}; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local nums_arr=($nums)\n    local nums_arr_len=${#nums_arr[@]}\n    local nums_arr_len_half=$((nums_arr_len/2))\n    local nums_arr_len_half_plus_1=$((nums_arr_len_half+1))\n    local nums_arr_len_half_minus_1=$((nums_arr_len_half-1))\n    local nums_arr_len_minus_1=$((nums_arr_len-1))\n    local nums_arr_len_minus_2=$((nums_arr_len-2))\n    local nums_arr_len_minus_3=$((nums_arr_len-3))\n    local nums_arr_len_minus_4=$((nums_arr_len-4))\n    local nums_arr_len_minus_5=$((nums_arr_len-5))\n    local nums_arr_len_minus_6=$((nums_arr_len-6))\n    local nums_arr_len_minus_7=$((nums_arr_len-7))\n    local nums_arr_len_minus_8=$((nums_arr_len-8))\n    local nums_arr_len_minus_9=$((nums_arr_len-9))\n    local nums_arr_len_minus_10=$((nums_arr_len-10))\n    local nums_arr_len_minus_11=$((nums_arr_len-11))\n    local nums_arr_len_minus_12=$((nums_arr_len-12))\n    local nums_arr_len_minus_13=$((nums_arr_len-13))\n    local nums_arr_len_minus_14=$((nums_arr_len-14))\n    local nums_arr_len_minus_15=$((nums_arr_len-15))\n    local nums_arr_len_minus_16=$((nums_arr_len-16))\n    local nums_arr_len_minus_\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=$1\n  local unique_nums=\"\"\n  for num in $nums; do\n    if [[ $unique_nums != *\"$num\"* ]]; then\n      unique_nums=\"$unique_nums $num\"\n    fi\n  done\n  echo \"$unique_nums\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  for num in ${nums[@]}; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local nums_sorted=$(echo \"$nums\" | tr ' ' '\\n' | sort -n)\n    local nums_unique=$(echo \"$nums_sorted\" | uniq)\n    local nums_unique_count=$(echo \"$nums_unique\" | wc -l)\n\n    if [ \"$nums_unique_count\" -eq 2 ]; then\n        echo \"$nums_unique\"\n    fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  local i=0\n  local j=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    for ((j=0; j<${#unique_nums[@]}; j++)); do\n      if [[ ${nums[$i]} == ${unique_nums[$j]} ]]; then\n        break\n      fi\n    done\n    if [[ $j == ${#unique_nums[@]} ]]; then\n      unique_nums+=(${nums[$i]})\n    fi\n  done\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    local num_counts=()\n    local num_count=0\n    local num=0\n    local i=0\n    local j=0\n    local k=0\n\n    for ((i=0; i<${#nums[@]}; i++)); do\n        num=${nums[$i]}\n        num_count=0\n        for ((j=0; j<${#unique_nums[@]}; j++)); do\n            if [ \"${unique_nums[$j]}\" == \"$num\" ]; then\n                num_count=${num_counts[$j]}\n                break\n            fi\n        done\n        if [ $num_count -eq 0 ]; then\n            unique_nums[$k]=$num\n            num_counts[$k]=1\n            k=$((k+1))\n        else\n            num_counts[$j]=$((num_count+1))\n        fi\n    done\n\n    for ((i=0; i<${#unique_nums[@]}; i++)); do\n        if [ ${num_counts[$i]} -eq 1 ]; then\n            echo ${unique_nums[$i]}\n        fi\n    done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local num\n    for num in $nums; do\n        if [[ $num == $2 ]]; then\n            continue\n        fi\n        echo $num\n    done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local is_unique=1\n\n    for ((i=0; i<nums_len; i++)); do\n        is_unique=1\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [[ ${nums[i]} -eq ${unique_nums[j]} ]]; then\n                is_unique=0\n                break\n            fi\n        done\n        if [[ $is_unique -eq 1 ]]; then\n            unique_nums[k]=${nums[i]}\n            ((k++))\n            ((unique_nums_len++))\n        fi\n    done\n\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=\"$1\"\n  local num_counts=\"$(echo \"$nums\" | tr ' ' '\\n' | sort | uniq -c)\"\n  local num_counts_arr=($num_counts)\n  local num_counts_arr_len=${#num_counts_arr[@]}\n  local num_counts_arr_len_half=$((num_counts_arr_len / 2))\n  local num_counts_arr_len_half_plus_one=$((num_counts_arr_len_half + 1))\n  local unique_nums=()\n  for ((i=0; i<num_counts_arr_len_half; i++)); do\n    local num_count=${num_counts_arr[$((i * 2))]}\n    local num=${num_counts_arr[$((i * 2 + 1))]}\n    if [ \"$num_count\" -eq 1 ]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo \"${unique_nums[@]}\"\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    echo \"$1\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local nums_len=${#nums[@]}\n  local i j\n  for ((i=0; i<nums_len; i++)); do\n    for ((j=i+1; j<nums_len; j++)); do\n      if [[ ${nums[i]} == ${nums[j]} ]]; then\n        unset nums[j]\n      fi\n    done\n  done\n  echo ${nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local unique_nums=()\n  for num in ${nums[@]}; do\n    if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n      unique_nums+=($num)\n    fi\n  done\n  echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local list=$1\n    local nums=($list)\n    local num1=${nums[0]}\n    local num2=${nums[1]}\n    if [ $num1 -eq $num2 ]; then\n        echo $num1\n    else\n        echo $num1 $num2\n    fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=($1)\n  local nums_len=${#nums[@]}\n  local nums_uniq=()\n  local nums_uniq_len=0\n  local i=0\n  local j=0\n  local k=0\n  local found=0\n\n  for ((i=0; i<nums_len; i++)); do\n    found=0\n    for ((j=0; j<nums_uniq_len; j++)); do\n      if [[ \"${nums[$i]}\" == \"${nums_uniq[$j]}\" ]]; then\n        found=1\n        break\n      fi\n    done\n    if [[ $found -eq 0 ]]; then\n      nums_uniq[$nums_uniq_len]=${nums[$i]}\n      nums_uniq_len=$((nums_uniq_len+1))\n    fi\n  done\n\n  for ((k=0; k<nums_uniq_len; k++)); do\n    echo -n \"${nums_uniq[$k]} \"\n  done\n  echo\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n  local nums=\"$1\"\n  local num\n  local -i count\n  for num in $nums; do\n    count=0\n    for num2 in $nums; do\n      if [[ $num -eq $num2 ]]; then\n        ((count++))\n      fi\n    done\n    if [[ $count -eq 1 ]]; then\n      echo $num\n    fi\n  done\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=\"$1\"\n    local num_list=($nums)\n    local unique_nums=()\n    local num_counts=()\n    local i=0\n    local j=0\n    local k=0\n    local num_count=0\n    local num=0\n\n    for ((i=0; i<${#num_list[@]}; i++)); do\n        num=${num_list[$i]}\n        num_count=0\n        for ((j=0; j<${#unique_nums[@]}; j++)); do\n            if [ \"$num\" -eq \"${unique_nums[$j]}\" ]; then\n                num_count=${num_counts[$j]}\n                num_counts[$j]=$((num_count + 1))\n                break\n            fi\n        done\n        if [ $num_count -eq 0 ]; then\n            unique_nums[$k]=$num\n            num_counts[$k]=1\n            k=$((k + 1))\n        fi\n    done\n\n    for ((i=0; i<${#unique_nums[@]}; i++)); do\n        if [ ${num_counts[$i]} -eq 1 ]; then\n            echo -n \"${unique_nums[$i]} \"\n        fi\n    done\n    echo\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=$1\n    local unique_nums=()\n    local num\n    for num in $nums; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n    local nums=($1)\n    local num=${nums[0]}\n    local count=0\n\n    for i in ${nums[@]}; do\n        if [ $i -eq $num ]; then\n            ((count++))\n        fi\n    done\n\n    if [ $count -eq 2 ]; then\n        echo $num\n    fi\n}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
      "timestamp": 1667191020,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
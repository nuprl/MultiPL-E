{
  "name": "mbpp_432_median_trapezium",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_432_median_trapezium.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median_length=$(echo \"scale=2;(sqrt($a*$a+$b*$b)-$c)/2\" | bc)\n  echo $median_length\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpotsel7of.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all arguments must be positive integers\"\n    return 2\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    return 3\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    return 3\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=0\n    local sum=0\n    local array=()\n\n    array=($a $b $c)\n    array=($(printf '%s\\n' \"${array[@]}\" | sort -n))\n\n    sum=$((${array[0]} + ${array[1]} + ${array[2]}))\n    median=$(($sum / 2))\n\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmplcw4wc6n.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local d=$4\n  local e=$5\n  local f=$6\n  local g=$7\n  local h=$8\n  local i=$9\n  local j=${10}\n  local k=${11}\n  local l=${12}\n  local m=${13}\n  local n=${14}\n  local o=${15}\n  local p=${16}\n  local q=${17}\n  local r=${18}\n  local s=${19}\n  local t=${20}\n  local u=${21}\n  local v=${22}\n  local w=${23}\n  local x=${24}\n  local y=${25}\n  local z=${26}\n  local aa=${27}\n  local bb=${28}\n  local cc=${29}\n  local dd=${30}\n  local ee=${31}\n  local ff=${32}\n  local gg=${33}\n  local hh=${34}\n  local ii=${35}\n  local jj=${36}\n  local kk=${37}\n  local ll=${38}\n  local mm=${39}\n  local nn=${40}\n  local oo=${41}\n  local pp=${42}\n  local qq=${43}\n  local rr=${44}\n  local ss=${45}\n  local tt=${46}\n  local uu=${47}\n  local vv=${48}\n  local ww=${49}\n  local xx=${50}\n  local yy=${51}\n  local zz=${52}\n  local aaa=${53}\n  local bbb=${54}\n  local ccc=${55}\n  local ddd=${56}\n  local eee=${57}\n  local fff=${58}\n  local ggg=${59}\n  local hhh=${60}\n  local iii=${61}\n  local jjj=${62}\n  local kkk=${63\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxt5gf7oq.sh: line 85: syntax error: unexpected end of file\\n'",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  local a=$1\n  local b=$2\n  local c=$3\n\n  if [ $a -le 0 ] || [ $b -le 0 ] || [ $c -le 0 ]; then\n    echo \"Error: all sides must be positive\"\n    return 1\n  fi\n\n  if [ $a -ge $b ] && [ $a -ge $c ]; then\n    if [ $b -ge $c ]; then\n      echo $b\n    else\n      echo $c\n    fi\n  elif [ $b -ge $a ] && [ $b -ge $c ]; then\n    if [ $a -ge $c ]; then\n      echo $a\n    else\n      echo $c\n    fi\n  elif [ $c -ge $a ] && [ $c -ge $b ]; then\n    if [ $a -ge $b ]; then\n      echo $a\n    else\n      echo $b\n    fi\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo \"Median of trapezium is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpk24nisc1.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [[ $1 -eq $2 ]]; then\n    echo $1\n  else\n    echo $3\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local p=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  local s=$(echo \"scale=2; sqrt($p * ($p - $a) * ($p - $b) * ($p - $c))\" | bc)\n  local h=$(echo \"scale=2; 2 * $s / $a\" | bc)\n  echo \"scale=2; $a / 2 * $h\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpve2dkjnl.sh: line 15: bc: command not found\\n/tmp/tmpve2dkjnl.sh: line 16: bc: command not found\\n/tmp/tmpve2dkjnl.sh: line 17: bc: command not found\\n/tmp/tmpve2dkjnl.sh: line 18: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $1 -eq $2 ]\n    then\n        echo $1\n    else\n        echo $3\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n\n    a=$1\n    b=$2\n    c=$3\n\n    if [ $a -le 0 ] || [ $b -le 0 ] || [ $c -le 0 ]; then\n        echo \"All sides must be positive.\"\n        return 1\n    fi\n\n    if [ $a -gt $b ]; then\n        if [ $b -gt $c ]; then\n            echo $b\n        elif [ $a -gt $c ]; then\n            echo $c\n        else\n            echo $a\n        fi\n    else\n        if [ $a -gt $c ]; then\n            echo $a\n        elif [ $b -gt $c ]; then\n            echo $c\n        else\n            echo $b\n        fi\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium a b c\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: sides must be positive\"\n        return 2\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: sides must be different\"\n        return 3\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: two sides must be equal\"\n        return 4\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: a must be the smallest side\"\n        return 5\n    fi\n\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        echo \"Error: b must be the smallest side\"\n        return 6\n    fi\n\n    if [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        echo \"Error: c must be the smallest side\"\n        return 7\n    fi\n\n    if [ $1 -lt $2 ] && [ $1 -lt $3 ]; then\n        echo \"Error: a must be the biggest side\"\n        return 8\n    fi\n\n    if [ $2 -lt $1 ] && [ $2 -lt $3 ]; then\n        echo \"Error: b must be the biggest side\"\n        return 9\n    fi\n\n    if [ $3 -lt $1 ] && [ $3 -lt $2 ]; then\n        echo \"Error: c must be the biggest side\"\n        return 10\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -lt $3 ]; then\n        echo \"Error: a and b must be the biggest sides\"\n        return 11\n    fi\n\n    if [ $2 -eq $3 ] && [ $3 -lt $1 ]; then\n        echo \"Error: b and c must be the biggest sides\"\n        return 12\n    fi\n\n    if [ $1 -eq $3 ] && [ $\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp_lxldydx.sh: line 69: syntax error near unexpected token `}'\\n/tmp/tmp_lxldydx.sh: line 69: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <h>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n    local h=$3\n    echo \"scale=2; ($a + $b) * $h / 2\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp2qwml9yn.sh: line 15: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <integer> <integer> <integer>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all arguments must be positive integers\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: all arguments must be different\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo $1\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        echo $2\n    else\n        echo $3\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <h>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local h=$3\n\n    local median=$(echo \"scale=2; ($a + $b) / 2\" | bc)\n\n    echo \"The median length of a trapezium with a=$a, b=$b and h=$h is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpo99r3qyi.sh: line 17: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $1 -eq $2 ]\n    then\n        echo $1\n    elif [ $2 -eq $3 ]\n    then\n        echo $2\n    elif [ $1 -eq $3 ]\n    then\n        echo $3\n    else\n        echo \"The median length is not equal to any of the lengths.\"\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <integer> <integer> <integer>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all arguments must be positive integers\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: all arguments must be different\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n\tif [ $# -ne 3 ]; then\n\t\techo \"Usage: $0 <a> <b> <h>\"\n\t\treturn 1\n\tfi\n\n\tlocal a=$1\n\tlocal b=$2\n\tlocal h=$3\n\n\techo \"scale=2; ($a + $b) * $h / 2\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp1ahj9qb8.sh: line 17: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <side1> <side2> <side3>\"\n        return 1\n    fi\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all sides must be positive\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: all sides must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: two sides must be equal\"\n        return 1\n    fi\n    if [ $1 -lt $2 ] && [ $1 -lt $3 ]; then\n        echo \"Error: side1 must be the longest\"\n        return 1\n    fi\n    if [ $3 -gt $2 ] && [ $3 -gt $1 ]; then\n        echo \"Error: side3 must be the shortest\"\n        return 1\n    fi\n    if [ $1 -lt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: side1 must be the longest\"\n        return 1\n    fi\n    if [ $3 -lt $2 ] && [ $3 -gt $1 ]; then\n        echo \"Error: side3 must be the shortest\"\n        return 1\n    fi\n    if [ $1 -gt $2 ] && [ $1 -lt $3 ]; then\n        echo \"Error: side1 must be the longest\"\n        return 1\n    fi\n    if [ $3 -gt $2 ] && [ $3 -lt $1 ]; then\n        echo \"Error: side3 must be the shortest\"\n        return 1\n    fi\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: side1 must be the longest\"\n        return 1\n    fi\n    if [ $3 -lt $2 ] && [ $3 -lt $1 ]; then\n        echo \"Error: side3 must be the shortest\"\n        return 1\n    fi\n    if [ $1 -lt\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpty8aqydz.sh: line 57: syntax error near unexpected token `}'\\n/tmp/tmpty8aqydz.sh: line 57: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: sides must be positive\"\n    return 2\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: sides must be different\"\n    return 3\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: two sides must be equal\"\n    return 4\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  else\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n\tif [ $# -ne 3 ]; then\n\t\techo \"Usage: $0 <a> <b> <h>\"\n\t\treturn 1\n\tfi\n\tlocal a=$1\n\tlocal b=$2\n\tlocal h=$3\n\techo \"scale=2; ($a + $b) * $h / 2\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp3idao21j.sh: line 15: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <h>\"\n        return 1\n    fi\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all arguments must be positive integers\"\n        return 1\n    fi\n    echo \"scale=2; ($1 + $2) / 2 * $3\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp4qds_v0t.sh: line 16: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: $0 <integer> <integer> <integer>\"\n        return 1\n    fi\n\n    if [[ ! $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n    fi\n\n    if [[ ! $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $2 is not an integer\"\n        return 1\n    fi\n\n    if [[ ! $3 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $3 is not an integer\"\n        return 1\n    fi\n\n    if [[ $1 -lt $2 ]]; then\n        echo \"Error: $1 is less than $2\"\n        return 1\n    fi\n\n    if [[ $2 -lt $3 ]]; then\n        echo \"Error: $2 is less than $3\"\n        return 1\n    fi\n\n    if [[ $3 -lt $1 ]]; then\n        echo \"Error: $3 is less than $1\"\n        return 1\n    fi\n\n    echo \"The median length of a trapezium with sides $1, $2 and $3 is $(($1 + $2 + $3 - $(($1 + $2 - $3))))\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp2w5bsycy.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n\tlocal a=$1\n\tlocal b=$2\n\tlocal c=$3\n\tlocal median=$(echo \"scale=2; ($a + $b + $c) / 3\" | bc)\n\techo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp2yrg410c.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <h>\"\n        return 1\n    fi\n    if [ $1 -lt 0 ] || [ $2 -lt 0 ] || [ $3 -lt 0 ]; then\n        echo \"Error: all arguments must be positive\"\n        return 1\n    fi\n    # Calculate the median length of a trapezium\n    # a, b, h are the lengths of the sides of the trapezium\n    # m is the median length\n    # m = sqrt(h^2 + (a - b)^2 / 4)\n    m=$(echo \"sqrt($3^2 + ($1 - $2)^2 / 4)\" | bc -l)\n    echo $m\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpfoxf461x.sh: line 20: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all arguments must be positive\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: all arguments must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: all arguments must be different\"\n        return 1\n    fi\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo \"$2\"\n        else\n            echo \"$3\"\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo \"$1\"\n        else\n            echo \"$3\"\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo \"$1\"\n        else\n            echo \"$2\"\n        fi\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    if [ $a -lt $b ]; then\n        local temp=$a\n        a=$b\n        b=$temp\n    fi\n\n    if [ $b -lt $c ]; then\n        local temp=$b\n        b=$c\n        c=$temp\n    fi\n\n    if [ $a -lt $b ]; then\n        local temp=$a\n        a=$b\n        b=$temp\n    fi\n\n    echo $b\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(( (a + b + c) / 2 ))\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <h>\" >&2\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all arguments must be positive integers\" >&2\n        return 2\n    fi\n\n    echo \"scale=2; $1 + $2 + sqrt($1^2 + $2^2) + sqrt($1^2 + $2^2 + $3^2) + sqrt($1^2 + $2^2 + $3^2 + $3^2)\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmphncjakqy.sh: line 18: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n\tlocal a=$1\n\tlocal b=$2\n\tlocal c=$3\n\tlocal median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n\techo \"$median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp5pyoffp5.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <integer> <integer> <integer>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all arguments must be positive integers\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: all arguments must be different\"\n        return 1\n    fi\n\n    if [ $1 -lt $2 ] && [ $2 -lt $3 ]; then\n        echo $2\n    elif [ $1 -gt $2 ] && [ $2 -gt $3 ]; then\n        echo $2\n    elif [ $1 -gt $2 ] && [ $1 -lt $3 ]; then\n        echo $1\n    elif [ $1 -lt $2 ] && [ $1 -gt $3 ]; then\n        echo $1\n    elif [ $2 -gt $1 ] && [ $2 -lt $3 ]; then\n        echo $2\n    elif [ $2 -lt $1 ] && [ $2 -gt $3 ]; then\n        echo $2\n    elif [ $3 -gt $1 ] && [ $3 -lt $2 ]; then\n        echo $3\n    elif [ $3 -lt $1 ] && [ $3 -gt $2 ]; then\n        echo $3\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo \"The median of trapezium is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpi2v2w112.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"$a + $b + $c\" | bc)\n    echo \"scale=2; $median / 2\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn4nm57tm.sh: line 11: bc: command not found\\n/tmp/tmpn4nm57tm.sh: line 12: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n\tlocal a=$1\n\tlocal b=$2\n\tlocal c=$3\n\tlocal median=$(( ($a + $b + $c) / 2 ))\n\techo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <length1> <length2> <length3>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All lengths must be positive\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"All lengths are equal\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Two lengths are equal\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <side1> <side2> <side3>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all sides must be positive integers\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all sides must be different\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: all sides must be different\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <integer> <integer> <integer>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All arguments must be positive integers.\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"The median length is $1.\"\n        return 0\n    fi\n\n    if [ $1 -eq $2 ]; then\n        echo \"The median length is $3.\"\n        return 0\n    fi\n\n    if [ $1 -eq $3 ]; then\n        echo \"The median length is $2.\"\n        return 0\n    fi\n\n    if [ $2 -eq $3 ]; then\n        echo \"The median length is $1.\"\n        return 0\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo \"The median length is $2.\"\n            return 0\n        else\n            echo \"The median length is $3.\"\n            return 0\n        fi\n    fi\n\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo \"The median length is $1.\"\n            return 0\n        else\n            echo \"The median length is $3.\"\n            return 0\n        fi\n    fi\n\n    if [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo \"The median length is $1.\"\n            return 0\n        else\n            echo \"The median length is $2.\"\n            return 0\n        fi\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\n    return 1\n  fi\n\n  local a=$1\n  local b=$2\n  local c=$3\n\n  if [ $a -le 0 ] || [ $b -le 0 ] || [ $c -le 0 ]; then\n    echo \"All arguments must be positive integers\"\n    return 1\n  fi\n\n  if [ $a -eq $b ] && [ $b -eq $c ]; then\n    echo \"All arguments must be different\"\n    return 1\n  fi\n\n  if [ $a -eq $b ] || [ $b -eq $c ] || [ $a -eq $c ]; then\n    echo \"Two arguments must be equal\"\n    return 1\n  fi\n\n  if [ $a -gt $b ] && [ $a -gt $c ]; then\n    echo \"The first argument must be the smallest\"\n    return 1\n  fi\n\n  if [ $c -gt $b ] && [ $c -gt $a ]; then\n    echo \"The third argument must be the largest\"\n    return 1\n  fi\n\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo \"The median length of a trapezium is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: All sides must be positive.\"\n        return 2\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: All sides must be different.\"\n        return 3\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: Two sides must be equal.\"\n        return 4\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    # Check if the arguments are integers\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]] && [[ $3 =~ ^[0-9]+$ ]]; then\n        # Check if the arguments are positive\n        if [[ $1 -gt 0 ]] && [[ $2 -gt 0 ]] && [[ $3 -gt 0 ]]; then\n            # Check if the arguments are greater than the sum of the other two\n            if [[ $1 -gt $2+$3 ]] || [[ $2 -gt $1+$3 ]] || [[ $3 -gt $1+$2 ]]; then\n                echo \"The arguments are not the sides of a trapezium.\"\n            else\n                # Calculate the median length\n                median=$(echo \"scale=2; sqrt(2*$1^2+2*$2^2-$3^2)/2\" | bc)\n                echo \"The median length is $median.\"\n            fi\n        else\n            echo \"The arguments must be positive.\"\n        fi\n    else\n        echo \"The arguments must be integers.\"\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp51bj6j8s.sh: line 17: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    local p=$(($a + $b + $c))\n    local s=$(($p / 2))\n    local median=$(($s * ($s - $a) * ($s - $b) * ($s - $c)))\n    local median=$(echo \"sqrt($median)\" | bc)\n\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp4zbtutiy.sh: line 20: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <a> <b> <c>\"\n    exit 1\n  fi\n  a=$1\n  b=$2\n  c=$3\n  if [ $a -lt $b ]; then\n    if [ $b -lt $c ]; then\n      echo $b\n    elif [ $a -lt $c ]; then\n      echo $c\n    else\n      echo $a\n    fi\n  elif [ $a -lt $c ]; then\n    echo $a\n  elif [ $b -lt $c ]; then\n    echo $c\n  else\n    echo $b\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$((($a+$b+$c)/2))\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all sides must be positive\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: all sides must be different\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: two sides must be equal\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: $1 is not a side of a trapezium\"\n        return 1\n    fi\n\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        echo \"Error: $2 is not a side of a trapezium\"\n        return 1\n    fi\n\n    if [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        echo \"Error: $3 is not a side of a trapezium\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: $1 is not a side of a trapezium\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: $1 is not a side of a trapezium\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: $1 is not a side of a trapezium\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: $1 is not a side of a trapezium\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpphab4asp.sh: line 64: syntax error near unexpected token `}'\\n/tmp/tmpphab4asp.sh: line 64: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 3\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmppwnn0akq.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n\techo \"scale=2; ($1 + $2 + sqrt($1^2 + $2^2)) / 2\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpaexoiq8q.sh: line 8: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [[ $1 -eq $2 ]]; then\n        echo $1\n    else\n        echo $3\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <h>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all arguments must be positive\"\n        return 1\n    fi\n\n    echo \"scale=2; ($1 + $2) / 2 * $3\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpisgahlze.sh: line 18: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n\tlocal a=$1\n\tlocal b=$2\n\tlocal c=$3\n\tlocal median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n\techo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxtk1uggr.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all arguments must be greater than zero.\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: all arguments must be different.\"\n        return 1\n    fi\n    if [ $1 -lt $2 ] && [ $2 -lt $3 ]; then\n        echo \"Error: all arguments must be in ascending order.\"\n        return 1\n    fi\n    if [ $1 -gt $2 ] && [ $2 -gt $3 ]; then\n        echo \"Error: all arguments must be in ascending order.\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: all arguments must be different.\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: all arguments must be different.\"\n        return 1\n    fi\n    if [ $1 -lt $2 ] && [ $2 -lt $3 ]; then\n        echo \"Error: all arguments must be in ascending order.\"\n        return 1\n    fi\n    if [ $1 -gt $2 ] && [ $2 -gt $3 ]; then\n        echo \"Error: all arguments must be in ascending order.\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: all arguments must be different.\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: all arguments must be different.\"\n        return 1\n    fi\n    if [ $1 -lt $2 ] && [ $2 -lt $3 ]; then\n        echo \"Error: all arguments must be\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmply3sn1c5.sh: line 64: unexpected EOF while looking for matching `\"\\'\\n/tmp/tmply3sn1c5.sh: line 68: syntax error: unexpected end of file\\n'",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All arguments must be positive integers.\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $1 -eq $3 ] || [ $2 -eq $3 ]; then\n        echo \"All arguments must be different.\"\n        return 1\n    fi\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n    echo \"scale=2; ($1 + $2 + $3) / 3\" | bc\n  else\n    echo \"Error: all sides must be greater than 0\"\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpgc42l972.sh: line 9: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local p=$(($a+$b+$c))\n  local s=$(($p/2))\n  local m=$(echo \"sqrt($s*($s-$a)*($s-$b)*($s-$c))\" | bc -l)\n  echo $m\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpu8m06vwr.sh: line 17: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  echo \"scale=2; ($1 + $2 + $3) / 3\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpv8udijh3.sh: line 8: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: sides must be positive\"\n    return 2\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: sides must be different\"\n    return 3\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: two sides must be equal\"\n    return 4\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  else\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"The median length of a trapezium is $1\"\n    elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"The median length of a trapezium is $2\"\n    else\n        echo \"The median length of a trapezium is $3\"\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(( ($a + $b + $c) / 2 ))\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <side1> <side2> <side3>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"All sides must be positive\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"All sides must be different\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Two sides must be equal\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  else\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    local p=$(($a + $b + $c))\n    local s=$(($p / 2))\n    local median=$(echo \"sqrt($s * ($s - $a) * ($s - $b) * ($s - $c))\" | bc -l)\n\n    echo \"Median length of a trapezium with sides $a, $b, $c is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpoqraiwmn.sh: line 19: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    echo \"scale=2; ($1 + $2 + $3) / 3\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe671y4ch.sh: line 8: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <length1> <length2> <length3>\"\n        return 1\n    fi\n\n    local length1=$1\n    local length2=$2\n    local length3=$3\n\n    if [ $length1 -lt $length2 ]; then\n        if [ $length2 -lt $length3 ]; then\n            echo $length2\n        elif [ $length1 -lt $length3 ]; then\n            echo $length3\n        else\n            echo $length1\n        fi\n    else\n        if [ $length1 -lt $length3 ]; then\n            echo $length1\n        elif [ $length2 -lt $length3 ]; then\n            echo $length3\n        else\n            echo $length2\n        fi\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median_length=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median_length\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpeu78ytwn.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <side1> <side2> <side3>\"\n    return 1\n  fi\n\n  if [ $1 -lt 0 ] || [ $2 -lt 0 ] || [ $3 -lt 0 ]; then\n    echo \"Error: all sides must be positive\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all sides must be different\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: all sides must be different\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $1 -eq $2 ]; then\n        echo $1\n    else\n        echo $3\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    local p=$(($a + $b + $c))\n    local s=$(($p / 2))\n\n    local median=$(echo \"scale=2; sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)) / $s\" | bc -l)\n\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpx4xh47v2.sh: line 20: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <a> <b> <h>\"\n    return 1\n  fi\n\n  local a=$1\n  local b=$2\n  local h=$3\n\n  echo \"scale=2; ($a + $b) * $h / 2\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp679o2f_k.sh: line 17: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <length1> <length2> <length3>\"\n        return 1\n    fi\n    local length1=$1\n    local length2=$2\n    local length3=$3\n    if [ $length1 -lt $length2 ]; then\n        if [ $length2 -lt $length3 ]; then\n            echo $length2\n        elif [ $length1 -lt $length3 ]; then\n            echo $length3\n        else\n            echo $length1\n        fi\n    else\n        if [ $length1 -lt $length3 ]; then\n            echo $length1\n        elif [ $length2 -lt $length3 ]; then\n            echo $length3\n        else\n            echo $length2\n        fi\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    # Write your code here\n    if [ $1 -eq $2 ]\n    then\n        echo $1\n    elif [ $1 -eq $3 ]\n    then\n        echo $1\n    elif [ $2 -eq $3 ]\n    then\n        echo $2\n    else\n        echo \"Not a trapezium\"\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n\tlocal a=$1\n\tlocal b=$2\n\tlocal c=$3\n\tlocal median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n\techo \"The median length of the trapezium is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmptrp04lv0.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"All arguments must be greater than 0\"\n    return 2\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"All arguments must be different\"\n    return 3\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Two arguments must be equal\"\n    return 4\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  else\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2;($a+$b+$c)/2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpvfk0nucv.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n\tlocal a=$1\n\tlocal b=$2\n\tlocal c=$3\n\tlocal median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n\techo \"The median length of a trapezium is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpuyqmxwec.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    echo \"scale=2;($1+$2+$3)/3\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp5jq1k_sd.sh: line 8: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    # If the number of arguments is not 3, then print an error message and exit\n    if [ $# -ne 3 ]; then\n        echo \"Error: invalid number of arguments\"\n        exit 1\n    fi\n\n    # If any of the arguments is not an integer, then print an error message and exit\n    if ! [[ $1 =~ ^-?[0-9]+$ ]] || ! [[ $2 =~ ^-?[0-9]+$ ]] || ! [[ $3 =~ ^-?[0-9]+$ ]]; then\n        echo \"Error: invalid argument\"\n        exit 1\n    fi\n\n    # If any of the arguments is negative, then print an error message and exit\n    if [ $1 -lt 0 ] || [ $2 -lt 0 ] || [ $3 -lt 0 ]; then\n        echo \"Error: invalid argument\"\n        exit 1\n    fi\n\n    # If the sum of the first two arguments is less than the third argument, then print an error message and exit\n    if [ $(($1 + $2)) -lt $3 ]; then\n        echo \"Error: invalid argument\"\n        exit 1\n    fi\n\n    # If the sum of the first two arguments is equal to the third argument, then print an error message and exit\n    if [ $(($1 + $2)) -eq $3 ]; then\n        echo \"Error: invalid argument\"\n        exit 1\n    fi\n\n    # If the sum of the first two arguments is greater than the third argument, then print an error message and exit\n    if [ $(($1 + $2)) -gt $3 ]; then\n        echo \"Error: invalid argument\"\n        exit 1\n    fi\n\n    # If the sum of the first two arguments is less than the third argument, then print an error message and exit\n    if [ $(($1 + $2)) -lt $3 ]; then\n        echo \"Error: invalid argument\"\n        exit 1\n    fi\n\n    # If the sum of the first two arguments is equal to the third argument, then print an error message and exit\n    if [ $(($1 + $2)) -eq $3 ]; then\n        echo \"Error: invalid argument\"\n        exit 1\n    fi\n\n    # If the sum of the first two arguments is greater than the third argument, then print\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median_length=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median_length\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpeu78ytwn.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(( (a + b + c) / 3 ))\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <h>\"\n        exit 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all arguments must be positive integers\"\n        exit 2\n    fi\n\n    echo \"scale=2; ($1 + $2) * $3 / 2\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpiilfas8u.sh: line 18: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n\tif [ $# -ne 3 ]; then\n\t\techo \"Usage: $0 <a> <b> <h>\"\n\t\texit 1\n\tfi\n\n\tlocal a=$1\n\tlocal b=$2\n\tlocal h=$3\n\n\techo \"scale=2; ($a + $b) * $h / 2\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpm559ina2.sh: line 17: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    # Check if the arguments are integers\n    if [[ ! $1 =~ ^[0-9]+$ ]] || [[ ! $2 =~ ^[0-9]+$ ]] || [[ ! $3 =~ ^[0-9]+$ ]]; then\n        echo \"Arguments must be integers\"\n        return 1\n    fi\n\n    # Check if the arguments are positive\n    if [[ $1 -lt 0 ]] || [[ $2 -lt 0 ]] || [[ $3 -lt 0 ]]; then\n        echo \"Arguments must be positive\"\n        return 1\n    fi\n\n    # Check if the arguments are valid\n    if [[ $1 -ge $2 ]] || [[ $2 -ge $3 ]]; then\n        echo \"Arguments must be valid\"\n        return 1\n    fi\n\n    # Calculate the median length\n    local median_length=$(echo \"scale=2; ($1 + $2 + $3) / 2\" | bc)\n    echo \"The median length is $median_length\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpq3q_ybex.sh: line 27: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: sides must be positive\"\n        return 2\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: sides must be different\"\n        return 3\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: two sides must be equal\"\n        return 4\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: side $1 is too big\"\n        return 5\n    fi\n\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        echo \"Error: side $2 is too big\"\n        return 6\n    fi\n\n    if [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        echo \"Error: side $3 is too big\"\n        return 7\n    fi\n\n    if [ $1 -eq $2 ]; then\n        echo $3\n    elif [ $2 -eq $3 ]; then\n        echo $1\n    else\n        echo $2\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    echo \"scale=2;($1+$2+$3)/3\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp5jq1k_sd.sh: line 8: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <h>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local h=$3\n\n    local m=$(echo \"scale=2; ($a + $b) / 2\" | bc)\n    local s=$(echo \"scale=2; $m * $h\" | bc)\n\n    echo \"Median length of trapezium: $s\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpqfx2qywh.sh: line 17: bc: command not found\\n/tmp/tmpqfx2qywh.sh: line 18: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [[ $1 -eq $2 ]]; then\n        echo $1\n    elif [[ $1 -eq $3 ]]; then\n        echo $1\n    elif [[ $2 -eq $3 ]]; then\n        echo $2\n    else\n        echo \"Invalid trapezium\"\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median_length=0\n    if [ $a -eq $b ]; then\n        median_length=$a\n    elif [ $a -eq $c ]; then\n        median_length=$a\n    elif [ $b -eq $c ]; then\n        median_length=$b\n    else\n        median_length=$(($a + $b + $c - $(max $a $b $c) - $(min $a $b $c)))\n    fi\n    echo $median_length\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpyeucvxr3.sh: line 19: max: command not found\\n/tmp/tmpyeucvxr3.sh: line 19: min: command not found\\n/tmp/tmpyeucvxr3.sh: line 19: 15 + 25 + 35 -  - : syntax error: operand expected (error token is \"- \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $1 -eq $2 ]\n    then\n        echo $3\n    else\n        echo $2\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <h>\"\n        return 1\n    fi\n    a=$1\n    b=$2\n    h=$3\n    echo \"scale=2; ($a + $b) * $h / 2\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp_h9vmbuc.sh: line 15: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    if [ $a -lt 0 ] || [ $b -lt 0 ] || [ $c -lt 0 ]; then\n        echo \"All arguments must be positive\"\n        return 1\n    fi\n\n    if [ $a -eq $b ] && [ $b -eq $c ]; then\n        echo \"All arguments must be different\"\n        return 1\n    fi\n\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo \"The median of trapezium is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp6wt24x_n.sh: line 27: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $1 -lt $2 ]\n  then\n    if [ $2 -lt $3 ]\n    then\n      echo $2\n    elif [ $1 -lt $3 ]\n    then\n      echo $3\n    else\n      echo $1\n    fi\n  elif [ $1 -lt $3 ]\n  then\n    echo $1\n  elif [ $2 -lt $3 ]\n  then\n    echo $3\n  else\n    echo $2\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\n    return 1\n  fi\n  if [ $(($1 + $2)) -lt $3 ]; then\n    echo \"Invalid trapezium\"\n    return 1\n  fi\n  if [ $(($1 + $3)) -lt $2 ]; then\n    echo \"Invalid trapezium\"\n    return 1\n  fi\n  if [ $(($2 + $3)) -lt $1 ]; then\n    echo \"Invalid trapezium\"\n    return 1\n  fi\n  echo \"Median length is $(($1 + $2 + $3 - $(max $1 $2 $3)))\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpt483jehd.sh: line 24: max: command not found\\n/tmp/tmpt483jehd.sh: line 24: 15 + 25 + 35 - : syntax error: operand expected (error token is \"- \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"Error: all sides must be positive\"\n    return 2\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"Error: all sides must be different\"\n    return 3\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Error: exactly two sides must be equal\"\n    return 4\n  fi\n\n  local a=$1\n  local b=$2\n  local c=$3\n\n  if [ $a -gt $b ]; then\n    a=$2\n    b=$1\n  fi\n\n  if [ $b -gt $c ]; then\n    b=$c\n    c=$2\n  fi\n\n  if [ $a -gt $b ]; then\n    a=$b\n    b=$1\n  fi\n\n  echo $(( ($a + $b + $c) / 2 ))\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    echo \"scale=2;($1+$2+$3)/3\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp5jq1k_sd.sh: line 8: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=0\n\n    if [[ $a -gt $b ]]; then\n        if [[ $b -gt $c ]]; then\n            median=$b\n        elif [[ $a -gt $c ]]; then\n            median=$c\n        else\n            median=$a\n        fi\n    else\n        if [[ $a -gt $c ]]; then\n            median=$a\n        elif [[ $b -gt $c ]]; then\n            median=$c\n        else\n            median=$b\n        fi\n    fi\n\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    # Write your code here\n    echo \"Not implemented\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    # Check if the arguments are integers\n    if [[ ! $1 =~ ^[0-9]+$ ]] || [[ ! $2 =~ ^[0-9]+$ ]] || [[ ! $3 =~ ^[0-9]+$ ]]; then\n        echo \"Error: the arguments must be integers\"\n        return 1\n    fi\n\n    # Check if the arguments are positive\n    if [[ $1 -lt 0 ]] || [[ $2 -lt 0 ]] || [[ $3 -lt 0 ]]; then\n        echo \"Error: the arguments must be positive\"\n        return 1\n    fi\n\n    # Check if the arguments are greater than 0\n    if [[ $1 -eq 0 ]] || [[ $2 -eq 0 ]] || [[ $3 -eq 0 ]]; then\n        echo \"Error: the arguments must be greater than 0\"\n        return 1\n    fi\n\n    # Check if the arguments are less than or equal to 100\n    if [[ $1 -gt 100 ]] || [[ $2 -gt 100 ]] || [[ $3 -gt 100 ]]; then\n        echo \"Error: the arguments must be less than or equal to 100\"\n        return 1\n    fi\n\n    # Check if the arguments are less than or equal to 100\n    if [[ $1 -gt 100 ]] || [[ $2 -gt 100 ]] || [[ $3 -gt 100 ]]; then\n        echo \"Error: the arguments must be less than or equal to 100\"\n        return 1\n    fi\n\n    # Check if the arguments are less than or equal to 100\n    if [[ $1 -gt 100 ]] || [[ $2 -gt 100 ]] || [[ $3 -gt 100 ]]; then\n        echo \"Error: the arguments must be less than or equal to 100\"\n        return 1\n    fi\n\n    # Check if the arguments are less than or equal to 100\n    if [[ $1 -gt 100 ]] || [[ $2 -gt 100 ]] || [[ $3 -gt 100 ]]; then\n        echo \"Error: the arguments must be less than or equal to 100\"\n        return 1\n    fi\n\n    # Check if the arguments are less than or equal to 100\n    if [[ $1 -gt 100 ]] || [[ $2 -gt 100 ]] || [[ $3 -gt 100\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmphtoy6aju.sh: line 51: syntax error in conditional expression\\n/tmp/tmphtoy6aju.sh: line 52: syntax error near `}'\\n/tmp/tmphtoy6aju.sh: line 52: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    local p=$((a + b + c))\n    local s=$((p / 2))\n\n    local median=$(echo \"sqrt($s * ($s - $a) * ($s - $b) * ($s - $c))\" | bc -l)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpktyfdh77.sh: line 20: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: sides must be positive\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: sides must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: sides must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: sides must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: sides must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: sides must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: sides must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: sides must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: sides must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: sides must be different\"\n        return 1\n    fi\n    if [ $1\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp6_hfoy38.sh: line 53: syntax error near unexpected token `}'\\n/tmp/tmp6_hfoy38.sh: line 53: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All sides must be positive\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"All sides must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Two sides must be equal\"\n        return 1\n    fi\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    echo \"scale=2; ($1 + $2 + $3) / 3\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe671y4ch.sh: line 8: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]\n    then\n        echo $1\n    elif [ $1 -eq $2 ] && [ $2 -ne $3 ]\n    then\n        echo $1\n    elif [ $1 -eq $3 ] && [ $2 -ne $3 ]\n    then\n        echo $1\n    elif [ $2 -eq $3 ] && [ $1 -ne $2 ]\n    then\n        echo $2\n    else\n        echo \"The trapezium is not a median trapezium\"\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n\tif [ $# -ne 3 ]; then\n\t\techo \"Usage: $0 <a> <b> <c>\"\n\t\treturn 1\n\tfi\n\tlocal a=$1\n\tlocal b=$2\n\tlocal c=$3\n\tlocal median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n\techo \"Median of trapezium is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp0p3kousv.sh: line 15: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmplcw4wc6n.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2;($a+$b+$c)/2\" | bc)\n  echo \"The median length of the trapezium is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpoi358v47.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(( ($a + $b + $c) / 2 ))\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <side1> <side2> <side3>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: all sides must be positive\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: all sides must be different\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: only two sides can be equal\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: side1 must be the longest side\"\n        return 1\n    fi\n\n    if [ $3 -gt $2 ] && [ $3 -gt $1 ]; then\n        echo \"Error: side3 must be the longest side\"\n        return 1\n    fi\n\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        echo \"Error: side2 must be the longest side\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: side1 must be the longest side\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: side1 must be the longest side\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: side1 must be the longest side\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: side1 must be the longest side\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        echo \"Error: side1 must be the longest side\"\n        return 1\n   \n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpucoqmw3t.sh: line 67: syntax error near unexpected token `}'\\n/tmp/tmpucoqmw3t.sh: line 67: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: sides must be positive integers\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: sides must be different\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: sides must be different\"\n        return 1\n    fi\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [[ $1 -le 0 || $2 -le 0 || $3 -le 0 ]]; then\n        echo \"Error: all arguments must be positive integers\"\n        return 1\n    fi\n\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"Error: all arguments must be different\"\n        return 1\n    fi\n\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"Error: two arguments must be equal\"\n        return 1\n    fi\n\n    if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        echo \"Error: $1 is the longest side\"\n        return 1\n    fi\n\n    if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        echo \"Error: $2 is the longest side\"\n        return 1\n    fi\n\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        echo \"Error: $3 is the longest side\"\n        return 1\n    fi\n\n    if [[ $1 -lt $2 && $1 -lt $3 ]]; then\n        echo \"Error: $1 is the shortest side\"\n        return 1\n    fi\n\n    if [[ $2 -lt $1 && $2 -lt $3 ]]; then\n        echo \"Error: $2 is the shortest side\"\n        return 1\n    fi\n\n    if [[ $3 -lt $1 && $3 -lt $2 ]]; then\n        echo \"Error: $3 is the shortest side\"\n        return 1\n    fi\n\n    if [[ $1 -eq $2 ]]; then\n        echo \"$3\"\n    fi\n\n    if [[ $2 -eq $3 ]]; then\n        echo \"$1\"\n    fi\n\n    if [[ $1 -eq $3 ]]; then\n        echo \"$2\"\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]\n    then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]\n    then\n        echo \"All arguments must be positive integers\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]\n    then\n        echo \"All arguments must be different\"\n        return 1\n    fi\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]\n    then\n        echo \"The first argument must be the smallest\"\n        return 1\n    fi\n    if [ $3 -gt $2 ] && [ $3 -gt $1 ]\n    then\n        echo \"The third argument must be the largest\"\n        return 1\n    fi\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]\n    then\n        echo \"The second argument must be the middle\"\n        return 1\n    fi\n    echo \"The median length of a trapezium is $(echo \"scale=2; sqrt($1*$3)\" | bc)\"\n    return 0\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <length_a> <length_b> <length_c>\"\n    return 1\n  fi\n\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n\n  if ! [[ $2 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n  fi\n\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ]; then\n    echo $1\n    return 0\n  fi\n\n  if [ $1 -eq $3 ]; then\n    echo $1\n    return 0\n  fi\n\n  if [ $2 -eq $3 ]; then\n    echo $2\n    return 0\n  fi\n\n  if [ $1 -gt $2 ]; then\n    if [ $1 -gt $3 ]; then\n      if [ $2 -gt $3 ]; then\n        echo $2\n        return 0\n      else\n        echo $3\n        return 0\n      fi\n    else\n      echo $1\n      return 0\n    fi\n  else\n    if [ $2 -gt $3 ]; then\n      if [ $1 -gt $3 ]; then\n        echo $1\n        return 0\n      else\n        echo $3\n        return 0\n      fi\n    else\n      echo $2\n      return 0\n    fi\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n\tlocal a=$1\n\tlocal b=$2\n\tlocal c=$3\n\tlocal median=$(echo \"$a + $b + $c\" | bc)\n\techo \"$median / 2\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp90dmsmkh.sh: line 11: bc: command not found\\n/tmp/tmp90dmsmkh.sh: line 12: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [[ $1 -eq $2 ]]; then\n    echo $1\n  elif [[ $2 -eq $3 ]]; then\n    echo $2\n  elif [[ $1 -eq $3 ]]; then\n    echo $1\n  else\n    echo \"The median length of a trapezium is $2\"\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\n    return 1\n  fi\n  if [ $1 -eq $2 ]; then\n    echo \"The median length is $1\"\n    return 0\n  fi\n  if [ $2 -eq $3 ]; then\n    echo \"The median length is $2\"\n    return 0\n  fi\n  if [ $1 -eq $3 ]; then\n    echo \"The median length is $3\"\n    return 0\n  fi\n  if [ $1 -lt $2 ]; then\n    if [ $2 -lt $3 ]; then\n      echo \"The median length is $2\"\n      return 0\n    fi\n  fi\n  if [ $1 -gt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo \"The median length is $2\"\n      return 0\n    fi\n  fi\n  if [ $1 -lt $3 ]; then\n    if [ $3 -lt $2 ]; then\n      echo \"The median length is $3\"\n      return 0\n    fi\n  fi\n  if [ $1 -gt $3 ]; then\n    if [ $3 -gt $2 ]; then\n      echo \"The median length is $3\"\n      return 0\n    fi\n  fi\n  if [ $1 -lt $2 ]; then\n    if [ $2 -gt $3 ]; then\n      echo \"The median length is $1\"\n      return 0\n    fi\n  fi\n  if [ $1 -gt $2 ]; then\n    if [ $2 -lt $3 ]; then\n      echo \"The median length is $1\"\n      return 0\n    fi\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  a=$1\n  b=$2\n  c=$3\n  if [ $a -le 0 ] || [ $b -le 0 ] || [ $c -le 0 ]; then\n    echo \"Error: sides must be positive integers\"\n    return 1\n  fi\n  if [ $a -eq $b ] && [ $b -eq $c ]; then\n    echo \"Error: sides must be different\"\n    return 1\n  fi\n  if [ $a -eq $b ] || [ $b -eq $c ] || [ $c -eq $a ]; then\n    echo \"Error: sides must be different\"\n    return 1\n  fi\n  if [ $a -gt $b ] && [ $a -gt $c ]; then\n    if [ $b -gt $c ]; then\n      echo $b\n    else\n      echo $c\n    fi\n  elif [ $b -gt $a ] && [ $b -gt $c ]; then\n    if [ $a -gt $c ]; then\n      echo $a\n    else\n      echo $c\n    fi\n  elif [ $c -gt $a ] && [ $c -gt $b ]; then\n    if [ $a -gt $b ]; then\n      echo $a\n    else\n      echo $b\n    fi\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo \"The median length of a trapezium is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpld2ii7pw.sh: line 15: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp2w5bsycy.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <side1> <side2> <side3>\"\n        return 1\n    fi\n\n    local side1=$1\n    local side2=$2\n    local side3=$3\n\n    if [ $side1 -le 0 ] || [ $side2 -le 0 ] || [ $side3 -le 0 ]; then\n        echo \"Error: sides must be positive\"\n        return 1\n    fi\n\n    if [ $side1 -eq $side2 ] && [ $side2 -eq $side3 ]; then\n        echo \"Error: sides must be different\"\n        return 1\n    fi\n\n    local median=$(( ($side1 + $side2 + $side3) / 2 ))\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local median_length=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo \"The median length of the trapezium is $median_length\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcaqezzq3.sh: line 15: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <h>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n    local h=$3\n    local median=$(((a + b) * h / 2))\n    echo \"Median length of trapezium with a=$a, b=$b and h=$h is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <integer> <integer> <integer>\"\n        return 1\n    fi\n\n    if ! [[ \"$1\" =~ ^[0-9]+$ ]]; then\n        echo \"Argument 1 must be an integer\"\n        return 1\n    fi\n\n    if ! [[ \"$2\" =~ ^[0-9]+$ ]]; then\n        echo \"Argument 2 must be an integer\"\n        return 1\n    fi\n\n    if ! [[ \"$3\" =~ ^[0-9]+$ ]]; then\n        echo \"Argument 3 must be an integer\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ]; then\n        echo \"Argument 1 and 2 must be different\"\n        return 1\n    fi\n\n    if [ $2 -eq $3 ]; then\n        echo \"Argument 2 and 3 must be different\"\n        return 1\n    fi\n\n    if [ $1 -eq $3 ]; then\n        echo \"Argument 1 and 3 must be different\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ]; then\n        if [ $1 -gt $3 ]; then\n            if [ $2 -gt $3 ]; then\n                echo $2\n            else\n                echo $3\n            fi\n        else\n            echo $1\n        fi\n    else\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            if [ $2 -gt $3 ]; then\n                echo $3\n            else\n                echo $2\n            fi\n        fi\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(($a + $b + $c))\n  echo \"The median of the trapezium is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median_length\n  median_length=$(echo \"scale=2; sqrt($a^2 + $b^2 + $c^2 - $a*$b - $b*$c - $c*$a) / 2\" | bc)\n  echo $median_length\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmphlecon5k.sh: line 12: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  echo \"scale=2; ($1 + $2 + $3) / 3\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpv8udijh3.sh: line 8: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n\tif [ $# -ne 3 ]; then\n\t\techo \"Usage: median_trapezium <a> <b> <c>\"\n\t\treturn 1\n\tfi\n\tif [ $1 -lt 0 ] || [ $2 -lt 0 ] || [ $3 -lt 0 ]; then\n\t\techo \"All sides must be positive\"\n\t\treturn 2\n\tfi\n\tif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n\t\techo \"All sides must be different\"\n\t\treturn 3\n\tfi\n\tif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n\t\techo \"Two sides must be equal\"\n\t\treturn 4\n\tfi\n\tif [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n\t\tif [ $2 -gt $3 ]; then\n\t\t\techo $2\n\t\telse\n\t\t\techo $3\n\t\tfi\n\telif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n\t\tif [ $1 -gt $3 ]; then\n\t\t\techo $1\n\t\telse\n\t\t\techo $3\n\t\tfi\n\telif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n\t\tif [ $1 -gt $2 ]; then\n\t\t\techo $1\n\t\telse\n\t\t\techo $2\n\t\tfi\n\tfi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n\tlocal a=$1\n\tlocal b=$2\n\tlocal c=$3\n\tlocal median=$(echo \"scale=2; ($a + $b + $c) / 3\" | bc)\n\techo \"The median of the trapezium is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp79gru9jq.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  if [ $1 -lt 0 ] || [ $2 -lt 0 ] || [ $3 -lt 0 ]; then\n    echo \"All arguments must be positive integers.\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"All arguments must be different.\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"Two arguments must be equal.\"\n    return 1\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    echo \"The first argument must be the smallest.\"\n    return 1\n  fi\n  if [ $3 -gt $2 ] && [ $3 -gt $1 ]; then\n    echo \"The third argument must be the biggest.\"\n    return 1\n  fi\n  if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    echo \"The second argument must be the biggest.\"\n    return 1\n  fi\n  if [ $1 -gt $2 ] && [ $1 -lt $3 ]; then\n    echo \"The first argument must be the smallest.\"\n    return 1\n  fi\n  if [ $3 -gt $2 ] && [ $3 -lt $1 ]; then\n    echo \"The third argument must be the biggest.\"\n    return 1\n  fi\n  if [ $2 -gt $1 ] && [ $2 -lt $3 ]; then\n    echo \"The second argument must be the biggest.\"\n    return 1\n  fi\n  if [ $1 -eq $2 ] && [ $2 -lt $3 ]; then\n    echo \"The first and second arguments must be equal.\"\n    return 1\n  fi\n  if [ $2 -eq $3 ] && [ $3 -lt $1 ]; then\n    echo \"The second and third arguments must be equal.\"\n    return 1\n  fi\n  if [ $1 -eq $3 ] && [ $3 -lt $2 ]; then\n\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp3aih6877.sh: line 58: syntax error near unexpected token `}'\\n/tmp/tmp3aih6877.sh: line 58: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    if [ $1 -lt 0 ] || [ $2 -lt 0 ] || [ $3 -lt 0 ]; then\n        echo \"All sides must be positive.\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"All sides must be different.\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Two sides must be equal.\"\n        return 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo $2\n        else\n            echo $3\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo $1\n        else\n            echo $3\n        fi\n    else\n        if [ $1 -gt $2 ]; then\n            echo $1\n        else\n            echo $2\n        fi\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median_length=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo \"The median length of a trapezium is $median_length\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmptm5nmn_p.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n  if ! [[ \"$1\" =~ ^[0-9]+$ ]]; then\n    echo \"Error: a is not an integer\"\n    return 1\n  fi\n  if ! [[ \"$2\" =~ ^[0-9]+$ ]]; then\n    echo \"Error: b is not an integer\"\n    return 1\n  fi\n  if ! [[ \"$3\" =~ ^[0-9]+$ ]]; then\n    echo \"Error: c is not an integer\"\n    return 1\n  fi\n  if [ $1 -eq $2 ]; then\n    echo \"Error: a and b are equal\"\n    return 1\n  fi\n  if [ $1 -eq $3 ]; then\n    echo \"Error: a and c are equal\"\n    return 1\n  fi\n  if [ $2 -eq $3 ]; then\n    echo \"Error: b and c are equal\"\n    return 1\n  fi\n  if [ $1 -lt $2 ]; then\n    if [ $3 -lt $1 ]; then\n      echo \"Error: c is smaller than a\"\n      return 1\n    fi\n    if [ $3 -gt $2 ]; then\n      echo \"Error: c is bigger than b\"\n      return 1\n    fi\n  else\n    if [ $3 -lt $2 ]; then\n      echo \"Error: c is smaller than b\"\n      return 1\n    fi\n    if [ $3 -gt $1 ]; then\n      echo \"Error: c is bigger than a\"\n      return 1\n    fi\n  fi\n  if [ $1 -lt $2 ]; then\n    echo $((($1 + $2 + $3) / 2))\n  else\n    echo $((($1 + $2 + $3) / 2))\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <h>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local h=$3\n\n    local median=$(((a + b) * h / 2))\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    if [ $a -le 0 ] || [ $b -le 0 ] || [ $c -le 0 ]; then\n        echo \"All sides must be positive\"\n        return 1\n    fi\n\n    if [ $a -eq $b ] && [ $b -eq $c ]; then\n        echo \"All sides must be different\"\n        return 1\n    fi\n\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo \"Median length is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpf_94yy0u.sh: line 27: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n\n  if [ $a -lt $b ]; then\n    if [ $b -lt $c ]; then\n      echo $b\n    elif [ $a -lt $c ]; then\n      echo $c\n    else\n      echo $a\n    fi\n  elif [ $a -lt $c ]; then\n    echo $a\n  elif [ $b -lt $c ]; then\n    echo $c\n  else\n    echo $b\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$((($a + $b + $c) / 2))\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <c>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"All arguments must be positive integers.\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"All arguments must be different.\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"All arguments must be different.\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $1 -eq $2 -a $2 -eq $3 ]; then\n        echo $1\n    elif [ $1 -eq $2 ]; then\n        echo $3\n    elif [ $1 -eq $3 ]; then\n        echo $2\n    elif [ $2 -eq $3 ]; then\n        echo $1\n    else\n        echo \"The lengths of the sides of the trapezium are not equal.\"\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 3\" | bc)\n    echo \"The median length of a trapezium is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp1mu832ar.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    echo \"scale=2;($1+$2+$3)/3\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp5jq1k_sd.sh: line 8: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local d=$4\n  local median=$(echo \"scale=2; ($a + $b + $c + $d) / 4\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpp6eniqdw.sh: line 12: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <a> <b> <h>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local h=$3\n  local median=$(((a + b) * h / 2))\n  echo \"Median length of trapezium is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <length1> <length2> <length3>\"\n        return 1\n    fi\n\n    local length1=$1\n    local length2=$2\n    local length3=$3\n\n    if [ $length1 -lt $length2 ]; then\n        if [ $length2 -lt $length3 ]; then\n            echo $length2\n        elif [ $length1 -lt $length3 ]; then\n            echo $length3\n        else\n            echo $length1\n        fi\n    else\n        if [ $length1 -lt $length3 ]; then\n            echo $length1\n        elif [ $length2 -lt $length3 ]; then\n            echo $length3\n        else\n            echo $length2\n        fi\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    echo \"scale=2; ($1 + $2 + $3) / 3\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe671y4ch.sh: line 8: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    echo \"scale=2; ($1 + $2 + $3) / 3\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe671y4ch.sh: line 8: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp2w5bsycy.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    if [ $a -lt 0 ] || [ $b -lt 0 ] || [ $c -lt 0 ]; then\n        echo \"All sides must be positive\"\n        return 1\n    fi\n\n    if [ $a -eq $b ] && [ $b -eq $c ]; then\n        echo \"All sides must be different\"\n        return 1\n    fi\n\n    local p=$(( $a + $b + $c ))\n    local s=$(( $p / 2 ))\n    local area=$(echo \"scale=2; sqrt($s * ($s - $a) * ($s - $b) * ($s - $c))\" | bc)\n    local median=$(echo \"scale=2; $area * 2 / $a\" | bc)\n\n    echo \"Median length is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpda8tzub7.sh: line 29: bc: command not found\\n/tmp/tmpda8tzub7.sh: line 30: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <a> <b> <c>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local p=$((a + b + c))\n  local s=$((p / 2))\n  local median=$(echo \"scale=2; sqrt($s * ($s - $a) * ($s - $b) * ($s - $c))\" | bc)\n  echo \"Median length of trapezium with sides $a, $b and $c is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp_h76nn78.sh: line 17: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <h>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local h=$3\n\n    local median=$(echo \"scale=2; ($a + $b) / 2\" | bc)\n    local area=$(echo \"scale=2; $median * $h\" | bc)\n\n    echo \"Median: $median\"\n    echo \"Area: $area\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpneacn5nn.sh: line 17: bc: command not found\\n/tmp/tmpneacn5nn.sh: line 18: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n    local c=$3\n    local p=$(($a + $b + $c))\n    local m=$(($p / 2))\n    local s=$(($m * ($m - $a) * ($m - $b) * ($m - $c)))\n    local median=$(echo \"sqrt($s)\" | bc -l)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp6hv9ul5_.sh: line 18: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <integer> <integer> <integer>\"\n    return 1\n  fi\n\n  if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n    echo \"All arguments must be positive integers.\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"All arguments must be different.\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    echo \"The median is $2.\"\n    return 0\n  fi\n\n  if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    echo \"The median is $1.\"\n    return 0\n  fi\n\n  if [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    echo \"The median is $2.\"\n    return 0\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $1 -eq $2 ]; then\n        echo $1\n    else\n        echo $3\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: median_trapezium <a> <b> <h>\"\n    return 1\n  fi\n\n  local a=$1\n  local b=$2\n  local h=$3\n\n  echo \"scale=2;($a + $b) * $h / 2\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpfmt5obo2.sh: line 17: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    local a=$1\n    local b=$2\n    local c=$3\n    local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n    echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn96ga432.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 a b c\"\n    exit 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local s=$(($a+$b+$c))\n  local p=$(($s/2))\n  local median=$(echo \"scale=2; sqrt($p*($p-$a)*($p-$b)*($p-$c))\" | bc)\n  echo \"The median length of a trapezium is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmptck3d2ct.sh: line 17: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $1 -eq $2 ]\n    then\n        echo $1\n    else\n        echo $3\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    echo \"scale=2;($1+$2)*$3/2\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpw6hxeo41.sh: line 8: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <length1> <length2> <length3>\"\n        return 1\n    fi\n\n    local length1=$1\n    local length2=$2\n    local length3=$3\n\n    if [ $length1 -lt $length2 ]; then\n        if [ $length2 -lt $length3 ]; then\n            echo $length2\n        elif [ $length1 -lt $length3 ]; then\n            echo $length3\n        else\n            echo $length1\n        fi\n    else\n        if [ $length1 -lt $length3 ]; then\n            echo $length1\n        elif [ $length2 -lt $length3 ]; then\n            echo $length3\n        else\n            echo $length2\n        fi\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"Error: the input must be positive integers.\"\n        exit 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"Error: the input must be different integers.\"\n        exit 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Error: the input must be different integers.\"\n        exit 1\n    fi\n\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $2 -gt $3 ]; then\n            echo \"$2\"\n        else\n            echo \"$3\"\n        fi\n    fi\n\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $1 -gt $3 ]; then\n            echo \"$1\"\n        else\n            echo \"$3\"\n        fi\n    fi\n\n    if [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $1 -gt $2 ]; then\n            echo \"$1\"\n        else\n            echo \"$2\"\n        fi\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    echo \"scale=2; ($1 + $2 + $3) / 3\" | bc -l\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp_0aqvirx.sh: line 8: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a+$b+$c)/3\" | bc)\n  echo \"The median of the trapezium is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp3z8jfuq4.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <h>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local h=$3\n\n    echo \"scale=2; ($a + $b) * $h / 2\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp694_djsh.sh: line 17: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: $0 <integer> <integer> <integer>\"\n    return 1\n  fi\n\n  if [ $1 -lt 0 -o $2 -lt 0 -o $3 -lt 0 ]; then\n    echo \"All arguments must be positive integers\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 -a $2 -eq $3 ]; then\n    echo \"All arguments must be different\"\n    return 1\n  fi\n\n  if [ $1 -eq $2 -o $2 -eq $3 -o $1 -eq $3 ]; then\n    echo \"Two arguments must be equal\"\n    return 1\n  fi\n\n  if [ $1 -gt $2 -a $1 -gt $3 ]; then\n    if [ $2 -gt $3 ]; then\n      echo $2\n    else\n      echo $3\n    fi\n  elif [ $2 -gt $1 -a $2 -gt $3 ]; then\n    if [ $1 -gt $3 ]; then\n      echo $1\n    else\n      echo $3\n    fi\n  else\n    if [ $1 -gt $2 ]; then\n      echo $1\n    else\n      echo $2\n    fi\n  fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    local median=$(echo \"scale=2; (sqrt($a*$a + $b*$b) + sqrt($b*$b + $c*$c) + sqrt($c*$c + $a*$a)) / 3\" | bc)\n    echo \"Median length of trapezium with sides $a, $b, $c is $median\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp2fe68jp1.sh: line 17: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  echo \"scale=2; ($1 + $2 + $3) / 3\" | bc\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpv8udijh3.sh: line 8: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: $0 <a> <b> <c>\"\n        return 1\n    fi\n\n    if [ $1 -le 0 ] || [ $2 -le 0 ] || [ $3 -le 0 ]; then\n        echo \"All sides must be positive\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"All sides must be different\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"Two sides must be equal\"\n        return 1\n    fi\n\n    if [ $1 -eq $2 ]; then\n        echo $3\n        return 0\n    fi\n\n    if [ $2 -eq $3 ]; then\n        echo $1\n        return 0\n    fi\n\n    if [ $1 -eq $3 ]; then\n        echo $2\n        return 0\n    fi\n\n    echo \"Something went wrong\"\n    return 1\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $1 -eq $2 ]; then\n        echo $1\n    else\n        echo $3\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <a> <b> <c>\"\n        return 1\n    fi\n\n    local a=$1\n    local b=$2\n    local c=$3\n\n    local median_length=$(echo \"scale=2; sqrt($a*$a + $b*$b + $c*$c - $a*$b - $b*$c - $c*$a)\" | bc)\n\n    echo \"Median length of trapezium is $median_length\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcqgfxef0.sh: line 17: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: $FUNCNAME <a> <b> <c>\"\n    return 1\n  fi\n  local a=$1\n  local b=$2\n  local c=$3\n  local p=$(($a + $b + $c))\n  local s=$(($p / 2))\n  local median=$(echo \"scale=2; sqrt($s * ($s - $a) * ($s - $b) * ($s - $c))\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpq648hp8m.sh: line 17: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local median=$(echo \"scale=2; ($a + $b + $c) / 2\" | bc)\n  echo $median\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpe__qscxs.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n  local a=$1\n  local b=$2\n  local c=$3\n  local s=$(($a + $b + $c))\n  local p=$(($s / 2))\n  local m=$(($p * ($p - $a) * ($p - $b) * ($p - $c)))\n  local r=$(echo \"sqrt($m)\" | bc -l)\n  echo \"$r\"\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpr3a9dw3y.sh: line 14: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the median length of a trapezium.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nmedian_trapezium() {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: median_trapezium <length_1> <length_2> <length_3>\"\n        return 1\n    fi\n\n    if [ $1 -lt $2 ]; then\n        if [ $2 -lt $3 ]; then\n            echo $2\n        elif [ $1 -lt $3 ]; then\n            echo $3\n        else\n            echo $1\n        fi\n    elif [ $1 -lt $3 ]; then\n        echo $1\n    elif [ $2 -lt $3 ]; then\n        echo $3\n    else\n        echo $2\n    fi\n}\n\ncandidate() {\n    median_trapezium \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\" \"25\" \"35\") = \"20\" ]]\n    [[ $(candidate \"10\" \"20\" \"30\") = \"15\" ]]\n    [[ $(candidate \"6\" \"9\" \"4\") = \"7.5\" ]]\n}\n\nrun_test",
      "timestamp": 1667190930,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
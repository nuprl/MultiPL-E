{
  "name": "mbpp_94_index_minimum",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_94_index_minimum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=0\n    local index=0\n    local value=0\n    while read -r line; do\n        value=$(echo \"$line\" | cut -d' ' -f2)\n        if [ $index -eq 0 ]; then\n            min_value=$value\n        else\n            if [ $value -lt $min_value ]; then\n                min_value=$value\n                min_index=$index\n            fi\n        fi\n        index=$((index + 1))\n    done <<< \"$1\"\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_valuen}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$(( i + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp4vkll9y5.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local i=1\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$(( i + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpb989h5xh.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=999999\n    local index=0\n    local value=0\n    while read -r line; do\n        value=$(echo \"$line\" | awk '{print $2}')\n        if (( value < min_value )); then\n            min_index=$index\n            min_value=$value\n        fi\n        (( index++ ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpw81oafip.sh: line 12: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local index=0\n  local value=0\n  local list=()\n  local min_list=()\n  local line=''\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local index=0\n  local value=0\n  while read -r line; do\n    value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if [ $index -eq 0 ] || [ $value -lt $min_value ]; then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$((index+1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=9999999999\n  local index=0\n  local value=0\n  local list=()\n  local line=''\n  local i=0\n  local j=0\n\n  while read line; do\n    list=($line)\n    value=${list[1]}\n    if [[ $value -lt $min_value ]]; then\n      min_value=$value\n      min_index=$index\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp9bh9oaf0.sh: line 18: [[: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$i\n    fi\n    (( i++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpisyabg1o.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | awk '{print $2}')\n  local i=1\n  while read line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if (( $(echo \"$value < $min_value\" | bc -l) )); then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmprwxfmxye.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn67wio3n.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -1 | awk '{print $2}')\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmphc3_7qxe.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=0\n    local index=0\n    local value=0\n    while read -r line; do\n        index=$(echo \"$line\" | awk '{print $1}')\n        value=$(echo \"$line\" | awk '{print $2}')\n        if [ $index -eq 0 ]; then\n            min_index=$index\n            min_value=$value\n        elif [ $value -lt $min_value ]; then\n            min_index=$index\n            min_value=$value\n        fi\n    done <<< \"$1\"\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp225f502d.sh: line 13: [: Rash: integer expression expected\\n/tmp/tmp225f502d.sh: line 16: [: 143\\\\nManjeet: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    (( index++ ))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpuh08k80u.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=\n  local index=0\n  local value=\n  while read -r value; do\n    if [[ -z $min_value || $value -lt $min_value ]]; then\n      min_index=$index\n      min_value=$value\n    fi\n    ((index++))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n    local i=1\n    while read -r line; do\n        local value=$(echo \"$line\" | cut -d ' ' -f 2)\n        if (( value < min_value )); then\n            min_index=$i\n            min_value=$value\n        fi\n        ((i++))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpdbiggt_p.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=9999999999\n  local index=0\n  local value=0\n  local list=()\n  while read -r line; do\n    list=($line)\n    value=${list[1]}\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$index\n    fi\n    (( index++ ))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxnlte16s.sh: line 14: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local i=0\n  local j=0\n  local line\n  local value\n  for line in $1; do\n    j=0\n    for value in $line; do\n      if [ $j -eq 0 ]; then\n        if [ $i -eq 0 ]; then\n          min_index=$i\n          min_value=$value\n        else\n          if [ $value -lt $min_value ]; then\n            min_index=$i\n            min_value=$value\n          fi\n        fi\n      fi\n      j=$((j+1))\n    done\n    i=$((i+1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp8zaqwhmw.sh: line 20: [: 143\\\\nManjeet: integer expression expected\\n/tmp/tmp8zaqwhmw.sh: line 20: [: 200\\\\nVarsha: integer expression expected\\n/tmp/tmp8zaqwhmw.sh: line 20: [: Rash: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local -a list\n  local -a min\n  local -i min_index\n  local -i i\n  local -i j\n  local -i min_value\n  local -i value\n  local -i min_value_index\n\n  IFS=$'\\n' read -r -d '' -a list < <(printf '%s\\0' \"$1\")\n  min_index=0\n  min_value=${list[min_index]}\n  min_value_index=0\n  for ((i=0; i<${#list[@]}; i++)); do\n    IFS=' ' read -r -a min <<< \"${list[i]}\"\n    value=${min[1]}\n    if ((value < min_value)); then\n      min_value=$value\n      min_value_index=$i\n    fi\n  done\n  IFS=' ' read -r -a min <<< \"${list[min_value_index]}\"\n  echo \"${min[0]}\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpfuye8aqc.sh: line 17: Rash 143\\\\nManjeet 200\\\\nVarsha 100: syntax error in expression (error token is \"143\\\\nManjeet 200\\\\nVarsha 100\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local i=1\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$(( i + 1 ))\n  done < <(echo \"$1\")\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpb8w8dgqc.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    (( index++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp1b6hbrc4.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local index=0\n  while read line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$(( index + 1 ))\n  done < <(echo \"$1\")\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcmyztqdi.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=0\n    local min_index=0\n    local i=0\n    local line\n    while read line; do\n        local value=$(echo $line | cut -d' ' -f2)\n        if [ $i -eq 0 ] || [ $value -lt $min ]; then\n            min=$value\n            min_index=$i\n        fi\n        i=$((i+1))\n    done <<< \"$1\"\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=9999999999\n    local i=0\n    local value\n    while read -r line; do\n        value=$(echo \"$line\" | cut -d ' ' -f 2)\n        if (( value < min_value )); then\n            min_value=$value\n            min_index=$i\n        fi\n        (( i++ ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp84gx8q19.sh: line 12: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=1000000\n    local index=0\n    local value=0\n    while read -r line; do\n        value=$(echo \"$line\" | cut -d ' ' -f 2)\n        if (( value < min_value )); then\n            min_value=$value\n            min_index=$index\n        fi\n        (( index++ ))\n    done <<< \"$1\"\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpozzskc89.sh: line 12: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    (( index++ ))\n  done < <(echo \"$1\")\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpid8mu3dr.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$i\n    fi\n    (( i++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpisyabg1o.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=999999\n    local min_index=0\n    local index=0\n    local line\n    while read line; do\n        local value=$(echo \"$line\" | awk '{print $2}')\n        if (( value < min )); then\n            min=$value\n            min_index=$index\n        fi\n        (( index++ ))\n    done <<< \"$1\"\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpkk2656rh.sh: line 12: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=9999999999\n  local i=0\n  local value\n  for value in $1; do\n    if [[ $value -lt $min_value ]]; then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$((i+1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp8ia5zhaw.sh: line 11: [[: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n/tmp/tmp8ia5zhaw.sh: line 11: [[: 200\\\\nVarsha: syntax error: invalid arithmetic operator (error token is \"\\\\nVarsha\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_value=999999\n    local min_index=0\n    local i=0\n    while read -r line; do\n        local value=\"$(echo \"$line\" | awk '{print $2}')\"\n        if (( value < min_value )); then\n            min_value=\"$value\"\n            min_index=\"$i\"\n        fi\n        (( i++ ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpwakc4z6g.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n    local i=0\n    while read -r line; do\n        local value=$(echo \"$line\" | cut -d ' ' -f 2)\n        if (( value < min_value )); then\n            min_value=$value\n            min_index=$i\n        fi\n        (( i++ ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpegdbiyq4.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=${1%% *}\n  local i=0\n  for value in $1; do\n    if [[ $value -lt $min_value ]]; then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$((i + 1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmprc637pzk.sh: line 10: [[: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n/tmp/tmprc637pzk.sh: line 10: [[: 200\\\\nVarsha: syntax error: invalid arithmetic operator (error token is \"\\\\nVarsha\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=999999999\n    local min_index=0\n    local i=0\n    while read -r line; do\n        local value=$(echo \"$line\" | cut -d' ' -f2)\n        if (( value < min )); then\n            min=$value\n            min_index=$i\n        fi\n        (( i++ ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp8efj1zy6.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=9999999999\n  local index=0\n  local value=0\n  local list=()\n  local i=0\n  for list in $1; do\n    for i in $list; do\n      if [ $i -lt $min_value ]; then\n        min_value=$i\n        min_index=$index\n      fi\n    done\n    index=$((index + 1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp1ou_odhx.sh: line 14: [: Rash: integer expression expected\\n/tmp/tmp1ou_odhx.sh: line 14: [: 143\\\\nManjeet: integer expression expected\\n/tmp/tmp1ou_odhx.sh: line 14: [: 200\\\\nVarsha: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=\n    local index=0\n    local value=\n    while read -r value; do\n        if [[ -z $min_value || $value -lt $min_value ]]; then\n            min_index=$index\n            min_value=$value\n        fi\n        index=$((index+1))\n    done <<< \"$1\"\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n    local index=0\n    while read -r line; do\n        local value=$(echo \"$line\" | cut -d ' ' -f 2)\n        if (( value < min_value )); then\n            min_index=$index\n            min_value=$value\n        fi\n        index=$(( index + 1 ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpa4850q1o.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=0\n    local i=0\n    local value=0\n    while read -r line; do\n        value=$(echo \"$line\" | awk '{print $2}')\n        if [ $i -eq 0 ]; then\n            min_value=$value\n        elif [ $value -lt $min_value ]; then\n            min_value=$value\n            min_index=$i\n        fi\n        ((i++))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_valuen}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n    local i=1\n    while read -r line; do\n        local value=$(echo \"$line\" | cut -d' ' -f2)\n        if (( value < min_value )); then\n            min_value=$value\n            min_index=$i\n        fi\n        (( i++ ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpyutev8z7.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=\n  local min_index=\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if [[ -z $min || $value -lt $min ]]; then\n      min=$value\n      min_index=$i\n    fi\n    ((i++))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local index=0\n  while read line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    (( index++ ))\n  done < <(echo \"$1\")\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp72z6kns0.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=${1%% *}\n  local index=0\n  local value\n  for value in $1; do\n    if (( $(echo \"$value < $min_value\" | bc -l) )); then\n      min_value=$value\n      min_index=$index\n    fi\n    (( index++ ))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp62ts6cy3.sh: line 11: bc: command not found\\n/tmp/tmp62ts6cy3.sh: line 11: bc: command not found\\n/tmp/tmp62ts6cy3.sh: line 11: bc: command not found\\n/tmp/tmp62ts6cy3.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n    local i=1\n    while read line; do\n        local value=$(echo \"$line\" | cut -d' ' -f2)\n        if (( value < min_value )); then\n            min_index=$i\n            min_value=$value\n        fi\n        (( i++ ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmppgi3dslj.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=999999\n  local index=0\n  local value=0\n  while read -r line; do\n    value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$index\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp78gx8u9t.sh: line 12: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$(( index + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpwddlasco.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=999999\n    local min_index=0\n    local i=0\n    while read -r line; do\n        local value=$(echo \"$line\" | cut -d ' ' -f 2)\n        if (( value < min )); then\n            min=$value\n            min_index=$i\n        fi\n        i=$(( i + 1 ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmps59e_2zz.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=${1%% *}\n  local index=0\n  local value\n  for value in $1; do\n    if [ $value -lt $min_value ]; then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$((index + 1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpogs9uzjk.sh: line 11: [: Rash: integer expression expected\\n/tmp/tmpogs9uzjk.sh: line 11: [: 143\\\\nManjeet: integer expression expected\\n/tmp/tmpogs9uzjk.sh: line 11: [: 200\\\\nVarsha: integer expression expected\\n/tmp/tmpogs9uzjk.sh: line 11: [: Rash: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local i=1\n  while read line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$i\n    fi\n    i=$(( i + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpnntvtx8b.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$index\n    fi\n    (( index++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpoen0w2ef.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=\n  local min_index=\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if [ -z \"$min\" ] || [ \"$value\" -lt \"$min\" ]; then\n      min=\"$value\"\n      min_index=\"$i\"\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=999999\n  local i=0\n  local value=0\n  for list in $1; do\n    value=$(echo $list | cut -d ' ' -f 2)\n    if (( $value < $min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$((i+1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpclcfi09s.sh: line 12: ((: 143\\\\nManjeet < Rash : syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet < Rash \")\\n/tmp/tmpclcfi09s.sh: line 12: ((: 200\\\\nVarsha < Rash : syntax error: invalid arithmetic operator (error token is \"\\\\nVarsha < Rash \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=${1%% *}\n    local index=0\n    local value\n    for value in $1; do\n        if [[ $value -lt $min_value ]]; then\n            min_index=$index\n            min_value=$value\n        fi\n        ((index++))\n    done\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpabf_ovj7.sh: line 11: [[: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n/tmp/tmpabf_ovj7.sh: line 11: [[: 200\\\\nVarsha: syntax error: invalid arithmetic operator (error token is \"\\\\nVarsha\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=999999999\n  local index=0\n  local i=0\n  local line\n  while read line; do\n    local value=$(echo $line | cut -d ' ' -f 2)\n    if (( $value < $min )); then\n      min=$value\n      index=$i\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo $index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpr9lla10_.sh: line 12: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=${1%% *}\n  local index=0\n  local value\n  for value in $1; do\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$index\n    fi\n    (( index++ ))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp1p05wn4c.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n/tmp/tmp1p05wn4c.sh: line 11: ((: 200\\\\nVarsha: syntax error: invalid arithmetic operator (error token is \"\\\\nVarsha\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=999999\n    local min_index=0\n    local i=0\n    for line in $(echo \"$1\" | tr '\\n' ' '); do\n        local value=$(echo \"$line\" | awk '{print $2}')\n        if (( value < min )); then\n            min=$value\n            min_index=$i\n        fi\n        i=$((i+1))\n    done\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_valuen}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n    local index=0\n    while read -r line; do\n        local value=$(echo \"$line\" | cut -d ' ' -f 2)\n        if (( value < min_value )); then\n            min_value=$value\n            min_index=$index\n        fi\n        index=$(( index + 1 ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp80sejnpa.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=999999\n  local min_index=0\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if (( value < min )); then\n      min=$value\n      min_index=$i\n    fi\n    (( i++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp_384kqfc.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    ((index++))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpyauow2rk.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=1000000000\n  local min_index=0\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if (( value < min )); then\n      min=$value\n      min_index=$i\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmprxf40chf.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n    local index=0\n    while read line; do\n        local value=$(echo \"$line\" | cut -d' ' -f2)\n        if (( value < min_value )); then\n            min_index=$index\n            min_value=$value\n        fi\n        index=$(( index + 1 ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp77vssclg.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=999999\n  local min_index=0\n  local i=0\n  for line in $1; do\n    local value=$(echo $line | cut -d' ' -f2)\n    if [ $value -lt $min ]; then\n      min=$value\n      min_index=$i\n    fi\n    i=$((i+1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp7_6wqelw.sh: line 11: [: Rash: integer expression expected\\n/tmp/tmp7_6wqelw.sh: line 11: [: 143\\\\nManjeet: integer expression expected\\n/tmp/tmp7_6wqelw.sh: line 11: [: 200\\\\nVarsha: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n    local i=1\n    while read -r line; do\n        local value=$(echo \"$line\" | cut -d ' ' -f 2)\n        if (( value < min_value )); then\n            min_index=$i\n            min_value=$value\n        fi\n        (( i++ ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpmbvy52vq.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=${1%% *}\n    local index=0\n    for value in $1; do\n        if (( $(echo \"$value < $min_value\" | bc -l) )); then\n            min_index=$index\n            min_value=$value\n        fi\n        (( index++ ))\n    done\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpkqejejiy.sh: line 10: bc: command not found\\n/tmp/tmpkqejejiy.sh: line 10: bc: command not found\\n/tmp/tmpkqejejiy.sh: line 10: bc: command not found\\n/tmp/tmpkqejejiy.sh: line 10: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local index=0\n  local value=0\n  while read -r line; do\n    value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if [ $index -eq 0 ] || [ $value -lt $min_value ]; then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=1000000000\n  local min_index=0\n  local i=0\n  while read -r line; do\n    local value=$(echo $line | cut -d' ' -f2)\n    if (( $value < $min )); then\n      min=$value\n      min_index=$i\n    fi\n    (( i++ ))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpvr8b17im.sh: line 11: ((: 143\\\\nManjeet < 1000000000 : syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet < 1000000000 \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$i\n    fi\n    (( i++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpisyabg1o.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp0nfgnrtf.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=999999999\n    local min_index=0\n    local i=0\n    while read -r line; do\n        local value=$(echo \"$line\" | cut -d' ' -f2)\n        if (( value < min )); then\n            min=$value\n            min_index=$i\n        fi\n        (( i++ ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp8efj1zy6.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=999999\n    local min_index=0\n    local index=0\n    local line\n    while read line; do\n        local value=$(echo \"$line\" | awk '{print $2}')\n        if (( value < min )); then\n            min=$value\n            min_index=$index\n        fi\n        index=$(( index + 1 ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp9ipuseqa.sh: line 12: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if [[ \"$value\" -lt \"$min_value\" ]]; then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpowffuzob.sh: line 11: [[: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local index=0\n  local value=0\n  while read -r line; do\n    value=$(echo \"$line\" | cut -d' ' -f2)\n    if [ $index -eq 0 ] || [ $value -lt $min_value ]; then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=999999\n  local min_index=0\n  local i=0\n  while read -r line; do\n    local val=$(echo \"$line\" | cut -d' ' -f2)\n    if [[ $val -lt $min ]]; then\n      min=$val\n      min_index=$i\n    fi\n    ((i++))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpgnut9d05.sh: line 11: [[: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_valuen}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local index=0\n  local value=0\n  local line=0\n  while read line; do\n    index=$(echo \"$line\" | awk '{print $1}')\n    value=$(echo \"$line\" | awk '{print $2}')\n    if [ $index -eq 0 ]; then\n      min_index=$index\n      min_value=$value\n    elif [ $value -lt $min_value ]; then\n      min_index=$index\n      min_value=$value\n    fi\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpje7i_dht.sh: line 14: [: Rash: integer expression expected\\n/tmp/tmpje7i_dht.sh: line 17: [: 143nManjeet: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=999999999\n  local index=0\n  local value=0\n  local list\n  for list in $1; do\n    value=$(echo $list | cut -d' ' -f2)\n    if [ $value -lt $min_value ]; then\n      min_value=$value\n      min_index=$index\n    fi\n    index=$((index+1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpwvsacs5e.sh: line 13: [: Rash: integer expression expected\\n/tmp/tmpwvsacs5e.sh: line 13: [: 143\\\\nManjeet: integer expression expected\\n/tmp/tmpwvsacs5e.sh: line 13: [: 200\\\\nVarsha: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=${1%% *}\n    local index=0\n    for value in $1; do\n        if [[ $value -lt $min_value ]]; then\n            min_index=$index\n            min_value=$value\n        fi\n        index=$((index + 1))\n    done\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpyo12q4av.sh: line 10: [[: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n/tmp/tmpyo12q4av.sh: line 10: [[: 200\\\\nVarsha: syntax error: invalid arithmetic operator (error token is \"\\\\nVarsha\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n    local index=0\n    while read line; do\n        local value=$(echo \"$line\" | cut -d' ' -f2)\n        if (( value < min_value )); then\n            min_index=$index\n            min_value=$value\n        fi\n        index=$((index + 1))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp2i2v53q5.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=\n  local min_index=\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if [[ -z $min || $value -lt $min ]]; then\n      min=$value\n      min_index=$i\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=0\n    local min_index=0\n    local i=0\n    while read -r line; do\n        local value=$(echo \"$line\" | cut -d' ' -f2)\n        if [[ $i -eq 0 ]]; then\n            min=$value\n        elif [[ $value -lt $min ]]; then\n            min=$value\n            min_index=$i\n        fi\n        i=$((i+1))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$index\n    fi\n    index=$(( index + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp4ocdtw98.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | awk '{print $2}')\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$(( index + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpj06okocv.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n    local i=1\n    while read -r line; do\n        local value=$(echo \"$line\" | cut -d ' ' -f 2)\n        if (( value < min_value )); then\n            min_index=$i\n            min_value=$value\n        fi\n        (( i++ ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpmbvy52vq.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local i=0\n  local j=0\n  local line\n  local value\n  for line in $1; do\n    value=$(echo $line | cut -d' ' -f2)\n    if [ $i -eq 0 ] || [ $value -lt $min_value ]; then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$((i+1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpauuheyt9.sh: line 14: [: 143\\\\nManjeet: integer expression expected\\n/tmp/tmpauuheyt9.sh: line 14: [: 200\\\\nVarsha: integer expression expected\\n/tmp/tmpauuheyt9.sh: line 14: [: Rash: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=\n  local min_index=\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if [[ -z $min || $value -lt $min ]]; then\n      min=$value\n      min_index=$i\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=999999\n  local min_index=0\n  local i=0\n  local line\n  while read line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min )); then\n      min=$value\n      min_index=$i\n    fi\n    (( i++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpt0zbn5tj.sh: line 12: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local index=0\n  while read line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$(( index + 1 ))\n  done < <(echo \"$1\")\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmphycy81qx.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_valuen}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local index=0\n  local value=0\n  while read -r line; do\n    value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if [[ $index -eq 0 ]]; then\n      min_value=$value\n    elif [[ $value -lt $min_value ]]; then\n      min_value=$value\n      min_index=$index\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local index=0\n  local value=0\n  local i=0\n  for i in $(echo \"$1\" | tr ' ' '\\n'); do\n    index=$(echo \"$i\" | cut -d' ' -f1)\n    value=$(echo \"$i\" | cut -d' ' -f2)\n    if [ $index -eq 0 ] || [ $value -lt $min_value ]; then\n      min_index=$index\n      min_value=$value\n    fi\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmprxcazqh1.sh: line 14: [: Rash: integer expression expected\\n/tmp/tmprxcazqh1.sh: line 14: [: Rash: integer expression expected\\n/tmp/tmprxcazqh1.sh: line 14: [: 143\\\\nManjeet: integer expression expected\\n/tmp/tmprxcazqh1.sh: line 14: [: 143\\\\nManjeet: integer expression expected\\n/tmp/tmprxcazqh1.sh: line 14: [: 200\\\\nVarsha: integer expression expected\\n/tmp/tmprxcazqh1.sh: line 14: [: 200\\\\nVarsha: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$(( index + 1 ))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcltthhv5.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local i=1\n  while read line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$(( i + 1 ))\n  done < <(echo \"$1\")\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp12p5bn2i.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=999999\n    local min_index=0\n    local i=0\n    for line in $1; do\n        local value=$(echo $line | cut -d ' ' -f 2)\n        if (( value < min )); then\n            min=$value\n            min_index=$i\n        fi\n        i=$((i+1))\n    done\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpymm7iae2.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n/tmp/tmpymm7iae2.sh: line 11: ((: 200\\\\nVarsha: syntax error: invalid arithmetic operator (error token is \"\\\\nVarsha\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=0\n    local index=0\n    local value=0\n    while read -r line; do\n        value=$(echo \"$line\" | cut -d' ' -f2)\n        if (( index == 0 || value < min_value )); then\n            min_index=$index\n            min_value=$value\n        fi\n        index=$(( index + 1 ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | awk '{print $2}')\n  local i=1\n  while read line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if (( $(echo \"$value < $min_value\" | bc -l) )); then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpl8544jxb.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | awk '{print $2}')\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$index\n    fi\n    (( index++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpb0bjhv1g.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local i=1\n  while read line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$i\n    fi\n    i=$(( i + 1 ))\n  done < <(echo \"$1\")\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmplz_84mdz.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local index=0\n  local value=0\n  local line=0\n  while read -r line; do\n    index=$(echo \"$line\" | cut -d ' ' -f 1)\n    value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if [ $index -eq 0 ]; then\n      min_index=$index\n      min_value=$value\n    else\n      if [ $value -lt $min_value ]; then\n        min_index=$index\n        min_value=$value\n      fi\n    fi\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpli5451ym.sh: line 14: [: Rash: integer expression expected\\n/tmp/tmpli5451ym.sh: line 18: [: 143\\\\nManjeet: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local index=0\n  local value=0\n  local line=''\n  while read line; do\n    value=$(echo \"$line\" | cut -d' ' -f2)\n    if [ $index -eq 0 ]; then\n      min_value=$value\n    elif [ $value -lt $min_value ]; then\n      min_value=$value\n      min_index=$index\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$index\n    fi\n    index=$(( index + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmppz19jwnk.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n    local i=1\n    while read -r line; do\n        local value=$(echo \"$line\" | cut -d ' ' -f 2)\n        if (( value < min_value )); then\n            min_index=$i\n            min_value=$value\n        fi\n        (( i++ ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpmbvy52vq.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=9999999999\n    local min_index=0\n    local i=0\n    for line in $(echo \"$1\"); do\n        local value=$(echo \"$line\" | cut -d ' ' -f 2)\n        if (( value < min )); then\n            min=$value\n            min_index=$i\n        fi\n        (( i++ ))\n    done\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpprog1uyd.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n/tmp/tmpprog1uyd.sh: line 11: ((: 200\\\\nVarsha: syntax error: invalid arithmetic operator (error token is \"\\\\nVarsha\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=\n  local min_index=\n  local i=0\n  while read -r line; do\n    local value=${line%% *}\n    local index=${line##* }\n    if [[ -z $min || $index -lt $min ]]; then\n      min=$index\n      min_index=$i\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=\n  local min_index=\n  local index=0\n  while read -r line; do\n    local value=${line%% *}\n    local key=${line#* }\n    if [[ -z $min || $key -lt $min ]]; then\n      min=$key\n      min_index=$index\n    fi\n    ((index++))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$(( index + 1 ))\n  done < <(echo \"$1\")\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn8u7bku7.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if [[ $value -lt $min_value ]]; then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxd0seaa1.sh: line 11: [[: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=999999\n  local index=0\n  local i=0\n  local line\n  while read line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if (( value < min )); then\n      min=$value\n      index=$i\n    fi\n    (( i++ ))\n  done <<< \"$1\"\n  echo \"$index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpl1ylcgb1.sh: line 12: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=\n    local min_index=\n    local i=0\n    while read -r line; do\n        local value=$(echo \"$line\" | awk '{print $2}')\n        if [ -z \"$min\" ] || [ \"$value\" -lt \"$min\" ]; then\n            min=\"$value\"\n            min_index=\"$i\"\n        fi\n        i=$((i+1))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local i=1\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$(( i + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpff6yh4y8.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local i=1\n  while read line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    (( i++ ))\n  done < <(echo \"$1\")\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp0u55i1n5.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=\n  local min_index=\n  local i=0\n  while read -r line; do\n    local value=${line%% *}\n    local index=${line##* }\n    if [[ -z $min || $index -lt $min ]]; then\n      min=$index\n      min_index=$i\n    fi\n    ((++i))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=9999999999\n  local index=0\n  local value=0\n  local list\n  for list in $1; do\n    value=`echo $list | cut -d' ' -f2`\n    if [ $value -lt $min_value ]; then\n      min_value=$value\n      min_index=$index\n    fi\n    index=$((index + 1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp9qvy6ey0.sh: line 13: [: Rash: integer expression expected\\n/tmp/tmp9qvy6ey0.sh: line 13: [: 143\\\\nManjeet: integer expression expected\\n/tmp/tmp9qvy6ey0.sh: line 13: [: 200\\\\nVarsha: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local index=0\n  local value=0\n  while read -r line; do\n    value=$(echo \"$line\" | cut -d ' ' -f2)\n    if [[ $index -eq 0 ]]; then\n      min_value=$value\n    elif [[ $value -lt $min_value ]]; then\n      min_value=$value\n      min_index=$index\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=\n    local min_index=\n    local i=\n    local line=\n    local value=\n    local index=\n    IFS=$'\\n'\n    for line in $1; do\n        IFS=' '\n        i=0\n        for value in $line; do\n            if [ -z \"$min\" ] || [ \"$value\" -lt \"$min\" ]; then\n                min=$value\n                min_index=$i\n            fi\n            i=$((i+1))\n        done\n    done\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn8l9yrxp.sh: line 17: [: 143\\\\nManjeet: integer expression expected\\n/tmp/tmpn8l9yrxp.sh: line 17: [: 200\\\\nVarsha: integer expression expected\\n/tmp/tmpn8l9yrxp.sh: line 17: [: Rash: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n    local i=1\n    while read line; do\n        local value=$(echo \"$line\" | cut -d ' ' -f 2)\n        if (( value < min_value )); then\n            min_value=$value\n            min_index=$i\n        fi\n        i=$((i+1))\n    done <<< \"$1\"\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp7lwir6sc.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local i=1\n  while read line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$i\n    fi\n    (( i++ ))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpdggicttd.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=999999\n  local min_index=0\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if (( value < min )); then\n      min=$value\n      min_index=$i\n    fi\n    (( i++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp_384kqfc.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=${1%% *}\n  local index=0\n  local value\n  for value in $1; do\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    (( index++ ))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp1924t2x3.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n/tmp/tmp1924t2x3.sh: line 11: ((: 200\\\\nVarsha: syntax error: invalid arithmetic operator (error token is \"\\\\nVarsha\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=999999999\n  local index=0\n  local i=0\n  for x in $1; do\n    if [[ $x -lt $min ]]; then\n      min=$x\n      index=$i\n    fi\n    i=$((i+1))\n  done\n  echo $index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpdp1qab37.sh: line 10: [[: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n/tmp/tmpdp1qab37.sh: line 10: [[: 200\\\\nVarsha: syntax error: invalid arithmetic operator (error token is \"\\\\nVarsha\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d' ' -f2)\n  local index=0\n  while read line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    ((index++))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp8rpqste_.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=\n  local min_index=\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if [[ -z \"$min\" ]] || (( value < min )); then\n      min=\"$value\"\n      min_index=\"$i\"\n    fi\n    (( i++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_valuen}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=\n    local index=0\n    local value=\n    for item in $1; do\n        if [[ $index -eq 0 ]]; then\n            min_value=$item\n        else\n            if [[ $item -lt $min_value ]]; then\n                min_value=$item\n                min_index=$((index - 1))\n            fi\n        fi\n        index=$((index + 1))\n    done\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpnoafyp_u.sh: line 14: [[: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n/tmp/tmpnoafyp_u.sh: line 14: [[: 200\\\\nVarsha: syntax error: invalid arithmetic operator (error token is \"\\\\nVarsha\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local index=0\n  while read line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$index\n    fi\n    index=$(( index + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpy07gbi2f.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=999999999\n  local min_index=0\n  local i=0\n  for line in $1; do\n    local value=$(echo $line | cut -d ' ' -f 2)\n    if (( value < min )); then\n      min=$value\n      min_index=$i\n    fi\n    i=$(( i + 1 ))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmphj8j1ozl.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n/tmp/tmphj8j1ozl.sh: line 11: ((: 200\\\\nVarsha: syntax error: invalid arithmetic operator (error token is \"\\\\nVarsha\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=\n    local index=\n    local i=0\n    while read -r line; do\n        local value=$(echo \"$line\" | cut -d ' ' -f 2)\n        if [[ -z \"$min\" || \"$value\" -lt \"$min\" ]]; then\n            min=\"$value\"\n            index=\"$i\"\n        fi\n        ((i++))\n    done <<< \"$1\"\n    echo \"$index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$index\n    fi\n    (( index++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpoen0w2ef.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local index=0\n  local value=0\n  while read -r line; do\n    index=$(echo \"$line\" | cut -d' ' -f1)\n    value=$(echo \"$line\" | cut -d' ' -f2)\n    if [ $index -eq 0 ]; then\n      min_index=$index\n      min_value=$value\n    else\n      if [ $value -lt $min_value ]; then\n        min_index=$index\n        min_value=$value\n      fi\n    fi\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp6b9kifyz.sh: line 13: [: Rash: integer expression expected\\n/tmp/tmp6b9kifyz.sh: line 17: [: 143\\\\nManjeet: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local index=0\n  local value=0\n  while read -r line; do\n    value=$(echo \"$line\" | awk '{print $2}')\n    if [[ $index -eq 0 ]]; then\n      min_value=$value\n    elif [[ $value -lt $min_value ]]; then\n      min_value=$value\n      min_index=$index\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local index=0\n  local value=0\n  while read -r line; do\n    value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if [ $index -eq 0 ] || [ $value -lt $min_value ]; then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local index=0\n  while read line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$(( index + 1 ))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpfaow0fre.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=\n  local index=0\n  local value=\n  while read -r line; do\n    value=$(echo \"$line\" | awk '{print $2}')\n    if [ -z \"$min_value\" ] || [ \"$value\" -lt \"$min_value\" ]; then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$((index+1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$index\n    fi\n    (( index++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpoen0w2ef.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local i=0\n  local j=0\n  local line\n  local value\n  while read line; do\n    value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if [ $i -eq 0 ] || [ $value -lt $min_value ]; then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$((i + 1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=999999\n  local min_index=0\n  local i=0\n  while read line; do\n    local value=$(echo $line | cut -d' ' -f2)\n    if [[ $value -lt $min ]]; then\n      min=$value\n      min_index=$i\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpv3jowa4b.sh: line 11: [[: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_valuen}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=999999\n  local index=0\n  local value=0\n  for i in $1; do\n    if [ $index -eq 0 ]; then\n      min_index=$index\n      min_value=$i\n    else\n      if [ $i -lt $min_value ]; then\n        min_index=$index\n        min_value=$i\n      fi\n    fi\n    index=$((index + 1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpth6l71li.sh: line 15: [: 143\\\\nManjeet: integer expression expected\\n/tmp/tmpth6l71li.sh: line 15: [: 200\\\\nVarsha: integer expression expected\\n/tmp/tmpth6l71li.sh: line 15: [: Rash: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$(( index + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpwddlasco.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=$(echo \"$1\" | head -n1 | awk '{print $2}')\n    local i=1\n    while read line; do\n        local value=$(echo \"$line\" | awk '{print $2}')\n        if (( $(echo \"$value < $min_value\" | bc -l) )); then\n            min_index=$i\n            min_value=$value\n        fi\n        (( i++ ))\n    done <<< \"$1\"\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpruv6lqfu.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=999999\n  local index=0\n  local value=0\n  for i in $1; do\n    if [ $index -eq 0 ]; then\n      min_index=$index\n      min_value=$i\n    else\n      if [ $i -lt $min_value ]; then\n        min_index=$index\n        min_value=$i\n      fi\n    fi\n    index=$((index+1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp6g8tak8f.sh: line 15: [: 143\\\\nManjeet: integer expression expected\\n/tmp/tmp6g8tak8f.sh: line 15: [: 200\\\\nVarsha: integer expression expected\\n/tmp/tmp6g8tak8f.sh: line 15: [: Rash: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local minimum=\n  local index=\n  local i=\n  local list=\n  local value=\n  local minimum_index=\n  i=0\n  while read list; do\n    value=${list##* }\n    if [[ -z $minimum || $value -lt $minimum ]]; then\n      minimum=$value\n      minimum_index=$i\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo $minimum_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    (( index++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp1b6hbrc4.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local i=0\n  for value in $1; do\n    if [ $i -eq 0 ]; then\n      min_value=$value\n    elif [ $value -lt $min_value ]; then\n      min_value=$value\n      min_index=$((i-1))\n    fi\n    i=$((i+1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpbhn8vd4r.sh: line 12: [: 143\\\\nManjeet: integer expression expected\\n/tmp/tmpbhn8vd4r.sh: line 12: [: 200\\\\nVarsha: integer expression expected\\n/tmp/tmpbhn8vd4r.sh: line 12: [: Rash: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=0\n  local min_index=0\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if [[ $i -eq 0 ]]; then\n      min=$value\n    elif [[ $value -lt $min ]]; then\n      min=$value\n      min_index=$i\n    fi\n    ((i++))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local index=0\n  while read line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    (( index++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpz9vdtjre.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local i=0\n  local j=0\n  local line\n  local value\n  while read line; do\n    value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if [ $i -eq 0 ] || [ $value -lt $min_value ]; then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$((i + 1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=9999999999\n  local min_index=0\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if [[ $value -lt $min ]]; then\n      min=$value\n      min_index=$index\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp19tbbhvi.sh: line 11: [[: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if [[ $i -eq 0 ]]; then\n      min_value=$value\n    elif [[ $value -lt $min_value ]]; then\n      min_index=$i\n      min_value=$value\n    fi\n    ((i++))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local -i min_index=0\n  local -i min_value=99999999\n  local -i i=0\n  local -i value\n  while read -r line; do\n    value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    (( i++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpntltoybn.sh: line 11: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$(( i + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp4vkll9y5.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=\n  local min_index=\n  local i=0\n  while read -r line; do\n    local value=\"$(echo \"$line\" | cut -d' ' -f2)\"\n    if [[ -z \"$min\" || \"$value\" -lt \"$min\" ]]; then\n      min=\"$value\"\n      min_index=\"$i\"\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local i=0\n  local min=0\n  local min_index=0\n  for val in $1; do\n    if [ $((i % 2)) -eq 1 ]; then\n      if [ $val -lt $min ]; then\n        min=$val\n        min_index=$((i - 1))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcr2cpn6d.sh: line 11: [: 143\\\\nManjeet: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_valuen}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local i=1\n  while read line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    (( i++ ))\n  done < <(echo \"$1\")\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp4y33zg42.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$(( index + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpo7a0g5nb.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=\n  local index=0\n  local value=\n  while read -r value; do\n    if [[ -z $min_value ]] || (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    (( index++ ))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | awk '{print $2}')\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$(( index + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpywbiihpv.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=${1%% *}\n  local index=0\n  for value in $1; do\n    if (( $(echo \"$value < $min_value\" | bc -l) )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$((index+1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp4yr1tl9o.sh: line 10: bc: command not found\\n/tmp/tmp4yr1tl9o.sh: line 10: bc: command not found\\n/tmp/tmp4yr1tl9o.sh: line 10: bc: command not found\\n/tmp/tmp4yr1tl9o.sh: line 10: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=\n  local index=0\n  local value=\n  while read -r value; do\n    if [[ -z $min_value || $value -lt $min_value ]]; then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=999999\n    local index=0\n    local value\n    while read -r value; do\n        if (( value < min_value )); then\n            min_value=$value\n            min_index=$index\n        fi\n        index=$(( index + 1 ))\n    done <<< \"$1\"\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp88zli0kn.sh: line 11: ((: Rash 143\\\\nManjeet 200\\\\nVarsha 100: syntax error in expression (error token is \"143\\\\nManjeet 200\\\\nVarsha 100\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=999999999\n  local index=0\n  local i=0\n  local line\n  while read line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if (( value < min )); then\n      min=$value\n      index=$i\n    fi\n    i=$(( i + 1 ))\n  done <<< \"$1\"\n  echo $index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp2xdj0_91.sh: line 12: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=999999\n    local min_index=0\n    local index=0\n    while read -r line; do\n        local value=$(echo \"$line\" | cut -d' ' -f2)\n        if (( value < min )); then\n            min=$value\n            min_index=$index\n        fi\n        index=$(( index + 1 ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpkyybi_xe.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    (( index++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp1b6hbrc4.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=${1%% *}\n  local i=0\n  for value in $1; do\n    if [ $i -gt 0 ]; then\n      if [ $value -lt $min_value ]; then\n        min_index=$((i-1))\n        min_value=$value\n      fi\n    fi\n    i=$((i+1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpb2bfhhc6.sh: line 11: [: 143\\\\nManjeet: integer expression expected\\n/tmp/tmpb2bfhhc6.sh: line 11: [: 200\\\\nVarsha: integer expression expected\\n/tmp/tmpb2bfhhc6.sh: line 11: [: Rash: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=999999\n  local index=0\n  local value=0\n  while read -r line; do\n    value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$index\n    fi\n    index=$(( index + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmps92d4wze.sh: line 12: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$(( index + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpo7a0g5nb.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=${1%% *}\n  local index=0\n  local value\n  for value in $1; do\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$(( index + 1 ))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpi0l7n83i.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n/tmp/tmpi0l7n83i.sh: line 11: ((: 200\\\\nVarsha: syntax error: invalid arithmetic operator (error token is \"\\\\nVarsha\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    (( index++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpdthljxly.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_valuen}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    (( i++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp0t9nmgi1.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$index\n    fi\n    index=$(( index + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp4ocdtw98.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n    local index=0\n    while read line; do\n        local value=$(echo \"$line\" | cut -d ' ' -f 2)\n        if (( value < min_value )); then\n            min_value=$value\n            min_index=$index\n        fi\n        (( index++ ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn0sset6c.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$(( i + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp4vkll9y5.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=${1%% *}\n  local index=0\n  for value in $1; do\n    if [[ $value -lt $min_value ]]; then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$((index + 1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpy85c50x7.sh: line 10: [[: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n/tmp/tmpy85c50x7.sh: line 10: [[: 200\\\\nVarsha: syntax error: invalid arithmetic operator (error token is \"\\\\nVarsha\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=\n  local min_index=\n  local i=0\n  while read -r line; do\n    local value=${line%% *}\n    local key=${line#* }\n    if [[ -z $min || $key -lt $min ]]; then\n      min=$key\n      min_index=$i\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local i=0\n  while read line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    (( i++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmplx48fra1.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=999999\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp6nje3aom.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local i=1\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$(( i + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpff6yh4y8.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=999999\n  local i=0\n  for value in $1; do\n    if [ $i -eq 0 ]; then\n      min_index=$value\n    elif [ $value -lt $min_value ]; then\n      min_index=$value\n      min_value=$value\n    fi\n    i=$((i+1))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmppah70i8m.sh: line 12: [: 143\\\\nManjeet: integer expression expected\\n/tmp/tmppah70i8m.sh: line 12: [: 200\\\\nVarsha: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$index\n    fi\n    index=$(( index + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp4ocdtw98.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=\n  local min_index=\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if [[ -z \"$min\" || \"$value\" -lt \"$min\" ]]; then\n      min=\"$value\"\n      min_index=\"$i\"\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local index=0\n  local value=0\n  local line\n  while read -r line; do\n    value=$(echo \"$line\" | cut -d ' ' -f2)\n    if [[ $index -eq 0 ]]; then\n      min_index=$index\n      min_value=$value\n    elif [[ $value -lt $min_value ]]; then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$((index + 1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    index=$(( index + 1 ))\n  done < <(echo \"$1\")\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpnuhj5c1_.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=0\n  local index=0\n  local value=0\n  local line=0\n  while read -r line; do\n    index=$(echo \"$line\" | cut -d' ' -f1)\n    value=$(echo \"$line\" | cut -d' ' -f2)\n    if [[ $index -eq 0 ]]; then\n      min_index=$index\n      min_value=$value\n    elif [[ $value -lt $min_value ]]; then\n      min_index=$index\n      min_value=$value\n    fi\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=999999\n    local index=0\n    local value=0\n    while read -r line; do\n        value=$(echo \"$line\" | awk '{print $2}')\n        if (( value < min_value )); then\n            min_value=$value\n            min_index=$index\n        fi\n        index=$(( index + 1 ))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp_5bd3q24.sh: line 12: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local i=1\n  while read line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_value=$value\n      min_index=$i\n    fi\n    (( i++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpi1k36x0l.sh: line 11: ((: 143nManjeet: value too great for base (error token is \"143nManjeet\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min_index=0\n    local min_value=0\n    local index=0\n    local value=0\n    local line=0\n    while read line; do\n        index=$(echo \"$line\" | cut -d' ' -f1)\n        value=$(echo \"$line\" | cut -d' ' -f2)\n        if [[ $index -eq 0 ]]; then\n            min_index=$index\n            min_value=$value\n        elif [[ $value -lt $min_value ]]; then\n            min_index=$index\n            min_value=$value\n        fi\n    done <<< \"$1\"\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=\n  local index=0\n  local value=\n  while read -r value; do\n    if [[ -z $min_value || $value -lt $min_value ]]; then\n      min_value=$value\n      min_index=$index\n    fi\n    index=$(( index + 1 ))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n 1 | cut -d ' ' -f 2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d ' ' -f 2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    (( index++ ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp1b6hbrc4.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=\n    local min_index=\n    local i=0\n    local line=\n    while read line; do\n        local value=${line%% *}\n        local key=${line#* }\n        if [[ -z $min || $key -lt $min ]]; then\n            min=$key\n            min_index=$i\n        fi\n        i=$((i+1))\n    done <<< \"$1\"\n    echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$i\n      min_value=$value\n    fi\n    i=$(( i + 1 ))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp4vkll9y5.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min_index=0\n  local min_value=$(echo \"$1\" | head -n1 | cut -d' ' -f2)\n  local index=0\n  while read -r line; do\n    local value=$(echo \"$line\" | cut -d' ' -f2)\n    if (( value < min_value )); then\n      min_index=$index\n      min_value=$value\n    fi\n    ((index++))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpfv81ppvx.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=9999999999\n  local min_index=0\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if (( value < min )); then\n      min=\"$value\"\n      min_index=\"$i\"\n    fi\n    i=$((i+1))\n  done <<< \"$1\"\n  echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp_v6ri3vr.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n    local min=\n    local min_index=\n    local i=0\n    while read -r line; do\n        local value=${line%% *}\n        local index=${line##* }\n        if [ -z \"$min\" ] || [ \"$index\" -lt \"$min\" ]; then\n            min=\"$index\"\n            min_index=\"$i\"\n        fi\n        i=$((i+1))\n    done <<< \"$1\"\n    echo \"$min_index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=\n  local min_index=\n  local i=0\n  while read -r line; do\n    local value=${line%% *}\n    local index=${line##* }\n    if [[ -z $min || $index -lt $min ]]; then\n      min=$index\n      min_index=$i\n    fi\n    (( i++ ))\n  done <<< \"$1\"\n  echo $min_index\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Given a list of lists, write a function that returns the first value of the list with the smallest second value.\n#\n# $1 is a newline-separated, space-separated list\nindex_minimum() {\n  local min=999999999\n  local index=0\n  local i=0\n  while read -r line; do\n    local value=$(echo \"$line\" | awk '{print $2}')\n    if (( value < min )); then\n      min=$value\n      index=$i\n    fi\n    ((i++))\n  done <<< \"$1\"\n  echo \"$index\"\n}\n\ncandidate() {\n    index_minimum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Rash 143\\nManjeet 200\\nVarsha 100\") = \"Varsha\" ]]\n    [[ $(candidate \"Yash 185\\nDawood 125\\nSanya 175\") = \"Dawood\" ]]\n    [[ $(candidate \"Sai 345\\nSalman 145\\nAyesha 96\") = \"Ayesha\" ]]\n}\n\nrun_test",
      "timestamp": 1667191455,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpnsiamzmj.sh: line 11: ((: 143\\\\nManjeet: syntax error: invalid arithmetic operator (error token is \"\\\\nManjeet\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_604_reverse_words",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to reverse words seperated by spaces in a given string.\n#\n# $1 is a string\nreverse_words() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_604_reverse_words.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    reverse_words \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python program\") = \"program python\" ]]\n    [[ $(candidate \"java language\") = \"language java\" ]]\n    [[ $(candidate \"indian man\") = \"man indian\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a words\n    local i\n    local -i len\n    local -i j\n\n    words=($1)\n    len=${#words[@]}\n    for ((i=0; i<len/2; i++)); do\n        j=$((len-i-1))\n        tmp=${words[i]}\n        words[i]=${words[j]}\n        words[j]=$tmp\n    done\n    echo \"${words[*]}\"",
    "    local words=($1)\n    local reversed_words=()\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        reversed_words+=(${words[i]})\n    done\n    echo ${reversed_words[@]}",
    "  local str=\"$1\"\n  local words=()\n  local i=0\n  local word=\"\"\n  while read -r -n 1 char; do\n    if [[ \"$char\" == \" \" ]]; then\n      words[$i]=\"$word\"\n      word=\"\"\n      ((i++))\n    else\n      word=\"$word$char\"\n    fi\n  done <<< \"$str\"\n  words[$i]=\"$word\"\n  ((i++))\n  for ((j=$i-1; j>=0; j--)); do\n    echo -n \"${words[$j]} \"\n  done\n  echo",
    "  local string=\"$1\"\n  local words=()\n  local word=''\n  local i=0\n  local j=0\n  local k=0\n  local len=0\n  local len_word=0\n  local len_string=0\n  local result=''\n  local char=''\n\n  # Split string into words\n  len_string=${#string}\n  for ((i=0; i<len_string; i++)); do\n    char=\"${string:$i:1}\"\n    if [[ \"$char\" == ' ' ]]; then\n      words+=(\"$word\")\n      word=''\n    else\n      word+=\"$char\"\n    fi\n  done\n  words+=(\"$word\")\n\n  # Reverse words\n  len=${#words[@]}\n  for ((i=0; i<len; i++)); do\n    word=\"${words[$i]}\"\n    len_word=${#word}\n    for ((j=0; j<len_word; j++)); do\n      char=\"${word:$j:1}\"\n      result=\"$char$result\"\n    done\n    if [[ $i -lt $((len - 1)) ]]; then\n      result+=' '\n    fi\n  done\n\n  echo \"$result\"",
    "  local string=\"$1\"\n  local words=()\n  local word\n  local i\n  local j\n\n  # Split string into words\n  while read -r word; do\n    words+=(\"$word\")\n  done < <(echo \"$string\")\n\n  # Reverse words\n  for ((i = 0; i < ${#words[@]}; i++)); do\n    for ((j = i; j < ${#words[@]}; j++)); do\n      if [[ \"${words[i]}\" < \"${words[j]}\" ]]; then\n        word=\"${words[i]}\"\n        words[i]=\"${words[j]}\"\n        words[j]=\"$word\"\n      fi\n    done\n  done\n\n  # Print reversed words\n  for word in \"${words[@]}\"; do\n    echo -n \"$word \"\n  done\n  echo",
    "  local string=\"$1\"\n  local words=()\n  local word\n  local i\n  local j\n\n  # Split string into words\n  while read -r word; do\n    words+=(\"$word\")\n  done <<< \"$string\"\n\n  # Reverse words\n  for ((i = 0, j = ${#words[@]} - 1; i < j; i++, j--)); do\n    word=\"${words[$i]}\"\n    words[$i]=\"${words[$j]}\"\n    words[$j]=\"$word\"\n  done\n\n  # Join words\n  echo \"${words[*]}\"",
    "    local string=\"$1\"\n    local words=()\n    local i=0\n\n    # Split string into words\n    for word in $string; do\n        words[$i]=\"$word\"\n        ((i++))\n    done\n\n    # Reverse words\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        echo -n \"${words[$i]} \"\n    done\n    echo",
    "  local string=\"$1\"\n  local words=()\n  local word=''\n  local i=0\n  local len=${#string}\n  local c=''\n\n  while [ $i -lt $len ]; do\n    c=${string:$i:1}\n    if [ \"$c\" == ' ' ]; then\n      words+=(\"$word\")\n      word=''\n    else\n      word+=\"$c\"\n    fi\n    i=$((i + 1))\n  done\n  words+=(\"$word\")\n\n  local reversed=''\n  for ((i = ${#words[@]} - 1; i >= 0; i--)); do\n    reversed+=\"${words[$i]} \"\n  done\n  echo \"${reversed% }\"",
    "    local string=\"$1\"\n    local words=()\n    local word=''\n    local i=0\n    local j=0\n\n    # split string into words\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ ${string:$i:1} == ' ' ]]; then\n            words+=(\"$word\")\n            word=''\n        else\n            word+=\"${string:$i:1}\"\n        fi\n    done\n    words+=(\"$word\")\n\n    # reverse words\n    for (( i=0, j=${#words[@]}-1; i<j; i++, j-- )); do\n        local tmp=\"${words[$i]}\"\n        words[$i]=\"${words[$j]}\"\n        words[$j]=\"$tmp\"\n    done\n\n    # join words\n    local result=''\n    for (( i=0; i<${#words[@]}; i++ )); do\n        result+=\"${words[$i]}\"\n        if (( i < ${#words[@]}-1 )); then\n            result+=' '\n        fi\n    done\n\n    echo \"$result\"",
    "    local words=($1)\n    local reversed=()\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        reversed+=(\"${words[i]}\")\n    done\n    echo \"${reversed[@]}\"",
    "  local str=\"$1\"\n  local out=\"\"\n  local word=\"\"\n  local i=0\n  local j=0\n  local len=${#str}\n\n  for ((i=0; i<len; i++)); do\n    if [[ \"${str:$i:1}\" == \" \" ]]; then\n      if [[ \"$word\" != \"\" ]]; then\n        out=\"$word $out\"\n        word=\"\"\n      fi\n    else\n      word=\"$word${str:$i:1}\"\n    fi\n  done\n  if [[ \"$word\" != \"\" ]]; then\n    out=\"$word $out\"\n  fi\n  echo \"$out\"",
    "  local words=()\n  local word\n  for word in $1; do\n    words=($word ${words[@]})\n  done\n  echo ${words[@]}",
    "  local str=$1\n  local words=()\n  local i=0\n\n  # Split string into words\n  while read -r word; do\n    words[i++]=$word\n  done <<< \"$str\"\n\n  # Reverse words\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo",
    "  local str=$1\n  local words=($str)\n  local i=0\n  local j=$(( ${#words[@]} - 1 ))\n  local tmp\n  while (( i < j )); do\n    tmp=${words[i]}\n    words[i]=${words[j]}\n    words[j]=$tmp\n    (( i++ ))\n    (( j-- ))\n  done\n  echo \"${words[*]}\"",
    "    local str=\"$1\"\n    local rev_str=\"\"\n    local word=\"\"\n    local i=0\n    local len=${#str}\n\n    for ((i=len-1; i>=0; i--)); do\n        if [ \"${str:$i:1}\" != \" \" ]; then\n            word=\"${str:$i:1}$word\"\n        else\n            rev_str=\"$rev_str $word\"\n            word=\"\"\n        fi\n    done\n    rev_str=\"$rev_str $word\"\n    echo \"$rev_str\"",
    "    local str=\"$1\"\n    local words=()\n    local i=0\n    local j=0\n\n    # Split the string into words\n    for word in $str; do\n        words[$i]=$word\n        ((i++))\n    done\n\n    # Reverse the words\n    for ((j=${#words[@]}-1; j>=0; j--)); do\n        echo -n \"${words[$j]} \"\n    done\n    echo",
    "    local str=$1\n    local words=()\n    local word=''\n    local i=0\n    local j=0\n    local len=${#str}\n    for ((i=0; i<len; i++)); do\n        if [[ ${str:$i:1} == ' ' ]]; then\n            words[$j]=$word\n            word=''\n            ((j++))\n        else\n            word=\"$word${str:$i:1}\"\n        fi\n    done\n    words[$j]=$word\n    local reversed=''\n    for ((i=${#words[@]}-1; i>=0; i--)); do\n        reversed=\"$reversed${words[$i]} \"\n    done\n    echo \"$reversed\"",
    "    local str=$1\n    local rev_str=\"\"\n    local word=\"\"\n    local i=0\n    local j=0\n    local len=${#str}\n    for (( i = len - 1; i >= 0; i-- )); do\n        if [ \"${str:$i:1}\" == \" \" ]; then\n            rev_str=\"$rev_str$word \"\n            word=\"\"\n        else\n            word=\"${str:$i:1}$word\"\n        fi\n    done\n    rev_str=\"$rev_str$word\"\n    echo \"$rev_str\"",
    "  echo \"$1\" | awk '{for (i=NF; i>1; i--) printf(\"%s \",$i); print $1;}'",
    "  local str=\"$1\"\n  local words=()\n  local i=0\n\n  # Split the string into an array of words\n  while IFS= read -r word; do\n    words[i++]=\"$word\"\n  done <<< \"$str\"\n\n  # Print the array in reverse order\n  for ((i=${#words[@]}-1; i>=0; i--)); do\n    echo -n \"${words[i]} \"\n  done\n  echo"
  ]
}
{
  "name": "mbpp_283_validate",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_283_validate.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local num=$1\n  local digit\n  local count\n  for (( digit=0; digit<=9; digit++ )); do\n    count=$(echo \"$num\" | grep -o \"$digit\" | wc -l)\n    if [[ $count -gt $digit ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i result=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i n\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local n=$1\n    local digit\n    local freq\n    local freq_max=0\n    local freq_max_digit\n    local freq_max_digit_count=0\n    local freq_max_digit_count_max=0\n    local freq_max_digit_count_max_digit\n\n    for digit in {0..9}; do\n        freq=$(echo $n | tr -d -c $digit | wc -c)\n        if [ $freq -gt $freq_max ]; then\n            freq_max=$freq\n            freq_max_digit=$digit\n        fi\n        if [ $freq -eq $digit ]; then\n            freq_max_digit_count=$((freq_max_digit_count + 1))\n            if [ $freq_max_digit_count -gt $freq_max_digit_count_max ]; then\n                freq_max_digit_count_max=$freq_max_digit_count\n                freq_max_digit_count_max_digit=$digit\n            fi\n        else\n            freq_max_digit_count=0\n        fi\n    done\n\n    if [ $freq_max -gt $freq_max_digit ]; then\n        echo \"Frequency of $freq_max_digit is $freq_max, which is greater than $freq_max_digit\"\n        return 1\n    fi\n    if [ $freq_max_digit_count_max -eq 0 ]; then\n        echo \"No digit has frequency equal to itself\"\n        return 1\n    fi\n    echo \"Frequency of $freq_max_digit_count_max_digit is $freq_max_digit_count_max, which is equal to $freq_max_digit_count_max_digit\"\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digits=()\n    local freq=()\n    local digit\n    local i\n    local j\n    local k\n    local count\n\n    # Extract digits into an array\n    while [ $num -gt 0 ]; do\n        digits+=($((num % 10)))\n        num=$((num / 10))\n    done\n\n    # Sort digits\n    for ((i = 0; i < ${#digits[@]}; i++)); do\n        for ((j = i + 1; j < ${#digits[@]}; j++)); do\n            if [ ${digits[i]} -gt ${digits[j]} ]; then\n                digit=${digits[i]}\n                digits[i]=${digits[j]}\n                digits[j]=$digit\n            fi\n        done\n    done\n\n    # Count frequency of each digit\n    for ((i = 0; i < ${#digits[@]}; i++)); do\n        count=0\n        for ((j = 0; j < ${#digits[@]}; j++)); do\n            if [ ${digits[i]} -eq ${digits[j]} ]; then\n                count=$((count + 1))\n            fi\n        done\n        freq+=($count)\n    done\n\n    # Compare frequency with digit\n    for ((i = 0; i < ${#digits[@]}; i++)); do\n        if [ ${freq[i]} -gt ${digits[i]} ]; then\n            return 1\n        fi\n    done\n\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local integer=$1\n  local digits=$(echo $integer | grep -o .)\n  local digit\n  local count\n  for digit in $digits; do\n    count=$(echo $digits | grep -o $digit | wc -l)\n    if [ $count -gt $digit ]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local number=$1\n    local digit\n    local frequency\n    for digit in {0..9}; do\n        frequency=$(echo \"$number\" | grep -o \"$digit\" | wc -l)\n        if [[ $frequency -gt $digit ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i n=$1\n    local -i digit\n    local -i freq\n    local -i max_freq\n    local -i max_digit\n    local -i i\n    local -i j\n    local -i k\n\n    for (( i=0; i<10; i++ )); do\n        freq=0\n        for (( j=0; j<${#n}; j++ )); do\n            digit=${n:$j:1}\n            if (( digit == i )); then\n                (( freq++ ))\n            fi\n        done\n        if (( freq > i )); then\n            return 1\n        fi\n    done\n\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i number=$1\n    local -i digit\n    local -i frequency\n    local -i max_frequency=0\n    local -i max_digit=0\n    local -i max_frequency_digit=0\n    local -i max_frequency_digit_frequency=0\n\n    while (( number > 0 )); do\n        digit=$(( number % 10 ))\n        frequency=$(echo \"$1\" | grep -o \"$digit\" | wc -l)\n        if (( frequency > max_frequency )); then\n            max_frequency=$frequency\n            max_digit=$digit\n        fi\n        if (( frequency == max_frequency_digit_frequency )); then\n            max_frequency_digit=$digit\n        fi\n        if (( frequency > max_frequency_digit_frequency )); then\n            max_frequency_digit_frequency=$frequency\n            max_frequency_digit=$digit\n        fi\n        number=$(( number / 10 ))\n    done\n\n    if (( max_frequency > max_digit )); then\n        echo \"Invalid\"\n    else\n        echo \"Valid\"\n    fi\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i digit\n  local -i freq\n  local -i max_freq=0\n  local -i max_digit=0\n\n  while (( n > 0 )); do\n    (( digit = n % 10 ))\n    (( n /= 10 ))\n    (( freq = n % 10 ))\n    (( n /= 10 ))\n    if (( freq > digit )); then\n      return 1\n    fi\n    if (( freq > max_freq )); then\n      (( max_freq = freq ))\n      (( max_digit = digit ))\n    elif (( freq == max_freq && digit > max_digit )); then\n      (( max_digit = digit ))\n    fi\n  }\n\n  if (( max_freq == 0 )); then\n    return 1\n  fi\n\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpxivu0jp2.sh: line 26: syntax error near unexpected token `}'\\n/tmp/tmpxivu0jp2.sh: line 26: `  }'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpebk8ni0r.sh: line 176: syntax error near unexpected token `}'\\n/tmp/tmpebk8ni0r.sh: line 176: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local n=$1\n    local digit\n    local freq\n    local -A freq_map\n    while [ $n -gt 0 ]; do\n        digit=$((n % 10))\n        freq_map[$digit]=$((freq_map[$digit] + 1))\n        n=$((n / 10))\n    done\n    for digit in ${!freq_map[@]}; do\n        freq=${freq_map[$digit]}\n        if [ $freq -gt $digit ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i count\n    local -i result=1\n    local -i i\n\n    for ((i=0; i<10; i++))\n    do\n        count=0\n        while ((num > 0))\n        do\n            digit=$((num % 10))\n            if ((digit == i))\n            then\n                ((count++))\n            fi\n            num=$((num / 10))\n        done\n        if ((count > i))\n        then\n            result=0\n            break\n        fi\n        num=$1\n    done\n\n    echo $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i cccc\n  local -i ddd\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i n=$1\n    local -i digit\n    local -i freq\n    local -i max_freq=0\n    local -i digit_freq=0\n    local -i digit_freq_array=()\n    local -i digit_array=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\n    while [ $n -gt 0 ]; do\n        digit=$(( n % 10 ))\n        n=$(( n / 10 ))\n        case $digit in\n            0)\n                (( digit_array[i++] = digit ))\n                (( digit_freq_array[i++] = ++z ))\n                ;;\n            1)\n                (( digit_array[i++] = digit ))\n                (( digit_freq_array[i++] = ++y ))\n                ;;\n            2)\n                (( digit_array[i++] = digit ))\n                (( digit_freq_array[i++] = ++x ))\n                ;;\n            3)\n                (( digit_array[i++] = digit ))\n                (( digit_freq_array[i++] = ++w ))\n                ;;\n            4)\n                (( digit_array[i++] = digit ))\n                (( digit_freq_array[i++] = ++v ))\n                ;;\n            5)\n                (( digit_array[i++] = digit ))\n                (( digit_freq_array[i++] = ++u ))\n                ;;\n            6)\n                (( digit_array[i++] = digit ))\n                (( digit_freq_array[i++] = ++t ))\n                ;;\n            7)\n                (( digit\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpsj4301cg.sh: line 65: unexpected EOF while looking for matching `)'\\n/tmp/tmpsj4301cg.sh: line 80: syntax error: unexpected end of file\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  # Write your code here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp2m4e2pm9.sh: line 176: syntax error near unexpected token `}'\\n/tmp/tmp2m4e2pm9.sh: line 176: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i count\n  local -i result=1\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    num=$(( num / 10 ))\n    count=0\n    while (( num > 0 )); do\n      if (( num % 10 == digit )); then\n        (( count++ ))\n      fi\n      num=$(( num / 10 ))\n    done\n    if (( count > digit )); then\n      result=0\n      break\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i max_freq=0\n    local -i max_digit=0\n    local -i max_digit_freq=0\n    local -i max_digit_freq_digit=0\n    local -i max_digit_freq_freq=0\n    local -i max_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit=0\n  local -i freq=0\n  local -i freq_digit=0\n  local -i freq_digit_count=0\n  local -i freq_digit_freq=0\n  local -i freq_digit_freq_count=0\n  local -i freq_digit_freq_digit=0\n  local -i freq_digit_freq_digit_count=0\n  local -i freq_digit_freq_digit_freq=0\n  local -i freq_digit_freq_digit_freq_count=0\n  local -i freq_digit_freq_digit_freq_digit=0\n  local -i freq_digit_freq_digit_freq_digit_count=0\n  local -i freq_digit_freq_digit_freq_digit_freq=0\n  local -i freq_digit_freq_digit_freq_digit_freq_count=0\n  local -i freq_digit_freq_digit_freq_digit_freq_digit=0\n  local -i freq_digit_freq_digit_freq_digit_freq_digit_count=0\n  local -i freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n  local -i freq_digit_freq_digit_freq_digit_freq_digit_freq_count=0\n  local -i freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n  local -i freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_count=0\n  local -i freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n  local -i freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_count=0\n  local -i freq_digit_freq_digit_freq\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digits=()\n    local freq=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local digit=0\n    local freq_digit=0\n    local valid=1\n\n    while [ $num -gt 0 ]; do\n        digit=$((num % 10))\n        num=$((num / 10))\n        digits[$i]=$digit\n        ((i++))\n    done\n\n    for ((j=0; j<${#digits[@]}; j++)); do\n        digit=${digits[$j]}\n        case $digit in\n            0)\n                ((freq[0]++))\n                ;;\n            1)\n                ((freq[1]++))\n                ;;\n            2)\n                ((freq[2]++))\n                ;;\n            3)\n                ((freq[3]++))\n                ;;\n            4)\n                ((freq[4]++))\n                ;;\n            5)\n                ((freq[5]++))\n                ;;\n            6)\n                ((freq[6]++))\n                ;;\n            7)\n                ((freq[7]++))\n                ;;\n            8)\n                ((freq[8]++))\n                ;;\n            9)\n                ((freq[9]++))\n                ;;\n        esac\n    done\n\n    for ((k=0; k<${#freq[@]}; k++)); do\n        freq_digit=${freq[$k]}\n        if [ $freq_digit -gt $k ]; then\n            valid=0\n            break\n        fi\n    done\n\n    echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpoi6xrv1y.sh: line 76: [: -gt: unary operator expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local num=$1\n  local digits=($(echo $num | sed 's/./& /g'))\n  local counts=($(echo ${digits[@]} | tr ' ' '\\n' | sort | uniq -c | awk '{print $1}'))\n  local digits_sorted=($(echo ${digits[@]} | tr ' ' '\\n' | sort -n))\n  local digits_sorted_uniq=($(echo ${digits_sorted[@]} | tr ' ' '\\n' | uniq))\n\n  for i in ${!digits_sorted_uniq[@]}; do\n    if [[ ${counts[$i]} -gt ${digits_sorted_uniq[$i]} ]]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i max_freq\n    local -i max_digit\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i result=0\n    local -i i=0\n    local -i j=0\n    local -i temp=0\n    local -i arr[10]=0\n    local -i arr2[10]=0\n    local -i arr3[10]=0\n    local -i arr4[10]=0\n    local -i arr5[10]=0\n    local -i arr6[10]=0\n    local -i arr7[10]=0\n    local -i arr8[10]=0\n    local -i arr9[10]=0\n    local -i arr10[10]=0\n    local -i arr11[10]=0\n    local -i arr12[10]=0\n    local -i arr13[10]=0\n    local -i arr14[10]=0\n    local -i arr15[10]=0\n    local -i arr16[10]=0\n    local -i arr17[10]=0\n    local -i arr18[10]=0\n    local -i arr19[10]=0\n    local -i arr20[10]=0\n    local -i arr21[10]=0\n    local -i arr22[10]=0\n    local -i arr23[10]=0\n    local -i arr24[10]=0\n    local -i arr25[10]=0\n    local -i arr26[10]=0\n    local -i arr27[10]=0\n    local -i arr28[10]=0\n    local -i arr29[10]=0\n    local -i arr30[10]=0\n    local -i arr31[10]=0\n    local -i arr32[10]=0\n    local -i arr33[10]=0\n    local -i arr34[10]=0\n    local -i arr35[10]=0\n    local -i arr36[10]=0\n    local -i arr37[10]=0\n    local -i arr38[10]=0\n    local -i arr39[10]=0\n    local -i arr40[10]=0\n    local -i arr41[10]=0\n    local -i arr42[10]=\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i count\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i A\n    local -i B\n    local -i C\n    local -i D\n    local -i E\n    local -i F\n    local -i G\n    local -i H\n    local -i I\n    local -i J\n    local -i K\n    local -i L\n    local -i M\n    local -i N\n    local -i O\n    local -i P\n    local -i Q\n    local -i R\n    local -i S\n    local -i T\n    local -i U\n    local -i V\n    local -i W\n    local -i X\n    local -i Y\n    local -i Z\n\n    while (( num > 0 )); do\n        digit=$(( num % 10 ))\n        num=$(( num / 10 ))\n        (( count++ ))\n        case $digit in\n            0) (( freq[0]++ )) ;;\n            1) (( freq[1]++ )) ;;\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpj8g77th0.sh: line 88: syntax error near unexpected token `}'\\n/tmp/tmpj8g77th0.sh: line 88: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i result=0\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n   \n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i number=$1\n    local -i digit\n    local -i count\n    local -i max_count=0\n    local -i max_digit=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i count\n    local -i retval=0\n    local -i i=0\n    local -a digits\n    local -a freqs\n\n    while (( num > 0 )); do\n        digit=$(( num % 10 ))\n        num=$(( num / 10 ))\n        digits[i]=$digit\n        (( i++ ))\n    done\n\n    for (( i = 0; i < ${#digits[@]}; i++ )); do\n        digit=${digits[i]}\n        freq=0\n        for (( j = 0; j < ${#digits[@]}; j++ )); do\n            if (( digit == ${digits[j]} )); then\n                (( freq++ ))\n            fi\n        done\n        freqs[i]=$freq\n    done\n\n    for (( i = 0; i < ${#freqs[@]}; i++ )); do\n        if (( ${freqs[i]} > ${digits[i]} )); then\n            retval=1\n            break\n        fi\n    done\n\n    return $retval\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local num=$1\n  local digits=()\n  local freq=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local result=0\n  local is_valid=1\n\n  # Get each digit of the number\n  while [ $num -gt 0 ]; do\n    digits[$i]=$(( num % 10 ))\n    num=$(( num / 10 ))\n    (( i++ ))\n  done\n\n  # Get frequency of each digit\n  for (( j = 0; j < ${#digits[@]}; j++ )); do\n    case ${digits[$j]} in\n      0) (( freq[$j] = ++z )) ;;\n      1) (( freq[$j] = ++a )) ;;\n      2) (( freq[$j] = ++b )) ;;\n      3) (( freq[$j] = ++c )) ;;\n      4) (( freq[$j] = ++d )) ;;\n      5) (( freq[$j] = ++e )) ;;\n      6) (( freq[$j] = ++f )) ;;\n      7) (( freq[$j] = ++g )) ;;\n      8) (( freq[$j] = ++h )) ;;\n      9) (( freq[$j] = ++i )) ;;\n    esac\n  done\n\n  # Check if frequency of each digit is less than or equal to the digit itself\n  for (( k = 0; k < ${#digits[@]}; k++ )); do\n    if [ ${freq[$k]} -gt ${digits[$k]} ]; then\n      is_valid=0\n      break\n    fi\n  done\n\n  if [ $is_valid -eq 1 ]; then\n    echo \"Valid\"\n  else\n    echo \"Invalid\"\n  fi\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i max_freq=0\n  local -i max_digit=0\n  local -i digit_freq=0\n  local -i digit_freq_max=0\n  local -i digit_freq_max_digit=0\n  local -i digit_freq_max_freq=0\n  local -i digit_freq_max_digit_freq=0\n  local -i digit_freq_max_digit_freq_max=0\n  local -i digit_freq_max_digit_freq_max_digit=0\n  local -i digit_freq_max_digit_freq_max_freq=0\n  local -i digit_freq_max_digit_freq_max_digit_freq=0\n  local -i digit_freq_max_digit_freq_max_digit_freq_max=0\n  local -i digit_freq_max_digit_freq_max_digit_freq_max_digit=0\n  local -i digit_freq_max_digit_freq_max_digit_freq_max_freq=0\n  local -i digit_freq_max_digit_freq_max_digit_freq_max_digit_freq=0\n  local -i digit_freq_max_digit_freq_max_digit_freq_max_digit_freq_max=0\n  local -i digit_freq_max_digit_freq_max_digit_freq_max_digit_freq_max_digit=0\n  local -i digit_freq_max_digit_freq_max_digit_freq_max_digit_freq_max_freq=0\n  local -i digit_freq_max_digit_freq_max_digit_freq_max_digit_freq_max_digit_freq=0\n  local -i digit_freq_max_digit_freq_max_digit_freq_max_digit_freq_max_digit_freq_max=0\n \n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i count\n  local -i freq\n  local -i max_freq\n  local -i max_digit\n  local -i max_count\n  local -i max_num\n\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    count=$(( count + 1 ))\n    freq=$(( freq + 1 ))\n    if (( digit > max_digit )); then\n      max_digit=$digit\n      max_count=$count\n      max_freq=$freq\n    fi\n    if (( freq > digit )); then\n      max_num=$(( max_num + 1 ))\n    fi\n    num=$(( num / 10 ))\n  done\n\n  if (( max_num > 0 )); then\n    echo \"false\"\n  else\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local n=$1\n    local digits=()\n    local freq=()\n    local i\n    local d\n    local f\n\n    while [ $n -gt 0 ]; do\n        d=$(( n % 10 ))\n        n=$(( n / 10 ))\n        digits+=($d)\n        freq[$d]=$(( ${freq[$d]} + 1 ))\n    done\n\n    for (( i = 0; i < ${#digits[@]}; i++ )); do\n        d=${digits[$i]}\n        f=${freq[$d]}\n        if [ $f -gt $d ]; then\n            return 1\n        fi\n    done\n\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local num=$1\n  local digits=(0 1 2 3 4 5 6 7 8 9)\n  local freq=(0 0 0 0 0 0 0 0 0 0)\n  local digit\n  local freq_digit\n  local i\n  local j\n  local valid=true\n\n  for ((i=0; i<${#num}; i++)); do\n    digit=${num:$i:1}\n    for ((j=0; j<${#digits[@]}; j++)); do\n      if [[ ${digits[$j]} -eq $digit ]]; then\n        freq[$j]=$((freq[$j]+1))\n      fi\n    done\n  done\n\n  for ((i=0; i<${#digits[@]}; i++)); do\n    if [[ ${freq[$i]} -gt ${digits[$i]} ]]; then\n      valid=false\n      break\n    fi\n  done\n\n  echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i d\n  local -i f\n  local -i fd\n  local -i r\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i o\n  local -i p\n  local -i q\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i cccc\n  local -i ddd\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i freq\n    local -i result=0\n\n    while (( num > 0 )); do\n        digit=$(( num % 10 ))\n        num=$(( num / 10 ))\n        count=0\n        freq=0\n        while (( num > 0 )); do\n            if (( digit == num % 10 )); then\n                (( count++ ))\n            fi\n            (( num /= 10 ))\n        done\n        if (( count > digit )); then\n            (( result++ ))\n        fi\n    done\n\n    echo $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i max_count\n    local -i max_digit\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n   \n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i max_freq=0\n    local -i max_digit=0\n    local -i i=0\n    local -i j=0\n    local -i len=${#num}\n    local -i arr[10]=0\n    local -i arr_freq[10]=0\n    local -i arr_digit[10]=0\n    local -i arr_freq_digit[10]=0\n    local -i arr_freq_digit_max[10]=0\n    local -i arr_freq_digit_max_digit[10]=0\n    local -i arr_freq_digit_max_freq[10]=0\n    local -i arr_freq_digit_max_freq_digit[10]=0\n    local -i arr_freq_digit_max_freq_digit_max[10]=0\n    local -i arr_freq_digit_max_freq_digit_max_digit[10]=0\n    local -i arr_freq_digit_max_freq_digit_max_digit_max[10]=0\n    local -i arr_freq_digit_max_freq_digit_max_digit_max_digit[10]=0\n    local -i arr_freq_digit_max_freq_digit_max_digit_max_digit_max[10]=0\n    local -i arr_freq_digit_max_freq_digit_max_digit_max_digit_max_digit[10]=0\n    local -i arr_freq_digit_max_freq_digit_max_digit_max_digit_max_digit_max[10]=0\n    local -i arr_freq_digit_max_freq_digit_max_digit_max_digit_max_digit_max_digit[10]=0\n    local -i arr_freq_digit_max_freq_digit_max_digit_max_digit_max_digit_max_digit_max[10]=0\n    local -i arr_freq_digit_max_freq_digit_max_digit_max_digit_\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i result=0\n\n    while (( num > 0 )); do\n        digit=$(( num % 10 ))\n        freq=$(echo $1 | grep -o $digit | wc -l)\n        if (( freq > digit )); then\n            result=1\n            break\n        fi\n        num=$(( num / 10 ))\n    done\n\n    return $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i max_freq=0\n    local -i max_digit=0\n    local -i i=0\n    local -i num_digits=${#num}\n    local -i num_freq=0\n    local -i num_digit=0\n    local -i num_max_freq=0\n    local -i num_max_digit=0\n    local -i num_i=0\n    local -i num_num_digits=0\n    local -i num_num_freq=0\n    local -i num_num_digit=0\n    local -i num_num_max_freq=0\n    local -i num_num_max_digit=0\n    local -i num_num_i=0\n    local -i num_num_num_digits=0\n    local -i num_num_num_freq=0\n    local -i num_num_num_digit=0\n    local -i num_num_num_max_freq=0\n    local -i num_num_num_max_digit=0\n    local -i num_num_num_num_digits=0\n    local -i num_num_num_num_freq=0\n    local -i num_num_num_num_digit=0\n    local -i num_num_num_num_max_freq=0\n    local -i num_num_num_num_max_digit=0\n    local -i num_num_num_num_num_digits=0\n    local -i num_num_num_num_num_freq=0\n    local -i num_num_num_num_num_digit=0\n    local -i num_num_num_num_num_max_freq=0\n    local -i num_num_num_num_num_max_digit=0\n    local -i num_num_num_num_num_num_digits=0\n    local -i num_num_num_num_num_num_freq=0\n    local -i num_num_num\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i freq_max=0\n  local -i freq_max_digit\n  local -i freq_max_digit_count=0\n  local -i freq_max_digit_count_max=0\n  local -i freq_max_digit_count_max_digit\n  local -i freq_max_digit_count_max_digit_count=0\n  local -i freq_max_digit_count_max_digit_count_max=0\n  local -i freq_max_digit_count_max_digit_count_max_digit\n  local -i freq_max_digit_count_max_digit_count_max_digit_count=0\n  local -i freq_max_digit_count_max_digit_count_max_digit_count_max=0\n  local -i freq_max_digit_count_max_digit_count_max_digit_count_max_digit\n  local -i freq_max_digit_count_max_digit_count_max_digit_count_max_digit_count=0\n  local -i freq_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max=0\n  local -i freq_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit\n  local -i freq_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count=0\n  local -i freq_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max=0\n  local -i freq_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit\n  local -i freq_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count=\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpebk8ni0r.sh: line 176: syntax error near unexpected token `}'\\n/tmp/tmpebk8ni0r.sh: line 176: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i A\n  local -i B\n  local -i C\n  local -i D\n  local -i E\n  local -i F\n  local -i G\n  local -i H\n  local -i I\n  local -i J\n  local -i K\n  local -i L\n  local -i M\n  local -i N\n  local -i O\n  local -i P\n  local -i Q\n  local -i R\n  local -i S\n  local -i T\n  local -i U\n  local -i V\n  local -i W\n  local -i X\n  local -i Y\n  local -i Z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i 0\n  local -i 1\n  local -i 2\n  local -i 3\n  local -i 4\n  local -i 5\n  local -i 6\n  local -i 7\n  local -i 8\n  local -i 9\n  while (( num > 0 )); do\n   \n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp54m1bboj.sh: line 91: syntax error near unexpected token `}'\\n/tmp/tmp54m1bboj.sh: line 91: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local int=$1\n    local digit\n    local freq\n    for (( digit=0; digit<10; digit++ )); do\n        freq=$(echo \"$int\" | grep -o \"$digit\" | wc -l)\n        if [[ $freq -gt $digit ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digit\n    local freq\n    for digit in {0..9}; do\n        freq=$(echo $num | grep -o $digit | wc -l)\n        if [[ $freq -gt $digit ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    num=$(( num / 10 ))\n    case $digit in\n      0) (( i++ )) ;;\n      1) (( j++ )) ;;\n      2) (( k++ )) ;;\n      3) (( l++ )) ;;\n      4) (( m++ )) ;;\n      5) (( n++ )) ;;\n      6) (( o++ )) ;;\n      7) (( p++ )) ;;\n      8) (( q++ )) ;;\n      9) (( r++ )) ;;\n    esac\n  done\n\n  (( i <= 0 )) && (( j <= 1 )) && (( k <= 2 )) && (( l <= 3 )) && (( m <= 4 )) && (( n <= 5 )) && (( o <= 6 )) && (( p <= 7 )) && (( q <= 8 )) && (( r <= 9 ))\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i max_freq=0\n  local -i max_digit=0\n  local -i i=0\n  local -i j=0\n  local -i len=${#num}\n  local -a digits=()\n  local -a freqs=()\n  local -a freq_digits=()\n  local -a freq_freqs=()\n  local -a freq_freqs_sorted=()\n  local -a freq_digits_sorted=()\n  local -a freq_freqs_sorted_rev=()\n  local -a freq_digits_sorted_rev=()\n  local -a freq_digits_sorted_rev_uniq=()\n  local -a freq_freqs_sorted_rev_uniq=()\n  local -a freq_freqs_sorted_rev_uniq_sorted=()\n  local -a freq_digits_sorted_rev_uniq_sorted=()\n  local -a freq_freqs_sorted_rev_uniq_sorted_rev=()\n  local -a freq_digits_sorted_rev_uniq_sorted_rev=()\n  local -a freq_freqs_sorted_rev_uniq_sorted_rev_uniq=()\n  local -a freq_digits_sorted_rev_uniq_sorted_rev_uniq=()\n  local -a freq_freqs_sorted_rev_uniq_sorted_rev_uniq_sorted=()\n  local -a freq_digits_sorted_rev_uniq_sorted_rev_uniq_sorted=()\n  local -a freq_freqs_sorted_rev_uniq_sorted_rev_uniq_sorted_rev=()\n  local -a freq_digits_sorted_rev_uniq_sorted_rev_uniq_sorted_rev=()\n  local -a freq_freqs_sorted_rev_uniq\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=\"$1\"\n  local -i digit\n  local -i freq\n  local -i max_freq=0\n  local -i max_digit=0\n  local -i max_freq_digit=0\n  local -i max_digit_freq=0\n  local -i max_digit_freq_digit=0\n  local -i max_freq_digit_freq=0\n  local -i max_freq_digit_freq_digit=0\n  local -i max_freq_digit_freq_digit_freq=0\n  local -i max_freq_digit_freq_digit_freq_digit=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local n=$1\n  local digits=()\n  local freq=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i count\n  local -i max_count\n  local -i max_digit\n  local -i max_digit_count\n  local -i i\n\n  while [ $num -gt 0 ]; do\n    digit=$(( num % 10 ))\n    num=$(( num / 10 ))\n    count=0\n    for (( i=0; i<${#num}; i++ )); do\n      if [ ${num:$i:1} -eq $digit ]; then\n        count=$(( count + 1 ))\n      fi\n    done\n    if [ $count -gt $digit ]; then\n      return 1\n    fi\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_digit=$digit\n    fi\n  done\n\n  max_digit_count=0\n  for (( i=0; i<${#num}; i++ )); do\n    if [ ${num:$i:1} -eq $max_digit ]; then\n      max_digit_count=$(( max_digit_count + 1 ))\n    fi\n  done\n  if [ $max_digit_count -gt $max_digit ]; then\n    return 1\n  fi\n\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph09qrb6q.sh: line 26: [: 0: unary operator expected\\n/tmp/tmph09qrb6q.sh: line 26: [: 0: unary operator expected\\n/tmp/tmph09qrb6q.sh: line 26: [: 0: unary operator expected\\n/tmp/tmph09qrb6q.sh: line 26: [: 0: unary operator expected\\n/tmp/tmph09qrb6q.sh: line 34: [: 0: unary operator expected\\n/tmp/tmph09qrb6q.sh: line 38: [: 0: unary operator expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i result=1\n    local -i i\n\n    for ((i=0; i<10; i++)); do\n        digit=$i\n        freq=$(echo $num | grep -o $digit | wc -l)\n        if [ $freq -gt $digit ]; then\n            result=0\n            break\n        fi\n    done\n\n    echo $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i freq\n    local -i result=1\n    local -a freq_arr\n    local -a count_arr\n\n    while (( num > 0 )); do\n        digit=$(( num % 10 ))\n        (( freq_arr[digit]++ ))\n        (( num /= 10 ))\n    done\n\n    for (( i=0; i<10; i++ )); do\n        (( count_arr[i] = i ))\n    done\n\n    for (( i=0; i<10; i++ )); do\n        if (( freq_arr[i] > count_arr[i] )); then\n            result=0\n            break\n        fi\n    done\n\n    echo $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i result=1\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    freq=$(echo \"$1\" | grep -o \"$digit\" | wc -l)\n    if (( freq > digit )); then\n      result=0\n      break\n    fi\n    num=$(( num / 10 ))\n  done\n  echo $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i freq_digit\n    local -i freq_digit_count\n    local -i freq_digit_count_count\n    local -i freq_digit_count_count_count\n    local -i freq_digit_count_count_count_count\n    local -i freq_digit_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i max_freq\n    local -i max_digit\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digit\n    local freq\n    for digit in {0..9}; do\n        freq=$(echo \"$num\" | grep -o \"$digit\" | wc -l)\n        if [ \"$freq\" -gt \"$digit\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local n=$1\n    local digit\n    local count\n    local result=1\n    for (( digit=0; digit<=9; digit++ )); do\n        count=$(echo \"$n\" | grep -o \"$digit\" | wc -l)\n        if (( count > digit )); then\n            result=0\n            break\n        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digit\n    local freq\n    for ((digit=0; digit<=9; digit++)); do\n        freq=$(echo \"$num\" | grep -o \"$digit\" | wc -l)\n        if [[ $freq -gt $digit ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i freq_arr=()\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n\n  while [ $num -gt 0 ]; do\n    digit=$(( num % 10 ))\n    case $digit in\n      0)\n        let freq_arr[0]++\n        ;;\n      1)\n        let freq_arr[1]++\n        ;;\n      2)\n        let freq_arr[2]++\n        ;;\n      3)\n        let freq_arr[3]++\n        ;;\n      4)\n        let freq_arr[4]++\n        ;;\n      5)\n        let freq_arr[5]++\n        ;;\n      6)\n        let freq_arr[6]++\n        ;;\n      7)\n        let freq_arr[7]++\n        ;;\n      8)\n        let freq_arr[8]++\n        ;;\n      9)\n        let freq_arr[9]++\n        ;;\n    esac\n    num=$(( num / 10 ))\n  done\n\n  for i in ${freq_arr[@]}; do\n    if [ $i -gt 0 ]; then\n      if [ $i -gt 0 ]; then\n        let j++\n      fi\n      if [ $i -gt 1 ]; then\n        let k++\n      fi\n      if [ $i -gt 2 ]; then\n        let l++\n      fi\n      if [ $i -gt 3 ]; then\n        let m++\n      fi\n      if [ $i -gt 4 ]; then\n        let n++\n      fi\n      if [ $i -gt 5 ]; then\n        let o++\n      fi\n      if [ $i -gt 6 ];\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpml_slcay.sh: line 87: syntax error near unexpected token `}'\\n/tmp/tmpml_slcay.sh: line 87: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i digit\n  local -i frequency\n  local -i i\n  for ((i=0; i<10; i++))\n  do\n    digit=$i\n    frequency=0\n    while ((n>0))\n    do\n      if ((n%10==digit))\n      then\n        ((frequency++))\n      fi\n      ((n/=10))\n    done\n    if ((frequency>digit))\n    then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i max_freq=0\n    local -i max_digit=0\n    local -i digit_freq\n    local -i digit_freq_max\n    local -i digit_freq_min\n    local -i digit_freq_min_freq\n    local -i digit_freq_min_digit\n    local -i digit_freq_max_freq\n    local -i digit_freq_max_digit\n    local -i digit_freq_min_freq_min\n    local -i digit_freq_min_freq_min_digit\n    local -i digit_freq_min_freq_min_freq\n    local -i digit_freq_min_freq_min_digit_freq\n    local -i digit_freq_min_freq_min_digit_freq_min\n    local -i digit_freq_min_freq_min_digit_freq_min_freq\n    local -i digit_freq_min_freq_min_digit_freq_min_digit\n    local -i digit_freq_min_freq_min_digit_freq_min_digit_freq\n    local -i digit_freq_min_freq_min_digit_freq_min_digit_freq_min\n    local -i digit_freq_min_freq_min_digit_freq_min_digit_freq_min_freq\n    local -i digit_freq_min_freq_min_digit_freq_min_digit_freq_min_digit\n    local -i digit_freq_min_freq_min_digit_freq_min_digit_freq_min_digit_freq\n    local -i digit_freq_min_freq_min_digit_freq_min_digit_freq_min_digit_freq_min\n    local -i digit_freq_min_freq_min_digit_freq_min_digit_freq_min_digit_freq_min_freq\n   \n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i digit\n  local -i freq\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i A\n  local -i B\n  local -i C\n  local -i D\n  local -i E\n  local -i F\n  local -i G\n  local -i H\n  local -i I\n  local -i J\n  local -i K\n  local -i L\n  local -i M\n  local -i N\n  local -i O\n  local -i P\n  local -i Q\n  local -i R\n  local -i S\n  local -i T\n  local -i U\n  local -i V\n  local -i W\n  local -i X\n  local -i Y\n  local -i Z\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    case $digit in\n      0) (( ++z )) ;;\n      1) (( ++o )) ;;\n      2) (( ++t )) ;;\n      3) (( ++t )) ;;\n      4) (( ++f )) ;;\n      5) (( ++f )) ;;\n      6) (( ++s )) ;;\n      7) (( ++s )) ;;\n      8) (( ++e )) ;;\n      9) (( ++n )) ;;\n    esac\n    n=$(( n / 10 ))\n  done\n  (( z <= 0 )) && return 0\n  (( o <= 1 )) && return 0\n  (( t <= 2 )) && return 0\n  (( f <= 4 )) && return 0\n  (( s <= 6 )) && return 0\n  (( e <= 8 )) && return 0\n  (( n <= 9 )) && return 0\n  return 1\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i count\n  local -i result=1\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    num=$(( num / 10 ))\n    count=0\n    while (( num > 0 )); do\n      if (( num % 10 == digit )); then\n        (( count++ ))\n      fi\n      num=$(( num / 10 ))\n    done\n    if (( count > digit )); then\n      result=0\n      break\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i count\n  local -i result=0\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    num=$(( num / 10 ))\n    count=0\n    for (( freq=0; freq<10; freq++ )); do\n      if (( digit == freq )); then\n        (( count++ ))\n      fi\n    done\n    if (( count > digit )); then\n      result=1\n      break\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpebk8ni0r.sh: line 176: syntax error near unexpected token `}'\\n/tmp/tmpebk8ni0r.sh: line 176: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local count=0\n    local digit=0\n    local freq=0\n    local flag=0\n\n    while [ $num -gt 0 ]; do\n        digit=$((num % 10))\n        num=$((num / 10))\n        count=$((count + 1))\n        freq=0\n        while [ $num -gt 0 ]; do\n            if [ $((num % 10)) -eq $digit ]; then\n                freq=$((freq + 1))\n            fi\n            num=$((num / 10))\n        done\n        if [ $freq -gt $digit ]; then\n            flag=1\n            break\n        fi\n    done\n\n    if [ $flag -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i digit\n  local -i freq\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i A\n  local -i B\n  local -i C\n  local -i D\n  local -i E\n  local -i F\n  local -i G\n  local -i H\n  local -i I\n  local -i J\n  local -i K\n  local -i L\n  local -i M\n  local -i N\n  local -i O\n  local -i P\n  local -i Q\n  local -i R\n  local -i S\n  local -i T\n  local -i U\n  local -i V\n  local -i W\n  local -i X\n  local -i Y\n  local -i Z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i 0\n  local -i 1\n  local -i 2\n  local -i 3\n  local -i 4\n  local -i 5\n  local -i 6\n  local -i 7\n  local -i 8\n  local -i 9\n  local -i _\n  local -i\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp50jw_kci.sh: line 79: local: `0': not a valid identifier\\n/tmp/tmp50jw_kci.sh: line 80: local: `1': not a valid identifier\\n/tmp/tmp50jw_kci.sh: line 81: local: `2': not a valid identifier\\n/tmp/tmp50jw_kci.sh: line 82: local: `3': not a valid identifier\\n/tmp/tmp50jw_kci.sh: line 83: local: `4': not a valid identifier\\n/tmp/tmp50jw_kci.sh: line 84: local: `5': not a valid identifier\\n/tmp/tmp50jw_kci.sh: line 85: local: `6': not a valid identifier\\n/tmp/tmp50jw_kci.sh: line 86: local: `7': not a valid identifier\\n/tmp/tmp50jw_kci.sh: line 87: local: `8': not a valid identifier\\n/tmp/tmp50jw_kci.sh: line 88: local: `9': not a valid identifier\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=\"$1\"\n  local -i digit\n  local -i freq\n  local -i res=0\n  for ((digit=0; digit<10; digit++)); do\n    freq=$(echo \"$num\" | tr -cd \"$digit\" | wc -c)\n    if ((freq > digit)); then\n      res=1\n      break\n    fi\n  done\n  return $res\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digit\n    local freq\n    for digit in $(seq 0 9); do\n        freq=$(echo \"$num\" | tr -cd \"$digit\" | wc -c)\n        if [ \"$freq\" -gt \"$digit\" ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local integer=$1\n  local digit\n  local frequency\n  for digit in {0..9}; do\n    frequency=$(echo \"$integer\" | grep -o \"$digit\" | wc -l)\n    if [[ $frequency -gt $digit ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i freq_digit\n    local -i freq_digit_freq\n    local -i freq_digit_freq_digit\n    local -i freq_digit_freq_digit_freq\n    local -i freq_digit_freq_digit_freq_digit\n    local -i freq_digit_freq_digit_freq_digit_freq\n    local -i freq_digit_freq_digit_freq_digit_freq_digit\n    local -i freq_digit_freq_digit_freq_digit_freq_digit_freq\n    local -i freq_digit_freq_digit_freq_digit_freq_digit_freq_digit\n    local -i freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq\n    local -i freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit\n    local -i freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq\n    local -i freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit\n    local -i freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq\n    local -i freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit\n    local -i freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq\n    local -i freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i max_freq\n  local -i max_digit\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i c\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i freq\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n    local -i fff\n    local -i ggg\n    local -i hhh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaaa\n    local -i bbbb\n    local -i cccc\n\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local number=$1\n    local digit\n    local frequency\n    for (( digit=0; digit<10; digit++ )); do\n        frequency=$(echo $number | grep -o $digit | wc -l)\n        if [[ $frequency -gt $digit ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local input=\"$1\"\n  local -i len=${#input}\n  local -i i=0\n  local -i digit=0\n  local -i freq=0\n  local -i result=0\n  local -i tmp=0\n\n  for ((i=0; i<len; i++)); do\n    digit=${input:i:1}\n    freq=$(echo \"$input\" | grep -o \"$digit\" | wc -l)\n    if [[ $digit -lt $freq ]]; then\n      result=1\n      break\n    fi\n  done\n\n  return $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i digit_count\n    local -i digit_counts=()\n    local -i digit_counts_max=0\n    local -i digit_counts_max_count=0\n    local -i digit_counts_max_digit=0\n    local -i digit_counts_max_count_count=0\n\n    while (( num > 0 )); do\n        digit=num%10\n        num/=10\n        (( digit_counts[digit]++ ))\n        (( digit_counts_max_count_count++ ))\n        if (( digit_counts[digit] > digit_counts_max_count )); then\n            digit_counts_max_count=digit_counts[digit]\n            digit_counts_max_digit=digit\n            digit_counts_max_count_count=1\n        elif (( digit_counts[digit] == digit_counts_max_count )); then\n            (( digit_counts_max_count_count++ ))\n        fi\n    done\n\n    if (( digit_counts_max_count > digit_counts_max_digit )); then\n        echo \"false\"\n    elif (( digit_counts_max_count == digit_counts_max_digit && digit_counts_max_count_count > 1 )); then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "<_io.BufferedReader name=3>",
      "stderr": "<_io.BufferedReader name=14>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local number=$1\n    local digit\n    local frequency\n    for digit in {0..9}; do\n        frequency=$(echo $number | grep -o $digit | wc -l)\n        if [ $frequency -gt $digit ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i digit_count\n\n    while (( num > 0 )); do\n        digit=num%10\n        count=0\n        digit_count=0\n        while (( num > 0 )); do\n            if (( num%10 == digit )); then\n                (( count++ ))\n            fi\n            (( num/=10 ))\n        done\n        if (( count > digit )); then\n            return 1\n        fi\n        num=$1\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "<_io.BufferedReader name=10>",
      "stderr": "<_io.BufferedReader name=15>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i d\n  local -i f\n  local -i r\n  local -i valid=1\n  while (( n > 0 )); do\n    d=$(( n % 10 ))\n    f=0\n    r=$n\n    while (( r > 0 )); do\n      if (( r % 10 == d )); then\n        (( f++ ))\n      fi\n      (( r /= 10 ))\n    done\n    if (( f > d )); then\n      valid=0\n      break\n    fi\n    (( n /= 10 ))\n  done\n  echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i freq_max=0\n    local -i freq_max_digit=0\n    local -i freq_max_digit_count=0\n    local -i freq_max_digit_count_max=0\n    local -i freq_max_digit_count_max_digit=0\n\n    while (( num > 0 )); do\n        digit=$(( num % 10 ))\n        num=$(( num / 10 ))\n        freq=$(grep -o \"$digit\" <<< \"$1\" | wc -l)\n        if (( freq > freq_max )); then\n            freq_max=$freq\n            freq_max_digit=$digit\n        fi\n        if (( freq == freq_max_digit_count_max )); then\n            (( ++freq_max_digit_count ))\n        elif (( freq > freq_max_digit_count_max )); then\n            freq_max_digit_count_max=$freq\n            freq_max_digit_count_max_digit=$digit\n            freq_max_digit_count=1\n        fi\n    done\n\n    if (( freq_max_digit_count_max > freq_max_digit_count_max_digit )); then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i count\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i A\n  local -i B\n  local -i C\n  local -i D\n  local -i E\n  local -i F\n  local -i G\n  local -i H\n  local -i I\n  local -i J\n  local -i K\n  local -i L\n  local -i M\n  local -i N\n  local -i O\n  local -i P\n  local -i Q\n  local -i R\n  local -i S\n  local -i T\n  local -i U\n  local -i V\n  local -i W\n  local -i X\n  local -i Y\n  local -i Z\n  local -i 0\n  local -i 1\n  local -i 2\n  local -i 3\n  local -i 4\n  local -i 5\n  local -i 6\n  local -i 7\n  local -i 8\n  local -i 9\n  local -i\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpb0kiz9bz.sh: line 80: local: `0': not a valid identifier\\n/tmp/tmpb0kiz9bz.sh: line 81: local: `1': not a valid identifier\\n/tmp/tmpb0kiz9bz.sh: line 82: local: `2': not a valid identifier\\n/tmp/tmpb0kiz9bz.sh: line 83: local: `3': not a valid identifier\\n/tmp/tmpb0kiz9bz.sh: line 84: local: `4': not a valid identifier\\n/tmp/tmpb0kiz9bz.sh: line 85: local: `5': not a valid identifier\\n/tmp/tmpb0kiz9bz.sh: line 86: local: `6': not a valid identifier\\n/tmp/tmpb0kiz9bz.sh: line 87: local: `7': not a valid identifier\\n/tmp/tmpb0kiz9bz.sh: line 88: local: `8': not a valid identifier\\n/tmp/tmpb0kiz9bz.sh: line 89: local: `9': not a valid identifier\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local n=$1\n  local d\n  local f\n  local r=0\n  while ((n > 0)); do\n    d=$((n % 10))\n    f=$(grep -o \"$d\" <<< \"$1\" | wc -l)\n    if ((f > d)); then\n      ((r++))\n    fi\n    ((n /= 10))\n  done\n  ((r == 0))\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local num=$1\n  local digits=()\n  local freq=()\n  local i=0\n  local j=0\n  local k=0\n  local digit=0\n  local count=0\n  local valid=1\n\n  # Get the digits of the number\n  while [ $num -gt 0 ]; do\n    digit=$((num % 10))\n    num=$((num / 10))\n    digits[$i]=$digit\n    ((i++))\n  done\n\n  # Get the frequency of each digit\n  for ((j=0; j<${#digits[@]}; j++)); do\n    digit=${digits[$j]}\n    count=0\n    for ((k=0; k<${#digits[@]}; k++)); do\n      if [ $digit -eq ${digits[$k]} ]; then\n        ((count++))\n      fi\n    done\n    freq[$j]=$count\n  done\n\n  # Check if the frequency of each digit is less than or equal to the digit itself\n  for ((j=0; j<${#digits[@]}; j++)); do\n    if [ ${freq[$j]} -gt ${digits[$j]} ]; then\n      valid=0\n      break\n    fi\n  done\n\n  echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local num=$1\n  local digit\n  local count\n  local valid=1\n\n  for (( digit=0; digit<=9; digit++ )); do\n    count=$(echo \"$num\" | grep -o \"$digit\" | wc -l)\n    if (( count > digit )); then\n      valid=0\n      break\n    fi\n  done\n\n  echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=\"$1\"\n  local -i digit\n  local -i count\n  local -i result=0\n  for (( digit=0; digit<10; digit++ )); do\n    count=0\n    while (( num > 0 )); do\n      if (( num % 10 == digit )); then\n        (( count++ ))\n      fi\n      (( num /= 10 ))\n    done\n    if (( count > digit )); then\n      (( result = 1 ))\n      break\n    fi\n    num=\"$1\"\n  done\n  return \"$result\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i freq\n    local -i result=1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -a digits\n    local -i i\n    local -i sum=0\n    local -i digit\n\n    digits=($(echo $1 | sed 's/./& /g'))\n    for ((i=0; i<${#digits[@]}; i++)); do\n        digit=${digits[$i]}\n        sum=$((sum + digit))\n    done\n    if ((sum <= $1)); then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i result=0\n\n    while (( num > 0 )); do\n        digit=num%10\n        count=0\n        while (( num > 0 )); do\n            (( num%10 == digit )) && (( count++ ))\n            (( num/=10 ))\n        done\n        (( count > digit )) && (( result++ ))\n        (( num=1 ))\n    }\n    (( result == 0 )) && echo \"True\" || echo \"False\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpv4jpfmhe.sh: line 20: syntax error near unexpected token `}'\\n/tmp/tmpv4jpfmhe.sh: line 20: `    }'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local num=$1\n  local digit\n  local freq\n  for ((digit=0; digit<10; digit++)); do\n    freq=$(echo $num | grep -o $digit | wc -l)\n    if [[ $freq -gt $digit ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i count\n    local -i result=1\n\n    while (( num > 0 )); do\n        digit=$(( num % 10 ))\n        freq=0\n        count=$num\n        while (( count > 0 )); do\n            if (( count % 10 == digit )); then\n                (( freq++ ))\n            fi\n            (( count /= 10 ))\n        done\n        if (( freq > digit )); then\n            result=0\n            break\n        fi\n        (( num /= 10 ))\n    done\n\n    echo $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i freq_arr\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    freq_arr[$digit]=$(( ++freq_arr[$digit] ))\n    num=$(( num / 10 ))\n  done\n\n  for (( i=0; i<10; i++ )); do\n    if (( freq_arr[i] > i )); then\n      return 1\n    fi\n  done\n\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local n=$1\n    local digits=($(echo $n | sed 's/./& /g'))\n    local digit_counts=($(echo ${digits[@]} | tr ' ' '\\n' | sort | uniq -c | awk '{print $1}'))\n    local digit_uniq=($(echo ${digits[@]} | tr ' ' '\\n' | sort | uniq))\n    local i=0\n    for d in ${digit_uniq[@]}; do\n        if [[ ${digit_counts[$i]} -gt $d ]]; then\n            echo \"false\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i max_count=0\n    local -i max_digit\n\n    while (( num > 0 )); do\n        digit=$(( num % 10 ))\n        count=0\n        while (( num > 0 )); do\n            (( num % 10 == digit )) && (( count++ ))\n            num=$(( num / 10 ))\n        done\n        (( count > max_count )) && max_count=$count && max_digit=$digit\n        num=$1\n    done\n\n    (( max_count <= max_digit )) && return 0 || return 1\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "<_io.BufferedReader name=13>",
      "stderr": "<_io.BufferedReader name=19>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n    local -i qqq=\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i i\n    local -i count\n    local -i arr\n    local -i freq\n    local -i valid=1\n\n    while [ $num -gt 0 ]; do\n        digit=$(( num % 10 ))\n        num=$(( num / 10 ))\n        count=0\n        for (( i=0; i<${#arr[@]}; i++ )); do\n            if [ ${arr[$i]} -eq $digit ]; then\n                freq[$i]=$(( freq[$i] + 1 ))\n                count=1\n                break\n            fi\n        done\n        if [ $count -eq 0 ]; then\n            arr+=($digit)\n            freq+=(1)\n        fi\n    done\n\n    for (( i=0; i<${#arr[@]}; i++ )); do\n        if [ ${arr[$i]} -lt ${freq[$i]} ]; then\n            valid=0\n            break\n        fi\n    done\n\n    echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n\n    while [ $num -gt 0 ]; do\n        digit=$(( num % 10 ))\n        num=$(( num / 10 ))\n        case $digit in\n            0) (( count = ++z )) ;;\n            1) (( count = ++a )) ;;\n            2) (( count = ++b )) ;;\n            3) (( count = ++c )) ;;\n            4) (( count = ++d )) ;;\n            5) (( count = ++e )) ;;\n            6) (( count = ++f )) ;;\n            7) (( count = ++g )) ;;\n            8) (( count = ++h )) ;;\n            9) (( count = ++i )) ;;\n        esac\n        if [ $count -gt $digit ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local num=$1\n  local digit\n  local freq\n  local valid=1\n  for ((digit=0; digit<=9; digit++)); do\n    freq=$(echo $num | grep -o $digit | wc -l)\n    if ((freq > digit)); then\n      valid=0\n      break\n    fi\n  done\n  echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i max_freq=0\n    local -i max_digit=0\n    local -i max_digit_freq=0\n    local -i max_digit_freq_digit=0\n    local -i max_digit_freq_freq=0\n    local -i max_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local num=$1\n  local -a freq\n  local -a digits\n  local digit\n  local freq_digit\n  local i\n\n  while [ $num -gt 0 ]; do\n    digit=$(( num % 10 ))\n    digits+=( $digit )\n    num=$(( num / 10 ))\n  done\n\n  for digit in \"${digits[@]}\"; do\n    freq[$digit]=$(( ${freq[$digit]} + 1 ))\n  done\n\n  for i in \"${!freq[@]}\"; do\n    if [ ${freq[$i]} -gt $i ]; then\n      echo \"false\"\n      return\n    fi\n  done\n\n  echo \"true\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local n=$1\n    local digits=()\n    local freqs=()\n    local digit\n    local freq\n    local i\n    local j\n\n    # get digits\n    while [ $n -gt 0 ]; do\n        digit=$((n % 10))\n        n=$((n / 10))\n        digits+=($digit)\n    done\n\n    # get frequencies\n    for ((i=0; i<${#digits[@]}; i++)); do\n        digit=${digits[$i]}\n        freq=0\n        for ((j=0; j<${#digits[@]}; j++)); do\n            if [ ${digits[$j]} -eq $digit ]; then\n                freq=$((freq + 1))\n            fi\n        done\n        freqs+=($freq)\n    done\n\n    # compare\n    for ((i=0; i<${#freqs[@]}; i++)); do\n        if [ ${freqs[$i]} -gt ${digits[$i]} ]; then\n            return 1\n        fi\n    done\n\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local n=$1\n    local digits=()\n    local freq=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n\n    # Split the integer into digits\n    while [ $n -gt 0 ]; do\n        digits[$i]=$((n % 10))\n        n=$((n / 10))\n        i=$((i + 1))\n    done\n\n    # Count the frequency of each digit\n    for ((j=0; j<${#digits[@]}; j++)); do\n        case ${digits[$j]} in\n            0)\n                freq[0]=$((freq[0] + 1))\n                ;;\n            1)\n                freq[1]=$((freq[1] + 1))\n                ;;\n            2)\n                freq[2]=$((freq[2] + 1))\n                ;;\n            3)\n                freq[3]=$((freq[3] + 1))\n                ;;\n            4)\n                freq[4]=$((freq[4] + 1))\n                ;;\n            5)\n                freq[5]=$((freq[5] + 1))\n                ;;\n            6)\n                freq[6]=$((freq[6] + 1))\n                ;;\n            7)\n                freq[7]=$((freq[7] + 1))\n                ;;\n            8)\n                freq[8]=$((freq[8] + 1))\n                ;;\n            9)\n                freq[9]=$((freq[9] + 1))\n                ;;\n        esac\n    done\n\n    # Check if the frequency of each digit is less than or equal to the digit itself\n    for ((k=0; k<${#freq[@]}; k++)); do\n       \n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpuubarmif.sh: line 74: syntax error near unexpected token `}'\\n/tmp/tmpuubarmif.sh: line 74: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i result=0\n    local -i i=0\n    local -a digits\n    local -a counts\n\n    while (( num > 0 )); do\n        digit=num%10\n        num=num/10\n        if (( digits[i] == digit )); then\n            (( counts[i]++ ))\n        else\n            digits[i]=digit\n            counts[i]=1\n            (( i++ ))\n        fi\n    done\n\n    for (( i=0; i<${#digits[@]}; i++ )); do\n        if (( counts[i] > digits[i] )); then\n            (( result++ ))\n        fi\n    done\n\n    echo $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i A\n  local -i B\n  local -i C\n  local -i D\n  local -i E\n  local -i F\n  local -i G\n  local -i H\n  local -i I\n  local -i J\n  local -i K\n  local -i L\n  local -i M\n  local -i N\n  local -i O\n  local -i P\n  local -i Q\n  local -i R\n  local -i S\n  local -i T\n  local -i U\n  local -i V\n  local -i W\n  local -i X\n  local -i Y\n  local -i Z\n  local -i 0\n  local -i 1\n  local -i 2\n  local -i 3\n  local -i 4\n  local -i 5\n  local -i 6\n  local -i 7\n  local -i 8\n  local -i 9\n\n  while (( num > 0 )); do\n   \n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpojtg7zt1.sh: line 92: syntax error near unexpected token `}'\\n/tmp/tmpojtg7zt1.sh: line 92: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i n=$1\n    local -i d\n    local -i f\n    local -i r\n    local -i i\n    for ((d=0; d<10; d++)); do\n        f=0\n        for ((i=n; i>0; i/=10)); do\n            r=i%10\n            ((r==d)) && ((++f))\n        done\n        ((f>d)) && return 1\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i n=$1\n    local -i digit\n    local -i freq\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i digit_freq\n    local -i digit_freq_list\n    local -i digit_freq_list_sorted\n    local -i digit_freq_list_sorted_desc\n    local -i digit_freq_list_sorted_desc_head\n    local -i digit_freq_list_sorted_desc_head_tail\n    local -i digit_freq_list_sorted_desc_head_tail_head\n    local -i digit_freq_list_sorted_desc_head_tail_head_tail\n    local -i digit_freq_list_sorted_desc_head_tail_head_tail_head\n    local -i digit_freq_list_sorted_desc_head_tail_head_tail_head_tail\n    local -i digit_freq_list_sorted_desc_head_tail_head_tail_head_tail_head\n    local -i digit_freq_list_sorted_desc_head_tail_head_tail_head_tail_head_tail\n    local -i digit_freq_list_sorted_desc_head_tail_head_tail_head_tail_head_tail_head\n    local -i digit_freq_list_sorted_desc_head_tail_head_tail_head_tail_head_tail_head_tail\n    local -i digit_freq_list_sorted_desc_head_tail_head_tail_head_tail_head_tail_head_tail_head\n    local -i digit_freq_list_sorted_desc_head_tail_head_tail_\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i A\n    local -i B\n    local -i C\n    local -i D\n    local -i E\n    local -i F\n    local -i G\n    local -i H\n    local -i I\n    local -i J\n    local -i K\n    local -i L\n    local -i M\n    local -i N\n    local -i O\n    local -i P\n    local -i Q\n    local -i R\n    local -i S\n    local -i T\n    local -i U\n    local -i V\n    local -i W\n    local -i X\n    local -i Y\n    local -i Z\n    local -i 0\n    local -i 1\n    local -i 2\n    local -i 3\n    local -i 4\n    local -i 5\n    local -i 6\n    local -i 7\n    local -i 8\n    local -i 9\n    local -i _\n    local -i -\n    local -i +\n    local -i =\n    local -i !\n    local -i @\n   \n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp6_1n41id.sh: line 75: local: `0\\': not a valid identifier\\n/tmp/tmp6_1n41id.sh: line 76: local: `1\\': not a valid identifier\\n/tmp/tmp6_1n41id.sh: line 77: local: `2\\': not a valid identifier\\n/tmp/tmp6_1n41id.sh: line 78: local: `3\\': not a valid identifier\\n/tmp/tmp6_1n41id.sh: line 79: local: `4\\': not a valid identifier\\n/tmp/tmp6_1n41id.sh: line 80: local: `5\\': not a valid identifier\\n/tmp/tmp6_1n41id.sh: line 81: local: `6\\': not a valid identifier\\n/tmp/tmp6_1n41id.sh: line 82: local: `7\\': not a valid identifier\\n/tmp/tmp6_1n41id.sh: line 83: local: `8\\': not a valid identifier\\n/tmp/tmp6_1n41id.sh: line 84: local: `9\\': not a valid identifier\\n/tmp/tmp6_1n41id.sh: line 86: local: -: syntax error: operand expected (error token is \"-\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digits=()\n    local freq=()\n    local digit\n    local i\n    for ((i=0; i<10; i++)); do\n        freq[$i]=0\n    done\n    while (( num > 0 )); do\n        digit=$(( num % 10 ))\n        (( freq[digit]++ ))\n        num=$(( num / 10 ))\n    done\n    for ((i=0; i<10; i++)); do\n        if (( freq[i] > i )); then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i max_freq=0\n    local -i max_digit=0\n    local -i max_digit_freq=0\n    local -i max_digit_freq_digit=0\n    local -i max_digit_freq_freq=0\n    local -i max_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i n=$1\n    local -i digit\n    local -i frequency\n    local -i result=1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i nn=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nnn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local number=$1\n  local digit\n  local frequency\n  for digit in $(seq 0 9); do\n    frequency=$(echo $number | sed 's/[^'$digit']//g' | wc -c)\n    if [ $frequency -gt $digit ]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i n=$1\n    local -i digit\n    local -i freq\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=\"$1\"\n    local digit\n    local freq\n    for (( digit=0; digit<=9; digit++ )); do\n        freq=$(echo \"$num\" | sed 's/[^'\"$digit\"']//g' | wc -c)\n        if [[ $freq -gt $digit ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i freq_max=0\n    local -i freq_max_digit=0\n    local -i freq_max_count=0\n    local -i freq_max_count_digit=0\n    local -i freq_max_count_count=0\n    local -i freq_max_count_count_digit=0\n    local -i freq_max_count_count_count=0\n    local -i freq_max_count_count_count_digit=0\n    local -i freq_max_count_count_count_count=0\n    local -i freq_max_count_count_count_count_digit=0\n    local -i freq_max_count_count_count_count_count=0\n    local -i freq_max_count_count_count_count_count_digit=0\n    local -i freq_max_count_count_count_count_count_count=0\n    local -i freq_max_count_count_count_count_count_count_digit=0\n    local -i freq_max_count_count_count_count_count_count_count=0\n    local -i freq_max_count_count_count_count_count_count_count_digit=0\n    local -i freq_max_count_count_count_count_count_count_count_count=0\n    local -i freq_max_count_count_count_count_count_count_count_count_digit=0\n    local -i freq_max_count_count_count_count_count_count_count_count_count=0\n    local -i freq_max_count_count_count_count_count_count_count_count_count_digit=0\n    local -i freq_max_count_count_count_count_count_count_count_count_count_count=0\n    local -i freq_max_count_count_count_count_count_count_count_count_count_count_digit=0\n    local -i freq\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n    local -i qqq=\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digit\n    local count\n    local valid=true\n    for (( digit=0; digit<=9; digit++ )); do\n        count=$(echo \"$num\" | grep -o \"$digit\" | wc -l)\n        if (( count > digit )); then\n            valid=false\n            break\n        fi\n    done\n    echo \"$valid\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i count=0\n    local -i result=0\n    local -i temp\n    local -i sum=0\n    local -i sum_freq=0\n    local -i sum_freq_count=0\n    local -i sum_freq_result=0\n    local -i sum_freq_temp=0\n    local -i sum_freq_sum=0\n    local -i sum_freq_sum_freq=0\n    local -i sum_freq_sum_freq_count=0\n    local -i sum_freq_sum_freq_result=0\n    local -i sum_freq_sum_freq_temp=0\n    local -i sum_freq_sum_freq_sum=0\n    local -i sum_freq_sum_freq_sum_freq=0\n    local -i sum_freq_sum_freq_sum_freq_count=0\n    local -i sum_freq_sum_freq_sum_freq_result=0\n    local -i sum_freq_sum_freq_sum_freq_temp=0\n    local -i sum_freq_sum_freq_sum_freq_sum=0\n    local -i sum_freq_sum_freq_sum_freq_sum_freq=0\n    local -i sum_freq_sum_freq_sum_freq_sum_freq_count=0\n    local -i sum_freq_sum_freq_sum_freq_sum_freq_result=0\n    local -i sum_freq_sum_freq_sum_freq_sum_freq_temp=0\n    local -i sum_freq_sum_freq_sum_freq_sum_freq_sum=0\n    local -i sum_freq_sum_freq_sum_freq_sum_freq_sum_freq=0\n    local -i sum_freq_sum_freq_sum_freq_sum_freq_sum_fre\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i freq\n    local -i result=1\n\n    while (( num > 0 )); do\n        digit=$(( num % 10 ))\n        count=0\n        freq=0\n        while (( num > 0 )); do\n            if (( (num % 10) == digit )); then\n                (( ++freq ))\n            fi\n            (( ++count ))\n            num=$(( num / 10 ))\n        done\n        if (( freq > digit )); then\n            result=0\n            break\n        fi\n        num=$1\n    done\n\n    echo $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "<_io.BufferedReader name=9>",
      "stderr": "<_io.BufferedReader name=17>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i count\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    num=$(( num / 10 ))\n\n    case $digit in\n      0) (( count = ++z )) ;;\n      1) (( count = ++a )) ;;\n      2) (( count = ++b )) ;;\n      3) (( count = ++c )) ;;\n      4) (( count = ++d )) ;;\n      5) (( count = ++e )) ;;\n      6) (( count = ++f )) ;;\n      7) (( count = ++g )) ;;\n      8) (( count = ++h )) ;;\n      9) (( count = ++i )) ;;\n    esac\n\n    if (( count > digit )); then\n      echo \"false\"\n      return 1\n    fi\n  done\n\n  echo \"true\"\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i count=0\n  local -i result=0\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i ccc\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i count\n    local -i result=1\n    local -i i\n\n    for (( i=0; i<10; i++ )); do\n        count=0\n        while (( num > 0 )); do\n            digit=$(( num % 10 ))\n            if (( digit == i )); then\n                (( count++ ))\n            fi\n            (( num /= 10 ))\n        done\n        if (( count > i )); then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i count\n  local -i freq\n  local -i valid=1\n  local -a digits=()\n  local -a freqs=()\n  local -i i\n\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    (( num /= 10 ))\n    (( digits[digit]++ ))\n  done\n\n  for (( i=0; i<10; i++ )); do\n    (( count = digits[i] ))\n    if (( count > 0 )); then\n      (( freq = digits[count] ))\n      if (( freq > count )); then\n        valid=0\n        break\n      fi\n      (( freqs[freq]++ ))\n    fi\n  done\n\n  if (( valid )); then\n    for (( i=0; i<10; i++ )); do\n      (( count = freqs[i] ))\n      if (( count > 0 )); then\n        (( freq = freqs[count] ))\n        if (( freq > count )); then\n          valid=0\n          break\n        fi\n      fi\n    done\n  fi\n\n  echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local len=${#num}\n    local i=0\n    local digit=0\n    local freq=0\n    local result=0\n\n    for ((i=0; i<len; i++)); do\n        digit=${num:$i:1}\n        freq=$(echo $num | grep -o $digit | wc -l)\n        if [ $freq -gt $digit ]; then\n            result=1\n            break\n        fi\n    done\n\n    echo $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i A\n    local -i B\n    local -i C\n    local -i D\n    local -i E\n    local -i F\n    local -i G\n    local -i H\n    local -i I\n    local -i J\n    local -i K\n    local -i L\n    local -i M\n    local -i N\n    local -i O\n    local -i P\n    local -i Q\n    local -i R\n    local -i S\n    local -i T\n    local -i U\n    local -i V\n    local -i W\n    local -i X\n    local -i Y\n    local -i Z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i 0\n    local -i 1\n    local -i 2\n    local -i 3\n    local -i 4\n    local -i 5\n    local -i 6\n    local -i 7\n    local -i 8\n    local -i 9\n    local -i 10\n    local -i\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp54a7seo6.sh: line 79: local: `0': not a valid identifier\\n/tmp/tmp54a7seo6.sh: line 80: local: `1': not a valid identifier\\n/tmp/tmp54a7seo6.sh: line 81: local: `2': not a valid identifier\\n/tmp/tmp54a7seo6.sh: line 82: local: `3': not a valid identifier\\n/tmp/tmp54a7seo6.sh: line 83: local: `4': not a valid identifier\\n/tmp/tmp54a7seo6.sh: line 84: local: `5': not a valid identifier\\n/tmp/tmp54a7seo6.sh: line 85: local: `6': not a valid identifier\\n/tmp/tmp54a7seo6.sh: line 86: local: `7': not a valid identifier\\n/tmp/tmp54a7seo6.sh: line 87: local: `8': not a valid identifier\\n/tmp/tmp54a7seo6.sh: line 88: local: `9': not a valid identifier\\n/tmp/tmp54a7seo6.sh: line 89: local: `10': not a valid identifier\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i freq_digit\n    local -i freq_digit_count\n    local -i freq_digit_count_count\n    local -i freq_digit_count_count_count\n    local -i freq_digit_count_count_count_count\n    local -i freq_digit_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count_count\n    local -i freq_digit_count_count_count_count_count_count_count\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i n=$1\n    local -i digit\n    local -i count\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n\n    while (( n > 0 )); do\n        digit=$(( n % 10 ))\n        (( n /= 10 ))\n        case $digit in\n            0) (( count = ++z )) ;;\n            1) (( count = ++a )) ;;\n            2) (( count = ++b )) ;;\n            3) (( count = ++c )) ;;\n            4) (( count = ++d )) ;;\n            5) (( count = ++e )) ;;\n            6) (( count = ++f )) ;;\n            7) (( count = ++g )) ;;\n            8) (( count = ++h )) ;;\n            9) (( count = ++i )) ;;\n        esac\n        if (( count > digit )); then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i result=1\n\n    while (( num > 0 )); do\n        digit=num%10\n        num/=10\n        freq=0\n        while (( num > 0 )); do\n            if (( num%10 == digit )); then\n                (( freq++ ))\n            fi\n            num/=10\n        done\n        if (( freq > digit )); then\n            result=0\n            break\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "<_io.BufferedReader name=8>",
      "stderr": "<_io.BufferedReader name=16>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i freq_table=()\n  local -i i\n\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    (( freq_table[digit]++ ))\n    (( num /= 10 ))\n  done\n\n  for (( i=0; i<10; i++ )); do\n    freq=${freq_table[i]}\n    if (( freq > i )); then\n      return 1\n    fi\n  done\n\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i digit\n  local -i freq\n  local -i result=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\n  while [ $n -gt 0 ]; do\n    digit=$(( n % 10 ))\n    case $digit in\n      0) (( freq=++0 )) ;;\n      1) (( freq=++1 )) ;;\n      2) (( freq=++2 )) ;;\n      3) (( freq=++3 )) ;;\n      4) (( freq=++4 )) ;;\n      5) (( freq=++5 )) ;;\n      6) (( freq=++6 )) ;;\n      7) (( freq=++7 )) ;;\n      8) (( freq=++\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmptsfrth0h.sh: line 66: unexpected EOF while looking for matching `)'\\n/tmp/tmptsfrth0h.sh: line 81: syntax error: unexpected end of file\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i digit\n  local -i freq\n  local -i max_freq\n  local -i max_digit\n  local -i i\n  local -i j\n  local -i n_digits=0\n  local -i digits[10]=0\n  local -i freqs[10]=0\n\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    ((digits[digit]++))\n    ((n_digits++))\n    ((n /= 10))\n  done\n\n  for ((i = 0; i < 10; i++)); do\n    freq=${digits[i]}\n    if [ $freq -gt 0 ]; then\n      for ((j = 0; j < 10; j++)); do\n        if [ ${freqs[j]} -lt $freq ]; then\n          max_freq=${freqs[j]}\n          max_digit=$j\n          break\n        fi\n      done\n      if [ $max_digit -gt $i ]; then\n        return 1\n      fi\n      freqs[max_digit]=$freq\n    fi\n  done\n\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 34: [: -gt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 34: [: -gt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 34: [: -gt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: [: -lt: unary operator expected\\n/tmp/tmpa2366qp7.sh: line 28: ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i count=0\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    num=$(( num / 10 ))\n    case $digit in\n      0) (( count++ ))\n        (( i++ ))\n        ;;\n      1) (( count++ ))\n        (( j++ ))\n        ;;\n      2) (( count++ ))\n        (( k++ ))\n        ;;\n      3) (( count++ ))\n        (( l++ ))\n        ;;\n      4) (( count++ ))\n        (( m++ ))\n        ;;\n      5) (( count++ ))\n        (( n++ ))\n        ;;\n      6) (( count++ ))\n        (( o++ ))\n        ;;\n      7) (( count++ ))\n        (( p++ ))\n        ;;\n      8) (( count++ ))\n        (( q++ ))\n        ;;\n      9) (( count++ ))\n        (( r++ ))\n        ;;\n      10) (( count++ ))\n        (( s++ ))\n        ;;\n      11) (( count++ ))\n        (( t++ ))\n        ;;\n      12) (( count++ ))\n        (( u++ ))\n        ;;\n      13) (( count++ ))\n        (( v++ ))\n        ;;\n      14) (( count++ ))\n        (( w++ ))\n        ;;\n      15) (( count++ ))\n        (( x++ ))\n        ;;\n      16) (( count++ ))\n        (( y++ ))\n        ;;\n      17) ((\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpjo1ak0dm.sh: line 92: unexpected EOF while looking for matching `)'\\n/tmp/tmpjo1ak0dm.sh: line 107: syntax error: unexpected end of file\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digit\n    local freq\n    for ((digit=0; digit<10; digit++)); do\n        freq=$(echo $num | grep -o $digit | wc -l)\n        if [[ $freq -gt $digit ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digit\n    local freq\n    local valid=1\n\n    for digit in 0 1 2 3 4 5 6 7 8 9; do\n        freq=$(echo \"$num\" | grep -o \"$digit\" | wc -l)\n        if [[ $freq -gt $digit ]]; then\n            valid=0\n            break\n        fi\n    done\n\n    echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i digit\n  local -i freq\n  local -i max_freq\n  local -i max_digit\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i b\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n\n  while [ $num -gt 0 ]; do\n    digit=$(( num % 10 ))\n    num=$(( num / 10 ))\n    case $digit in\n      0) (( i++ )) ;;\n      1) (( j++ )) ;;\n      2) (( k++ )) ;;\n      3) (( l++ )) ;;\n      4) (( m++ )) ;;\n      5) (( n++ )) ;;\n      6) (( o++ )) ;;\n      7) (( p++ )) ;;\n      8) (( q++ )) ;;\n      9) (( r++ )) ;;\n    esac\n  done\n\n  for digit in {0..9}; do\n    eval freq=\\$$digit\n    if [ $freq -gt $digit ]; then\n      return 1\n    fi\n  done\n\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpf35u_5br.sh: line 46: /tmp/tmpf35u_5br.sh: syntax error: operand expected (error token is \"/tmp/tmpf35u_5br.sh\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i count\n  local -i freq\n  local -i result=0\n  local -i i=0\n\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    num=$(( num / 10 ))\n    count=0\n    for (( i = 0; i < ${#1}; i++ )); do\n      if (( ${1:i:1} == digit )); then\n        (( count++ ))\n      fi\n    done\n    if (( count > digit )); then\n      (( result++ ))\n    fi\n  done\n\n  if (( result > 0 )); then\n    echo \"false\"\n  else\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digits=()\n    local freq=()\n    local i=0\n    local j=0\n    local digit=0\n    local freq_digit=0\n    local valid=1\n\n    while [ $num -gt 0 ]; do\n        digit=$((num % 10))\n        num=$((num / 10))\n        digits[$i]=$digit\n        freq[$i]=0\n        i=$((i + 1))\n    done\n\n    for ((j=0; j<i; j++)); do\n        digit=${digits[$j]}\n        freq_digit=${freq[$digit]}\n        freq[$digit]=$((freq_digit + 1))\n    done\n\n    for ((j=0; j<i; j++)); do\n        digit=${digits[$j]}\n        freq_digit=${freq[$digit]}\n        if [ $freq_digit -gt $digit ]; then\n            valid=0\n            break\n        fi\n    done\n\n    echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i max_freq=0\n    local -i max_digit=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n   \n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i A\n    local -i B\n    local -i C\n    local -i D\n    local -i E\n    local -i F\n    local -i G\n    local -i H\n    local -i I\n    local -i J\n    local -i K\n    local -i L\n    local -i M\n    local -i N\n    local -i O\n    local -i P\n    local -i Q\n    local -i R\n    local -i S\n    local -i T\n    local -i U\n    local -i V\n    local -i W\n    local -i X\n    local -i Y\n    local -i Z\n    local -i _\n    local -i -\n\n    while (( num > 0 )); do\n        digit=$(( num % 10 ))\n        num=$(( num / 10 ))\n        case $digit in\n            0) (( count = ++0 )) ;;\n            1) (( count = ++1 )) ;;\n            2) ((\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpvy3aocpm.sh: line 88: unexpected EOF while looking for matching `)'\\n/tmp/tmpvy3aocpm.sh: line 103: syntax error: unexpected end of file\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i result=1\n    local -i count=0\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n    local -i fff\n    local -i ggg\n    local -i hhh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaaa\n    local -i bbb\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i d\n  local -i f\n  local -i i\n  local -i j\n  local -i k\n  local -i m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i e\n  local -i g\n  local -i h\n  local -i l\n  local -i o\n  local -i A\n  local -i B\n  local -i C\n  local -i D\n  local -i E\n  local -i F\n  local -i G\n  local -i H\n  local -i I\n  local -i J\n  local -i K\n  local -i L\n  local -i M\n  local -i N\n  local -i O\n  local -i P\n  local -i Q\n  local -i R\n  local -i S\n  local -i T\n  local -i U\n  local -i V\n  local -i W\n  local -i X\n  local -i Y\n  local -i Z\n  local -i _\n  local -i -\n  local -i +\n  local -i =\n  local -i ~\n  local -i !\n  local -i @\n  local -i #\n  local -i $\n  local -i %\n  local -i ^\n  local -i &\n  local -i *\n  local -i (\n  local -i )\n  local -i [\n  local -i ]\n  local -i {\n  local -i }\n  local -i |\n  local -i \\\n  local -i ;\n  local -i :\n  local -i '\n  local -i \"\n  local -i <\n  local -i >\n  local -i ,\n  local -i .\n  local -i /\n  local -i ?\n  local -i 0\n  local -i 1\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpor2xys6g.sh: line 71: syntax error near unexpected token `('\\n/tmp/tmpor2xys6g.sh: line 71: `  local -i ('\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i max_freq\n    local -i max_digit\n    local -i freq_digit\n    local -i freq_freq\n    local -i freq_max_freq\n    local -i freq_max_digit\n    local -i freq_freq_digit\n    local -i freq_freq_freq\n    local -i freq_freq_max_freq\n    local -i freq_freq_max_digit\n    local -i freq_freq_freq_digit\n    local -i freq_freq_freq_freq\n    local -i freq_freq_freq_max_freq\n    local -i freq_freq_freq_max_digit\n    local -i freq_freq_freq_freq_digit\n    local -i freq_freq_freq_freq_freq\n    local -i freq_freq_freq_freq_max_freq\n    local -i freq_freq_freq_freq_max_digit\n    local -i freq_freq_freq_freq_freq_digit\n    local -i freq_freq_freq_freq_freq_freq\n    local -i freq_freq_freq_freq_freq_max_freq\n    local -i freq_freq_freq_freq_freq_max_digit\n    local -i freq_freq_freq_freq_freq_freq_digit\n    local -i freq_freq_freq_freq_freq_freq_freq\n    local -i freq_freq_freq_freq_freq_freq_max_freq\n    local -i freq_freq_freq_freq_freq_freq_max_digit\n    local -i freq_freq_freq_freq_freq_freq_freq_digit\n    local -i freq_freq_freq_fre\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local number=$1\n    local digits=${#number}\n    local digit\n    local frequency\n    for (( i=0; i<digits; i++ )); do\n        digit=${number:i:1}\n        frequency=$(echo \"$number\" | grep -o \"$digit\" | wc -l)\n        if [[ $frequency -gt $digit ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i max_freq=0\n    local -i max_digit=0\n    local -i digit_freq=0\n    local -i digit_freq_max=0\n    local -i digit_freq_max_digit=0\n    local -i digit_freq_max_freq=0\n    local -i digit_freq_max_freq_digit=0\n    local -i digit_freq_max_freq_digit_freq=0\n    local -i digit_freq_max_freq_digit_freq_digit=0\n    local -i digit_freq_max_freq_digit_freq_digit_freq=0\n    local -i digit_freq_max_freq_digit_freq_digit_freq_digit=0\n    local -i digit_freq_max_freq_digit_freq_digit_freq_digit_freq=0\n    local -i digit_freq_max_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i digit_freq_max_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i digit_freq_max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i digit_freq_max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i digit_freq_max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i digit_freq_max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i digit_freq_max_freq_digit_freq_digit_freq_digit_freq_digit\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=\"$1\"\n  local -i digit\n  local -i freq\n  local -i count\n  local -i result=1\n\n  while (( num > 0 )); do\n    digit=\"$(( num % 10 ))\"\n    num=\"$(( num / 10 ))\"\n    count=0\n    freq=\"$num\"\n    while (( freq > 0 )); do\n      if (( (freq % 10) == digit )); then\n        (( count++ ))\n      fi\n      freq=\"$(( freq / 10 ))\"\n    done\n    if (( count > digit )); then\n      result=0\n      break\n    fi\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i freq_arr\n  local -i digit_arr\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i i\n    local -i len=${#num}\n    local -i digits[10]=0\n    for ((i=0; i<len; i++)); do\n        digit=${num:i:1}\n        ((digits[digit]++))\n    done\n    for ((i=0; i<10; i++)); do\n        if ((digits[i] > i)); then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i freq_max=0\n  local -i freq_digit=0\n  local -i freq_digit_max=0\n  local -i freq_digit_max_count=0\n  local -i freq_digit_max_count_max=0\n\n  while (( num > 0 )); do\n    digit=num%10\n    freq=0\n    while (( num > 0 )); do\n      if (( num%10 == digit )); then\n        (( freq++ ))\n      fi\n      (( num /= 10 ))\n    done\n    if (( freq > freq_max )); then\n      freq_max=$freq\n      freq_digit_max=$digit\n      freq_digit_max_count_max=1\n    elif (( freq == freq_max )); then\n      (( freq_digit_max_count_max++ ))\n    fi\n    (( num = $1 ))\n  done\n\n  if (( freq_digit_max_count_max > 1 )); then\n    echo \"false\"\n  elif (( freq_digit_max > freq_digit_max_count_max )); then\n    echo \"false\"\n  else\n    echo \"true\"\n  fi\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "<_io.BufferedReader name=5>",
      "stderr": "<_io.BufferedReader name=20>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i max_freq\n    local -i max_digit\n    local -i max_digit_freq\n\n    while [ $num -gt 0 ]; do\n        digit=$(( num % 10 ))\n        freq=$(echo \"$1\" | grep -o \"$digit\" | wc -l)\n        if [ $freq -gt $digit ]; then\n            echo \"False\"\n            return\n        fi\n        num=$(( num / 10 ))\n    done\n    echo \"True\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i d\n  local -i f\n  local -i r\n  local -i s=0\n  local -i t=0\n  while (( n > 0 )); do\n    (( d = n % 10 ))\n    (( n /= 10 ))\n    (( f = 0 ))\n    r=$n\n    while (( r > 0 )); do\n      (( t = r % 10 ))\n      (( r /= 10 ))\n      (( t == d )) && (( f += 1 ))\n    done\n    (( f > d )) && (( s += 1 ))\n  done\n  (( s == 0 )) && echo \"true\" || echo \"false\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i digit\n  local -i count\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i cccc\n  local -i dddd\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digit\n    local freq\n    local -a freq_arr\n    local -a digit_arr\n    local i\n    local j\n    local len\n    local len_digit\n    local len_freq\n    local valid=1\n\n    # convert number to array of digits\n    while [ $num -gt 0 ]; do\n        digit=$((num % 10))\n        digit_arr+=($digit)\n        num=$((num / 10))\n    done\n\n    # count frequency of each digit\n    len_digit=${#digit_arr[@]}\n    for ((i=0; i<len_digit; i++)); do\n        digit=${digit_arr[$i]}\n        freq=0\n        for ((j=0; j<len_digit; j++)); do\n            if [ ${digit_arr[$j]} -eq $digit ]; then\n                freq=$((freq + 1))\n            fi\n        done\n        freq_arr+=($freq)\n    done\n\n    # check if frequency of each digit is less than or equal to the digit itself\n    len_freq=${#freq_arr[@]}\n    for ((i=0; i<len_freq; i++)); do\n        if [ ${freq_arr[$i]} -gt ${digit_arr[$i]} ]; then\n            valid=0\n            break\n        fi\n    done\n\n    echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i max_freq=0\n  local -i max_digit=0\n  local -i max_freq_digit=0\n  local -i max_freq_digit_freq=0\n  local -i max_freq_digit_freq_digit=0\n  local -i max_freq_digit_freq_digit_freq=0\n  local -i max_freq_digit_freq_digit_freq_digit=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n  local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n  local -i max_freq\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digit\n    local freq\n    local freq_map=()\n    local valid=true\n\n    while [ $num -gt 0 ]; do\n        digit=$((num % 10))\n        num=$((num / 10))\n\n        freq=${freq_map[$digit]}\n        if [ -z \"$freq\" ]; then\n            freq=0\n        fi\n        freq=$((freq + 1))\n        freq_map[$digit]=$freq\n\n        if [ $freq -gt $digit ]; then\n            valid=false\n            break\n        fi\n    done\n\n    echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digits=()\n    local freq=()\n    local digit\n    local i\n    local j\n    local k\n\n    while [ $num -gt 0 ]; do\n        digit=$(( num % 10 ))\n        num=$(( num / 10 ))\n        digits+=( $digit )\n    done\n\n    for (( i = 0; i < ${#digits[@]}; i++ )); do\n        freq[$i]=0\n        for (( j = 0; j < ${#digits[@]}; j++ )); do\n            if [ ${digits[$i]} -eq ${digits[$j]} ]; then\n                freq[$i]=$(( freq[$i] + 1 ))\n            fi\n        done\n    done\n\n    for (( i = 0; i < ${#digits[@]}; i++ )); do\n        if [ ${freq[$i]} -gt ${digits[$i]} ]; then\n            echo \"Invalid\"\n            return\n        fi\n    done\n\n    echo \"Valid\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i max_freq=0\n    local -i max_digit=0\n    local -i max_digit_freq=0\n    local -i max_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i max_digit_freq_digit_freq\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i count\n    local -i digit_count\n    local -i digit_count_array=()\n    local -i digit_array=()\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local num=$1\n  local digits=()\n  local freq=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local digit=0\n  local freq=0\n  local result=0\n  local valid=0\n\n  # get the digits\n  while [ $num -gt 0 ]; do\n    digit=$((num % 10))\n    digits[$i]=$digit\n    num=$((num / 10))\n    i=$((i + 1))\n  done\n\n  # get the frequency of each digit\n  for (( j = 0; j < ${#digits[@]}; j++ )); do\n    case ${digits[$j]} in\n      0)\n        freq[$j]=$((freq[$j] + 1))\n        ;;\n      1)\n        freq[$j]=$((freq[$j] + 1))\n        ;;\n      2)\n        freq[$j]=$((freq[$j] + 1))\n        ;;\n      3)\n        freq[$j]=$((freq[$j] + 1))\n        ;;\n      4)\n        freq[$j]=$((freq[$j] + 1))\n        ;;\n      5)\n        freq[$j]=$((freq[$j] + 1))\n        ;;\n      6)\n        freq[$j]=$((freq[$j] + 1))\n        ;;\n      7)\n        freq[$j]=$((freq[$j] + 1))\n        ;;\n      8)\n        freq[$j]=$((freq[$j] + 1))\n        ;;\n      9)\n        freq[$j]=$((freq[$j] + 1))\n        ;;\n   \n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpi03rpfqf.sh: line 74: syntax error near unexpected token `}'\\n/tmp/tmpi03rpfqf.sh: line 74: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n  local -i ppp=0\n  local -i qqq=\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digit\n    local freq\n    local -a digits\n    local -a freqs\n    local -i i\n    local -i j\n    local -i n\n    local -i m\n    local -i p\n    local -i q\n\n    # Split the number into digits\n    while [ $num -gt 0 ]; do\n        digit=$((num % 10))\n        num=$((num / 10))\n        digits[${#digits[@]}]=$digit\n    done\n\n    # Count the frequency of each digit\n    for ((i=0; i<${#digits[@]}; i++)); do\n        digit=${digits[$i]}\n        freq=0\n        for ((j=0; j<${#digits[@]}; j++)); do\n            if [ $digit -eq ${digits[$j]} ]; then\n                freq=$((freq + 1))\n            fi\n        done\n        freqs[${#freqs[@]}]=$freq\n    done\n\n    # Check if the frequency of each digit is less than or equal to the digit itself\n    for ((i=0; i<${#digits[@]}; i++)); do\n        digit=${digits[$i]}\n        freq=${freqs[$i]}\n        if [ $freq -gt $digit ]; then\n            echo \"False\"\n            return\n        fi\n    done\n\n    # Check if the frequency of each digit is less than or equal to the digit itself\n    for ((i=0; i<${#digits[@]}; i++)); do\n        digit=${digits[$i]}\n        freq=${freqs[$i]}\n        if [ $freq -gt $digit ]; then\n            echo \"False\"\n            return\n        fi\n    done\n\n    # Check if there are two adjacent digits that are the same\n    for ((i=0; i<${#digits[@]}; i++)); do\n        n=${#digits[@]}\n        m=$((n - 1))\n        p=$((i + 1))\n        q=$((i + 2))\n        if [ $p -lt $n ] && [\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp0hjfi8tu.sh: line 64: syntax error near unexpected token `}'\\n/tmp/tmp0hjfi8tu.sh: line 64: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i n=$1\n    local -i digit\n    local -i freq\n    local -i max_freq\n    local -i max_digit\n    local -i i\n\n    while (( n > 0 )); do\n        digit=$(( n % 10 ))\n        freq=0\n        for (( i = n; i > 0; i /= 10 )); do\n            if (( (i % 10) == digit )); then\n                (( freq++ ))\n            fi\n        done\n        if (( freq > digit )); then\n            return 1\n        elif (( freq > max_freq )); then\n            max_freq=$freq\n            max_digit=$digit\n        elif (( freq == max_freq && digit > max_digit )); then\n            max_digit=$digit\n        fi\n        (( n /= 10 ))\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i count\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n    local -i fff\n    local -i ggg\n    local -i hhh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaaa\n    local -i bbbb\n    local -i cccc\n\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local num=$1\n  local digit\n  local freq\n  for digit in {0..9}; do\n    freq=$(echo $num | grep -o $digit | wc -l)\n    if [[ $freq -gt $digit ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=\"$1\"\n    local digit\n    local freq\n    for digit in $(seq 0 9); do\n        freq=$(echo \"$num\" | grep -o \"$digit\" | wc -l)\n        if [ $freq -gt $digit ]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i digit\n  local -i frequency\n  local -i result=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  while [ $n -gt 0 ]; do\n    digit=$(( n % 10 ))\n    case $digit in\n      0) (( i++ )) ;;\n      1) (( j++ )) ;;\n      2) (( k++ )) ;;\n      3) (( l++ )) ;;\n      4) (( m++ )) ;;\n      5) (( n++ )) ;;\n      6) (( o++ )) ;;\n      7) (( p++ )) ;;\n      8) (( q++ )) ;;\n      9) (( r++ )) ;;\n    esac\n    n=$(( n / 10 ))\n  done\n  if [ $i -gt 0 ] && [ $i -le $i ]; then\n    (( result++ ))\n  fi\n  if [ $j -gt 0 ] && [ $j -le $j ]; then\n    (( result++ ))\n  fi\n  if [ $k -gt 0 ] && [ $k -le $k ]; then\n    (( result++ ))\n  fi\n  if [ $l -gt 0 ] && [ $l -le $l ]; then\n    (( result++ ))\n  fi\n  if [ $m -gt 0 ] && [ $m -le $m ]; then\n    (( result++ ))\n  fi\n  if [ $n -gt 0 ] && [ $n -le $n ]; then\n    (( result++ ))\n  fi\n  if [ $o -gt 0 ] && [ $o -le $o ]; then\n    (( result++ ))\n  fi\n  if [ $\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpw6l0xhm_.sh: line 66: syntax error near unexpected token `}'\\n/tmp/tmpw6l0xhm_.sh: line 66: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n    local -i qqq=\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190759,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i d\n  local -iA freq\n  local -iA digits\n  local -i i\n  local -i j\n\n  while (( n > 0 )); do\n    d=n%10\n    (( ++freq[d] ))\n    (( n/=10 ))\n  done\n\n  for (( i=0; i<10; ++i )); do\n    (( freq[i] > i )) && return 1\n  done\n\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local integer=$1\n  local digit\n  local frequency\n  for digit in $(seq 0 9); do\n    frequency=$(echo \"$integer\" | grep -o \"$digit\" | wc -l)\n    if [ \"$frequency\" -gt \"$digit\" ]; then\n      echo \"false\"\n      return\n    fi\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i count\n    local -i valid=1\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n\n    for ((i=0; i<10; i++)); do\n        count=0\n        for ((j=0; j<10; j++)); do\n            if [[ $num -eq $j ]]; then\n                count=$((count+1))\n            fi\n        done\n        if [[ $count -gt $i ]]; then\n            valid=0\n        fi\n    done\n\n    echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i n=$1\n    local -i digit\n    local -i freq\n    local -i freq_max=0\n    local -i freq_max_digit\n    local -i freq_max_digit_max=0\n    local -i freq_max_digit_max_freq=0\n    local -i freq_max_digit_max_freq_digit\n    local -i freq_max_digit_max_freq_digit_max=0\n    local -i freq_max_digit_max_freq_digit_max_freq=0\n    local -i freq_max_digit_max_freq_digit_max_freq_digit\n    local -i freq_max_digit_max_freq_digit_max_freq_digit_max=0\n    local -i freq_max_digit_max_freq_digit_max_freq_digit_max_freq=0\n    local -i freq_max_digit_max_freq_digit_max_freq_digit_max_freq_digit\n    local -i freq_max_digit_max_freq_digit_max_freq_digit_max_freq_digit_max=0\n    local -i freq_max_digit_max_freq_digit_max_freq_digit_max_freq_digit_max_freq=0\n    local -i freq_max_digit_max_freq_digit_max_freq_digit_max_freq_digit_max_freq_digit\n    local -i freq_max_digit_max_freq_digit_max_freq_digit_max_freq_digit_max_freq_digit_max=0\n    local -i freq_max_digit_max_freq_digit_max_freq_digit_max_freq_digit_max_freq_digit_max_freq=0\n    local -i freq_max_digit_max_freq_digit_max_freq_digit_max_freq_digit_max_freq_digit_max_freq_digit\n    local -\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i freq_map=()\n    local -i i=0\n    local -i j=0\n    local -i len=${#num}\n\n    for ((i=0; i<len; i++)); do\n        digit=${num:i:1}\n        freq_map[$digit]=$((freq_map[$digit] + 1))\n    done\n\n    for ((i=0; i<10; i++)); do\n        freq=${freq_map[$i]}\n        if [[ $freq -gt $i ]]; then\n            return 1\n        fi\n    done\n\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local num=$1\n  local digits=()\n  local freq=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local digit=0\n  local freq=0\n  local result=0\n\n  for (( i=0; i<${#num}; i++ )); do\n    digit=${num:$i:1}\n    case $digit in\n      0)\n        ((z++))\n        ;;\n      1)\n        ((o++))\n        ;;\n      2)\n        ((t++))\n        ;;\n      3)\n        ((h++))\n        ;;\n      4)\n        ((f++))\n        ;;\n      5)\n        ((f++))\n        ;;\n      6)\n        ((s++))\n        ;;\n      7)\n        ((s++))\n        ;;\n      8)\n        ((e++))\n        ;;\n      9)\n        ((n++))\n        ;;\n    esac\n  done\n\n  if [[ $z -le 0 ]]; then\n    result=1\n  fi\n  if [[ $o -le 1 ]]; then\n    result=1\n  fi\n  if [[ $t -le 2 ]]; then\n    result=1\n  fi\n  if [[ $h -le 3 ]]; then\n    result=1\n  fi\n  if [[ $f -le 4 ]]; then\n    result=1\n  fi\n  if [[ $f -le 5 ]]; then\n    result=1\n  fi\n  if [[ $s -le 6 ]]; then\n    result=1\n  fi\n  if [[ $s -le 7 ]]; then\n    result=1\n  fi\n  if [[ $e -le 8 ]]; then\n    result=1\n  fi\n  if [[ $n -le 9 ]]; then\n\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpwdrv5clm.sh: line 96: syntax error near unexpected token `}'\\n/tmp/tmpwdrv5clm.sh: line 96: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i freq_max=0\n    local -i freq_max_digit=0\n    local -i freq_max_digit_freq=0\n    local -i freq_max_digit_freq_digit=0\n    local -i freq_max_digit_freq_digit_freq=0\n    local -i freq_max_digit_freq_digit_freq_digit=0\n    local -i freq_max_digit_freq_digit_freq_digit_freq=0\n    local -i freq_max_digit_freq_digit_freq_digit_freq_digit=0\n    local -i freq_max_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i freq_max_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i freq_max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i freq_max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i freq_max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i freq_max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i freq_max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq=0\n    local -i freq_max_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit=0\n    local -i freq_max_digit_freq_digit_freq\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digits=()\n    local count=()\n    local i=0\n    local j=0\n    local digit=0\n    local c=0\n    local valid=true\n\n    # get all digits\n    while [ $num -gt 0 ]; do\n        digit=$((num % 10))\n        digits[$i]=$digit\n        num=$((num / 10))\n        ((i++))\n    done\n\n    # get frequency of each digit\n    for ((j=0; j<i; j++)); do\n        digit=${digits[$j]}\n        c=0\n        for ((k=0; k<i; k++)); do\n            if [ ${digits[$k]} -eq $digit ]; then\n                ((c++))\n            fi\n        done\n        count[$j]=$c\n    done\n\n    # check if frequency is less than or equal to the digit\n    for ((j=0; j<i; j++)); do\n        if [ ${count[$j]} -gt ${digits[$j]} ]; then\n            valid=false\n            break\n        fi\n    done\n\n    echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local num=$1\n  local digits=()\n  local freq=()\n  local i=0\n  local j=0\n\n  while [ $num -gt 0 ]; do\n    digits[$i]=$((num % 10))\n    num=$((num / 10))\n    i=$((i + 1))\n  done\n\n  for ((i = 0; i < ${#digits[@]}; i++)); do\n    freq[$i]=0\n    for ((j = 0; j < ${#digits[@]}; j++)); do\n      if [ ${digits[$i]} -eq ${digits[$j]} ]; then\n        freq[$i]=$((freq[$i] + 1))\n      fi\n    done\n  done\n\n  for ((i = 0; i < ${#digits[@]}; i++)); do\n    if [ ${freq[$i]} -gt ${digits[$i]} ]; then\n      return 1\n    fi\n  done\n\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digit\n    local digit_count\n    local digit_count_array\n    local digit_count_array_index\n    local digit_count_array_value\n    local digit_count_array_value_count\n    local digit_count_array_value_count_index\n    local digit_count_array_value_count_value\n    local digit_count_array_value_count_value_count\n    local digit_count_array_value_count_value_count_index\n    local digit_count_array_value_count_value_count_value\n    local digit_count_array_value_count_value_count_value_count\n    local digit_count_array_value_count_value_count_value_count_index\n    local digit_count_array_value_count_value_count_value_count_value\n    local digit_count_array_value_count_value_count_value_count_value_count\n    local digit_count_array_value_count_value_count_value_count_value_count_index\n    local digit_count_array_value_count_value_count_value_count_value_count_value\n    local digit_count_array_value_count_value_count_value_count_value_count_value_count\n    local digit_count_array_value_count_value_count_value_count_value_count_value_count_index\n    local digit_count_array_value_count_value_count_value_count_value_count_value_count_value\n    local digit_count_array_value_count_value_count_value_count_value_count_value_count_value_count\n    local digit_count_array_value_count_value_count_value_count_value_count_value_count_value_count_index\n    local digit_count_array_value_count_value_count_value_count_value_count_value_count_value_count_value\n    local digit_count_array_value_count_value_count_value_count_value_count_value_count_value_count_value_count\n    local digit_count_array_value_count\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local num=$1\n  local digit\n  local freq\n  local freq_arr\n  local freq_arr_len\n  local i\n  local j\n  local k\n  local valid=1\n\n  # get the frequency of each digit\n  for ((i=0; i<10; i++)); do\n    freq_arr[i]=0\n  done\n  while [[ $num -gt 0 ]]; do\n    digit=$((num % 10))\n    freq_arr[$digit]=$((freq_arr[digit] + 1))\n    num=$((num / 10))\n  done\n\n  # check if the frequency of each digit is less than or equal to the digit itself\n  for ((i=0; i<10; i++)); do\n    freq=${freq_arr[i]}\n    if [[ $freq -gt 0 ]]; then\n      if [[ $freq -gt $i ]]; then\n        valid=0\n        break\n      fi\n    fi\n  done\n\n  echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i n=$1\n    local -i digit\n    local -i freq\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n\n    while (( n > 0 )); do\n        digit=$(( n % 10 ))\n        (( n /= 10 ))\n        case $digit in\n            0) (( ++i )) ;;\n            1) (( ++j )) ;;\n            2) (( ++k )) ;;\n            3) (( ++l )) ;;\n            4) (( ++m )) ;;\n            5) (( ++n )) ;;\n            6) (( ++o )) ;;\n            7) (( ++p )) ;;\n            8) (( ++q )) ;;\n            9) (( ++r )) ;;\n        esac\n    done\n\n    (( s = i + j + k + l + m + n + o + p + q + r ))\n\n    if (( s > 0 )); then\n        (( t = i / s ))\n        (( u = j / s ))\n        (( v = k / s ))\n        (( w = l / s ))\n        (( x = m / s ))\n        (( y = n / s ))\n        (( z = o / s ))\n        (( s = p / s ))\n        (( t = q / s ))\n        (( u = r / s ))\n    fi\n\n    if (( t <= 0 && u <= 1 && v <= 2 && w <= 3 && x <= 4 && y <= 5 && z <= 6 && s <= 7 && t <= 8 && u <= 9 )); then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp7evzuaj3.sh: line 56: ((: t = q / s : division by 0 (error token is \"s \")\\n/tmp/tmp7evzuaj3.sh: line 57: ((: u = r / s : division by 0 (error token is \"s \")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i result=0\n    local -i i=0\n    local -i j=0\n    local -i len=${#num}\n    local -i digit_freq[10]=0\n    local -i digit_arr[10]=0\n\n    for (( i=0; i<len; i++ )); do\n        digit=${num:i:1}\n        digit_freq[digit]=$(( digit_freq[digit] + 1 ))\n    done\n\n    for (( i=0; i<10; i++ )); do\n        if [[ ${digit_freq[i]} -gt i ]]; then\n            result=1\n            break\n        fi\n    done\n\n    return $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digits=()\n    local digit_freq=()\n    local digit_count=0\n    local digit_freq_count=0\n    local digit_freq_count_max=0\n    local i=0\n    local j=0\n    local k=0\n    local is_valid=1\n\n    # Get the digits\n    while [ $num -gt 0 ]; do\n        digits[$digit_count]=$((num % 10))\n        digit_count=$((digit_count + 1))\n        num=$((num / 10))\n    done\n\n    # Get the frequency of each digit\n    for ((i=0; i<digit_count; i++)); do\n        digit_freq[$i]=0\n        for ((j=0; j<digit_count; j++)); do\n            if [ ${digits[$i]} -eq ${digits[$j]} ]; then\n                digit_freq[$i]=$((digit_freq[$i] + 1))\n            fi\n        done\n    done\n\n    # Check if the frequency of each digit is less than or equal to the digit itself\n    for ((i=0; i<digit_count; i++)); do\n        if [ ${digits[$i]} -lt ${digit_freq[$i]} ]; then\n            is_valid=0\n            break\n        fi\n    done\n\n    echo $is_valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digit\n    local freq\n    local freq_digit\n    local freq_digit_num\n    local freq_digit_freq\n    local freq_digit_freq_digit\n    local freq_digit_freq_digit_num\n    local freq_digit_freq_digit_freq\n    local freq_digit_freq_digit_freq_digit\n    local freq_digit_freq_digit_freq_digit_num\n    local freq_digit_freq_digit_freq_digit_freq\n    local freq_digit_freq_digit_freq_digit_freq_digit\n    local freq_digit_freq_digit_freq_digit_freq_digit_num\n    local freq_digit_freq_digit_freq_digit_freq_digit_freq\n    local freq_digit_freq_digit_freq_digit_freq_digit_freq_digit\n    local freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_num\n    local freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq\n    local freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit\n    local freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_num\n    local freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq\n    local freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit\n    local freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_num\n    local freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i n=$1\n    local -i digit\n    local -i count\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i A\n    local -i B\n    local -i C\n    local -i D\n    local -i E\n    local -i F\n    local -i G\n    local -i H\n    local -i I\n    local -i J\n    local -i K\n    local -i L\n    local -i M\n    local -i N\n    local -i O\n    local -i P\n    local -i Q\n    local -i R\n    local -i S\n    local -i T\n    local -i U\n    local -i V\n    local -i W\n    local -i X\n    local -i Y\n    local -i Z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i A\n    local -i B\n    local -i C\n    local -i D\n    local -i E\n    local -i F\n    local -i G\n    local -i H\n    local -i I\n    local -i J\n    local -i K\n    local -i L\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i i\n    local -i len=${#num}\n    local -i digits[10]=0\n\n    for (( i=0; i<len; i++ )); do\n        digit=${num:i:1}\n        (( digits[digit]++ ))\n    done\n\n    for (( i=0; i<10; i++ )); do\n        freq=${digits[i]}\n        if (( freq > i )); then\n            return 1\n        fi\n    done\n\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i n=$1\n    local -i digit\n    local -i freq\n    local -i max_freq=0\n    local -i max_digit=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i digit_freq\n    local -i digit_freq_array\n    local -i digit_freq_array_size=0\n    local -i digit_freq_array_index=0\n    local -i digit_freq_array_max_index=0\n    local -i digit_freq_array_max_freq=0\n    local -i digit_freq_array_max_digit=0\n    local -i digit_freq_array_max_freq\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local number=$1\n    local digit\n    local frequency\n    for digit in {0..9}; do\n        frequency=$(echo \"$number\" | grep -o \"$digit\" | wc -l)\n        if [[ $frequency -gt $digit ]]; then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i count\n  local -i valid=1\n  local -i i\n\n  for (( i=0; i<10; i++ )); do\n    count=0\n    while (( num > 0 )); do\n      digit=$(( num % 10 ))\n      if (( digit == i )); then\n        (( count++ ))\n      fi\n      (( num /= 10 ))\n    done\n    if (( count > i )); then\n      valid=0\n      break\n    fi\n  done\n  echo $valid\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i digit\n  local -i freq\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i cccc\n  local -i ddd\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i count\n  local -i result=1\n  local -i i=0\n  local -a digits\n  local -a freqs\n\n  while (( num > 0 )); do\n    digit=num%10\n    num/=10\n    digits[i++]=$digit\n  done\n\n  for (( i=0; i<${#digits[@]}; i++ )); do\n    digit=${digits[i]}\n    freq=0\n    for (( j=0; j<${#digits[@]}; j++ )); do\n      if (( digit == ${digits[j]} )); then\n        (( freq++ ))\n      fi\n    done\n    freqs[i]=$freq\n  done\n\n  for (( i=0; i<${#digits[@]}; i++ )); do\n    if (( ${digits[i]} < ${freqs[i]} )); then\n      result=0\n      break\n    fi\n  done\n\n  echo $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190769,
      "stdout": "<_io.BufferedReader name=14>",
      "stderr": "<_io.BufferedReader name=21>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i result=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i freq_arr\n    local -i digit_arr\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i n=$1\n    local -i digit\n    local -i freq\n    local -i max_freq=0\n    local -i max_digit=0\n    local -i digit_freq\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local number=$1\n    local digit\n    local count\n    for digit in {0..9}; do\n        count=$(echo \"$number\" | grep -o \"$digit\" | wc -l)\n        if [[ $count -gt $digit ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i n=$1\n  local -i digit\n  local -i freq\n  local -i max_freq\n  local -i max_digit\n  local -i i\n  local -i j\n\n  max_freq=0\n  max_digit=0\n  for (( i=0; i<10; i++ )); do\n    freq=0\n    for (( j=0; j<${#n}; j++ )); do\n      digit=${n:$j:1}\n      if (( digit == i )); then\n        (( freq++ ))\n      fi\n    done\n    if (( freq > max_freq )); then\n      max_freq=$freq\n      max_digit=$i\n    fi\n  done\n\n  if (( max_freq <= max_digit )); then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local num=$1\n    local digit\n    local freq\n    for (( digit=0; digit<=9; digit++ )); do\n        freq=$(echo $num | sed -e \"s/[^$digit]//g\" | wc -c)\n        if (( freq > digit )); then\n            return 1\n        fi\n    done\n    return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local -i num=$1\n  local -i digit\n  local -i freq\n  local -i max_freq\n  local -i max_digit\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n  local num=$1\n  local digit\n  local freq\n  for (( digit=0; digit<=9; digit++ )); do\n    freq=$(echo \"$num\" | grep -o \"$digit\" | wc -l)\n    if [[ $freq -gt $digit ]]; then\n      return 1\n    fi\n  done\n  return 0\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit\n    local -i freq\n    local -i max_freq\n    local -i max_digit\n    local -i max_freq_digit\n    local -i max_freq_digit_freq\n    local -i max_freq_digit_freq_digit\n    local -i max_freq_digit_freq_digit_freq\n    local -i max_freq_digit_freq_digit_freq_digit\n    local -i max_freq_digit_freq_digit_freq_digit_freq\n    local -i max_freq_digit_freq_digit_freq_digit_freq_digit\n    local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq\n    local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit\n    local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq\n    local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit\n    local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq\n    local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit\n    local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq\n    local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit\n    local -i max_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_freq_digit_fre\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local -i num=$1\n    local -i digit=0\n    local -i freq=0\n    local -i count=0\n    local -i result=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n#\n# $1 is an integer\nvalidate() {\n    local n=$1\n    local digits=()\n    local freqs=()\n    local digit\n    local freq\n    local i\n    local result=0\n\n    # get digits\n    while [ $n -gt 0 ]; do\n        digit=$(($n % 10))\n        digits+=($digit)\n        n=$(($n / 10))\n    done\n\n    # get frequencies\n    for ((i = 0; i < ${#digits[@]}; i++)); do\n        digit=${digits[$i]}\n        freq=0\n        for ((j = 0; j < ${#digits[@]}; j++)); do\n            if [ ${digits[$j]} -eq $digit ]; then\n                freq=$(($freq + 1))\n            fi\n        done\n        freqs+=($freq)\n    done\n\n    # check\n    for ((i = 0; i < ${#digits[@]}; i++)); do\n        if [ ${freqs[$i]} -gt ${digits[$i]} ]; then\n            result=1\n            break\n        fi\n    done\n\n    return $result\n}\n\ncandidate() {\n    validate \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1234\") = \"true\" ]]\n    [[ $(candidate \"51241\") = \"false\" ]]\n    [[ $(candidate \"321\") = \"true\" ]]\n}\n\nrun_test",
      "timestamp": 1667190764,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_773_occurance_substring",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.\n#\n# $1 is a string\n# $2 is a string\noccurance_substring() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_773_occurance_substring.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    occurance_substring \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"python programming, python language\" \"python\") = \"python 0 6\" ]]\n    [[ $(candidate \"python programming,programming language\" \"programming\") = \"programming 7 18\" ]]\n    [[ $(candidate \"python programming,programming language\" \"language\") = \"language 31 39\" ]]\n    [[ $(candidate \"c++ programming, c++ language\" \"python\") = \"None\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local string=\"$1\"\n    local substring=\"$2\"\n    local index=0\n    local count=0\n    local result=()\n    while [[ \"${string:index:${#substring}}\" == \"$substring\" ]]; do\n        result+=(\"${index}\")\n        count=$((count + 1))\n        index=$((index + ${#substring}))\n    done\n    if [[ $count -gt 0 ]]; then\n        echo \"${result[@]}\"\n    else\n        echo \"None\"\n    fi",
    "  local string=$1\n  local substring=$2\n  local substring_length=${#substring}\n  local string_length=${#string}\n  local substring_count=0\n  local substring_position=0\n  local substring_positions=\"\"\n  local substring_positions_count=0\n\n  for ((i=0; i<string_length; i++)); do\n    if [[ ${string:i:substring_length} == $substring ]]; then\n      substring_count=$((substring_count + 1))\n      substring_positions_count=$((substring_positions_count + 1))\n      substring_positions=\"$substring_positions $i\"\n    fi\n  done\n\n  if [[ $substring_count -gt 0 ]]; then\n    echo \"$substring_count $substring_positions\"\n  else\n    echo \"None\"\n  fi",
    "  local string=\"$1\"\n  local substring=\"$2\"\n  local position=0\n  local count=0\n  while [[ $position -lt ${#string} ]]; do\n    if [[ ${string:$position:${#substring}} == $substring ]]; then\n      echo \"${position} \"\n      ((count++))\n    fi\n    ((position++))\n  done\n  if [[ $count -eq 0 ]]; then\n    echo \"None\"\n  fi",
    "  local string=$1\n  local substring=$2\n  local result=\"\"\n  local index=0\n  local count=0\n  while [[ $index -lt ${#string} ]]; do\n    if [[ ${string:$index:${#substring}} == $substring ]]; then\n      result=\"$result $index\"\n      count=$((count+1))\n    fi\n    index=$((index+1))\n  done\n  if [[ $count -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo $result\n  fi",
    "    if [ -z \"$1\" ] || [ -z \"$2\" ]; then\n        echo \"Usage: $0 <string> <substring>\"\n        return 1\n    fi\n\n    local string=\"$1\"\n    local substring=\"$2\"\n    local substring_length=${#substring}\n    local string_length=${#string}\n    local substring_occurance=0\n    local substring_position=0\n\n    for (( i=0; i<string_length; i++ )); do\n        if [[ \"${string:$i:$substring_length}\" == \"$substring\" ]]; then\n            substring_occurance=$((substring_occurance+1))\n            substring_position=\"$substring_position $i\"\n        fi\n    done\n\n    if [ $substring_occurance -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$substring_occurance $substring_position\"\n    fi",
    "  local string=$1\n  local substring=$2\n  local position=0\n  local count=0\n  while [[ $string =~ $substring ]]; do\n    position=${BASH_REMATCH[0]}\n    string=${string#*$substring}\n    ((count++))\n  done\n  echo \"Occurance: $count, Position: $position\"",
    "    if [[ $1 =~ $2 ]]; then\n        echo \"Occurance: ${BASH_REMATCH[0]}\"\n        echo \"Position: ${BASH_REMATCH[1]}\"\n    else\n        echo \"None\"\n    fi",
    "  if [[ $1 =~ $2 ]]; then\n    echo \"The substring \\\"$2\\\" occurs in \\\"$1\\\" at position ${BASH_REMATCH[1]}\"\n  else\n    echo \"The substring \\\"$2\\\" does not occur in \\\"$1\\\"\"\n  fi",
    "  # check if $1 is a string\n  if [[ \"$1\" != *[[:alpha:]]* ]]; then\n    echo \"Error: $1 is not a string\"\n    return 1\n  fi\n\n  # check if $2 is a string\n  if [[ \"$2\" != *[[:alpha:]]* ]]; then\n    echo \"Error: $2 is not a string\"\n    return 1\n  fi\n\n  # check if $2 is a substring of $1\n  if [[ \"$1\" != *\"$2\"* ]]; then\n    echo \"None\"\n    return 0\n  fi\n\n  # find the position of $2 in $1\n  local position=0\n  local substring_length=${#2}\n  local string_length=${#1}\n  local substring_count=0\n  local substring_position=0\n  local substring_positions=\"\"\n  while [ $position -lt $string_length ]; do\n    if [ \"${1:$position:$substring_length}\" == \"$2\" ]; then\n      substring_count=$((substring_count+1))\n      substring_position=$((position+1))\n      substring_positions=\"$substring_positions $substring_position\"\n      position=$((position+substring_length))\n    else\n      position=$((position+1))\n    fi\n  done\n\n  # print the result\n  echo \"$substring_count $substring_positions\"",
    "  if [[ $1 =~ $2 ]]; then\n    echo \"${BASH_REMATCH[0]}\"\n  else\n    echo \"None\"\n  fi",
    "    local string=\"$1\"\n    local substring=\"$2\"\n    local substring_length=${#substring}\n    local substring_occurance=0\n    local substring_position=0\n    local substring_positions=()\n    local substring_positions_string=\"\"\n\n    while [[ $string =~ $substring ]]; do\n        substring_occurance=$((substring_occurance+1))\n        substring_position=$((substring_position+${BASH_REMATCH[0]}))\n        substring_positions+=($substring_position)\n        string=\"${string:${BASH_REMATCH[0]}}\"\n    done\n\n    if [[ $substring_occurance -eq 0 ]]; then\n        echo \"None\"\n    else\n        substring_positions_string=$(printf \",%s\" \"${substring_positions[@]}\")\n        substring_positions_string=\"${substring_positions_string:1}\"\n        echo \"$substring_occurance:$substring_positions_string\"\n    fi",
    "  local string=\"$1\"\n  local substring=\"$2\"\n  local position=0\n  local count=0\n  while [[ \"${string:$position:${#substring}}\" == \"$substring\" ]]; do\n    ((position++))\n    ((count++))\n  done\n  if [[ $count -gt 0 ]]; then\n    echo \"$count $position\"\n  else\n    echo \"None\"\n  fi",
    "  if [[ $1 =~ $2 ]]; then\n    echo \"${BASH_REMATCH[0]} at ${BASH_REMATCH[1]}\"\n  else\n    echo \"None\"\n  fi",
    "  if [[ -z $1 || -z $2 ]]; then\n    echo \"Usage: $0 <string> <substring>\"\n    return 1\n  fi\n  local string=\"$1\"\n  local substring=\"$2\"\n  local string_length=${#string}\n  local substring_length=${#substring}\n  local string_index=0\n  local substring_index=0\n  local substring_start=0\n  local substring_end=0\n  local substring_occurance=0\n  local substring_position=0\n  local substring_position_list=()\n  while [[ $string_index -lt $string_length ]]; do\n    if [[ ${string:$string_index:1} == ${substring:$substring_index:1} ]]; then\n      if [[ $substring_index -eq 0 ]]; then\n        substring_start=$string_index\n      fi\n      substring_index=$((substring_index + 1))\n      if [[ $substring_index -eq $substring_length ]]; then\n        substring_end=$((string_index + 1))\n        substring_occurance=$((substring_occurance + 1))\n        substring_position_list+=($substring_start-$substring_end)\n        substring_index=0\n      fi\n    else\n      substring_index=0\n    fi\n    string_index=$((string_index + 1))\n  done\n  if [[ $substring_occurance -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo \"$substring_occurance: ${substring_position_list[@]}\"\n  fi",
    "  if [[ $1 =~ $2 ]]; then\n    echo \"Occurrence: ${BASH_REMATCH[0]}\"\n    echo \"Position: ${BASH_REMATCH[1]}\"\n  else\n    echo \"None\"\n  fi",
    "  local string=\"$1\"\n  local substring=\"$2\"\n  local position=0\n  local count=0\n  while [[ $string =~ $substring ]]; do\n    ((count++))\n    position=${BASH_REMATCH[0]}\n    string=${string#*$substring}\n  done\n  if [[ $count -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo \"$count $position\"\n  fi",
    "  local string=$1\n  local substring=$2\n  local index=0\n  local count=0\n  local result=\"\"\n\n  while [ $index -lt ${#string} ]; do\n    if [[ ${string:$index:${#substring}} == $substring ]]; then\n      result=\"$result $index\"\n      count=$((count + 1))\n    fi\n    index=$((index + 1))\n  done\n\n  if [ $count -eq 0 ]; then\n    echo \"None\"\n  else\n    echo $result\n  fi",
    "    if [[ $1 =~ $2 ]]; then\n        echo \"Substring found at index ${BASH_REMATCH[1]}\"\n    else\n        echo \"Substring not found\"\n    fi",
    "  if [[ $1 =~ $2 ]]; then\n    echo \"Match found at ${BASH_REMATCH[1]}\"\n  else\n    echo \"No match found\"\n  fi",
    "  local string=\"$1\"\n  local substring=\"$2\"\n  local index=0\n  local result=\"\"\n  while [[ \"${string:index:${#substring}}\" == \"$substring\" ]]; do\n    result=\"$result$index \"\n    index=$((index + ${#substring}))\n  done\n  if [[ -z \"$result\" ]]; then\n    echo \"None\"\n  else\n    echo \"$result\"\n  fi"
  ]
}
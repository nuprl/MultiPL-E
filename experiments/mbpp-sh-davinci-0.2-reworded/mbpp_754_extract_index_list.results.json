{
  "name": "mbpp_754_extract_index_list",
  "language": "sh",
  "prompt": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_754_extract_index_list.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpmbg54aqa.sh: line 13: [: too many arguments\\n/tmp/tmpmbg54aqa.sh: line 13: [: too many arguments\\n/tmp/tmpmbg54aqa.sh: line 13: [: too many arguments\\n/tmp/tmpmbg54aqa.sh: line 13: [: too many arguments\\n/tmp/tmpmbg54aqa.sh: line 13: [: too many arguments\\n/tmp/tmpmbg54aqa.sh: line 13: [: too many arguments\\n/tmp/tmpmbg54aqa.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local index=$1\n  shift\n  local list=$*\n  echo $list | cut -d ' ' -f $index\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'cut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=1\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpz01negcg.sh: line 13: [: too many arguments\\n/tmp/tmpz01negcg.sh: line 13: [: too many arguments\\n/tmp/tmpz01negcg.sh: line 13: [: too many arguments\\n/tmp/tmpz01negcg.sh: line 13: [: too many arguments\\n/tmp/tmpz01negcg.sh: line 13: [: too many arguments\\n/tmp/tmpz01negcg.sh: line 13: [: too many arguments\\n/tmp/tmpz01negcg.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=\"$1\"\n  local index=\"$2\"\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=\"$result $i\"\n    fi\n    index=$((index - 1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpqb6biasq.sh: line 12: [: too many arguments\\n/tmp/tmpqb6biasq.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  local i=1\n  for item in $list; do\n    if [ $i -eq $index ]; then\n      result=\"$result $item\"\n    fi\n    i=$((i+1))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp6k26sssr.sh: line 13: [: too many arguments\\n/tmp/tmp6k26sssr.sh: line 13: [: too many arguments\\n/tmp/tmp6k26sssr.sh: line 13: [: too many arguments\\n/tmp/tmp6k26sssr.sh: line 13: [: too many arguments\\n/tmp/tmp6k26sssr.sh: line 13: [: too many arguments\\n/tmp/tmp6k26sssr.sh: line 13: [: too many arguments\\n/tmp/tmp6k26sssr.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=\"$result $i\"\n    fi\n    index=$((index-1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp161u0xn4.sh: line 12: [: too many arguments\\n/tmp/tmp161u0xn4.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local -n list=$1\n    local -n index_list=$2\n    local -n result=$3\n    for index in ${index_list[@]}; do\n        result+=(${list[index]})\n    done\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpj7g95u38.sh: line 8: local: `1 1 3 4 5 6 7': invalid variable name for name reference\\n/tmp/tmpj7g95u38.sh: line 9: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n/tmp/tmpj7g95u38.sh: line 10: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=1\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        result=\"$result $(echo $i | cut -d' ' -f$index)\"\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"cut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local index=$1\n    shift\n    local list=$@\n    echo $list | cut -d' ' -f$index\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'cut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for element in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $element\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpzb5cazg_.sh: line 13: [: too many arguments\\n/tmp/tmpzb5cazg_.sh: line 13: [: too many arguments\\n/tmp/tmpzb5cazg_.sh: line 13: [: too many arguments\\n/tmp/tmpzb5cazg_.sh: line 13: [: too many arguments\\n/tmp/tmpzb5cazg_.sh: line 13: [: too many arguments\\n/tmp/tmpzb5cazg_.sh: line 13: [: too many arguments\\n/tmp/tmpzb5cazg_.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=1\n    for word in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $word\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpp9w8nr_y.sh: line 13: [: too many arguments\\n/tmp/tmpp9w8nr_y.sh: line 13: [: too many arguments\\n/tmp/tmpp9w8nr_y.sh: line 13: [: too many arguments\\n/tmp/tmpp9w8nr_y.sh: line 13: [: too many arguments\\n/tmp/tmpp9w8nr_y.sh: line 13: [: too many arguments\\n/tmp/tmpp9w8nr_y.sh: line 13: [: too many arguments\\n/tmp/tmpp9w8nr_y.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpjdxiy618.sh: line 12: [: too many arguments\\n/tmp/tmpjdxiy618.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for word in $list; do\n        if [ $index -eq 0 ]; then\n            result=$word\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpr01p37c5.sh: line 12: [: too many arguments\\n/tmp/tmpr01p37c5.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for item in $list; do\n        result=\"$result $(echo $item | cut -d' ' -f$index)\"\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"cut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=\"$result $i\"\n    fi\n    index=$((index-1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp161u0xn4.sh: line 12: [: too many arguments\\n/tmp/tmp161u0xn4.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local index=$1\n  shift\n  local list=$@\n  echo $list | cut -d ' ' -f $index\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'cut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        result=\"$result $(echo $i | cut -d ' ' -f $index)\"\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"cut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=''\n    for i in $list; do\n        result=\"$result $(echo $i | cut -d ' ' -f $index)\"\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"cut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=''\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpsiwz7df7.sh: line 12: [: too many arguments\\n/tmp/tmpsiwz7df7.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local -n list=$1\n    local -n indices=$2\n    local -n result=$3\n    for index in \"${indices[@]}\"; do\n        result+=(\"${list[$index]}\")\n    done\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpm7zahxmp.sh: line 8: local: `1 1 3 4 5 6 7': invalid variable name for name reference\\n/tmp/tmpm7zahxmp.sh: line 9: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n/tmp/tmpm7zahxmp.sh: line 10: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=()\n  local i=0\n  for item in $list; do\n    if [ $i -eq $index ]; then\n      result+=($item)\n    fi\n    i=$((i+1))\n  done\n  echo ${result[@]}\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp0enhxff8.sh: line 13: [: too many arguments\\n/tmp/tmp0enhxff8.sh: line 13: [: too many arguments\\n/tmp/tmp0enhxff8.sh: line 13: [: too many arguments\\n/tmp/tmp0enhxff8.sh: line 13: [: too many arguments\\n/tmp/tmp0enhxff8.sh: line 13: [: too many arguments\\n/tmp/tmp0enhxff8.sh: line 13: [: too many arguments\\n/tmp/tmp0enhxff8.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for item in $list; do\n        if [ $index -eq 0 ]; then\n            result=$item\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmppzvdygst.sh: line 12: [: too many arguments\\n/tmp/tmppzvdygst.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local index=$1\n    local list=$2\n    local result=\"\"\n    for i in $list; do\n        result=\"$result $(echo $i | cut -d ' ' -f $index)\"\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'cut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\ncut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\ncut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\ncut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\ncut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\ncut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\ncut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ \"$i\" -eq \"$index\" ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp4yd8ggp5.sh: line 13: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmp4yd8ggp5.sh: line 13: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmp4yd8ggp5.sh: line 13: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmp4yd8ggp5.sh: line 13: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmp4yd8ggp5.sh: line 13: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmp4yd8ggp5.sh: line 13: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmp4yd8ggp5.sh: line 13: [: 0 1 2 3 4 5 7: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=\"$1\"\n  local index=\"$2\"\n  local result=\"\"\n  local i=0\n  for item in $list; do\n    if [ $i -eq $index ]; then\n      result=\"$result $item\"\n    fi\n    i=$((i+1))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for word in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $word\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpuy9119me.sh: line 13: [: too many arguments\\n/tmp/tmpuy9119me.sh: line 13: [: too many arguments\\n/tmp/tmpuy9119me.sh: line 13: [: too many arguments\\n/tmp/tmpuy9119me.sh: line 13: [: too many arguments\\n/tmp/tmpuy9119me.sh: line 13: [: too many arguments\\n/tmp/tmpuy9119me.sh: line 13: [: too many arguments\\n/tmp/tmpuy9119me.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=\"$result $i\"\n    fi\n    index=$((index-1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp161u0xn4.sh: line 12: [: too many arguments\\n/tmp/tmp161u0xn4.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=\"$result $i\"\n    fi\n    index=$((index-1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp161u0xn4.sh: line 12: [: too many arguments\\n/tmp/tmp161u0xn4.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=''\n  for i in $list; do\n    result=\"$result $(echo $i | cut -d' ' -f$index)\"\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"cut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for i in $list; do\n        result=\"$result $(echo $i | cut -d' ' -f$index)\"\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"cut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=''\n    for item in $list; do\n        result=\"$result $(echo $item | cut -d ' ' -f $index)\"\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"cut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        result=\"$result $(echo $i | cut -d' ' -f$index)\"\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"cut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for item in $list; do\n        if [ \"$index\" -eq \"0\" ]; then\n            result=\"$result $item\"\n        fi\n        index=$((index - 1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpc7h3ds7z.sh: line 12: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmpc7h3ds7z.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for item in $list; do\n    if [ $index -eq 0 ]; then\n      result=$item\n      break\n    fi\n    index=$((index-1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp2aa00qrd.sh: line 12: [: too many arguments\\n/tmp/tmp2aa00qrd.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local index=$1\n  shift\n  local list=$*\n  echo $list | cut -d' ' -f$index\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'cut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local index=$1\n  local list=$2\n  local result=\"\"\n  for i in $(seq 1 $index); do\n    result=\"$result $(echo $list | cut -d \" \" -f $i)\"\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"seq: extra operand \\xe2\\x80\\x983\\xe2\\x80\\x99\\nTry 'seq --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local indexes=$2\n    local result=\"\"\n    for index in $indexes; do\n        result=\"$result $(echo $list | cut -d' ' -f$index)\"\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"cut: fields are numbered from 1\\nTry 'cut --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=$i\n      break\n    fi\n    index=$((index-1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp00snv7kr.sh: line 12: [: too many arguments\\n/tmp/tmp00snv7kr.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=$i\n      break\n    fi\n    index=$((index-1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp00snv7kr.sh: line 12: [: too many arguments\\n/tmp/tmp00snv7kr.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=1\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=$item\n            break\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmplkrwz72y.sh: line 13: [: too many arguments\\n/tmp/tmplkrwz72y.sh: line 13: [: too many arguments\\n/tmp/tmplkrwz72y.sh: line 13: [: too many arguments\\n/tmp/tmplkrwz72y.sh: line 13: [: too many arguments\\n/tmp/tmplkrwz72y.sh: line 13: [: too many arguments\\n/tmp/tmplkrwz72y.sh: line 13: [: too many arguments\\n/tmp/tmplkrwz72y.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local new_list=()\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            new_list+=($item)\n        fi\n        i=$((i + 1))\n    done\n    echo \"${new_list[@]}\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpfdi3by2t.sh: line 13: [: too many arguments\\n/tmp/tmpfdi3by2t.sh: line 13: [: too many arguments\\n/tmp/tmpfdi3by2t.sh: line 13: [: too many arguments\\n/tmp/tmpfdi3by2t.sh: line 13: [: too many arguments\\n/tmp/tmpfdi3by2t.sh: line 13: [: too many arguments\\n/tmp/tmpfdi3by2t.sh: line 13: [: too many arguments\\n/tmp/tmpfdi3by2t.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local index=$1\n    shift\n    local list=$*\n    echo $list | cut -d' ' -f$index\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'cut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=1\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=$item\n            break\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmplkrwz72y.sh: line 13: [: too many arguments\\n/tmp/tmplkrwz72y.sh: line 13: [: too many arguments\\n/tmp/tmplkrwz72y.sh: line 13: [: too many arguments\\n/tmp/tmplkrwz72y.sh: line 13: [: too many arguments\\n/tmp/tmplkrwz72y.sh: line 13: [: too many arguments\\n/tmp/tmplkrwz72y.sh: line 13: [: too many arguments\\n/tmp/tmplkrwz72y.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for i in $list; do\n        if [ \"$index\" -eq 0 ]; then\n            result=\"$i\"\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpv5wbskqm.sh: line 12: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmpv5wbskqm.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=1\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpz01negcg.sh: line 13: [: too many arguments\\n/tmp/tmpz01negcg.sh: line 13: [: too many arguments\\n/tmp/tmpz01negcg.sh: line 13: [: too many arguments\\n/tmp/tmpz01negcg.sh: line 13: [: too many arguments\\n/tmp/tmpz01negcg.sh: line 13: [: too many arguments\\n/tmp/tmpz01negcg.sh: line 13: [: too many arguments\\n/tmp/tmpz01negcg.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=1\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpk8a6fr8h.sh: line 13: [: too many arguments\\n/tmp/tmpk8a6fr8h.sh: line 13: [: too many arguments\\n/tmp/tmpk8a6fr8h.sh: line 13: [: too many arguments\\n/tmp/tmpk8a6fr8h.sh: line 13: [: too many arguments\\n/tmp/tmpk8a6fr8h.sh: line 13: [: too many arguments\\n/tmp/tmpk8a6fr8h.sh: line 13: [: too many arguments\\n/tmp/tmpk8a6fr8h.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for i in $list; do\n        if [ \"$index\" -eq \"0\" ]; then\n            result=\"$result $i\"\n        fi\n        index=$((index-1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp4j8pge3j.sh: line 12: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmp4j8pge3j.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$(($index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpbs_7r_yk.sh: line 12: [: too many arguments\\n/tmp/tmpbs_7r_yk.sh: line 16: 0 1 2 3 4 5 7-1: syntax error in expression (error token is \"1 2 3 4 5 7-1\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local -n list=$1\n  local -n index_list=$2\n  local -n result=$3\n  result=()\n  for i in ${index_list[@]}; do\n    result+=(${list[$i]})\n  done\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpb5a_4kw_.sh: line 8: local: `1 1 3 4 5 6 7': invalid variable name for name reference\\n/tmp/tmpb5a_4kw_.sh: line 9: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n/tmp/tmpb5a_4kw_.sh: line 10: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n        index=$((index-1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp0p7zp0f1.sh: line 12: [: too many arguments\\n/tmp/tmp0p7zp0f1.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=\"$1\"\n  local index=\"$2\"\n  local result=\"\"\n  for i in $list; do\n    if [ \"$index\" -eq 0 ]; then\n      result=\"$result $i\"\n    fi\n    index=$((index - 1))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcqgtamt0.sh: line 12: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmpcqgtamt0.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local -n list=$1\n    local -n indexes=$2\n    local -n result=$3\n    for index in ${indexes[@]}; do\n        result+=(${list[$index]})\n    done\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpbk8vv7kw.sh: line 8: local: `1 1 3 4 5 6 7': invalid variable name for name reference\\n/tmp/tmpbk8vv7kw.sh: line 9: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n/tmp/tmpbk8vv7kw.sh: line 10: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=$i\n      break\n    fi\n    index=$((index - 1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpu7563vin.sh: line 12: [: too many arguments\\n/tmp/tmpu7563vin.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for i in $list; do\n        if [ \"$index\" -eq \"0\" ]; then\n            result=\"$i\"\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpx6ze5r82.sh: line 12: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmpx6ze5r82.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=()\n  for i in $list; do\n    result+=($i)\n  done\n  echo ${result[$index]}\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph7xat8mj.sh: line 14: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpjdxiy618.sh: line 12: [: too many arguments\\n/tmp/tmpjdxiy618.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for word in $list; do\n    if [ \"$index\" -eq 0 ]; then\n      result=\"$result $word\"\n    fi\n    index=$((index-1))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpzvpro3ll.sh: line 12: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmpzvpro3ll.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  local i=0\n  for item in $list; do\n    if [ $i -eq $index ]; then\n      result=\"$result $item\"\n    fi\n    i=$((i+1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local indexes=$2\n    local result=\"\"\n    for index in $indexes; do\n        result=\"$result $(echo $list | cut -d ' ' -f $index)\"\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"cut: fields are numbered from 1\\nTry 'cut --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n        index=$((index-1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpyuhg91_o.sh: line 12: [: too many arguments\\n/tmp/tmpyuhg91_o.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ \"$index\" -eq \"0\" ]; then\n            result=\"$result $i\"\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp3e5_94oh.sh: line 12: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmp3e5_94oh.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpgx3k7dw6.sh: line 12: [: too many arguments\\n/tmp/tmpgx3k7dw6.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n        index=$((index-1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp0p7zp0f1.sh: line 12: [: too many arguments\\n/tmp/tmp0p7zp0f1.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local -a list=()\n    local -a list1=($1)\n    local -a list2=($2)\n    local -a list3=($3)\n    for i in \"${!list1[@]}\"; do\n        if [[ \"${list1[$i]}\" == \"${list2[$i]}\" && \"${list1[$i]}\" == \"${list3[$i]}\" ]]; then\n            list+=(${list1[$i]})\n        fi\n    done\n    echo \"${list[@]}\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for i in $list; do\n        if [ \"$index\" -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n        index=$((index-1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpy8ja6n6i.sh: line 12: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmpy8ja6n6i.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for item in $list; do\n        result=\"$result $(echo $item | cut -d ' ' -f $index)\"\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"cut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local index=$1\n    shift\n    local list=$*\n    echo $list | cut -d' ' -f$index\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'cut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=\"$1\"\n  local index=\"$2\"\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=\"$result $i\"\n    fi\n    index=$((index-1))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpqz5ywl75.sh: line 12: [: too many arguments\\n/tmp/tmpqz5ywl75.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=$i\n      break\n    fi\n    index=$((index-1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp00snv7kr.sh: line 12: [: too many arguments\\n/tmp/tmp00snv7kr.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for word in $list; do\n        if [ $index -eq 0 ]; then\n            result=$word\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcvwstv9v.sh: line 12: [: too many arguments\\n/tmp/tmpcvwstv9v.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local index=$1\n    shift\n    local list=$*\n    echo $list | cut -d ' ' -f $index\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'cut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for word in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $word\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpni15cvc4.sh: line 13: [: too many arguments\\n/tmp/tmpni15cvc4.sh: line 13: [: too many arguments\\n/tmp/tmpni15cvc4.sh: line 13: [: too many arguments\\n/tmp/tmpni15cvc4.sh: line 13: [: too many arguments\\n/tmp/tmpni15cvc4.sh: line 13: [: too many arguments\\n/tmp/tmpni15cvc4.sh: line 13: [: too many arguments\\n/tmp/tmpni15cvc4.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=()\n    for i in $list; do\n        result+=($i)\n    done\n    echo ${result[$index]}\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp936wxb9d.sh: line 14: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local index=$1\n    shift\n    local list=$@\n    echo $list | cut -d ' ' -f $index\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'cut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpmbg54aqa.sh: line 13: [: too many arguments\\n/tmp/tmpmbg54aqa.sh: line 13: [: too many arguments\\n/tmp/tmpmbg54aqa.sh: line 13: [: too many arguments\\n/tmp/tmpmbg54aqa.sh: line 13: [: too many arguments\\n/tmp/tmpmbg54aqa.sh: line 13: [: too many arguments\\n/tmp/tmpmbg54aqa.sh: line 13: [: too many arguments\\n/tmp/tmpmbg54aqa.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpgx3k7dw6.sh: line 12: [: too many arguments\\n/tmp/tmpgx3k7dw6.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=()\n    for i in $list; do\n        result+=($i)\n    done\n    echo ${result[$index]}\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp936wxb9d.sh: line 14: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local -n list=$1\n    local -n indexes=$2\n    local -n result=$3\n    for index in ${indexes[@]}; do\n        result+=(${list[$index]})\n    done\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpbk8vv7kw.sh: line 8: local: `1 1 3 4 5 6 7': invalid variable name for name reference\\n/tmp/tmpbk8vv7kw.sh: line 9: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n/tmp/tmpbk8vv7kw.sh: line 10: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=$i\n      break\n    fi\n    index=$((index - 1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpu7563vin.sh: line 12: [: too many arguments\\n/tmp/tmpu7563vin.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  local i=0\n  for item in $list; do\n    if [ $i -eq $index ]; then\n      result=\"$result $item\"\n    fi\n    i=$((i+1))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpwvk655ee.sh: line 13: [: too many arguments\\n/tmp/tmpwvk655ee.sh: line 13: [: too many arguments\\n/tmp/tmpwvk655ee.sh: line 13: [: too many arguments\\n/tmp/tmpwvk655ee.sh: line 13: [: too many arguments\\n/tmp/tmpwvk655ee.sh: line 13: [: too many arguments\\n/tmp/tmpwvk655ee.sh: line 13: [: too many arguments\\n/tmp/tmpwvk655ee.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp6geo11m_.sh: line 12: [: too many arguments\\n/tmp/tmp6geo11m_.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n        index=$((index - 1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp24lp0hen.sh: line 12: [: too many arguments\\n/tmp/tmp24lp0hen.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=$i\n      break\n    fi\n    index=$((index - 1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpu7563vin.sh: line 12: [: too many arguments\\n/tmp/tmpu7563vin.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  local i=0\n  for item in $list; do\n    if [ $i -eq $index ]; then\n      result=\"$result $item\"\n    fi\n    i=$((i+1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=$item\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpafdyii_q.sh: line 13: [: too many arguments\\n/tmp/tmpafdyii_q.sh: line 13: [: too many arguments\\n/tmp/tmpafdyii_q.sh: line 13: [: too many arguments\\n/tmp/tmpafdyii_q.sh: line 13: [: too many arguments\\n/tmp/tmpafdyii_q.sh: line 13: [: too many arguments\\n/tmp/tmpafdyii_q.sh: line 13: [: too many arguments\\n/tmp/tmpafdyii_q.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for element in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $element\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpzb5cazg_.sh: line 13: [: too many arguments\\n/tmp/tmpzb5cazg_.sh: line 13: [: too many arguments\\n/tmp/tmpzb5cazg_.sh: line 13: [: too many arguments\\n/tmp/tmpzb5cazg_.sh: line 13: [: too many arguments\\n/tmp/tmpzb5cazg_.sh: line 13: [: too many arguments\\n/tmp/tmpzb5cazg_.sh: line 13: [: too many arguments\\n/tmp/tmpzb5cazg_.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local -n list=$1\n    local -n index_list=$2\n    local -n result=$3\n    for i in ${index_list[@]}; do\n        result+=(${list[$i]})\n    done\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpv268984m.sh: line 8: local: `1 1 3 4 5 6 7': invalid variable name for name reference\\n/tmp/tmpv268984m.sh: line 9: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n/tmp/tmpv268984m.sh: line 10: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=\"$1\"\n  local index=\"$2\"\n  local result=\"\"\n  local i=0\n  for item in $list; do\n    if [ $i -eq $index ]; then\n      result=\"$result $item\"\n    fi\n    i=$((i+1))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for i in $list; do\n        result=\"$result $(echo $i | cut -d' ' -f$index)\"\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"cut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local -n list=$1\n    local -n index_list=$2\n    local -n result=$3\n    local index\n    local element\n    for index in ${index_list[@]}; do\n        element=${list[$index]}\n        result+=($element)\n    done\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpckb1_4vh.sh: line 8: local: `1 1 3 4 5 6 7': invalid variable name for name reference\\n/tmp/tmpckb1_4vh.sh: line 9: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n/tmp/tmpckb1_4vh.sh: line 10: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=\"$result $i\"\n    fi\n    index=$((index-1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp161u0xn4.sh: line 12: [: too many arguments\\n/tmp/tmp161u0xn4.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  local i=1\n  for item in $list; do\n    if [ $i -eq $index ]; then\n      result=\"$result $item\"\n    fi\n    i=$((i+1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp2ch9wm7p.sh: line 13: [: too many arguments\\n/tmp/tmp2ch9wm7p.sh: line 13: [: too many arguments\\n/tmp/tmp2ch9wm7p.sh: line 13: [: too many arguments\\n/tmp/tmp2ch9wm7p.sh: line 13: [: too many arguments\\n/tmp/tmp2ch9wm7p.sh: line 13: [: too many arguments\\n/tmp/tmp2ch9wm7p.sh: line 13: [: too many arguments\\n/tmp/tmp2ch9wm7p.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local -n list=$1\n    local -n index_list=$2\n    local -n result=$3\n    local index\n    local value\n    for index in ${index_list[@]}; do\n        value=${list[index]}\n        result+=($value)\n    done\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp0sr9sm3w.sh: line 8: local: `1 1 3 4 5 6 7': invalid variable name for name reference\\n/tmp/tmp0sr9sm3w.sh: line 9: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n/tmp/tmp0sr9sm3w.sh: line 10: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=()\n  for i in $list; do\n    result+=(\"$i\")\n  done\n  echo ${result[$index]}\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpp14b0icn.sh: line 14: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  local i=0\n  for item in $list; do\n    if [ $i -eq $index ]; then\n      result=$item\n    fi\n    i=$((i+1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpbmop9r0g.sh: line 13: [: too many arguments\\n/tmp/tmpbmop9r0g.sh: line 13: [: too many arguments\\n/tmp/tmpbmop9r0g.sh: line 13: [: too many arguments\\n/tmp/tmpbmop9r0g.sh: line 13: [: too many arguments\\n/tmp/tmpbmop9r0g.sh: line 13: [: too many arguments\\n/tmp/tmpbmop9r0g.sh: line 13: [: too many arguments\\n/tmp/tmpbmop9r0g.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=()\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result+=($item)\n        fi\n        i=$((i+1))\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpt6ujyjmq.sh: line 13: [: too many arguments\\n/tmp/tmpt6ujyjmq.sh: line 13: [: too many arguments\\n/tmp/tmpt6ujyjmq.sh: line 13: [: too many arguments\\n/tmp/tmpt6ujyjmq.sh: line 13: [: too many arguments\\n/tmp/tmpt6ujyjmq.sh: line 13: [: too many arguments\\n/tmp/tmpt6ujyjmq.sh: line 13: [: too many arguments\\n/tmp/tmpt6ujyjmq.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=1\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local -n list=$1\n  local -n indexes=$2\n  local -n result=$3\n  result=()\n  for i in ${indexes[@]}; do\n    result+=(${list[$i]})\n  done\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpm132f2ni.sh: line 8: local: `1 1 3 4 5 6 7': invalid variable name for name reference\\n/tmp/tmpm132f2ni.sh: line 9: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n/tmp/tmpm132f2ni.sh: line 10: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for item in $list; do\n        if [ \"$index\" -eq 0 ]; then\n            result=\"$result $item\"\n        fi\n        index=$((index - 1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp0vwh_3ts.sh: line 12: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmp0vwh_3ts.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=()\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result+=($item)\n        fi\n        i=$((i+1))\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpt6ujyjmq.sh: line 13: [: too many arguments\\n/tmp/tmpt6ujyjmq.sh: line 13: [: too many arguments\\n/tmp/tmpt6ujyjmq.sh: line 13: [: too many arguments\\n/tmp/tmpt6ujyjmq.sh: line 13: [: too many arguments\\n/tmp/tmpt6ujyjmq.sh: line 13: [: too many arguments\\n/tmp/tmpt6ujyjmq.sh: line 13: [: too many arguments\\n/tmp/tmpt6ujyjmq.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=$i\n      break\n    fi\n    index=$((index-1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp00snv7kr.sh: line 12: [: too many arguments\\n/tmp/tmp00snv7kr.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $(seq 1 $index); do\n        result=\"$result $(echo $list | cut -d' ' -f$i)\"\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"seq: extra operand \\xe2\\x80\\x982\\xe2\\x80\\x99\\nTry 'seq --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for word in $list; do\n        if [ $index -eq 0 ]; then\n            result=$word\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcvwstv9v.sh: line 12: [: too many arguments\\n/tmp/tmpcvwstv9v.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=\"$i\"\n      break\n    fi\n    index=$((index-1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpzhj6m7o4.sh: line 12: [: too many arguments\\n/tmp/tmpzhj6m7o4.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n/tmp/tmp38axm6bm.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for i in $list; do\n        local j=$(($index + 1))\n        if [ $j -eq $i ]; then\n            result=\"$result $i\"\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp1j7x9lp1.sh: line 12: 0 1 2 3 4 5 7 + 1: syntax error in expression (error token is \"1 2 3 4 5 7 + 1\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  local i=0\n  for item in $list; do\n    if [ $i -eq $index ]; then\n      result=\"$result $item\"\n    fi\n    i=$((i+1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n/tmp/tmp02psw6rn.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=()\n  for i in $list; do\n    result+=($i)\n  done\n  echo ${result[$index]}\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph7xat8mj.sh: line 14: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for item in $list; do\n        if [ \"$index\" -eq 0 ]; then\n            result=\"$item\"\n            break\n        fi\n        index=$((index-1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpqittnf4y.sh: line 12: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmpqittnf4y.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=$i\n      break\n    fi\n    index=$((index - 1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpu7563vin.sh: line 12: [: too many arguments\\n/tmp/tmpu7563vin.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  for i in $list; do\n    if [ $index -eq 0 ]; then\n      result=$i\n      break\n    fi\n    index=$((index - 1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpu7563vin.sh: line 12: [: too many arguments\\n/tmp/tmpu7563vin.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for i in $list; do\n        if [ \"$index\" -eq 0 ]; then\n            result=\"$i\"\n            break\n        fi\n        index=$((index-1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpzzbjelgr.sh: line 12: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmpzzbjelgr.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  echo \"$list\" | cut -d ' ' -f $index\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"cut: fields are numbered from 1\\nTry 'cut --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n/tmp/tmpcx72yc1s.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=''\n  local i=0\n  for item in $list; do\n    if [ $i -eq $index ]; then\n      result=\"$result $item\"\n    fi\n    i=$((i+1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp258g2ig1.sh: line 13: [: too many arguments\\n/tmp/tmp258g2ig1.sh: line 13: [: too many arguments\\n/tmp/tmp258g2ig1.sh: line 13: [: too many arguments\\n/tmp/tmp258g2ig1.sh: line 13: [: too many arguments\\n/tmp/tmp258g2ig1.sh: line 13: [: too many arguments\\n/tmp/tmp258g2ig1.sh: line 13: [: too many arguments\\n/tmp/tmp258g2ig1.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local index=$1\n    shift\n    local list=$@\n    echo $list | cut -d ' ' -f $index\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'cut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local -n list=$1\n  local -n index_list=$2\n  local -n output_list=$3\n  for i in ${index_list[@]}; do\n    output_list+=(${list[$i]})\n  done\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpn_oxvu5r.sh: line 8: local: `1 1 3 4 5 6 7': invalid variable name for name reference\\n/tmp/tmpn_oxvu5r.sh: line 9: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n/tmp/tmpn_oxvu5r.sh: line 10: local: `0 1 2 3 4 5 7': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=1\n    for element in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $element\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpw6ersn_r.sh: line 13: [: too many arguments\\n/tmp/tmpw6ersn_r.sh: line 13: [: too many arguments\\n/tmp/tmpw6ersn_r.sh: line 13: [: too many arguments\\n/tmp/tmpw6ersn_r.sh: line 13: [: too many arguments\\n/tmp/tmpw6ersn_r.sh: line 13: [: too many arguments\\n/tmp/tmpw6ersn_r.sh: line 13: [: too many arguments\\n/tmp/tmpw6ersn_r.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    for i in $list; do\n        if [ \"$index\" -eq \"0\" ]; then\n            result=\"$result $i\"\n        fi\n        index=$((index-1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp4j8pge3j.sh: line 12: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmp4j8pge3j.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local index=$1\n    shift\n    local list=$@\n    echo $list | cut -d ' ' -f $index\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'cut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local index=$1\n    shift\n    local list=$*\n    echo $list | cut -d ' ' -f $index\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'cut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local index=$1\n    shift\n    local list=$*\n    echo $list | cut -d' ' -f$index\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'cut: 3: No such file or directory\\ncut: 4: No such file or directory\\ncut: 5: No such file or directory\\ncut: 6: No such file or directory\\ncut: 7: No such file or directory\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=\"$result $i\"\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp2oxjiq8a.sh: line 12: [: too many arguments\\n/tmp/tmp2oxjiq8a.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=\"$1\"\n  local index=\"$2\"\n  local result=\"\"\n  for element in $list; do\n    if [ \"$index\" -eq 0 ]; then\n      result=\"$element\"\n      break\n    fi\n    index=$((index - 1))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph8am4a0a.sh: line 12: [: 0 1 2 3 4 5 7: integer expression expected\\n/tmp/tmph8am4a0a.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        else\n            index=$((index-1))\n        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp0d1hgwaf.sh: line 12: [: too many arguments\\n/tmp/tmp0d1hgwaf.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=\"$result $i\"\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpjdxiy618.sh: line 12: [: too many arguments\\n/tmp/tmpjdxiy618.sh: line 15: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=\"$1\"\n  local index=\"$2\"\n  local result=\"\"\n  local i=0\n  for item in $list; do\n    if [ $i -eq $index ]; then\n      result=\"$result $item\"\n    fi\n    i=$((i+1))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n/tmp/tmpt12r8sm9.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxvw7my5l.sh: line 12: [: too many arguments\\n/tmp/tmpxvw7my5l.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  local i=0\n  for item in $list; do\n    if [ $i -eq $index ]; then\n      result=\"$result $item\"\n    fi\n    i=$(($i+1))\n  done\n  echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpnns2q972.sh: line 13: [: too many arguments\\n/tmp/tmpnns2q972.sh: line 13: [: too many arguments\\n/tmp/tmpnns2q972.sh: line 13: [: too many arguments\\n/tmp/tmpnns2q972.sh: line 13: [: too many arguments\\n/tmp/tmpnns2q972.sh: line 13: [: too many arguments\\n/tmp/tmpnns2q972.sh: line 13: [: too many arguments\\n/tmp/tmpnns2q972.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=1\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpk8a6fr8h.sh: line 13: [: too many arguments\\n/tmp/tmpk8a6fr8h.sh: line 13: [: too many arguments\\n/tmp/tmpk8a6fr8h.sh: line 13: [: too many arguments\\n/tmp/tmpk8a6fr8h.sh: line 13: [: too many arguments\\n/tmp/tmpk8a6fr8h.sh: line 13: [: too many arguments\\n/tmp/tmpk8a6fr8h.sh: line 13: [: too many arguments\\n/tmp/tmpk8a6fr8h.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        result=\"$result $(echo $i | cut -d' ' -f$index)\"\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b\"cut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\ncut: fields are numbered from 1\\nTry 'cut --help' for more information.\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=\"$1\"\n    local index=\"$2\"\n    local result=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n/tmp/tmpzzh9nut5.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=()\n    for i in $list; do\n        result+=($i)\n    done\n    echo ${result[$index]}\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp936wxb9d.sh: line 14: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n  local list=$1\n  local index=$2\n  local result=\"\"\n  local i=0\n  for item in $list; do\n    if [ $i -eq $index ]; then\n      result=\"$result $item\"\n    fi\n    i=$((i+1))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpwvk655ee.sh: line 13: [: too many arguments\\n/tmp/tmpwvk655ee.sh: line 13: [: too many arguments\\n/tmp/tmpwvk655ee.sh: line 13: [: too many arguments\\n/tmp/tmpwvk655ee.sh: line 13: [: too many arguments\\n/tmp/tmpwvk655ee.sh: line 13: [: too many arguments\\n/tmp/tmpwvk655ee.sh: line 13: [: too many arguments\\n/tmp/tmpwvk655ee.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    local i=1\n    for item in $list; do\n        if [ $i -eq $index ]; then\n            result=\"$result $item\"\n        fi\n        i=$((i+1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n/tmp/tmpp308bdq6.sh: line 13: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=\"\"\n    for i in $list; do\n        if [ $index -eq 0 ]; then\n            result=$i\n            break\n        fi\n        index=$((index - 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmph47douod.sh: line 12: [: too many arguments\\n/tmp/tmph47douod.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is a space-separated list\nextract_index_list() {\n    local list=$1\n    local index=$2\n    local result=''\n    for item in $list; do\n        if [ $index -eq 0 ]; then\n            result=$item\n            break\n        fi\n        index=$((index-1))\n    done\n    echo $result\n}\n\ncandidate() {\n    extract_index_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 7\" ]]\n    [[ $(candidate \"1 1 3 4 5 6 7\" \"0 1 2 3 4 6 5\" \"0 1 2 3 4 6 7\") = \"1 6\" ]]\n    [[ $(candidate \"1 1 3 4 6 5 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"1 5\" ]]\n    [[ $(candidate \"1 2 3 4 6 6 6\" \"0 1 2 3 4 5 7\" \"0 1 2 3 4 5 7\") = \"\" ]]\n}\n\nrun_test",
      "timestamp": 1667191341,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpqk8c2k01.sh: line 12: [: too many arguments\\n/tmp/tmpqk8c2k01.sh: line 16: 0 1 2 3 4 5 7: syntax error in expression (error token is \"1 2 3 4 5 7\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_739_find_Index",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/\n#\n# $1 is an integer\nfind_Index() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_739_find_Index.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    find_Index \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"4\" ]]\n    [[ $(candidate \"3\") = \"14\" ]]\n    [[ $(candidate \"4\") = \"45\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    local i=1\n    local t=0\n    while [ ${#t} -lt $n ]; do\n        t=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=0\n    local num=0\n    local index=0\n    while [ $num -lt $n ]\n    do\n        let i++\n        let index+=i\n        num=${#index}\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [ ${#sum} -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$(( i + 1 ))\n    done",
    "    local n=$1\n    local i=1\n    local j=1\n    local t=0\n    while [ ${#t} -lt $n ]\n    do\n        t=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal t=0\n\twhile [ ${#t} -ne $n ]; do\n\t\tt=$(($i * ($i + 1) / 2))\n\t\ti=$(($i + 1))\n\tdone\n\techo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**(n-1))) -gt $sum ]\n    do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal triangle=0\n\twhile [ ${#triangle} -lt $n ]\n\tdo\n\t\ttriangle=$((i*(i+1)/2))\n\t\ti=$((i+1))\n\tdone\n\techo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        ((i++))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        (( i++ ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=0\n    local sum=0\n    while true; do\n        let i++\n        let sum+=i\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(( $i*($i+1)/2 ))\n        (( i++ ))\n    done\n    echo $(( $i-1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( i + 1 ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local tri=0\n    local len=0\n    while [ $len -lt $n ]\n    do\n        tri=$((i*(i+1)/2))\n        len=${#tri}\n        ((i++))\n    done\n    echo $((i-1))",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal j=1\n\tlocal sum=0\n\twhile [ ${#sum} -lt $n ]\n\tdo\n\t\tsum=$((i*(i+1)/2))\n\t\ti=$((i+1))\n\t\tj=$((j+1))\n\tdone\n\techo $j",
    "    local n=$1\n    local i=1\n    local index=1\n    local triangular=0\n    local digits=0\n    while [ $digits -ne $n ]; do\n        triangular=$(( $i * ($i + 1) / 2 ))\n        digits=$(echo $triangular | wc -c)\n        i=$(( $i + 1 ))\n        index=$(( $index + 1 ))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local triangular_number=1\n    while [ ${#triangular_number} -lt $n ]; do\n        ((i++))\n        ((triangular_number+=i))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(($i*($i+1)/2))\n        i=$(($i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        let sum=i*(i+1)/2\n        let i++\n        let index++\n    done\n    echo $index",
    "  local n=$1\n  local i=1\n  local t=1\n  local len=0\n  while [ $len -lt $n ]; do\n    i=$((i+1))\n    t=$((t+i))\n    len=${#t}\n  done\n  echo $i",
    "    local n=$1\n    local index=1\n    local triangular_number=1\n    while [ ${#triangular_number} -lt $n ]; do\n        index=$((index+1))\n        triangular_number=$((triangular_number+index))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local j=1\n    local num=0\n    while [ ${#num} -lt $n ]; do\n        num=$((i*(i+1)/2))\n        i=$((i+1))\n        j=$((j+1))\n    done\n    echo $j",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((sum+i))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal sum=0\n\twhile true; do\n\t\tsum=$((i*(i+1)/2))\n\t\tif [ ${#sum} -eq $n ]; then\n\t\t\techo $i\n\t\t\tbreak\n\t\tfi\n\t\ti=$((i+1))\n\tdone",
    "    local n=$1\n    local i=1\n    local j=1\n    local num=0\n    while [ ${#num} -lt $n ]\n    do\n        num=$(($i*($i+1)/2))\n        i=$(($i+1))\n    done\n    echo $j",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if ((${#sum} == n)); then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    while [ $sum -lt $n ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo \"$((i-1))\"",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal t=0\n\twhile [ ${#t} -lt $n ]; do\n\t\tt=$((i*(i+1)/2))\n\t\ti=$((i+1))\n\tdone\n\techo $((i-1))",
    "  local n=$1\n  local i=1\n  local j=1\n  local sum=0\n  while [ ${#sum} -ne $n ]\n  do\n    sum=$((i*(i+1)/2))\n    i=$((i+1))\n  done\n  echo $((i-1))",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal sum=0\n\twhile true; do\n\t\tsum=$(( $i * ($i + 1) / 2 ))\n\t\tif (( ${#sum} == $n )); then\n\t\t\techo $i\n\t\t\tbreak\n\t\tfi\n\t\t(( i++ ))\n\tdone",
    "    local number=$1\n    local index=1\n    local triangular=1\n    while [ ${#triangular} -lt $number ]; do\n        index=$((index + 1))\n        triangular=$((triangular + index))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((sum+i))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [[ ${#sum} -lt $n ]]; do\n        sum=$(( $i * ( $i + 1 ) / 2 ))\n        (( i++ ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local num=1\n    while [ ${#num} -ne $n ]\n    do\n        num=$(($i*($i+1)/2))\n        i=$(($i+1))\n    done\n    echo $i",
    "    if [ $1 -le 0 ]\n    then\n        echo \"Invalid input\"\n    else\n        n=$1\n        index=1\n        triangular_number=1\n        while [ $n -gt 0 ]\n        do\n            n=$((n-1))\n            index=$((index+1))\n            triangular_number=$((triangular_number+index))\n        done\n        echo $index\n    fi",
    "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$(( $i + 1 ))\n    done",
    "    local n=$1\n    local i=1\n    local t=1\n    while [ ${#t} -lt $n ]; do\n        i=$((i+1))\n        t=$((t+i))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        index=$(( $index + 1 ))\n        i=$(( $i + 1 ))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(($i*($i+1)/2))\n        i=$(($i+1))\n    done\n    echo $i",
    "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    if [ $1 -le 0 ]; then\n        echo \"Invalid Input\"\n        return\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"1\"\n        return\n    fi\n    local index=1\n    local triangular_number=1\n    while [ ${#triangular_number} -lt $1 ]; do\n        index=$((index+1))\n        triangular_number=$((triangular_number+index))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**$n)) -gt $sum ]; do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal t=1\n\twhile [ ${#t} -lt $n ]\n\tdo\n\t\ti=$((i+1))\n\t\tt=$((i*(i+1)/2))\n\tdone\n\techo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(($i * ($i + 1) / 2))\n        i=$(($i + 1))\n    done\n    echo $((i - 1))",
    "    if [ $1 -eq 0 ]; then\n        echo \"0\"\n    else\n        local i=1\n        local j=1\n        local k=0\n        while [ $k -lt $1 ]; do\n            j=$(( $j + $i ))\n            i=$(( $i + 1 ))\n            k=$(echo $j | wc -c)\n        done\n        echo $(( $i - 1 ))\n    fi",
    "    local n=$1\n    local i=1\n    local t=1\n    while [ ${#t} -ne $n ]\n    do\n        i=$((i+1))\n        t=$((i*(i+1)/2))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        index=$i\n        i=$(( $i + 1 ))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**n)) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local t=1\n    local len=0\n    while [ $len -lt $n ]\n    do\n        t=$(( $i * ($i + 1) / 2 ))\n        len=${#t}\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -ne $n ]\n    do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "  local n=$1\n  local i=1\n  local t=1\n  local len=1\n  while [ $len -lt $n ]; do\n    i=$((i+1))\n    t=$((t+i))\n    len=${#t}\n  done\n  echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(( $i*($i+1)/2 ))\n        (( i++ ))\n    done\n    echo $(( i-1 ))",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$((i+j))\n        index=$((index+1))\n        j=$i\n        i=$sum\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local j=1\n    local tri=0\n    local digits=0\n    while [ $digits -lt $n ]\n    do\n        tri=$(( $i * ($i + 1) / 2 ))\n        digits=$(echo $tri | wc -c)\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local triangular_number=0\n    local count=0\n    while [ ${#triangular_number} -ne $n ]\n    do\n        triangular_number=$((i*(i+1)/2))\n        i=$((i+1))\n        count=$((count+1))\n    done\n    echo $count",
    "    local n=$1\n    local i=1\n    local triangular=0\n    local digits=0\n    while [ $digits -lt $n ]\n    do\n        triangular=$(( $i * ($i + 1) / 2 ))\n        digits=${#triangular}\n        (( i++ ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    while [ $((10**(n-1))) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        index=$i\n        i=$(( $i + 1 ))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    while [ ${#sum} -ne $n ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [ ${#sum} -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        ((i++))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -ne $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        (( i++ ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [ ${#sum} -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**n)) -gt $sum ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        (( i++ ))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local t=0\n    while [ $(echo \"$t < 10^$n\" | bc) -eq 1 ]; do\n        t=$(echo \"scale=0; $i*($i+1)/2\" | bc)\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal sum=0\n\twhile [ $(( ${#sum} )) -lt $n ]\n\tdo\n\t\tsum=$(( $i*($i+1)/2 ))\n\t\ti=$(( $i+1 ))\n\tdone\n\techo $(( $i-1 ))",
    "    local n=$1\n    local i=1\n    local triangular_number=0\n    while [ $(echo \"$triangular_number < 10^($n-1)\" | bc) -eq 1 ]\n    do\n        triangular_number=$(echo \"$triangular_number + $i\" | bc)\n        i=$(echo \"$i + 1\" | bc)\n    done\n    echo $i",
    "    if [ $1 -le 0 ]; then\n        echo \"Invalid input\"\n        return\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"1\"\n        return\n    fi\n    local i=1\n    local j=1\n    local sum=0\n    while [ $i -le $1 ]; do\n        sum=$(($sum+$j))\n        if [ ${#sum} -eq $1 ]; then\n            echo \"$i\"\n            return\n        fi\n        ((i++))\n        ((j++))\n    done",
    "  local n=$1\n  local i=1\n  local triangular=0\n  local digits=0\n  while [ $digits -lt $n ]; do\n    triangular=$(( $i * ($i + 1) / 2 ))\n    digits=$(echo $triangular | wc -c)\n    i=$(( i + 1 ))\n  done\n  echo $(( i - 1 ))",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal t=1\n\tlocal d=1\n\twhile [ $d -lt $n ]; do\n\t\ti=$((i+1))\n\t\tt=$((t+i))\n\t\td=$(echo $t | wc -c)\n\tdone\n\techo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -ne $n ]; do\n        sum=$(($i*($i+1)/2))\n        let i++\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local tri=0\n    local len=0\n    while [ $len -ne $n ]; do\n        tri=$(( $i * ($i + 1) / 2 ))\n        len=${#tri}\n        (( i++ ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local triangular_number=0\n    while true; do\n        triangular_number=$((i*(i+1)/2))\n        if (( ${#triangular_number} == n )); then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ ${#sum} -ne $n ]\n    do\n        ((index++))\n        sum=$((sum+index))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        ((i++))\n    done\n    echo $((i - 1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $n -gt 0 ]; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        local digits=$(echo $sum | wc -c)\n        if [ $digits -eq $n ]; then\n            echo $i\n            return\n        fi\n        i=$(( $i + 1 ))\n    done",
    "    local n=$1\n    local i=1\n    local triangle=0\n    while [ ${#triangle} -lt $n ]; do\n        triangle=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local t=1\n    while [ ${#t} -lt $n ]\n    do\n        i=$((i+1))\n        t=$((t+i))\n    done\n    echo $i",
    "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -ne $n ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    if [ $1 -eq 1 ]; then\n        echo \"1\"\n    else\n        echo \"1 + $1 * ($1 - 1) / 2\" | bc\n    fi",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal sum=0\n\twhile [ ${#sum} -lt $n ]\n\tdo\n\t\tsum=$(( $i * ($i + 1) / 2 ))\n\t\ti=$(( $i + 1 ))\n\tdone\n\techo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(( $i * ( $i + 1 ) / 2 ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local j=1\n    local k=0\n    local l=0\n    while [ $k -lt $n ]\n    do\n        j=$(( $i * ($i + 1) / 2 ))\n        k=$(echo $j | wc -c)\n        l=$i\n        i=$(( $i + 1 ))\n    done\n    echo $l",
    "    local n=$1\n    local i=1\n    local t=1\n    while true; do\n        local d=$(echo $t | wc -c)\n        if [ $d -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$((i + 1))\n        t=$((t + i))\n    done",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal sum=0\n\twhile [ ${#sum} -ne $n ]; do\n\t\tsum=$((i*(i+1)/2))\n\t\ti=$((i+1))\n\tdone\n\techo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [ ${#sum} -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local t=1\n    local len=0\n    while [ $len -lt $n ]; do\n        t=$(( $i * ($i + 1) / 2 ))\n        len=${#t}\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( i + 1 ))\n    done\n    echo $(( i - 1 ))",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal sum=0\n\twhile [ $((10**(n-1))) -gt $sum ]\n\tdo\n\t\tsum=$((i*(i+1)/2))\n\t\ti=$((i+1))\n\tdone\n\techo $((i-1))",
    "    local n=$1\n    local i=1\n    local t=1\n    while [ ${#t} -lt $n ]\n    do\n        i=$((i+1))\n        t=$((i*(i+1)/2))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    while [ ${#sum} -ne $n ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    local len=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        len=${#sum}\n        if [ $len -eq $n ]; then\n            echo $j\n            break\n        fi\n        ((i++))\n        ((j++))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**$n)) -gt $sum ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**n)) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    # Find the smallest triangular number with n digits\n    #\n    # $1 is an integer\n    #\n    # Return:\n    #   The smallest triangular number with n digits\n    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal sum=0\n\tlocal len=0\n\twhile [ $len -lt $n ]\n\tdo\n\t\tsum=$(( $i * ($i + 1) / 2 ))\n\t\tlen=${#sum}\n\t\ti=$(( $i + 1 ))\n\tdone\n\techo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local t=0\n    local count=0\n    while [ $count -lt $n ]\n    do\n        t=$(( $i * ($i + 1) / 2 ))\n        count=${#t}\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        (( i++ ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $sum -lt $n ]\n    do\n        sum=$(($sum + $i))\n        i=$(($i + 1))\n        index=$(($index + 1))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((sum)) -lt $((10**(n-1))) ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**(n-1))) -gt $sum ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
    "    local n=$1\n    local i=1\n    local j=1\n    local k=0\n    while [[ $k -lt $n ]]; do\n        j=$(( $i * ($i + 1) / 2 ))\n        k=${#j}\n        ((i++))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local triangular_number=0\n    local num_digits=0\n    while [[ $num_digits -lt $n ]]; do\n        triangular_number=$(( $i * ($i + 1) / 2 ))\n        num_digits=$(echo $triangular_number | wc -c)\n        (( i++ ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [ ${#sum} -eq $n ]; then\n            echo $i\n            break\n        fi\n        ((i++))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$(( i + 1 ))\n    done",
    "    local n=$1\n    local i=1\n    local triangular_number=0\n    local number_of_digits=0\n    while [ $number_of_digits -lt $n ]; do\n        triangular_number=$(( $i * ($i + 1) / 2 ))\n        number_of_digits=$(echo $triangular_number | wc -c)\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local t=1\n    local len=1\n    while [ $len -lt $n ]\n    do\n        i=$((i+1))\n        t=$((t+i))\n        len=${#t}\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(( $i * ( $i + 1 ) / 2 ))\n        (( i++ ))\n    done\n    echo $(( $i - 1 ))",
    "  local n=$1\n  local i=1\n  local j=1\n  local sum=0\n  while [[ ${#sum} -ne $n ]]; do\n    sum=$(( $i * ($i + 1) / 2 ))\n    (( i++ ))\n  done\n  echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local num=1\n    local len=0\n    while [ $len -ne $n ]\n    do\n        num=$(( $i * ($i + 1) / 2 ))\n        len=${#num}\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if ((${#sum}==n)); then\n            echo $i\n            break\n        fi\n        ((i++))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$(( $i + 1 ))\n    done",
    "    local n=$1\n    local i=1\n    local t=1\n    local d=1\n    while [ $d -lt $n ]\n    do\n        i=$((i+1))\n        t=$((t+i))\n        d=$(echo $t | wc -c)\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(( $i*($i+1)/2 ))\n        i=$(( $i+1 ))\n    done\n    echo $(( $i-1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [ ${#sum} -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal t=1\n\twhile [[ ${#t} -lt $n ]]; do\n\t\t((i++))\n\t\t((t+=i))\n\tdone\n\techo $i",
    "\tlocal n=$1\n\tlocal index=1\n\tlocal triangular=1\n\twhile [ ${#triangular} -lt $n ]; do\n\t\tindex=$((index+1))\n\t\ttriangular=$((triangular+index))\n\tdone\n\techo $index",
    "    local n=$1\n    local i=1\n    local tri=0\n    local digits=0\n    while [ $digits -lt $n ]; do\n        tri=$(( $i * ($i + 1) / 2 ))\n        digits=$(echo $tri | wc -c)\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local count=1\n    local sum=0\n    while true; do\n        sum=$((count*(count+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $count\n            break\n        fi\n        count=$((count+1))\n    done",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal sum=0\n\twhile [ ${#sum} -ne $n ]\n\tdo\n\t\tsum=$((i*(i+1)/2))\n\t\ti=$((i+1))\n\tdone\n\techo $((i-1))",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((sum + i))\n        i=$((i + 1))\n    done\n    echo $((i - 1))",
    "    local n=$1\n    local i=1\n    local t=1\n    while [ ${#t} -lt $n ]; do\n        i=$((i+1))\n        t=$((t+i))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local t=1\n    while [ ${#t} -lt $n ]; do\n        i=$((i+1))\n        t=$((t+i))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "  local n=$1\n  local i=1\n  local sum=0\n  while [ $((10**$n)) -gt $sum ]\n  do\n    sum=$((sum+i))\n    i=$((i+1))\n  done\n  echo $((i-1))",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal sum=0\n\twhile true; do\n\t\tsum=$(( $i * ($i + 1) / 2 ))\n\t\tif [ ${#sum} -eq $n ]; then\n\t\t\techo $i\n\t\t\treturn\n\t\tfi\n\t\ti=$(( $i + 1 ))\n\tdone",
    "    local n=$1\n    local i=1\n    local sum=0\n    local index=0\n    while [ $n -gt $sum ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( $i + 1 ))\n        index=$(( $index + 1 ))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -ne $n ]; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( i + 1 ))\n    done\n    echo $(( i - 1 ))",
    "    local num=$1\n    local i=1\n    local sum=0\n    while [ $((10**$num)) -gt $sum ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local t=1\n    local len=1\n    while [ $len -lt $n ]; do\n        i=$((i+1))\n        t=$((t+i))\n        len=${#t}\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [[ ${#sum} -lt $n ]]; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( i + 1 ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -ne $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        (( i++ ))\n    done\n    echo $(( i - 1 ))",
    "    local n=$1\n    local i=1\n    local j=1\n    local k=1\n    local l=1\n    local m=1\n    local t=1\n    local digits=0\n    local index=0\n    local found=0\n    while [ $found -eq 0 ]\n    do\n        t=$((i*(i+1)/2))\n        digits=$(echo $t | wc -c)\n        if [ $digits -eq $n ]\n        then\n            found=1\n            index=$i\n        else\n            i=$((i+1))\n        fi\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "  local n=$1\n  local i=1\n  local j=1\n  local t=0\n  while [ ${#t} -ne $n ]; do\n    t=$((i*(i+1)/2))\n    i=$((i+1))\n    j=$((j+1))\n  done\n  echo $j",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**$n)) -gt $sum ]; do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    while [ $i -le $n ]\n    do\n        sum=$(( $j * ($j + 1) / 2 ))\n        if [ ${#sum} -eq $i ]\n        then\n            echo $j\n            break\n        fi\n        j=$(( $j + 1 ))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local tri=0\n    while true; do\n        tri=$((i*(i+1)/2))\n        if [[ ${#tri} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local triangular_number=1\n    while [ ${#triangular_number} -lt $n ]; do\n        ((i++))\n        ((triangular_number+=i))\n    done\n    echo $i",
    "\tlocal number=$1\n\tlocal index=1\n\tlocal tri_number=1\n\twhile [ ${#tri_number} -lt $number ]\n\tdo\n\t\tindex=$((index+1))\n\t\ttri_number=$((tri_number+index))\n\tdone\n\techo $index",
    "    local n=$1\n    local i=1\n    local tri=0\n    while [ $(echo \"$tri < 10^$n\" | bc) -eq 1 ]; do\n        tri=$(echo \"$tri + $i\" | bc)\n        i=$(echo \"$i + 1\" | bc)\n    done\n    echo \"$i - 1\"",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal sum=0\n\twhile [ $((10**$n)) -gt $sum ]; do\n\t\tsum=$((i*(i+1)/2))\n\t\ti=$((i+1))\n\tdone\n\techo $((i-1))",
    "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal sum=0\n\twhile true; do\n\t\tsum=$((i*(i+1)/2))\n\t\tif [ ${#sum} -eq $n ]; then\n\t\t\techo $i\n\t\t\tbreak\n\t\tfi\n\t\ti=$((i+1))\n\tdone",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**n)) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "  local n=$1\n  local i=1\n  local t=0\n  while true; do\n    t=$((i*(i+1)/2))\n    if [ ${#t} -eq $n ]; then\n      echo $i\n      break\n    fi\n    i=$((i+1))\n  done",
    "    if [ $1 -eq 1 ]; then\n        echo 1\n    else\n        local i=1\n        local j=1\n        local k=1\n        while [ $k -lt $1 ]; do\n            i=$((i+1))\n            j=$((j+i))\n            k=$(echo $j | wc -c)\n        done\n        echo $i\n    fi",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            return\n        fi\n        (( i++ ))\n    done",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    while true; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $j\n            break\n        fi\n        (( i++ ))\n        (( j++ ))\n    done",
    "\tif [ $1 -lt 1 ]\n\tthen\n\t\techo \"Invalid input\"\n\t\texit 1\n\tfi\n\n\t# Initialize index and triangular number\n\tindex=1\n\ttriangular=1\n\n\t# Loop until n-digit triangular number is found\n\twhile [ $(echo $triangular | wc -c) -lt $1 ]\n\tdo\n\t\tindex=$((index + 1))\n\t\ttriangular=$((triangular + index))\n\tdone\n\n\techo $index",
    "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal sum=0\n\twhile [ ${#sum} -ne $n ]; do\n\t\tsum=$((i*(i+1)/2))\n\t\ti=$((i+1))\n\tdone\n\techo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
    "    local n=$1\n    local i=1\n    local index=0\n    while true; do\n        local tri=$((i*(i+1)/2))\n        local len=$(echo $tri | wc -c)\n        if [ $len -eq $n ]; then\n            index=$i\n            break\n        fi\n        ((i++))\n    done\n    echo $index",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$(( $i * ( $i + 1 ) / 2 ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$(($sum+$i))\n        i=$(($i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal triangular_number=1\n\twhile [ ${#triangular_number} -lt $n ]\n\tdo\n\t\ti=$((i+1))\n\t\ttriangular_number=$((triangular_number+i))\n\tdone\n\techo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$(( $i * ($i + 1) / 2 ))\n        if [ ${#sum} -eq $n ]; then\n            echo $i\n            break\n        fi\n        i=$(( i + 1 ))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((10**$n)) -gt $sum ]; do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ ${#sum} -lt $n ]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local j=1\n    local sum=0\n    while [ ${#sum} -lt $n ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $n -gt $sum ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        i=$(( $i + 1 ))\n    done\n    echo $(( $i - 1 ))",
    "    local n=$1\n    local i=1\n    local count=0\n    local sum=0\n    local result=0\n    while [ $count -lt $n ]\n    do\n        sum=$(( $i * ($i + 1) / 2 ))\n        result=$(echo $sum | wc -c)\n        if [ $result -eq $(($n + 1)) ]\n        then\n            echo $i\n            break\n        fi\n        i=$(($i + 1))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [[ ${#sum} -lt $n ]]; do\n        sum=$((sum+i))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal t=1\n\twhile [ ${#t} -lt $n ]\n\tdo\n\t\ti=$((i+1))\n\t\tt=$((t+i))\n\tdone\n\techo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while true; do\n        sum=$((i*(i+1)/2))\n        if [[ ${#sum} -eq $n ]]; then\n            echo $i\n            break\n        fi\n        i=$((i+1))\n    done",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [ $((sum)) -lt $((10**(n-1))) ]\n    do\n        sum=$((i*(i+1)/2))\n        i=$((i+1))\n    done\n    echo $((i-1))",
    "    if [ $1 -eq 1 ]; then\n        echo 1\n        return\n    fi\n    # $1 is an integer\n    # $2 is a triangular number\n    # $3 is the index of the triangular number\n    find_Index_() {\n        if [ ${#2} -eq $1 ]; then\n            echo $3\n            return\n        fi\n        find_Index_ $1 $(( $2 + $3 + 1 )) $(( $3 + 1 ))\n    }\n    find_Index_ $1 1 1",
    "    local n=$1\n    local i=1\n    local triangular_number=1\n    while [ ${#triangular_number} -lt $n ]\n    do\n        ((i++))\n        ((triangular_number+=i))\n    done\n    echo $i",
    "  local n=$1\n  local i=1\n  local triangular_number=0\n  local num_digits=0\n  local index=0\n  while [ $num_digits -lt $n ]; do\n    triangular_number=$(( $i * ($i + 1) / 2 ))\n    num_digits=$(echo $triangular_number | wc -c)\n    index=$i\n    i=$(( $i + 1 ))\n  done\n  echo $index",
    "    local n=$1\n    local i=1\n    local t=1\n    while [ ${#t} -ne $n ]; do\n        ((i++))\n        ((t+=i))\n    done\n    echo $i",
    "    local n=$1\n    local i=1\n    local sum=0\n    while [[ ${#sum} -lt $n ]]; do\n        sum=$((i*(i+1)/2))\n        ((i++))\n    done\n    echo $((i-1))",
    "\tlocal n=$1\n\tlocal i=1\n\tlocal j=1\n\tlocal num=0\n\twhile [ ${#num} -ne $n ]\n\tdo\n\t\tnum=$(($i*($i+1)/2))\n\t\ti=$(($i+1))\n\t\tj=$(($j+1))\n\tdone\n\techo $j"
  ]
}
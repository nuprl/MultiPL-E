{
  "name": "mbpp_410_min_val",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the minimum value in a given heterogeneous list.\n#\n# $1 is a newline-separated, space-separated list\nmin_val() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_410_min_val.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    min_val \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Python 3 2 4 5 version\") = \"2\" ]]\n    [[ $(candidate \"Python 15 20 25\") = \"15\" ]]\n    [[ $(candidate \"Python 30 20 40 50 version\") = \"20\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local min_val=\n    local val=\n    for val in $1; do\n        if [ -z \"$min_val\" ] || [ \"$val\" -lt \"$min_val\" ]; then\n            min_val=$val\n        fi\n    done\n    echo $min_val",
    "    local min=$(echo \"$1\" | head -n 1)\n    for val in $(echo \"$1\" | tail -n +2); do\n        if (( val < min )); then\n            min=$val\n        fi\n    done\n    echo $min",
    "    local min=$1\n    shift\n    for i in $@; do\n        if [[ $i -lt $min ]]; then\n            min=$i\n        fi\n    done\n    echo $min",
    "    local min_val=0\n    local val=0\n    local min_val_set=0\n    for val in $1; do\n        if [[ $min_val_set -eq 0 ]]; then\n            min_val=$val\n            min_val_set=1\n        elif [[ $val -lt $min_val ]]; then\n            min_val=$val\n        fi\n    done\n    echo $min_val",
    "  local min
    "    local min=\n    local val=\n    while read -r val; do\n        if [[ -z $min ]] || (( val < min )); then\n            min=$val\n        fi\n    done <<< \"$1\"\n    echo $min",
    "    local min=\n    local val=\n    for val in $1; do\n        if [[ -z \"$min\" ]]; then\n            min=$val\n        elif [[ \"$val\" -lt \"$min\" ]]; then\n            min=$val\n        fi\n    done\n    echo $min",
    "    local min=$(echo \"$1\" | tr ' ' '\\n' | sort -n | head -n 1)\n    echo \"$min\"",
    "    local min_val=0\n    local val=0\n    local list=$1\n    for val in $list; do\n        if [ $val -lt $min_val ]; then\n            min_val=$val\n        fi\n    done\n    echo $min_val",
    "    local min_val=\n    local val=\n\n    while read -r val; do\n        if [ -z \"$min_val\" ] || [ \"$val\" -lt \"$min_val\" ]; then\n            min_val=\"$val\"\n        fi\n    done <<< \"$1\"\n\n    echo \"$min_val\"",
    "    local min_val=\n    local val=\n    for val in $1; do\n        if [[ -z \"$min_val\" ]] || [[ \"$val\" -lt \"$min_val\" ]]; then\n            min_val=$val\n        fi\n    done\n    echo $min_val",
    "  local min=$(echo \"$1\" | awk '{print $1}')\n  for val in $1; do\n    if [ $val -lt $min ]; then\n      min=$val\n    fi\n  done\n  echo $min",
    "    local min=$(echo \"$1\" | head -n1)\n    echo \"$1\" | while read -r val; do\n        if [[ $val -lt $min ]]; then\n            min=$val\n        fi\n    done\n    echo \"$min\"",
    "    local min
    "    local min=0\n    for i in $1; do\n        if [[ $i -lt $min ]]; then\n            min=$i\n        fi\n    done\n    echo $min",
    "    local min=$(echo \"$1\" | awk '{print $1}')\n    for val in $(echo \"$1\" | awk '{for (i=2; i<=NF; i++) print $i}'); do\n        if (( val < min )); then\n            min=$val\n        fi\n    done\n    echo $min",
    "  local min=$1\n  shift\n  for val in $@; do\n    if [[ $val -lt $min ]]; then\n      min=$val\n    fi\n  done\n  echo $min",
    "    local min_val=999999\n    for val in $1; do\n        if [[ $val -lt $min_val ]]; then\n            min_val=$val\n        fi\n    done\n    echo $min_val",
    "    local min=$(echo \"$1\" | awk '{print $1}')\n    for val in $(echo \"$1\" | awk '{print $1}'); do\n        if (( val < min )); then\n            min=$val\n        fi\n    done\n    echo $min",
    "  local min=\n  local val=\n  while read -r val; do\n    if [[ -z $min ]] || (( val < min )); then\n      min=$val\n    fi\n  done <<< \"$1\"\n  echo \"$min\""
  ]
}
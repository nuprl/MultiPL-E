{
  "name": "mbpp_273_substract_elements",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function that takes in two lists and subtracts the elements of the first list by the elements of the second list with the same index.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\nsubstract_elements() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_273_substract_elements.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    substract_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10 4 5\" \"2 5 18\") = \"8 -1 -13\" ]]\n    [[ $(candidate \"11 2 3\" \"24 45 16\") = \"-13 -43 -13\" ]]\n    [[ $(candidate \"7 18 9\" \"10 11 12\") = \"-3 7 -3\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list1=($1)\n    local list2=($2)\n    local result=\"\"\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result=\"$result $((${list1[$i]} - ${list2[$i]}))\"\n    done\n    echo $result",
    "    local list1=($1)\n    local list2=($2)\n    local result=\"\"\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result=\"$result $((list1[i] - list2[i]))\"\n    done\n    echo $result",
    "    local list1=($1)\n    local list2=($2)\n    local result=()\n    local i=0\n    for element in ${list1[@]}; do\n        result[$i]=$(($element - ${list2[$i]}))\n        i=$(($i + 1))\n    done\n    echo ${result[@]}",
    "    local list1=($1)\n    local list2=($2)\n    local result=\"\"\n    for i in ${!list1[@]}; do\n        result=\"$result $((list1[i] - list2[i]))\"\n    done\n    echo $result",
    "    local -n list1=$1\n    local -n list2=$2\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[i]=$((${list1[i]} - ${list2[i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -n list1=$1\n    local -n list2=$2\n    local result=()\n    for ((i = 0; i < ${#list1[@]}; i++)); do\n        result+=($((${list1[$i]} - ${list2[$i]})))\n    done\n    echo \"${result[@]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[i]=$((${list1[i]}-${list2[i]}))\n    done\n    echo ${result[@]}",
    "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
    "    local list1=($1)\n    local list2=($2)\n    local result=\"\"\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result=\"$result $((list1[i] - list2[i]))\"\n    done\n    echo $result",
    "  local list1=($1)\n  local list2=($2)\n  local result=()\n  for ((i=0;i<${#list1[@]};i++)); do\n    result[$i]=$((${list1[$i]}-${list2[$i]}))\n  done\n  echo ${result[@]}",
    "    local list1=($1)\n    local list2=($2)\n    local result=()\n    for ((i = 0; i < ${#list1[@]}; i++)); do\n        result+=($((${list1[$i]} - ${list2[$i]})))\n    done\n    echo \"${result[@]}\"",
    "  local list1=($1)\n  local list2=($2)\n  local result=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    result[i]=$((${list1[i]} - ${list2[i]}))\n  done\n  echo ${result[@]}",
    "    local list1=($1)\n    local list2=($2)\n    local result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[i]=$((list1[i] - list2[i]))\n    done\n    echo \"${result[@]}\"",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local result=\"\"\n  local list1_element=\"\"\n  local list2_element=\"\"\n\n  for list1_element in $list1; do\n    list2_element=$(echo \"$list2\" | cut -d \" \" -f 1)\n    list2=$(echo \"$list2\" | cut -d \" \" -f 2-)\n    result=\"$result $(($list1_element - $list2_element))\"\n  done\n\n  echo \"$result\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[$i]=$((list1[$i] - list2[$i]))\n    done\n    echo \"${result[@]}\"",
    "    local list1=($1)\n    local list2=($2)\n    local result=\"\"\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result=\"$result $((list1[i] - list2[i]))\"\n    done\n    echo \"$result\"",
    "  local l1=($1)\n  local l2=($2)\n  local l3=()\n  for ((i=0; i<${#l1[@]}; i++)); do\n    l3[$i]=$((l1[$i] - l2[$i]))\n  done\n  echo ${l3[@]}",
    "    local list1=($1)\n    local list2=($2)\n    local result=\"\"\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result=\"$result $((list1[i] - list2[i]))\"\n    done\n    echo $result",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[i]=$((${list1[i]} - ${list2[i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n\n    for ((i = 0; i < ${#list1[@]}; i++)); do\n        result[i]=$((${list1[i]} - ${list2[i]}))\n    done\n\n    echo \"${result[@]}\""
  ]
}
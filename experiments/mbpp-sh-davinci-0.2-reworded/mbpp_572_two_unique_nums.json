{
  "name": "mbpp_572_two_unique_nums",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to remove duplicate numbers from a given number of lists.\n#\n# $1 is a space-separated list\ntwo_unique_nums() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_572_two_unique_nums.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    two_unique_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2 3 4 5\") = \"1 4 5\" ]]\n    [[ $(candidate \"1 2 3 2 4 5\") = \"1 3 4 5\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 2 3 4 5\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local num=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local is_unique=0\n\n    for ((i=0; i<nums_len; i++)); do\n        num=${nums[$i]}\n        is_unique=0\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [[ ${unique_nums[$j]} -eq $num ]]; then\n                is_unique=1\n                break\n            fi\n        done\n        if [[ $is_unique -eq 0 ]]; then\n            unique_nums[$k]=$num\n            ((k++))\n            ((unique_nums_len++))\n        fi\n    done\n\n    echo ${unique_nums[@]}",
    "    echo \"$1\" | tr ' ' '\\n' | sort | uniq -u",
    "    local nums=\"$1\"\n    local num\n    local num_count\n    local unique_nums\n    local unique_num_count\n    local unique_num\n    local unique_num_count\n\n    for num in $nums; do\n        num_count=$(echo \"$nums\" | grep -c \"$num\")\n        if [ \"$num_count\" -eq 1 ]; then\n            unique_nums=\"$unique_nums $num\"\n        fi\n    done\n\n    unique_num_count=$(echo \"$unique_nums\" | wc -w)\n    if [ \"$unique_num_count\" -eq 2 ]; then\n        echo \"$unique_nums\"\n    else\n        two_unique_nums \"$unique_nums\"\n    fi",
    "    local nums=($1)\n    local unique_nums=()\n    local num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}",
    "    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}",
    "    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}",
    "    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}",
    "    echo \"$1\" | tr ' ' '\\n' | sort | uniq -u",
    "    local nums=($1)\n    local unique_nums=()\n    local num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}",
    "  local nums=$1\n  local num1=0\n  local num2=0\n  local num=0\n  local count=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local",
    "    local nums=($1)\n    local unique_nums=()\n    local num\n\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n\n    echo ${unique_nums[@]}",
    "    local nums=($1)\n    local unique_nums=()\n    local num\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}",
    "    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}",
    "    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}",
    "    local nums=($1)\n    local unique_nums=()\n    for num in ${nums[@]}; do\n        if [[ ! \" ${unique_nums[@]} \" =~ \" ${num} \" ]]; then\n            unique_nums+=($num)\n        fi\n    done\n    echo ${unique_nums[@]}",
    "    local nums=($1)\n    local nums_len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local nums_unique=()\n    local nums_unique_len=0\n    local nums_unique_index=0\n    local nums_unique_index_found=0\n    local nums_unique_index_found_count=0\n    local nums_unique_index_found_count_max=0\n    local nums_unique_index_found_count_max_index=0\n    local nums_unique_index_found_count_max_index_found=0\n    local nums_unique_index_found_count_max_index_found_count=0\n    local nums_unique_index_found_count_max_index_found_count_max=0\n    local nums_unique_index_found_count_max_index_found_count_max_index=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found_count=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found_count_max=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found_count_max_index=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found_count_max_index_found=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found_count_max_index_found_count=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found_count_max_index_found_count_max=0\n    local nums_unique_index_found_count_max_index_found_count_max_index_found_count_max_index_",
    "    local nums=$1\n    local num1=0\n    local num2=0\n    local num=0\n    local i=0\n    local j=0\n    local k=0\n    local len=0\n    local tmp=0\n    local tmp1=0\n    local tmp2=0\n    local tmp3=0\n    local tmp4=0\n    local tmp5=0\n    local tmp6=0\n    local tmp7=0\n    local tmp8=0\n    local tmp9=0\n    local tmp10=0\n    local tmp11=0\n    local tmp12=0\n    local tmp13=0\n    local tmp14=0\n    local tmp15=0\n    local tmp16=0\n    local tmp17=0\n    local tmp18=0\n    local tmp19=0\n    local tmp20=0\n    local tmp21=0\n    local tmp22=0\n    local tmp23=0\n    local tmp24=0\n    local tmp25=0\n    local tmp26=0\n    local tmp27=0\n    local tmp28=0\n    local tmp29=0\n    local tmp30=0\n    local tmp31=0\n    local tmp32=0\n    local tmp33=0\n    local tmp34=0\n    local tmp35=0\n    local tmp36=0\n    local tmp37=0\n    local tmp38=0\n    local tmp39=0\n    local tmp40=0\n    local tmp41=0\n    local tmp42=0\n    local tmp43=0\n    local tmp44=0\n    local tmp45=0\n    local tmp46=0\n    local tmp47=0\n    local tmp48=0\n    local tmp49=0\n    local tmp50=0\n    local tmp51=0\n    local tmp52=0\n    local tmp53=0\n    local tmp54=0\n    local tmp55=0\n    local tmp56=0\n    local tmp57=0\n    local tmp58=0\n    local tmp59=0\n    local tmp60=0\n    local tmp61=0\n    local tmp62=0\n    local tmp63=0\n    local tmp64=0\n    local tmp65=0",
    "    local -a nums=($1)\n    local -a unique_nums=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i nums_len=${#nums[@]}\n    local -i unique_nums_len=0\n    local -i is_unique=0\n    local -i is_duplicate=0\n    local -i is_duplicate_found=0\n    local -i is_duplicate_found_in_unique_nums=0\n    local -i is_duplicate_found_in_nums=0\n    local -i is_duplicate_found_in_nums_and_unique_nums=0\n    local -i is_duplicate_found_in_unique_nums_and_nums=0\n    local -i is_duplicate_found_in_nums_and_unique_nums_and_nums=0\n    local -i is_duplicate_found_in_unique_nums_and_nums_and_unique_nums=0\n    local -i is_duplicate_found_in_nums_and_unique_nums_and_unique_nums=0\n    local -i is_duplicate_found_in_unique_nums_and_nums_and_nums=0\n    local -i is_duplicate_found_in_nums_and_unique_nums_and_nums_and_unique_nums=0\n    local -i is_duplicate_found_in_unique_nums_and_nums_and_nums_and_unique_nums=0\n    local -i is_duplicate_found_in_nums_and_unique_nums_and_unique_nums_and_nums=0\n    local -i is_duplicate_found_in_unique_nums_and_nums_and_unique_nums_and_nums=0\n    local -i is_duplicate_found_in_nums_and_unique_nums_and_n",
    "    local nums=($1)\n    local unique_nums=()\n    local num_counts=()\n    local num_count=0\n    local num_index=0\n\n    for num in ${nums[@]}; do\n        num_index=$(index_of $num ${unique_nums[@]})\n        if [ $num_index -eq -1 ]; then\n            unique_nums+=($num)\n            num_counts+=(1)\n        else\n            num_count=${num_counts[$num_index]}\n            num_counts[$num_index]=$((num_count + 1))\n        fi\n    done\n\n    for i in ${!unique_nums[@]}; do\n        num_count=${num_counts[$i]}\n        if [ $num_count -eq 2 ]; then\n            echo ${unique_nums[$i]}\n        fi\n    done",
    "    local nums=$1\n    local nums_arr=($nums)\n    local nums_len=${#nums_arr[@]}\n    local i=0\n    local j=0\n    local k=0\n    local unique_nums=()\n    local unique_nums_len=0\n    local is_unique=0\n    for ((i=0; i<nums_len; i++)); do\n        is_unique=1\n        for ((j=0; j<unique_nums_len; j++)); do\n            if [[ ${nums_arr[i]} -eq ${unique_nums[j]} ]]; then\n                is_unique=0\n                break\n            fi\n        done\n        if [[ $is_unique -eq 1 ]]; then\n            unique_nums[k]=${nums_arr[i]}\n            ((k++))\n            ((unique_nums_len++))\n        fi\n    done\n    echo ${unique_nums[@]}"
  ]
}
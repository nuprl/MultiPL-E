{
  "name": "mbpp_308_large_product",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_308_large_product.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      local product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local -i i j k=0\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i p=${3:-1}\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      c[k++]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $p\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local -i i j k=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[k++]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local -i i j k=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[k++]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[i*${#list2[@]}+j]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local i j\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local count=$3\n  local products=()\n  local product\n  local i j\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n\n  IFS=$'\\n' sorted=($(sort -nr <<<\"${products[*]}\"))\n  unset IFS\n\n  echo \"${sorted[@]:0:$count}\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($(($i * $j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -n | tail -n $n | tr '\\n' ' '\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local n=$3\n  local -a products\n  local i\n  local j\n  local product\n  for i in \"${list1[@]}\"; do\n    for j in \"${list2[@]}\"; do\n      product=$((i * j))\n      products[${product}]=${product}\n    done\n  done\n  echo \"${products[*]}\" | tr ' ' '\\n' | sort -nr | head -n ${n}\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local i j k\n  local product\n  local products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products[${#products[@]}]=$product\n    done\n  done\n  for ((i=0; i<$n; i++)); do\n    for ((j=i+1; j<${#products[@]}; j++)); do\n      if [[ ${products[j]} -gt ${products[i]} ]]; then\n        k=${products[i]}\n        products[i]=${products[j]}\n        products[j]=$k\n      fi\n    done\n  done\n  echo \"${products[@]}\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local i j k\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[k++]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local count=$3\n  local result=()\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      result+=(\"$((list1[i] * list2[j]))\")\n    done\n  done\n  echo \"${result[@]}\" | tr ' ' '\\n' | sort -nr | head -n $count\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local n=\"$3\"\n  local i\n  local j\n  local product\n  local products=()\n  for i in $list1; do\n    for j in $list2; do\n      product=$((i * j))\n      products+=(\"$product\")\n    done\n  done\n  printf '%s\\n' \"${products[@]}\" | sort -nr | head -n \"$n\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local n=$3\n  local -a products\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -rn | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local list1=($1)\n    local list2=($2)\n    local num=$3\n    local products=()\n    for i in ${list1[@]}; do\n        for j in ${list2[@]}; do\n            products+=($((i*j)))\n        done\n    done\n    echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $num\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local list1=($1)\n    local list2=($2)\n    local n=$3\n    local products=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            products+=($((${list1[$i]} * ${list2[$j]})))\n        done\n    done\n    echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n\n  for i in \"${list1[@]}\"; do\n    for j in \"${list2[@]}\"; do\n      products+=($((i * j)))\n    done\n  done\n\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -i product\n  local -i max_product=0\n  local -i max_i=0\n  local -i max_j=0\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=${list1[i]}*${list2[j]}\n      if ((product > max_product)); then\n        max_product=$product\n        max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n  echo \"${list1[max_i]} ${list2[max_j]}\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a a=($1)\n    local -a b=($2)\n    local -a c\n    local i j k\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            c[${#c[@]}]=$((a[i]*b[j]))\n        done\n    done\n    for ((i=0; i<$3; i++)); do\n        for ((j=i+1; j<${#c[@]}; j++)); do\n            if [[ ${c[i]} -lt ${c[j]} ]]; then\n                k=${c[i]}\n                c[i]=${c[j]}\n                c[j]=$k\n            fi\n        done\n    done\n    echo ${c[@]:0:$3}\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local n=$3\n  local i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a a=($1)\n    local -a b=($2)\n    local -i n=$3\n    local -i i j k\n    local -a c\n    for ((i=0; i<${#a[@]}; i++)); do\n        for ((j=0; j<${#b[@]}; j++)); do\n            c[i*${#b[@]}+j]=$((a[i]*b[j]))\n        done\n    done\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1; j<${#c[@]}; j++)); do\n            if ((c[i]<c[j])); then\n                k=c[i]; c[i]=c[j]; c[j]=k\n            fi\n        done\n    done\n    echo ${c[@]:0:n}\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((list1[i]*list2[j])))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -rn | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a list1=($1)\n    local -a list2=($2)\n    local -i count=$3\n    local -i i j\n    local -i product\n    local -i max_product=0\n    local -i max_i=0\n    local -i max_j=0\n    local -i max_count=0\n\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            product=${list1[i]}*${list2[j]}\n            if ((product > max_product)); then\n                max_product=$product\n                max_i=$i\n                max_j=$j\n                max_count=1\n            elif ((product == max_product)); then\n                max_count+=1\n            fi\n        done\n    done\n\n    if ((max_count < count)); then\n        echo \"Error: not enough products\"\n        return 1\n    fi\n\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            product=${list1[i]}*${list2[j]}\n            if ((product == max_product)); then\n                echo \"${list1[i]} * ${list2[j]} = $product\"\n                count-=1\n                if ((count == 0)); then\n                    return 0\n                fi\n            fi\n        done\n    done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local n=$3\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=$((a[i]*b[j]))\n    done\n  done\n  IFS=$'\\n'\n  c=($(sort -nr <<<\"${c[*]}\"))\n  echo ${c[@]:0:$n}\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a list1=($1)\n    local -a list2=($2)\n    local -a products\n    local -i i j\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            products[${#products[@]}]=$((list1[i] * list2[j]))\n        done\n    done\n    echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((list1[i]*list2[j])))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3 | tr '\\n' ' '\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local i j k\n  local product\n  local products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      for ((k=0; k<${#products[@]}; k++)); do\n        if ((product > products[k])); then\n          products=(${products[@]:0:k} $product ${products[@]:k})\n          break\n        fi\n      done\n      if ((k == ${#products[@]})); then\n        products+=($product)\n      fi\n      if ((${#products[@]} > n)); then\n        products=${products[@]:0:n}\n      fi\n    done\n  done\n  echo ${products[@]}\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: line 18: ((: 9 8 6: syntax error in expression (error token is \"8 6\")\\n/tmp/tmpzeqfhihg.sh: l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a list1=($1)\n    local -a list2=($2)\n    local -a products\n    local -i i j\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            products[${#products[@]}]=$((list1[i] * list2[j]))\n        done\n    done\n    echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product\n  local i\n  local j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local n=\"$3\"\n  local products=()\n  for i in $list1; do\n    for j in $list2; do\n      products+=($((i * j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -rn | head -n \"$n\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j k\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[k++]=$((list1[i] * list2[j]))\n    done\n  done\n  printf \"%s\\n\" \"${products[@]}\" | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local list1=($1)\n    local list2=($2)\n    local n=$3\n    local products=()\n    local i j\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            products+=($((${list1[$i]} * ${list2[$j]})))\n        done\n    done\n    echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i\n  local -i j\n  local -i k\n  local -i n\n  local -i max\n  local -i max_index\n  local -i temp\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i]*list2[j]))\n    done\n  done\n\n  for ((i=0; i<$3; i++)); do\n    max=${products[0]}\n    max_index=0\n    for ((j=1; j<${#products[@]}; j++)); do\n      if ((products[j]>max)); then\n        max=${products[j]}\n        max_index=$j\n      fi\n    done\n    echo $max\n    products[$max_index]=0\n  done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product\n  local i\n  local j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i n=$3\n  local -i product\n  local -i max_product\n  local -i max_index\n  local -i max_i\n  local -i max_j\n  local -i max_k\n  local -i max_n\n  local -i max_i_index\n  local -i max_j_index\n  local -i max_k_index\n  local -i max_n_index\n  local -i max_i_index_index\n  local -i max_j_index_index\n  local -i max_k_index_index\n  local -i max_n_index_index\n  local -i max_i_index_index_index\n  local -i max_j_index_index_index\n  local -i max_k_index_index_index\n  local -i max_n_index_index_index\n  local -i max_i_index_index_index_index\n  local -i max_j_index_index_index_index\n  local -i max_k_index_index_index_index\n  local -i max_n_index_index_index_index\n  local -i max_i_index_index_index_index_index\n  local -i max_j_index_index_index_index_index\n  local -i max_k_index_index_index_index_index\n  local -i max_n_index_index_index_index_index\n  local -i max_i_index_index_index_index_index_index\n  local -i max_j_index_index_index_index_index_index\n  local -i max_k_index_index_index_index_index_index\n  local -i max_n_index_index_index_index_index_index\n  local -i max_i_index_index_index_index_index_index_index\n  local -i max_j_index_index_index_index\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local product\n  local products\n  local i\n  local j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((${list1[$i]} * ${list2[$j]}))\n      products[$product]=$product\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($(($i * $j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -rn | head -n $n | tr '\\n' ' '\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j\n  local -i n=${#list1[@]}\n  local -i m=${#list2[@]}\n  local -i k=$3\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i j\n  local -i l\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i j\n  local -i l\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i j\n  local -i l\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[i*${#list2[@]}+j]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j k\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[k++]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((list1[i]*list2[j])))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local product\n  local products=()\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local list1=($1)\n    local list2=($2)\n    local n=$3\n    local i j\n    local product\n    local products=()\n\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            product=$((list1[i] * list2[j]))\n            products+=($product)\n        done\n    done\n\n    echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j k\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i]*list2[j]))\n    done\n  done\n  for ((i=0; i<$3; i++)); do\n    for ((j=i+1; j<${#products[@]}; j++)); do\n      if [[ ${products[j]} -gt ${products[i]} ]]; then\n        k=${products[i]}\n        products[i]=${products[j]}\n        products[j]=$k\n      fi\n    done\n    echo ${products[i]}\n  done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  # Write your code here\n  echo \"Not implemented\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j\n  local -i n=$3\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n\n  if ((n > ${#products[@]})); then\n    n=${#products[@]}\n  fi\n\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j k\n  local -i max_product=0\n  local -i max_i=0\n  local -i max_j=0\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      local -i product=${list1[i]}*${list2[j]}\n      if ((product > max_product)); then\n        max_product=$product\n        max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n  echo \"${list1[max_i]} ${list2[max_j]}\"\n  for ((k=1; k<n; k++)); do\n    max_product=0\n    for ((i=0; i<${#list1[@]}; i++)); do\n      for ((j=0; j<${#list2[@]}; j++)); do\n        local -i product=${list1[i]}*${list2[j]}\n        if ((product > max_product && product < ${list1[max_i]}*${list2[max_j]})); then\n          max_product=$product\n          max_i=$i\n          max_j=$j\n        fi\n      done\n    done\n    echo \"${list1[max_i]} ${list2[max_j]}\"\n  done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products=()\n  local -i i j k\n  local -i n=${#list1[@]}\n  local -i m=${#list2[@]}\n  local -i num=$3\n  local -i product\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      product=${list1[i]}*${list2[j]}\n      for ((k=0; k<num; k++)); do\n        if [[ ${products[k]} -lt $product ]]; then\n          products[k]=$product\n          break\n        fi\n      done\n    done\n  done\n  echo ${products[@]}\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((list1[i] * list2[j])))\n    done\n  done\n  echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local i j\n  local product\n  local products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a list1=($1)\n    local -a list2=($2)\n    local n=$3\n    local i j k\n    local -a products\n    local -a sorted\n    local -a result\n\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            products[$((i*${#list2[@]}+j))]=$((list1[i]*list2[j]))\n        done\n    done\n\n    sorted=($(printf '%s\\n' \"${products[@]}\" | sort -nr))\n\n    for ((k=0; k<n; k++)); do\n        result[$k]=${sorted[$k]}\n    done\n\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a list1=($1)\n    local -a list2=($2)\n    local -a products\n    local -i i j\n    local -i max_index\n    local -i max_product\n    local -i max_count\n    local -i product\n    local -i count\n\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            products[$i,$j]=$((list1[i] * list2[j]))\n        done\n    done\n\n    max_count=0\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            product=${products[$i,$j]}\n            count=0\n            for ((k=0; k<${#list1[@]}; k++)); do\n                for ((l=0; l<${#list2[@]}; l++)); do\n                    if [[ ${products[$k,$l]} -gt $product ]]; then\n                        ((count++))\n                    fi\n                done\n            done\n            if [[ $count -gt $max_count ]]; then\n                max_count=$count\n                max_index=$i,$j\n                max_product=$product\n            fi\n        done\n    done\n\n    echo \"$max_product\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a list1=($1)\n    local -a list2=($2)\n    local -a products\n    local -a sorted\n    local -i i\n    local -i j\n    local -i k\n    local -i n=$3\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n    local -i len=${#products[@]}\n    local -i temp\n    local -i max\n\n    for ((i=0; i<len1; i++)); do\n        for ((j=0; j<len2; j++)); do\n            products[len++]=$((list1[i]*list2[j]))\n        done\n    done\n\n    for ((i=0; i<len; i++)); do\n        max=${products[i]}\n        for ((j=i+1; j<len; j++)); do\n            if [[ ${products[j]} -gt $max ]]; then\n                max=${products[j]}\n                temp=${products[i]}\n                products[i]=$max\n                products[j]=$temp\n            fi\n        done\n    done\n\n    for ((i=0; i<n; i++)); do\n        sorted[i]=${products[len-1-i]}\n    done\n\n    echo ${sorted[@]}\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[$((i*${#b[@]}+j))]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3 | tr '\\n' ' '\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i\n  local -i j\n  local -i k\n  local -i n=$3\n  local -i len1=${#list1[@]}\n  local -i len2=${#list2[@]}\n  local -i len=${#products[@]}\n  local -i max\n  local -i max_index\n  local -i tmp\n  local -i tmp_index\n\n  for ((i=0; i<len1; i++)); do\n    for ((j=0; j<len2; j++)); do\n      products[len++]=$((list1[i]*list2[j]))\n    done\n  done\n\n  for ((k=0; k<n; k++)); do\n    max=${products[0]}\n    max_index=0\n    for ((i=1; i<len; i++)); do\n      if ((products[i]>max)); then\n        max=${products[i]}\n        max_index=$i\n      fi\n    done\n    products[max_index]=0\n  done\n\n  echo ${products[@]}\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local count=$3\n  local products=()\n  local product\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      product=$((i * j))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $count\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n\n  local products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((list1[i] * list2[j])))\n    done\n  done\n\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local list1=($1)\n    local list2=($2)\n    local n=$3\n    local products=()\n    local i j\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            products+=($((list1[i] * list2[j])))\n        done\n    done\n    echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local i j k\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=$((a[i]*b[j]))\n    done\n  done\n  for ((i=0; i<$3; i++)); do\n    for ((j=i+1; j<${#c[@]}; j++)); do\n      if ((c[i]<c[j])); then\n        k=${c[i]}\n        c[i]=${c[j]}\n        c[j]=$k\n      fi\n    done\n  done\n  echo ${c[@]:0:$3}\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a list1=($1)\n    local -a list2=($2)\n    local -i n=$3\n    local -i i j\n    local -a products\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            products[${#products[@]}]=$((list1[i]*list2[j]))\n        done\n    done\n    echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in \"${list1[@]}\"; do\n    for j in \"${list2[@]}\"; do\n      products+=($((i * j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -i product\n  local -i max_product\n  local -i max_i\n  local -i max_j\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=${list1[i]}*${list2[j]}\n      if ((product > max_product)); then\n        max_product=$product\n        max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n\n  echo \"${list1[max_i]} ${list2[max_j]}\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a list1=($1)\n    local -a list2=($2)\n    local n=$3\n    local -a products\n    local -a sorted_products\n    local i j\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            products[${#products[@]}]=$((list1[i] * list2[j]))\n        done\n    done\n    sorted_products=($(printf '%s\\n' \"${products[@]}\" | sort -nr))\n    for ((i=0; i<n; i++)); do\n        echo \"${sorted_products[i]}\"\n    done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j k\n  local -i n=${#list1[@]}\n  local -i m=${#list2[@]}\n  local -i limit=$3\n  local -i max_product=0\n  local -i max_i=0\n  local -i max_j=0\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      products[$i,$j]=$((list1[i] * list2[j]))\n    done\n  done\n  for ((k=0; k<limit; k++)); do\n    for ((i=0; i<n; i++)); do\n      for ((j=0; j<m; j++)); do\n        if ((products[i,j] > max_product)); then\n          max_product=${products[i,j]}\n          max_i=$i\n          max_j=$j\n        fi\n      done\n    done\n    echo \"${list1[max_i]} * ${list2[max_j]} = $max_product\"\n    products[max_i,max_j]=0\n    max_product=0\n  done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -i n=$3\n  local -i i j\n  local -a c\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[i*${#b[@]}+j]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((${list1[$i]} * ${list2[$j]})))\n    done\n  done\n\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -i product\n  local -i max_product\n  local -i max_i\n  local -i max_j\n  local -i max_k\n  local -i k\n  local -i max_l\n  local -i l\n  local -i max_m\n  local -i m\n  local -i max_n\n  local -i n\n  local -i max_o\n  local -i o\n  local -i max_p\n  local -i p\n  local -i max_q\n  local -i q\n  local -i max_r\n  local -i r\n  local -i max_s\n  local -i s\n  local -i max_t\n  local -i t\n  local -i max_u\n  local -i u\n  local -i max_v\n  local -i v\n  local -i max_w\n  local -i w\n  local -i max_x\n  local -i x\n  local -i max_y\n  local -i y\n  local -i max_z\n  local -i z\n  local -i max_aa\n  local -i aa\n  local -i max_bb\n  local -i bb\n  local -i max_cc\n  local -i cc\n  local -i max_dd\n  local -i dd\n  local -i max_ee\n  local -i ee\n  local -i max_ff\n  local -i ff\n  local -i max_gg\n  local -i gg\n  local -i max_hh\n  local -i hh\n  local -i max_ii\n  local -i ii\n  local -i max_jj\n  local -i jj\n  local -i max_kk\n  local -i kk\n  local -i max_ll\n  local -i ll\n  local -i max_mm\n  local -i mm\n  local -i max_nn\n  local -i nn\n  local -i max_oo\n  local -i oo\n \n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j k\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[k++]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -a products\n  local -i i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local -i i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      product=$((i*j))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[$((i*${#list2[@]}+j))]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3 | tr '\\n' ' '\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local -i i\n  local -i j\n  local -i k\n  local -i n=$3\n  local -i m=${#a[@]}\n  local -i p=${#b[@]}\n  local -i s\n  local -i x\n  local -i y\n  local -i z\n  for ((i=0; i<m; i++)); do\n    for ((j=0; j<p; j++)); do\n      c[i*p+j]=$((a[i]*b[j]))\n    done\n  done\n  for ((i=0; i<n; i++)); do\n    for ((j=i+1; j<m*p; j++)); do\n      if ((c[i]<c[j])); then\n        x=c[i]\n        c[i]=c[j]\n        c[j]=x\n      fi\n    done\n  done\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      for ((k=0; k<p; k++)); do\n        if ((c[i]==a[j]*b[k])); then\n          echo \"${a[j]} * ${b[k]} = ${c[i]}\"\n          break 2\n        fi\n      done\n    done\n  done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpi52y2ozh.sh: line 38: j: expression recursion level exceeded (error token is \"j\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($(($i * $j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((${list1[$i]} * ${list2[$j]})))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -rn | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -i n=$3\n  local -i i j\n  local -a c\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local result=()\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      result+=(\"$((list1[i] * list2[j]))\")\n    done\n  done\n  echo \"${result[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i num=$3\n  local -i i j\n  local -i max_product\n  local -i max_i max_j\n  local -i product\n  local -i max_products=()\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=${list1[i]}*${list2[j]}\n      if ((product > max_product)); then\n        max_product=$product\n        max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n\n  max_products+=($max_product)\n  list1[max_i]=0\n  list2[max_j]=0\n\n  for ((i=1; i<num; i++)); do\n    max_product=0\n    for ((j=0; j<${#list1[@]}; j++)); do\n      for ((k=0; k<${#list2[@]}; k++)); do\n        product=${list1[j]}*${list2[k]}\n        if ((product > max_product)); then\n          max_product=$product\n          max_i=$j\n          max_j=$k\n        fi\n      done\n    done\n    max_products+=($max_product)\n    list1[max_i]=0\n    list2[max_j]=0\n  done\n\n  echo ${max_products[@]}\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local num=$3\n  local products=()\n  for i in \"${list1[@]}\"; do\n    for j in \"${list2[@]}\"; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $num\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((list1[i] * list2[j])))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i num=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[i*${#list2[@]}+j]=$((list1[i]*list2[j]))\n    done\n  done\n  printf \"%s\\n\" \"${products[@]}\" | sort -nr | head -n $num\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local n=\"$3\"\n  local i\n  local product\n  local products=()\n  for i in $list1; do\n    for j in $list2; do\n      product=$((i * j))\n      products+=(\"$product\")\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n \"$n\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product\n  local i\n  local j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product\n  local i\n  local j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local list1=($1)\n    local list2=($2)\n    local n=$3\n    local products=()\n    local product\n    for i in ${list1[@]}; do\n        for j in ${list2[@]}; do\n            product=$((i * j))\n            products+=($product)\n        done\n    done\n    echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((list1[i] * list2[j])))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local num=$3\n  local products=()\n  local product\n\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      product=$((i * j))\n      products+=($product)\n    done\n  done\n\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $num\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local count=$3\n  local result=()\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      local product=$((list1[i] * list2[j]))\n      if [[ ${#result[@]} -lt $count ]]; then\n        result+=($product)\n      elif [[ $product -gt ${result[0]} ]]; then\n        result[0]=$product\n      fi\n      result=($(echo \"${result[@]}\" | tr ' ' '\\n' | sort -nr))\n    done\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local count=$3\n  local product\n  local products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  IFS=$'\\n' sorted=($(sort -nr <<<\"${products[*]}\"))\n  echo \"${sorted[@]:0:$count}\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n\tlocal a=($1)\n\tlocal b=($2)\n\tlocal n=$3\n\tlocal i j k\n\tlocal c=()\n\tfor ((i=0; i<${#a[@]}; i++)); do\n\t\tfor ((j=0; j<${#b[@]}; j++)); do\n\t\t\tc[${#c[@]}]=$((a[i]*b[j]))\n\t\tdone\n\tdone\n\tfor ((i=0; i<n; i++)); do\n\t\tfor ((j=i+1; j<${#c[@]}; j++)); do\n\t\t\tif ((c[i]<c[j])); then\n\t\t\t\tk=c[i]\n\t\t\t\tc[i]=c[j]\n\t\t\t\tc[j]=$k\n\t\t\tfi\n\t\tdone\n\t\techo ${c[i]}\n\tdone\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b'/tmp/tmptlnjyrwm.sh: line 20: i: expression recursion level exceeded (error token is \"i\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0;i<${#list1[@]};i++)); do\n    for ((j=0;j<${#list2[@]};j++)); do\n      products[$((i*${#list2[@]}+j))]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local count=$3\n  local result=()\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      result+=($((list1[i] * list2[j])))\n    done\n  done\n  echo \"${result[@]}\" | tr ' ' '\\n' | sort -nr | head -n $count\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[i*${#list2[@]}+j]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3 | tr '\\n' ' '\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[$i.$j]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[*]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpqpfpop4j.sh: line 14: 0.0: syntax error: invalid arithmetic operator (error token is \".0\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n\n  local -a products\n  local -i i j\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[i*${#list2[@]}+j]=$((list1[i]*list2[j]))\n    done\n  done\n\n  echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local -i i j k\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i p=$3\n  local -i max\n  local -i max_i\n  local -i max_j\n  local -i max_k\n  local -i max_l\n  local -i max_m\n  local -i max_n\n  local -i max_o\n  local -i max_p\n  local -i max_q\n  local -i max_r\n  local -i max_s\n  local -i max_t\n  local -i max_u\n  local -i max_v\n  local -i max_w\n  local -i max_x\n  local -i max_y\n  local -i max_z\n  local -i max_aa\n  local -i max_ab\n  local -i max_ac\n  local -i max_ad\n  local -i max_ae\n  local -i max_af\n  local -i max_ag\n  local -i max_ah\n  local -i max_ai\n  local -i max_aj\n  local -i max_ak\n  local -i max_al\n  local -i max_am\n  local -i max_an\n  local -i max_ao\n  local -i max_ap\n  local -i max_aq\n  local -i max_ar\n  local -i max_as\n  local -i max_at\n  local -i max_au\n  local -i max_av\n  local -i max_aw\n  local -i max_ax\n  local -i max_ay\n  local -i max_az\n  local -i max_ba\n  local -i max_bb\n  local -i max_bc\n  local -i max_bd\n  local -i max_be\n  local -i max_bf\n  local -i max_bg\n  local -i max_bh\n  local -i max_bi\n  local -i max_bj\n  local -i max\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a list1=($1)\n    local -a list2=($2)\n    local -i n=$3\n    local -i i j\n    local -i max_product max_i max_j\n    local -i product\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            product=${list1[i]}*${list2[j]}\n            if ((product > max_product)); then\n                max_product=$product\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"${list1[max_i]} ${list2[max_j]}\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product\n  local i\n  local j\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j k\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[k++]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i count=$3\n  local -i i j\n  local -i product\n  local -i largest_product=0\n  local -i largest_i=0\n  local -i largest_j=0\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=${list1[i]}*${list2[j]}\n      if ((product > largest_product)); then\n        largest_product=$product\n        largest_i=$i\n        largest_j=$j\n      fi\n    done\n  done\n  echo \"${list1[largest_i]} * ${list2[largest_j]} = $largest_product\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local -i i j k=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[k]=$((a[i]*b[j]))\n      ((k++))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[i*${#list2[@]}+j]=$((list1[i]*list2[j]))\n    done\n  done\n  printf \"%s\\n\" \"${products[@]}\" | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a list1=($1)\n    local -a list2=($2)\n    local -i n=$3\n    local -i i j\n    local -a products\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            products[i*${#list2[@]}+j]=$((list1[i]*list2[j]))\n        done\n    done\n    echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j\n  local -i n=$3\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local n=$3\n  local i j k\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a A\n  local -a B\n  local -a C\n  local -a D\n  local -a E\n  local -a F\n  local -a G\n  local -a H\n  local -a I\n  local -a J\n  local -a K\n  local -a L\n  local -a M\n  local -a N\n  local -a O\n  local -a P\n  local -a Q\n  local -a R\n  local -a S\n  local -a T\n  local -a U\n  local -a V\n  local -a W\n  local -a X\n  local -a Y\n  local -a Z\n  local -a aa\n  local -a ab\n  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n  local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n  local -a ax\n  local -a ay\n  local -a az\n  local -a aA\n  local -a aB\n  local -\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((${list1[i]}*${list2[j]})))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i\n  local -i j\n  local -i k\n  local -i n=$3\n  local -i max\n  local -i max_i\n  local -i max_j\n  local -i max_k\n  local -i product\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products[i,j]=$product\n    done\n  done\n\n  for ((k=0; k<n; k++)); do\n    max=0\n    for ((i=0; i<${#list1[@]}; i++)); do\n      for ((j=0; j<${#list2[@]}; j++)); do\n        if ((products[i,j] > max)); then\n          max=${products[i,j]}\n          max_i=$i\n          max_j=$j\n        fi\n      done\n    done\n    products[max_i,max_j]=0\n    echo \"${list1[max_i]} * ${list2[max_j]} = $max\"\n  done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local n=\"$3\"\n  local product\n  local products\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local aa\n  local bb\n  local cc\n  local dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local ii\n  local jj\n  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n  local pp\n  local qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local vv\n  local ww\n  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n  local ccc\n  local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n  local iii\n  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n  local ooo\n  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n  local uuu\n  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n  local aaaa\n  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local ffff\n  local gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n  local llll\n  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n  local qqqq\n  local rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local vvvv\n  local wwww\n  local xxxx\n  local yyyy\n  local zzzz\n  local aaaaa\n  local bbb\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local list1=($1)\n    local list2=($2)\n    local n=$3\n    local products=()\n    local product\n    local i j\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            product=$((list1[i] * list2[j]))\n            products+=($product)\n        done\n    done\n    echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -i n=$3\n  local -i i j\n  local -a p\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      p[i*${#b[@]}+j]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${p[@]}\" | tr ' ' '\\n' | sort -rn | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -i product\n  local -i max_product\n  local -i max_i\n  local -i max_j\n  local -i max_n=0\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=${list1[$i]}*${list2[$j]}\n      if ((product > max_product)); then\n        max_product=$product\n        max_i=$i\n        max_j=$j\n        max_n=1\n      elif ((product == max_product)); then\n        max_n+=1\n      fi\n    done\n  done\n  if ((max_n == n)); then\n    echo \"${list1[$max_i]} ${list2[$max_j]}\"\n  else\n    echo \"No solution\"\n  fi\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -i product\n  local -i largest_product=0\n  local -i largest_i=0\n  local -i largest_j=0\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=${list1[i]}*${list2[j]}\n      if ((product > largest_product)); then\n        largest_product=$product\n        largest_i=$i\n        largest_j=$j\n      fi\n    done\n  done\n  echo \"${list1[largest_i]} ${list2[largest_j]}\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -a c=()\n  local i j\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c+=($((a[i]*b[j])))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a list1=($1)\n    local -a list2=($2)\n    local -i n=$3\n    local -a products\n    local -i i j\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            products[${#products[@]}]=$((list1[i] * list2[j]))\n        done\n    done\n    echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local max=$3\n  local result=()\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      result+=($((list1[i] * list2[j])))\n    done\n  done\n  echo \"${result[@]}\" | tr ' ' '\\n' | sort -nr | head -n $max\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -rn | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local i j k\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=$((a[i]*b[j]))\n    done\n  done\n  for ((i=0; i<$3; i++)); do\n    for ((j=i+1; j<${#c[@]}; j++)); do\n      if ((c[i]<c[j])); then\n        k=c[i]\n        c[i]=c[j]\n        c[j]=$k\n      fi\n    done\n  done\n  echo \"${c[@]:0:$3}\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp7p9o5wea.sh: line 19: i: expression recursion level exceeded (error token is \"i\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in \"${list1[@]}\"; do\n    for j in \"${list2[@]}\"; do\n      products+=($((i * j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local n=\"$3\"\n  local product\n  local products=()\n  local i\n  local j\n  for i in $list1; do\n    for j in $list2; do\n      product=$((i * j))\n      products+=(\"$product\")\n    done\n  done\n  # Sort the products in descending order\n  IFS=$'\\n' sorted=($(sort -nr <<<\"${products[*]}\"))\n  unset IFS\n  # Print the first n products\n  for ((i=0; i<n; i++)); do\n    echo \"${sorted[i]}\"\n  done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((list1[i] * list2[j])))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local count=\"$3\"\n  local product\n  local products=()\n  local i\n  local j\n  for i in $list1; do\n    for j in $list2; do\n      product=$((i * j))\n      products+=(\"$product\")\n    done\n  done\n  for ((i = 0; i < count; i++)); do\n    echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n 1\n  done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((${list1[$i]} * ${list2[$j]}))\n      products+=($product)\n    done\n  done\n  echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3 | tr '\\n' ' '\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product\n  local i j\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products[${#products[@]}]=$product\n    done\n  done\n\n  IFS=$'\\n'\n  products=($(sort -nr <<<\"${products[*]}\"))\n  unset IFS\n\n  for ((i=0; i<n; i++)); do\n    echo ${products[i]}\n  done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[i*${#list2[@]}+j]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j k\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[k++]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local n=\"$3\"\n  local product\n  local products=()\n  local i\n  local j\n  for i in $list1; do\n    for j in $list2; do\n      product=$((i * j))\n      products+=(\"$product\")\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n \"$n\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local count=\"$3\"\n\n  local list1_array=($list1)\n  local list2_array=($list2)\n\n  local i\n  local j\n  local product\n  local products=()\n\n  for ((i=0; i<${#list1_array[@]}; i++)); do\n    for ((j=0; j<${#list2_array[@]}; j++)); do\n      product=$((list1_array[i] * list2_array[j]))\n      products+=($product)\n    done\n  done\n\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $count\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[i*${#list2[@]}+j]=$((list1[i]*list2[j]))\n    done\n  done\n  echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -n | tail -n $n | tr '\\n' ' '\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a list1=($1)\n    local -a list2=($2)\n    local n=$3\n    local -a products\n    local i j\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            products[${#products[@]}]=$((list1[i] * list2[j]))\n        done\n    done\n    echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  # Write your code here\n  local list1=($1)\n  local list2=($2)\n  local num=$3\n  local result=()\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      result+=($((${list1[$i]}*${list2[$j]})))\n    done\n  done\n  echo \"${result[@]}\" | tr ' ' '\\n' | sort -rn | head -n $num\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local count=\"$3\"\n  local product\n  local products\n  local i\n  local j\n  local k\n  local n\n  local max\n  local max_index\n  local max_product\n  local max_products\n  local max_products_count\n  local max_products_index\n  local max_products_indexes\n  local max_products_indexes_count\n  local max_products_indexes_count_max\n  local max_products_indexes_count_max_index\n  local max_products_indexes_count_max_indexes\n  local max_products_indexes_count_max_indexes_count\n  local max_products_indexes_count_max_indexes_count_max\n  local max_products_indexes_count_max_indexes_count_max_index\n  local max_products_indexes_count_max_indexes_count_max_indexes\n  local max_products_indexes_count_max_indexes_count_max_indexes_count\n  local max_products_indexes_count_max_indexes_count_max_indexes_count_max\n  local max_products_indexes_count_max_indexes_count_max_indexes_count_max_index\n  local max_products_indexes_count_max_indexes_count_max_indexes_count_max_indexes\n  local max_products_indexes_count_max_indexes_count_max_indexes_count_max_indexes_count\n  local max_products_indexes_count_max_indexes_count_max_indexes_count_max_indexes_count_max\n  local max_products_indexes_count_max_indexes_count_max_indexes_count_max_indexes_count_max_index\n  local max_products_indexes_count_max_indexes_count_max_indexes_count_max_indexes_count_max_indexes\n  local max_products_indexes_count_max_indexes_count_max_indexes_count_max\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local count=$3\n  local products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((${list1[$i]} * ${list2[$j]})))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $count\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product\n  local i\n  local j\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a list1=($1)\n    local -a list2=($2)\n    local -i n=$3\n    local -i i j\n    local -i max_product=0\n    local -i max_i=0\n    local -i max_j=0\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            local -i product=${list1[i]}*${list2[j]}\n            if ((product > max_product)); then\n                max_product=$product\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n    echo \"${list1[max_i]} * ${list2[max_j]} = $max_product\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a list1=($1)\n    local -a list2=($2)\n    local -i n=$3\n    local -i i j\n    local -a products\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            products[${#products[@]}]=$((list1[i] * list2[j]))\n        done\n    done\n    echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local n=\"$3\"\n  local product\n  local products=()\n  local i\n  local j\n  for i in $list1; do\n    for j in $list2; do\n      product=$((i * j))\n      products+=(\"$product\")\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -rn | head -n \"$n\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -i product\n  local -i max_product=0\n  local -i max_i=0\n  local -i max_j=0\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=${list1[i]}*${list2[j]}\n      if ((product > max_product)); then\n        max_product=$product\n        max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n  echo \"${list1[max_i]} * ${list2[max_j]} = $max_product\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local n=\"$3\"\n  local -a products\n  local -a sorted\n  local i\n  local j\n  local product\n  local index\n  local len\n\n  for i in $list1; do\n    for j in $list2; do\n      product=$((i * j))\n      products[${#products[@]}]=$product\n    done\n  done\n\n  sorted=($(printf \"%s\\n\" \"${products[@]}\" | sort -nr))\n  len=${#sorted[@]}\n  for ((i=0; i<n; i++)); do\n    index=$((len - i - 1))\n    echo \"${sorted[$index]}\"\n  done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($(($i * $j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -i product\n  local -i max_product\n  local -i max_i max_j\n  local -i max_products=()\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=${list1[i]}*${list2[j]}\n      if ((product > max_product)); then\n        max_product=$product\n        max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n\n  max_products+=($max_product)\n  list1[max_i]=0\n  list2[max_j]=0\n\n  for ((i=1; i<n; i++)); do\n    max_product=0\n    for ((j=0; j<${#list1[@]}; j++)); do\n      for ((k=0; k<${#list2[@]}; k++)); do\n        product=${list1[j]}*${list2[k]}\n        if ((product > max_product)); then\n          max_product=$product\n          max_i=$j\n          max_j=$k\n        fi\n      done\n    done\n    max_products+=($max_product)\n    list1[max_i]=0\n    list2[max_j]=0\n  done\n\n  echo ${max_products[@]}\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[$((i*${#list2[@]}+j))]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local count=\"$3\"\n  local product\n  local result\n  for i in $list1; do\n    for j in $list2; do\n      product=$((i*j))\n      result=\"$result $product\"\n    done\n  done\n  echo \"$result\" | tr ' ' '\\n' | sort -nr | head -n \"$count\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local num=$3\n  local products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((${list1[$i]} * ${list2[$j]})))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $num\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($(($i*$j)))\n    done\n  done\n  echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local list1=($1)\n    local list2=($2)\n    local n=$3\n    local products=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            products+=($((list1[i] * list2[j])))\n        done\n    done\n    echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j k\n  local -i product\n  local -i max_product\n  local -i max_i\n  local -i max_j\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=${list1[i]}*${list2[j]}\n      if ((product > max_product)); then\n        max_product=$product\n        max_i=$i\n        max_j=$j\n      fi\n    done\n  done\n\n  echo \"${list1[max_i]} * ${list2[max_j]} = $max_product\"\n\n  for ((k=1; k<n; k++)); do\n    max_product=0\n    for ((i=0; i<${#list1[@]}; i++)); do\n      for ((j=0; j<${#list2[@]}; j++)); do\n        product=${list1[i]}*${list2[j]}\n        if ((product > max_product && (i != max_i || j != max_j))); then\n          max_product=$product\n          max_i=$i\n          max_j=$j\n        fi\n      done\n    done\n    echo \"${list1[max_i]} * ${list2[max_j]} = $max_product\"\n  done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local n=\"$3\"\n  local i\n  local product\n  local products=()\n  for i in $list1; do\n    for j in $list2; do\n      product=$((i * j))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n \"$n\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local num=\"$3\"\n  local list1_sorted\n  local list2_sorted\n  local product\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local aa\n  local bb\n  local cc\n  local dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local ii\n  local jj\n  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n  local pp\n  local qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local vv\n  local ww\n  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n  local ccc\n  local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n  local iii\n  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n  local ooo\n  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n  local uuu\n  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n  local aaaa\n  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local ffff\n  local gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n  local llll\n  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n  local qqqq\n  local rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local vvvv\n  local wwww\n  local xxxx\n  local yyyy\n  local z\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local count=$3\n  local result=()\n  local i\n  local j\n  local product\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      if ((${#result[@]} < count)); then\n        result+=($product)\n      elif ((product > result[0])); then\n        result[0]=$product\n      fi\n      result=($(printf '%s\\n' \"${result[@]}\" | sort -nr))\n    done\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local product\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((${list1[i]} * ${list2[j]}))\n      products[$product]=$product\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3 | tr '\\n' ' '\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local count=$3\n  local products=()\n  local result=()\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((${list1[$i]} * ${list2[$j]})))\n    done\n  done\n\n  for ((i=0; i<$count; i++)); do\n    result+=($(echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n1))\n    products=($(echo \"${products[@]}\" | tr ' ' '\\n' | grep -v \"${result[$i]}\"))\n  done\n\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i\n  local -i j\n  local -i k\n  local -i n\n  local -i product\n  local -i max_product\n  local -i max_index\n  local -i max_i\n  local -i max_j\n  local -i max_k\n  local -i max_n\n  local -i max_product_count\n  local -i product_count\n  local -i max_product_index\n  local -i max_product_i\n  local -i max_product_j\n  local -i max_product_k\n  local -i max_product_n\n  local -i max_product_count_index\n  local -i max_product_count_i\n  local -i max_product_count_j\n  local -i max_product_count_k\n  local -i max_product_count_n\n  local -i max_product_count_product_count\n  local -i max_product_count_product\n  local -i max_product_count_product_index\n  local -i max_product_count_product_i\n  local -i max_product_count_product_j\n  local -i max_product_count_product_k\n  local -i max_product_count_product_n\n  local -i max_product_count_product_count_index\n  local -i max_product_count_product_count_i\n  local -i max_product_count_product_count_j\n  local -i max_product_count_product_count_k\n  local -i max_product_count_product_count_n\n  local -i max_product_count_product_count_product_count\n  local -i max_product_count_product_count_product\n  local -i max_product_count_product_count_product_index\n  local -i max_product_count_product_count_product_i\n  local -i max_product_count_product_count_product_j\n  local -i max_product_count_product_count\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product=0\n  local i=0\n  local j=0\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n\n  # sort the products in descending order\n  IFS=$'\\n' sorted=($(sort -nr <<<\"${products[*]}\"))\n  unset IFS\n\n  # print the first n elements\n  for ((i=0; i<n; i++)); do\n    echo ${sorted[i]}\n  done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((${list1[$i]} * ${list2[$j]})))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j k\n  local -a products\n  local -i product\n  local -i max_product\n  local -i max_index\n  local -i max_i\n  local -i max_j\n  local -i max_k\n  local -a max_products\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=${list1[i]}*${list2[j]}\n      products[k++]=$product\n    done\n  done\n\n  for ((i=0; i<n; i++)); do\n    max_product=${products[0]}\n    max_index=0\n    for ((j=1; j<${#products[@]}; j++)); do\n      if [[ ${products[j]} -gt $max_product ]]; then\n        max_product=${products[j]}\n        max_index=$j\n      fi\n    done\n    max_products[i]=$max_product\n    unset products[max_index]\n    products=(${products[@]})\n  done\n\n  echo ${max_products[@]}\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local product\n  local products=()\n  local i j\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n\n  IFS=$'\\n' sorted=($(sort -nr <<<\"${products[*]}\"))\n  unset IFS\n\n  for ((i=0; i<n; i++)); do\n    echo ${sorted[i]}\n  done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local count=$3\n  local products=()\n  for i in \"${list1[@]}\"; do\n    for j in \"${list2[@]}\"; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $count\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product=0\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      product=$((i * j))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i]*list2[j]))\n    done\n  done\n  echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  local product\n  local i\n  local j\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j k\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[k++]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($(($i*$j)))\n    done\n  done\n  echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local product\n  local i\n  local j\n  local k\n  local n=${#list1[@]}\n  local m=${#list2[@]}\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      product=$((list1[i] * list2[j]))\n      for ((k=0; k<${#products[@]}; k++)); do\n        if [[ ${products[k]} -lt $product ]]; then\n          products=(${products[@]:0:k} $product ${products[@]:k})\n          break\n        fi\n      done\n      if [[ $k -eq ${#products[@]} ]]; then\n        products+=($product)\n      fi\n    done\n  done\n  echo ${products[@]:0:$3}\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n    local -a list1=($1)\n    local -a list2=($2)\n    local -i n=$3\n    local -i i j\n    local -i product\n    local -i max_product\n    local -i max_i max_j\n    local -i max_products=()\n\n    for ((i=0; i<${#list1[@]}; i++)); do\n        for ((j=0; j<${#list2[@]}; j++)); do\n            product=${list1[i]}*${list2[j]}\n            if ((product > max_product)); then\n                max_product=$product\n                max_i=$i\n                max_j=$j\n            fi\n        done\n    done\n\n    max_products+=($max_product)\n    for ((i=1; i<n; i++)); do\n        max_product=0\n        for ((j=0; j<${#list1[@]}; j++)); do\n            if ((j != max_i)); then\n                product=${list1[j]}*${list2[max_j]}\n                if ((product > max_product)); then\n                    max_product=$product\n                    max_i=$j\n                fi\n            fi\n        done\n        for ((j=0; j<${#list2[@]}; j++)); do\n            if ((j != max_j)); then\n                product=${list1[max_i]}*${list2[j]}\n                if ((product > max_product)); then\n                    max_product=$product\n                    max_j=$j\n                fi\n            fi\n        done\n        max_products+=($max_product)\n    done\n\n    echo ${max_products[@]}\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[$((i*${#list2[@]}+j))]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local -i i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[i*${#list2[@]}+j]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local i j\n  local product\n  local products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local i j\n  local product\n  local products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a\n  local -a b\n  local -a c\n  local -i i\n  local -i j\n  local -i k\n  local -i n\n  local -i t\n  local -i x\n  local -i y\n  local -i z\n  a=($1)\n  b=($2)\n  n=${#a[@]}\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<n; j++)); do\n      c[i*n+j]=$((a[i]*b[j]))\n    done\n  done\n  for ((i=0; i<n*n; i++)); do\n    for ((j=i+1; j<n*n; j++)); do\n      if ((c[i]<c[j])); then\n        t=c[i]\n        c[i]=c[j]\n        c[j]=t\n      fi\n    done\n  done\n  for ((i=0; i<$3; i++)); do\n    x=${c[i]}\n    for ((j=0; j<n; j++)); do\n      for ((k=0; k<n; k++)); do\n        if ((x==a[j]*b[k])); then\n          echo \"${a[j]} * ${b[k]} = $x\"\n          y=${a[j]}\n          z=${b[k]}\n          a[j]=0\n          b[k]=0\n          break\n        fi\n      done\n      if ((y==x)); then\n        break\n      fi\n    done\n  done\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b'/tmp/tmprzdebog7.sh: line 37: j: expression recursion level exceeded (error token is \"j\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local list1=($1)\n  local list2=($2)\n  local num=$3\n  local products=()\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products+=($((list1[i] * list2[j])))\n    done\n  done\n\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $num\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190807,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n  local -a a=($1)\n  local -a b=($2)\n  local -i n=$3\n  local -i i j\n  local -a c\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[${#c[@]}]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n\n}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
      "timestamp": 1667190806,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
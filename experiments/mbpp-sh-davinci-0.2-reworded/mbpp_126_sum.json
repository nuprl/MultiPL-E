{
  "name": "mbpp_126_sum",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find the sum of common divisors of two given numbers.\n#\n# $1 is an integer\n# $2 is an integer\nsum() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_126_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\" \"15\") = \"6\" ]]\n    [[ $(candidate \"100\" \"150\") = \"93\" ]]\n    [[ $(candidate \"4\" \"6\") = \"3\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local sum=0\n    for i in $(seq 1 $1); do\n        if [ $(($1 % $i)) -eq 0 ] && [ $(($2 % $i)) -eq 0 ]; then\n            sum=$(($sum + $i))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for i in $(seq 1 $1); do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $2 % $i )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for i in $(seq 1 $1); do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $2 % $i )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for i in $(seq 1 $1); do\n        if [ $(($1 % $i)) -eq 0 ] && [ $(($2 % $i)) -eq 0 ]; then\n            sum=$(($sum + $i))\n        fi\n    done\n    echo $sum",
    "  local sum=0\n  for i in $(seq 1 $1); do\n    if [ $(( $1 % $i )) -eq 0 ] && [ $(( $2 % $i )) -eq 0 ]; then\n      sum=$(( $sum + $i ))\n    fi\n  done\n  echo $sum",
    "    local sum=0\n    for i in $(seq 1 $1); do\n        if [ $(($1 % $i)) -eq 0 ] && [ $(($2 % $i)) -eq 0 ]; then\n            sum=$(($sum + $i))\n        fi\n    done\n    echo $sum",
    "  local sum=0\n  for i in $(seq 1 $1); do\n    if [ $(( $1 % $i )) -eq 0 ] && [ $(( $2 % $i )) -eq 0 ]; then\n      sum=$(( $sum + $i ))\n    fi\n  done\n  echo $sum",
    "    local sum=0\n    for i in $(seq 1 $1); do\n        if [ $(($1 % $i)) -eq 0 ] && [ $(($2 % $i)) -eq 0 ]; then\n            sum=$(($sum + $i))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for i in $(seq 1 $1); do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $2 % $i )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum",
    "  local sum=0\n  for i in $(seq 1 $1); do\n    if [ $(( $1 % $i )) -eq 0 ] && [ $(( $2 % $i )) -eq 0 ]; then\n      sum=$(( $sum + $i ))\n    fi\n  done\n  echo $sum",
    "    local sum=0\n    for i in $(seq 1 $1); do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $2 % $i )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum",
    "\tlocal sum=0\n\tfor i in $(seq 1 $1); do\n\t\tif [ $(( $1 % $i )) -eq 0 ] && [ $(( $2 % $i )) -eq 0 ]; then\n\t\t\tsum=$(( $sum + $i ))\n\t\tfi\n\tdone\n\techo $sum",
    "    local sum=0\n    for i in $(seq 1 $1); do\n        if [ $(($1 % $i)) -eq 0 ] && [ $(($2 % $i)) -eq 0 ]; then\n            sum=$(($sum + $i))\n        fi\n    done\n    echo $sum",
    "    if [ $# -ne 2 ]\n    then\n        echo \"Usage: sum <integer> <integer>\"\n        return 1\n    fi\n\n    if ! [[ $1 =~ ^[0-9]+$ ]]\n    then\n        echo \"Error: $1 is not an integer\"\n        return 1\n    fi\n\n    if ! [[ $2 =~ ^[0-9]+$ ]]\n    then\n        echo \"Error: $2 is not an integer\"\n        return 1\n    fi\n\n    local -i sum=0\n    local -i i=1\n    local -i max=$1\n\n    if [ $2 -gt $1 ]\n    then\n        max=$2\n    fi\n\n    while [ $i -le $max ]\n    do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $2 % $i )) -eq 0 ]\n        then\n            sum=$(( $sum + $i ))\n        fi\n        i=$(( $i + 1 ))\n    done\n\n    echo $sum",
    "    local sum=0\n    for i in $(seq 1 $1); do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $2 % $i )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for i in $(seq 1 $1); do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $2 % $i )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $2 % $i )) -eq 0 ]\n        then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for (( i=1; i<=$1; i++ )); do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $2 % $i )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum",
    "  local sum=0\n  for i in $(seq 1 $1); do\n    if [ $(($1 % $i)) -eq 0 ] && [ $(($2 % $i)) -eq 0 ]; then\n      sum=$(($sum + $i))\n    fi\n  done\n  echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++)); do\n        if [ $(( $1 % $i )) -eq 0 ] && [ $(( $2 % $i )) -eq 0 ]; then\n            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum"
  ]
}
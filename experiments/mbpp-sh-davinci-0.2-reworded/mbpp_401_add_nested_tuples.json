{
  "name": "mbpp_401_add_nested_tuples",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to perform index wise addition of list elements in the given two nested lists.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\nadd_nested_tuples() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_401_add_nested_tuples.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    add_nested_tuples \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3\\n4 5\\n2 9\\n1 10\" \"6 7\\n3 9\\n1 1\\n7 3\") = \"7 10\\n7 14\\n3 10\\n8 13\" ]]\n    [[ $(candidate \"2 4\\n5 6\\n3 10\\n2 11\" \"7 8\\n4 10\\n2 2\\n8 4\") = \"9 12\\n9 16\\n5 12\\n10 15\" ]]\n    [[ $(candidate \"3 5\\n6 7\\n4 11\\n3 12\" \"8 9\\n5 11\\n3 3\\n9 5\") = \"11 14\\n11 18\\n7 14\\n12 17\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a result=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    result[$i]=$((${list1[$i]} + ${list2[$i]}))\n  done\n  echo ${result[@]}",
    "    local -n list1=$1\n    local -n list2=$2\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++))\n    do\n        result+=(\"$((list1[$i] + list2[$i]))\")\n    done\n    echo \"${result[@]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[i]=$(( ${list1[i]} + ${list2[i]} ))\n    done\n    echo ${result[@]}",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[$i]=$((${list1[$i]} + ${list2[$i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[i]=$((${list1[i]} + ${list2[i]}))\n    done\n    echo \"${result[@]}\"",
    "    local t1=\"$1\"\n    local t2=\"$2\"\n    local t1_len=$(echo \"$t1\" | wc -w)\n    local t2_len=$(echo \"$t2\" | wc -w)\n    local t1_idx=1\n    local t2_idx=1\n    local result=\"\"\n    while [ $t1_idx -le $t1_len ] && [ $t2_idx -le $t2_len ]; do\n        local t1_elem=$(echo \"$t1\" | cut -d ' ' -f $t1_idx)\n        local t2_elem=$(echo \"$t2\" | cut -d ' ' -f $t2_idx)\n        local t1_elem_len=$(echo \"$t1_elem\" | wc -w)\n        local t2_elem_len=$(echo \"$t2_elem\" | wc -w)\n        local t1_elem_idx=1\n        local t2_elem_idx=1\n        local result_elem=\"\"\n        while [ $t1_elem_idx -le $t1_elem_len ] && [ $t2_elem_idx -le $t2_elem_len ]; do\n            local t1_elem_sub_elem=$(echo \"$t1_elem\" | cut -d ' ' -f $t1_elem_idx)\n            local t2_elem_sub_elem=$(echo \"$t2_elem\" | cut -d ' ' -f $t2_elem_idx)\n            local sum=$((t1_elem_sub_elem + t2_elem_sub_elem))\n            if [ -z \"$result_elem\" ]; then\n                result_elem=\"$sum\"\n            else\n                result_elem=\"$result_elem $sum\"\n            fi\n            t1_elem_idx=$((t1_elem_idx + 1))\n            t2_elem_idx=$((t2_elem_idx + 1))",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[$i]=$((${list1[$i]} + ${list2[$i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -n list1=$1\n    local -n list2=$2\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result+=($((${list1[i]} + ${list2[i]})))\n    done\n    echo \"${result[@]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[i]=$((list1[i] + list2[i]))\n    done\n    echo \"${result[@]}\"",
    "    local tuple1=\"$1\"\n    local tuple2=\"$2\"\n    local tuple1_len=0\n    local tuple2_len=0\n    local tuple1_arr=()\n    local tuple2_arr=()\n    local tuple1_arr_len=0\n    local tuple2_arr_len=0\n    local tuple1_arr_i=0\n    local tuple2_arr_i=0\n    local tuple1_arr_j=0\n    local tuple2_arr_j=0\n    local tuple1_arr_k=0\n    local tuple2_arr_k=0\n    local tuple1_arr_l=0\n    local tuple2_arr_l=0\n    local tuple1_arr_m=0\n    local tuple2_arr_m=0\n    local tuple1_arr_n=0\n    local tuple2_arr_n=0\n    local tuple1_arr_o=0\n    local tuple2_arr_o=0\n    local tuple1_arr_p=0\n    local tuple2_arr_p=0\n    local tuple1_arr_q=0\n    local tuple2_arr_q=0\n    local tuple1_arr_r=0\n    local tuple2_arr_r=0\n    local tuple1_arr_s=0\n    local tuple2_arr_s=0\n    local tuple1_arr_t=0\n    local tuple2_arr_t=0\n    local tuple1_arr_u=0\n    local tuple2_arr_u=0\n    local tuple1_arr_v=0\n    local tuple2_arr_v=0\n    local tuple1_arr_w=0\n    local tuple2_arr_w=0\n    local tuple1_arr_x=0\n    local tuple2_arr_x=0\n    local tuple1_arr_y=0\n    local tuple2_arr_y=0\n    local tuple1_arr_z=0\n    local tuple2_arr_z=0\n    local tuple1_arr_a=0\n    local tuple2_arr_a=0\n    local tuple1_arr_b=0\n    local tuple2_arr",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[i]=$((${list1[i]} + ${list2[i]}))\n    done\n    echo ${result[@]}",
    "    local -a t1=($1)\n    local -a t2=($2)\n    local -a result=()\n    for ((i=0; i<${#t1[@]}; i++)); do\n        result[$i]=$((${t1[$i]}+${t2[$i]}))\n    done\n    echo ${result[@]}",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a result=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    result[i]=$((list1[i] + list2[i]))\n  done\n  echo \"${result[@]}\"",
    "  local tuple1=($1)\n  local tuple2=($2)\n  local result=()\n  local i=0\n  for ((i=0; i<${#tuple1[@]}; i++)); do\n    result[$i]=$((${tuple1[$i]} + ${tuple2[$i]}))\n  done\n  echo ${result[@]}",
    "    local -a tuple1=($1)\n    local -a tuple2=($2)\n    local -a result=()\n    for ((i=0; i<${#tuple1[@]}; i++)); do\n        result[i]=$((${tuple1[i]} + ${tuple2[i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -a t1=($1)\n    local -a t2=($2)\n    local -a result=()\n    for ((i=0; i<${#t1[@]}; i++)); do\n        result[$i]=$((t1[$i] + t2[$i]))\n    done\n    echo \"${result[@]}\"",
    "  local t1=\"$1\"\n  local t2=\"$2\"\n  local t1_len=\"$(echo \"$t1\" | wc -w)\"\n  local t2_len=\"$(echo \"$t2\" | wc -w)\"\n  local t1_idx=0\n  local t2_idx=0\n  local t1_elem\n  local t2_elem\n  local result=\"\"\n  while [ $t1_idx -lt $t1_len ] && [ $t2_idx -lt $t2_len ]; do\n    t1_elem=\"$(echo \"$t1\" | cut -d ' ' -f $((t1_idx + 1)))\"\n    t2_elem=\"$(echo \"$t2\" | cut -d ' ' -f $((t2_idx + 1)))\"\n    result=\"$result $(($t1_elem + $t2_elem))\"\n    t1_idx=$((t1_idx + 1))\n    t2_idx=$((t2_idx + 1))\n  done\n  echo \"$result\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i < ${#list1[@]}; i++)); do\n        result[i]=$((${list1[i]} + ${list2[i]}))\n    done\n    echo \"${result[@]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[i]=$((list1[i] + list2[i]))\n    done\n    echo \"${result[@]}\"",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[i]=$((${list1[i]} + ${list2[i]}))\n    done\n    echo \"${result[@]}\""
  ]
}
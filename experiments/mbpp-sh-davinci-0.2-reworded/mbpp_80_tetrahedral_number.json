{
  "name": "mbpp_80_tetrahedral_number",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the nth tetrahedral number.\n#\n# $1 is an integer\ntetrahedral_number() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_80_tetrahedral_number.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    tetrahedral_number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"5\") = \"35\" ]]\n    [[ $(candidate \"6\") = \"56\" ]]\n    [[ $(candidate \"7\") = \"84\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=$n; i++ )); do\n        sum=$(( $sum + $i ))\n    done\n    echo $(( $sum * ($sum + 1) / 2 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "  local n=$1\n  local sum=0\n  for (( i=1; i<=n; i++ ))\n  do\n    sum=$(( sum + i ))\n  done\n  echo $(( sum * (sum + 1) / 2 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=n; i++ )); do\n        (( sum+=i ))\n    done\n    echo $sum",
    "    local n=$1\n    echo $(( n * (n + 1) * (n + 2) / 6 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=$n; i++ )); do\n        sum=$(( sum + i ))\n    done\n    echo $(( sum * (sum + 1) / 2 ))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n*(n+1)*(n+2)/6))",
    "  local n=$1\n  local sum=0\n  for ((i=1; i<=n; i++)); do\n    sum=$((sum+i))\n  done\n  echo $((sum*(sum+1)/2))",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: Argument must be a positive integer.\"\n        return 1\n    fi\n\n    local sum=0\n    for (( i=1; i<=$1; i++ )); do\n        sum=$(( $sum + $i ))\n    done\n\n    echo $(( $sum * ( $sum + 1 ) / 2 ))",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + i))\n    done\n    echo $((sum * (sum + 1) / 2))",
    "  local n=$1\n  local sum=0\n  for ((i=1; i<=n; i++)); do\n    sum=$((sum+i))\n  done\n  echo $((sum*(sum+1)/2))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))",
    "    local n=$1\n    echo $((n * (n + 1) * (n + 2) / 6))"
  ]
}
{
  "name": "mbpp_766_pair_wise",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to return a list of all pairs of consecutive items in a given list.\n#\n# $1 is a space-separated list\npair_wise() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_766_pair_wise.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    pair_wise \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 1 2 3 3 4 4 5\") = \"1 1\\n1 2\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\" ]]\n    [[ $(candidate \"1 5 7 9 10\") = \"1 5\\n5 7\\n7 9\\n9 10\" ]]\n    [[ $(candidate \"5 1 9 7 10\") = \"5 1\\n1 9\\n9 7\\n7 10\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10\") = \"1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=\"$1\"\n    local result=\"\"\n\n    for ((i=0; i<${#list}; i++)); do\n        if [[ $i -eq $((${#list}-1)) ]]; then\n            break\n        fi\n        result=\"$result${list:$i:1}${list:$((i+1)):1} \"\n    done\n\n    echo \"$result\"",
    "    local list=\"$1\"\n    local pair=\"\"\n    local pairs=()\n    for item in $list; do\n        if [[ -z \"$pair\" ]]; then\n            pair=\"$item\"\n        else\n            pair=\"$pair $item\"\n            pairs+=(\"$pair\")\n            pair=\"\"\n        fi\n    done\n    echo \"${pairs[@]}\"",
    "    local list=\"$1\"\n    local pair\n    for ((i=0; i<${#list}; i++)); do\n        pair=\"${list:i:2}\"\n        if [[ \"$pair\" =~ ^[^ ]+ [^ ]+$ ]]; then\n            echo \"$pair\"\n        fi\n    done",
    "    local list=\"$1\"\n    local pair=\"\"\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        pair=\"${list:$i:1} ${list:$((i+1)):1}\"\n        echo \"$pair\"\n        i=$((i+2))\n    done",
    "    local list=\"$1\"\n    local pair\n    for pair in $list; do\n        echo -n \"${pair} \"\n    done | sed 's/\\([^ ]*\\) \\([^ ]*\\)/\\1\\2/g'",
    "  local list=\"$1\"\n  local pair\n  for pair in $list; do\n    echo \"$pair\"\n  done | paste -d' ' - -",
    "    local list=\"$1\"\n    local pair\n    local i\n    for ((i=0; i<${#list}; i++)); do\n        pair=\"${list:i:2}\"\n        if [[ ${#pair} -eq 2 ]]; then\n            echo \"$pair\"\n        fi\n    done",
    "    local list=\"$1\"\n    local pair\n    for pair in $list; do\n        echo -n \"${pair} \"\n    done\n    echo",
    "  local list=\"$1\"\n  local pair=\"\"\n  local i=0\n  local len=${#list}\n  while [ $i -lt $len ]; do\n    pair=\"${list:$i:1} ${list:$((i+1)):1}\"\n    echo \"$pair\"\n    i=$((i+2))\n  done",
    "    local list=\"$1\"\n    local -a array\n    local i\n\n    # Convert the list to an array\n    IFS=' ' read -r -a array <<< \"$list\"\n\n    # Print the pairs\n    for ((i=0; i<${#array[@]}-1; i++)); do\n        echo \"${array[i]} ${array[i+1]}\"\n    done",
    "  local list=\"$1\"\n  local pair\n  for pair in $list; do\n    echo -n \"$pair \"\n    shift\n    echo \"$1\"\n  done",
    "    local list=\"$1\"\n    local pair=\"\"\n    local i=0\n    local j=0\n    local len=0\n    local result=\"\"\n\n    len=$(echo \"$list\" | wc -w)\n    for i in $(seq 1 $len); do\n        for j in $(seq $((i+1)) $len); do\n            pair=\"$(echo \"$list\" | cut -d ' ' -f $i) $(echo \"$list\" | cut -d ' ' -f $j)\"\n            result=\"$result $pair\"\n        done\n    done\n    echo \"$result\"",
    "    local list=$1\n    local result=()\n    local i=0\n    local j=1\n    local len=${#list[@]}\n    while [ $j -lt $len ]; do\n        result[$i]=\"${list[$i]} ${list[$j]}\"\n        i=$((i+1))\n        j=$((j+1))\n    done\n    echo \"${result[@]}\"",
    "    local list=\"$1\"\n    local pair=\"\"\n    local i=0\n    local j=1\n    while [ $i -lt ${#list} ]; do\n        pair=\"${list:$i:1}${list:$j:1}\"\n        echo \"$pair\"\n        i=$((i+2))\n        j=$((j+2))\n    done",
    "    local list=\"$1\"\n    local pair=\"\"\n    local i=0\n    for item in $list; do\n        if [ $i -eq 0 ]; then\n            pair=\"$item\"\n        else\n            pair=\"$pair $item\"\n            echo \"$pair\"\n            pair=\"\"\n        fi\n        i=$((i+1))\n    done",
    "    local list=$1\n    local result=()\n    local i=0\n    for item in $list; do\n        if [ $i -gt 0 ]; then\n            result+=(\"$prev $item\")\n        fi\n        prev=$item\n        i=$((i+1))\n    done\n    echo \"${result[@]}\"",
    "    local list=\"$1\"\n    local pair=\"\"\n    local i=0\n    local j=1\n    local n=$(echo \"$list\" | wc -w)\n    while [ $i -lt $n ]; do\n        pair=$(echo \"$list\" | cut -d' ' -f$i,$j)\n        echo \"$pair\"\n        i=$((i+1))\n        j=$((j+1))\n    done",
    "    local list=\"$1\"\n    local pair=\"\"\n    local i=0\n    local n=${#list}\n    while [ $i -lt $n ]; do\n        pair=\"${list:$i:1} ${list:$((i+1)):1}\"\n        echo \"$pair\"\n        i=$((i+2))\n    done",
    "    local list=\"$1\"\n    local i=0\n    local j=1\n    while [ $j -lt ${#list} ]; do\n        echo \"${list:$i:1}${list:$j:1}\"\n        i=$((i + 1))\n        j=$((j + 1))\n    done",
    "  local list=\"$1\"\n  local pair\n  for pair in $list; do\n    echo \"$pair\"\n  done"
  ]
}
{
  "name": "mbpp_120_max_product_tuple",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the maximum absolute product between numbers in pairs of lists within a given list.\n#\n# $1 is a newline-separated, space-separated list\nmax_product_tuple() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_120_max_product_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    max_product_tuple \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 7\\n2 6\\n1 8\\n4 9\") = \"36\" ]]\n    [[ $(candidate \"10 20\\n15 2\\n5 10\") = \"200\" ]]\n    [[ $(candidate \"11 44\\n10 15\\n20 5\\n12 9\") = \"484\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a list=($(echo \"$1\" | tr '\\n' ' '))\n    local max=0\n    for ((i=0; i<${#list[@]}; i+=2)); do\n        local product=$((list[i] * list[i+1]))\n        if [[ $product -gt $max ]]; then\n            max=$product\n        fi\n    done\n    echo \"$max\"",
    "  local max_product=0\n  local product\n  local tuple\n  while read -r tuple; do\n    product=$(echo \"$tuple\" | awk '{print $1 * $2}')\n    if (( product > max_product )); then\n      max_product=$product\n    fi\n  done <<< \"$1\"\n  echo \"$max_product\"",
    "  local max=0\n  local product\n  local -a tuple\n  while read -r line; do\n    tuple=($line)\n    product=$(( ${tuple[0]} * ${tuple[1]} ))\n    if (( product > max )); then\n      max=$product\n    fi\n  done <<< \"$1\"\n  echo $max",
    "    local list=\"$1\"\n    local max=0\n    local product=0\n    local tuple=()\n    local tuple_max=()\n    while read -r line; do\n        tuple=($line)\n        product=$((tuple[0] * tuple[1]))\n        if (( product > max )); then\n            max=$product\n            tuple_max=(\"${tuple[@]}\")\n        fi\n    done <<< \"$list\"\n    echo \"${tuple_max[@]}\"",
    "  local -a list=($(echo \"$1\" | tr '\\n' ' '))\n  local max=0\n  local product=0\n  for ((i=0; i<${#list[@]}; i++)); do\n    for ((j=i+1; j<${#list[@]}; j++)); do\n      product=$((list[i] * list[j]))\n      if [[ $product -gt $max ]]; then\n        max=$product\n      fi\n    done\n  done\n  echo $max",
    "  local max=0\n  local tuple\n  local product\n  while read tuple; do\n    product=$(echo \"$tuple\" | awk '{print $1 * $2}')\n    if [ \"$product\" -gt \"$max\" ]; then\n      max=\"$product\"\n    fi\n  done <<< \"$1\"\n  echo \"$max\"",
    "  local list=\"$1\"\n  local max=0\n  local product=0\n  local tuple=()\n  local tuple_max=()\n  local tuple_min=()\n  local tuple_max_product=0\n  local tuple_min_product=0\n  local tuple_product=0\n  local tuple_max_product_tuple=()\n  local tuple_min_product_tuple=()\n  local tuple_product_tuple=()\n  local tuple_max_product_tuple_max=0\n  local tuple_min_product_tuple_min=0\n  local tuple_product_tuple_product=0\n  local tuple_max_product_tuple_max_product=0\n  local tuple_min_product_tuple_min_product=0\n  local tuple_product_tuple_product_product=0\n  local tuple_max_product_tuple_max_product_product=0\n  local tuple_min_product_tuple_min_product_product=0\n  local tuple_product_tuple_product_product_product=0\n  local tuple_max_product_tuple_max_product_product_product=0\n  local tuple_min_product_tuple_min_product_product_product=0\n  local tuple_product_tuple_product_product_product_product=0\n  local tuple_max_product_tuple_max_product_product_product_product=0\n  local tuple_min_product_tuple_min_product_product_product_product=0\n  local tuple_product_tuple_product_product_product_product_product=0\n  local tuple_max_product_tuple_max_product_product_product_product_product=0\n  local tuple_min_product_tuple_min_product_product_product_product_product=0\n  local tuple_product_tuple_product_product_product_product_product_product=0\n  local tuple_max_product_tuple_max_product_product_product_product_product_product=0\n  local tuple_min_product_tuple_min_product_product_product_product_product_product=0\n  local",
    "  local max=0\n  local product=0\n  local first_list=()\n  local second_list=()\n  local first_list_size=0\n  local second_list_size=0\n  local first_list_index=0\n  local second_list_index=0\n  local first_list_value=0\n  local second_list_value=0\n\n  # Split the list into pairs of lists\n  while read -r line; do\n    first_list=($line)\n    read -r line\n    second_list=($line)\n\n    # Get the size of each list\n    first_list_size=${#first_list[@]}\n    second_list_size=${#second_list[@]}\n\n    # Iterate through each list, multiplying each value by each other value in the other list\n    for (( first_list_index=0; first_list_index<${first_list_size}; first_list_index++ )); do\n      first_list_value=${first_list[$first_list_index]}\n      for (( second_list_index=0; second_list_index<${second_list_size}; second_list_index++ )); do\n        second_list_value=${second_list[$second_list_index]}\n        product=$(( first_list_value * second_list_value ))\n        if [[ $product -gt $max ]]; then\n          max=$product\n        fi\n      done\n    done\n  done <<< \"$1\"\n\n  echo $max",
    "  local max=0\n  local product=0\n  local list=$1\n  local tuple=()\n  for i in $list; do\n    for j in $list; do\n      product=$((i * j))\n      if [[ $product -gt $max ]]; then\n        max=$product\n        tuple=($i $j)\n      fi\n    done\n  done\n  echo \"${tuple[@]}\"",
    "  local max=0\n  local tuple\n  local product\n  while read tuple; do\n    product=$(echo \"$tuple\" | awk '{print $1 * $2}')\n    if [[ $product -gt $max ]]; then\n      max=$product\n    fi\n  done <<< \"$1\"\n  echo \"$max\"",
    "    local max_product=0\n    local -a list=($1)\n    local -a tuple\n    local product\n    local i\n    local j\n\n    for ((i=0; i<${#list[@]}; i++)); do\n        for ((j=i+1; j<${#list[@]}; j++)); do\n            tuple=(${list[i]} ${list[j]})\n            product=$((${tuple[0]} * ${tuple[1]}))\n            if [[ $product -gt $max_product ]]; then\n                max_product=$product\n            fi\n        done\n    done\n\n    echo $max_product",
    "    local max=0\n    local product=0\n    local list1\n    local list2\n    local num1\n    local num2\n    local -a nums1\n    local -a nums2\n    local -a nums\n    local -a lists\n    local -a list\n    local -a list_strs\n    local -a list_str\n    local -a num_strs\n    local -a num_str\n    local -a num_str_parts\n    local -a num_str_part\n    local -a num_str_part_parts\n    local -a num_str_part_part\n    local -a num_str_part_part_parts\n    local -a num_str_part_part_part\n    local -a num_str_part_part_part_parts\n    local -a num_str_part_part_part_part\n    local -a num_str_part_part_part_part_parts\n    local -a num_str_part_part_part_part_part\n    local -a num_str_part_part_part_part_part_parts\n    local -a num_str_part_part_part_part_part_part\n    local -a num_str_part_part_part_part_part_part_parts\n    local -a num_str_part_part_part_part_part_part_part\n    local -a num_str_part_part_part_part_part_part_part_parts\n    local -a num_str_part_part_part_part_part_part_part_part\n    local -a num_str_part_part_part_part_part_part_part_part_parts\n    local -a num_str_part_part_part_part_part_part_part_part_part\n    local -a num_str_part_part_part_part_part_part_part_part_part_parts\n    local -a num_str_part_part_part_part_part_part_part_part_part_part\n    local -a num_str_part_part_part_part_part_part_part_part_part_part_parts\n",
    "  local max=0\n  local product=0\n  local tuple=()\n  local list=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n  local cg=0\n",
    "  local max=0\n  local product=0\n  local tuple=()\n  while read -r line; do\n    tuple=($line)\n    product=$((tuple[0] * tuple[1]))\n    if [[ $product -gt $max ]]; then\n      max=$product\n    fi\n  done <<< \"$1\"\n  echo $max",
    "  local max_product=0\n  local product=0\n  local tuple=()\n  local tuple_size=2\n  local tuple_index=0\n  local tuple_index_max=$((tuple_size - 1))\n  local tuple_index_min=0\n  local tuple_index_next=$((tuple_index_min + 1))\n  local tuple_index_prev=$((tuple_index_max - 1))\n  local tuple_max=()\n  local tuple_min=()\n  local tuple_next=()\n  local tuple_prev=()\n  local tuple_product=0\n  local tuple_product_max=0\n  local tuple_product_min=0\n  local tuple_product_next=0\n  local tuple_product_prev=0\n  local tuple_value=0\n  local tuple_value_max=0\n  local tuple_value_min=0\n  local tuple_value_next=0\n  local tuple_value_prev=0\n  local tuple_values=()\n  local tuple_values_max=()\n  local tuple_values_min=()\n  local tuple_values_next=()\n  local tuple_values_prev=()\n  local tuple_values_size=0\n  local tuple_values_size_max=0\n  local tuple_values_size_min=0\n  local tuple_values_size_next=0\n  local tuple_values_size_prev=0\n  local tuple_values_sizes=()\n  local tuple_values_sizes_max=()\n  local tuple_values_sizes_min=()\n  local tuple_values_sizes_next=()\n  local tuple_values_sizes_prev=()\n  local tuple_values_sizes_size=0\n  local tuple_values_sizes_size_max=0\n  local tuple_values_sizes_size_min=0\n  local tuple_values_sizes_size_next=0\n  local tuple_values_sizes_size_prev=0\n  local tuple_values_sizes_sizes=()\n  local tuple_values_sizes_sizes_max=()\n  local tuple_values_sizes_s",
    "  local -r list=\"$1\"\n  local -i max=0\n  local -i product\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i cccc\n  local -",
    "  local max=0\n  local product=0\n  local -a list=($1)\n  local -a tuple\n  for ((i=0; i<${#list[@]}; i++)); do\n    for ((j=i+1; j<${#list[@]}; j++)); do\n      tuple=(${list[i]} ${list[j]})\n      product=$((${tuple[0]} * ${tuple[1]}))\n      if ((product > max)); then\n        max=$product\n      fi\n    done\n  done\n  echo $max",
    "  local max=0\n  local product=0\n  local list=$1\n  local tuple\n  for tuple in $list; do\n    tuple=($tuple)\n    product=$((tuple[0] * tuple[1]))\n    if [[ $product -gt $max ]]; then\n      max=$product\n    fi\n  done\n  echo $max",
    "  local max=0\n  local product=0\n  local tuple\n  local -a tuple_array\n  local -a list_array\n  local -a list_array_1\n  local -a list_array_2\n  local -a list_array_3\n  local -a list_array_4\n  local -a list_array_5\n  local -a list_array_6\n  local -a list_array_7\n  local -a list_array_8\n  local -a list_array_9\n  local -a list_array_10\n  local -a list_array_11\n  local -a list_array_12\n  local -a list_array_13\n  local -a list_array_14\n  local -a list_array_15\n  local -a list_array_16\n  local -a list_array_17\n  local -a list_array_18\n  local -a list_array_19\n  local -a list_array_20\n  local -a list_array_21\n  local -a list_array_22\n  local -a list_array_23\n  local -a list_array_24\n  local -a list_array_25\n  local -a list_array_26\n  local -a list_array_27\n  local -a list_array_28\n  local -a list_array_29\n  local -a list_array_30\n  local -a list_array_31\n  local -a list_array_32\n  local -a list_array_33\n  local -a list_array_34\n  local -a list_array_35\n  local -a list_array_36\n  local -a list_array_37\n  local -a list_array_38\n  local -a list_array_39\n  local -a list_array_40\n  local -a list_array_41\n  local -a list_array_42\n  local -a list_array_43\n  local -a list_array_44\n  local -a list_array_45\n  local -a list_array_46\n  local -a list_array_47\n  local -a list_array_48",
    "  local max=0\n  local product=0\n  local list=\"$1\"\n  local tuple\n  while read -r tuple; do\n    tuple=($tuple)\n    product=$((tuple[0] * tuple[1]))\n    if [[ $product -gt $max ]]; then\n      max=$product\n    fi\n  done <<< \"$list\"\n  echo $max"
  ]
}
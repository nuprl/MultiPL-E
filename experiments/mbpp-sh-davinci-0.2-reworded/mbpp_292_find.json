{
  "name": "mbpp_292_find",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find quotient of two numbers (rounded down to the nearest integer).\n#\n# $1 is an integer\n# $2 is an integer\nfind() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_292_find.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    find \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\" \"3\") = \"3\" ]]\n    [[ $(candidate \"4\" \"2\") = \"2\" ]]\n    [[ $(candidate \"20\" \"5\") = \"4\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  if [ $1 -eq 0 ] || [ $2 -eq 0 ]; then\n    echo \"Error: Both numbers must be non-zero.\"\n  else\n    echo $(( $1 / $2 ))\n  fi",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  if [ $1 -lt $2 ]\n  then\n    echo 0\n  else\n    echo $(( $1 / $2 ))\n  fi",
    "    echo $(( $1 / $2 ))",
    "  if [ $1 -eq 0 ] || [ $2 -eq 0 ]; then\n    echo \"Error: cannot divide by zero\"\n    exit 1\n  fi\n  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  echo $(( $1 / $2 ))",
    "  if [ $# -ne 2 ]; then\n    echo \"Usage: find <number> <number>\"\n    return 1\n  fi\n  echo $(( $1 / $2 ))",
    "    echo $(( $1 / $2 ))",
    "  if [ $2 -eq 0 ]; then\n    echo \"Error: cannot divide by zero\"\n  else\n    echo $(( $1 / $2 ))\n  fi"
  ]
}
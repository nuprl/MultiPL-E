{
  "name": "mbpp_68_is_Monotonic",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to check whether the given array is monotonic or not.\n#\n# $1 is a space-separated list\nis_Monotonic() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_68_is_Monotonic.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    is_Monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 5 4 4\") = \"true\" ]]\n    [[ $(candidate \"1 2 2 3\") = \"true\" ]]\n    [[ $(candidate \"1 3 2\") = \"false\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a a=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#a[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    for ((i=0;i<n-1;i++))\n    do\n        if [ ${a[$i]} -lt ${a[$i+1]} ]\n        then\n            flag1=1\n        fi\n        if [ ${a[$i]} -gt ${a[$i+1]} ]\n        then\n            flag2=1\n        fi\n    done\n    if [ $flag1 -eq 1 -a $flag2 -eq 0 ]\n    then\n        echo \"Monotonic\"\n    elif [ $flag1 -eq 0 -a $flag2 -eq 1 ]\n    then\n        echo \"Monotonic\"\n    else\n        echo \"Not Monotonic\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n    local -i bp=0\n    local -i b",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=1\n    local -i k=2\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    for (( i=0; i<n-1; i++ ))\n    do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]\n        then\n            flag=1\n            break\n        fi\n    done\n    if [[ $flag -eq 1 ]]\n    then\n        for (( j=0; j<n-1; j++ ))\n        do\n            if [[ ${arr[j]} -lt ${arr[j+1]} ]]\n            then\n                flag=2\n                break\n            fi\n        done\n    fi\n    if [[ $flag -eq 0 ]]\n    then\n        echo \"The array is monotonic\"\n    elif [[ $flag -eq 1 ]]\n    then\n        echo \"The array is decreasing\"\n    else\n        echo \"The array is increasing\"\n    fi",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n\n    for ((i=0; i<len-1; i++))\n    do\n        if [ ${array[i]} -gt ${array[i+1]} ]; then\n            flag1=1\n        fi\n        if [ ${array[i]} -lt ${array[i+1]} ]; then\n            flag2=1\n        fi\n    done\n\n    for ((i=0; i<len-1; i++))\n    do\n        if [ ${array[i]} -eq ${array[i+1]} ]; then\n            flag3=1\n        fi\n    done\n\n    if [ $flag1 -eq 1 ] && [ $flag2 -eq 1 ]; then\n        flag4=1\n    fi\n\n    if [ $flag3 -eq 1 ] && [ $flag4 -eq 1 ]; then\n        flag=1\n    fi\n\n    if [ $flag -eq 1 ]; then\n        echo \"0\"\n    else\n        echo \"1\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    for ((i=0; i<n-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag=1\n            break\n        fi\n    done\n    if [[ $flag -eq 0 ]]; then\n        echo \"Array is monotonic\"\n    else\n        echo \"Array is not monotonic\"\n    fi",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++))\n    do\n        if [ ${array[$i]} -lt ${array[$i+1]} ]\n        then\n            flag1=1\n        elif [ ${array[$i]} -gt ${array[$i+1]} ]\n        then\n            flag2=1\n        fi\n    done\n    if [ $flag1 -eq 1 -a $flag2 -eq 0 ]\n    then\n        echo \"The array is monotonic increasing.\"\n    elif [ $flag1 -eq 0 -a $flag2 -eq 1 ]\n    then\n        echo \"The array is monotonic decreasing.\"\n    else\n        echo \"The array is not monotonic.\"\n    fi",
    "    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n    local -i fff\n    local -i ggg\n    local -i hhh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaaa\n    local -i bbbb\n    local -i cccc\n    local -",
    "    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=0\n    local -i is_decreasing=0\n    local -i is_monotonic=0\n\n    if [ $len -eq 1 ]; then\n        is_monotonic=1\n    else\n        for ((i=0; i<len-1; i++)); do\n            if [ ${arr[i]} -lt ${arr[i+1]} ]; then\n                is_increasing=1\n            elif [ ${arr[i]} -gt ${arr[i+1]} ]; then\n                is_decreasing=1\n            fi\n        done\n        if [ $is_increasing -eq 1 -a $is_decreasing -eq 0 ]; then\n            is_monotonic=1\n        elif [ $is_increasing -eq 0 -a $is_decreasing -eq 1 ]; then\n            is_monotonic=1\n        fi\n    fi\n    echo $is_monotonic",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for ((i=0;i<n-1;i++))\n    do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]\n        then\n            flag=1\n        elif [[ ${arr[i]} -gt ${arr[i+1]} ]]\n        then\n            flag=2\n        else\n            flag=0\n        fi\n        if [[ $flag -eq 1 ]]\n        then\n            flag1=1\n        elif [[ $flag -eq 2 ]]\n        then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 0 ]]\n    then\n        echo \"The given array is monotonic\"\n    elif [[ $flag2 -eq 1 && $flag1 -eq 0 ]]\n    then\n        echo \"The given array is monotonic\"\n    else\n        echo \"The given array is not monotonic\"\n    fi",
    "    local -a array=($1)\n    local -a array_sorted=($(printf \"%s\\n\" \"${array[@]}\" | sort -n))\n    [[ \"${array[*]}\" == \"${array_sorted[*]}\" ]] && echo \"Monotonic\" || echo \"Not Monotonic\"",
    "    local arr=($1)\n    local len=${#arr[@]}\n    local i=0\n    local is_ascending=1\n    local is_descending=1\n    while [ $i -lt $len ]; do\n        if [ ${arr[$i]} -gt ${arr[$i+1]} ]; then\n            is_ascending=0\n        fi\n        if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n            is_descending=0\n        fi\n        ((i++))\n    done\n    if [ $is_ascending -eq 1 ] || [ $is_descending -eq 1 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi",
    "    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag=1\n        fi\n    done\n    for ((i=0; i<len-1; i++)); do\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            flag2=1\n        fi\n    done\n    if [[ $flag -eq 1 && $flag2 -eq 1 ]]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi",
    "    local -a arr=($1)\n    local -i i=0\n    local -i j=1\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag",
    "    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i is_increasing=1\n    local -i is_decreasing=1\n    local -i is_monotonic=0\n\n    while [ $i -lt $len ]; do\n        if [ $i -eq 0 ]; then\n            ((i++))\n            continue\n        fi\n\n        if [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n            is_decreasing=0\n        elif [ ${arr[$i]} -lt ${arr[$i-1]} ]; then\n            is_increasing=0\n        fi\n\n        ((i++))\n    done\n\n    if [ $is_increasing -eq 1 ] || [ $is_decreasing -eq 1 ]; then\n        is_monotonic=1\n    fi\n\n    echo $is_monotonic",
    "    local -a arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local -i flag2=0\n    for (( i=0; i<len-1; i++ )); do\n        if [[ ${arr[i]} -gt ${arr[i+1]} ]]; then\n            flag1=1\n        fi\n        if [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            flag2=1\n        fi\n    done\n    if [[ $flag1 -eq 1 && $flag2 -eq 1 ]]; then\n        flag=0\n    else\n        flag=1\n    fi\n    echo $flag",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i len=${#array[@]}\n    local -i flag=0\n    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local -i flag51=0\n    local -i flag52=0\n    local -i flag53=0\n    local -",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n    local -i bp=0\n    local -i b"
  ]
}
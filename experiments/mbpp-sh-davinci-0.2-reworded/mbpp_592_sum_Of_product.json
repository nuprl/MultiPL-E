{
  "name": "mbpp_592_sum_Of_product",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find the sum of the product of consecutive binomial co-efficients.\n#\n# $1 is an integer\nsum_Of_product() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_592_sum_Of_product.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    sum_Of_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"15\" ]]\n    [[ $(candidate \"4\") = \"56\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local n=$1\n  local sum=0\n  for ((i=1; i<=n; i++))\n  do\n    for ((j=1; j<=i; j++))\n    do\n      sum=$((sum + (i-j+1)*(j) ))\n    done\n  done\n  echo $sum",
    "    local n=$1\n    local sum=0\n    for (( i=0; i<n; i++ ))\n    do\n        for (( j=0; j<n; j++ ))\n        do\n            sum=$(( sum + $(( (fact $i) * (fact $j) )) ))\n        done\n    done\n    echo $sum",
    "\tlocal n=$1\n\tlocal sum=0\n\tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal product=1\n\tfor (( i=1; i<=$n; i++ ))\n\tdo\n\t\tfor (( j=1; j<=$n; j++ ))\n\t\tdo\n\t\t\tfor (( k=1; k<=$n; k++ ))\n\t\t\tdo\n\t\t\t\tproduct=$(( $i * $j * $k ))\n\t\t\t\tsum=$(( $sum + $product ))\n\t\t\tdone\n\t\tdone\n\tdone\n\techo $sum",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=n; i++ ))\n    do\n        for (( j=1; j<=i; j++ ))\n        do\n            sum=$(( $sum
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++))\n    do\n        for ((j=1; j<=i; j++))\n        do\n            sum=$((sum + (i-j+1)*(j)))\n        done\n    done\n    echo $sum",
    "\tlocal n=$1\n\tlocal sum=0\n\tfor ((i=1; i<=n; i++))\n\tdo\n\t\tfor ((j=1; j<=i; j++))\n\t\tdo\n\t\t\tsum=$((sum + (i*j)))\n\t\tdone\n\tdone\n\techo $sum",
    "    local n=$1\n    local sum=0\n    for (( i=0; i<=n; i++ ))\n    do\n        for (( j=0; j<=i; j++ ))\n        do\n            sum=$(( sum + $(binomial_coefficient $i $j) ))\n        done\n    done\n    echo $sum",
    "  local n=$1\n  local sum=0\n  for (( i=0; i<=n; i++ ))\n  do\n    for (( j=0; j<=n; j++ ))\n    do\n      sum=$(( $sum
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++))\n    do\n        for ((j=i+1; j<=n; j++))\n        do\n            sum=$((sum + i*j))\n        done\n    done\n    echo $sum",
    "  local n=$1\n  local sum=0\n  local product=1\n  for ((i=1; i<=$n; i++))\n  do\n    product=$((product*i))\n    sum=$((sum+product))\n  done\n  echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++))\n    do\n        for ((j=1; j<=i; j++))\n        do\n            sum=$((sum + (i*j)))\n        done\n    done\n    echo $sum",
    "  local n=$1\n  local sum=0\n  for (( i=1; i<=$n; i++ ))\n  do\n    for (( j=1; j<=$n; j++ ))\n    do\n      sum=$(( $sum + $i*$j ))\n    done\n  done\n  echo $sum",
    "    local n=$1\n    local sum=0\n    for (( i=0; i<=n; i++ ))\n    do\n        for (( j=0; j<=n; j++ ))\n        do\n            if [ $i -ne $j ]\n            then\n                sum=$(( sum + (binomial_coefficient $i $j) * (binomial_coefficient $(( n-i )) $(( n-j ))) ))\n            fi\n        done\n    done\n    echo $sum",
    "\tlocal n=$1\n\tlocal sum=0\n\tfor (( i=1; i<=$n; i++ ))\n\tdo\n\t\tfor (( j=1; j<=$n; j++ ))\n\t\tdo\n\t\t\tsum=$(($sum+$(binomial_coefficient $i $j)))\n\t\tdone\n\tdone\n\techo $sum",
    "\tlocal n=$1\n\tlocal sum=0\n\tfor ((i=1; i<=n; i++))\n\tdo\n\t\tfor ((j=1; j<=i; j++))\n\t\tdo\n\t\t\tsum=$((sum + binomial_coefficient $i $j))\n\t\tdone\n\tdone\n\techo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=$n; i++))\n    do\n        for ((j=$i; j<=$n; j++))\n        do\n            sum=$((sum + (i*j)))\n        done\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++))\n    do\n        for ((j=1; j<=i; j++))\n        do\n            sum=$((sum+i*j))\n        done\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for (( i=1; i<=n; i++ ))\n    do\n        for (( j=1; j<=i; j++ ))\n        do\n            sum=$(( $sum
    "\tlocal n=$1\n\tlocal sum=0\n\tfor (( i=0; i<=$n; i++ ))\n\tdo\n\t\tfor (( j=0; j<=$n; j++ ))\n\t\tdo\n\t\t\tsum=$(( $sum + $(binomial_coefficient $i $j) ))\n\t\tdone\n\tdone\n\techo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++))\n    do\n        for ((j=1; j<=n; j++))\n        do\n            sum=$((sum + i*j))\n        done\n    done\n    echo $sum"
  ]
}
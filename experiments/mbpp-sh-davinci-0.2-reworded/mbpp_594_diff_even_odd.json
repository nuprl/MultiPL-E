{
  "name": "mbpp_594_diff_even_odd",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the difference of the first even and first odd number of a given list.\n#\n# $1 is a space-separated list\ndiff_even_odd() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_594_diff_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    diff_even_odd \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 3 5 7 4 1 6 8\") = \"3\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10\") = \"1\" ]]\n    [[ $(candidate \"1 5 7 9 10\") = \"9\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a nums=($1)\n    local even_num=0\n    local odd_num=0\n    local i=0\n    local num=0\n    local found_even=0\n    local found_odd=0\n\n    for ((i=0; i<${#nums[@]}; i++)); do\n        num=${nums[$i]}\n        if [ $((num % 2)) -eq 0 ]; then\n            if [ $found_even -eq 0 ]; then\n                even_num=$num\n                found_even=1\n            fi\n        else\n            if [ $found_odd -eq 0 ]; then\n                odd_num=$num\n                found_odd=1\n            fi\n        fi\n        if [ $found_even -eq 1 ] && [ $found_odd -eq 1 ]; then\n            break\n        fi\n    done\n\n    echo $((even_num - odd_num))",
    "  local list=$1\n  local even=$(echo $list | awk '{print $1}')\n  local odd=$(echo $list | awk '{print $2}')\n  echo $((even - odd))",
    "    local even odd\n    for n in $1; do\n        if [ $((n % 2)) -eq 0 ]; then\n            even=$n\n            break\n        fi\n    done\n    for n in $1; do\n        if [ $((n % 2)) -ne 0 ]; then\n            odd=$n\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local -a list\n    list=($1)\n    local even odd\n    for n in \"${list[@]}\"; do\n        if [[ $n -eq 0 ]]; then\n            continue\n        fi\n        if [[ $n -gt 0 ]]; then\n            if [[ $n%2 -eq 0 ]]; then\n                even=$n\n                break\n            fi\n        else\n            if [[ $n%2 -eq 1 ]]; then\n                odd=$n\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local even odd\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local -a list=($1)\n  local even_num odd_num\n  for num in \"${list[@]}\"; do\n    if [[ $num =~ ^[+-]?[0-9]+$ ]]; then\n      if [[ $num%2 -eq 0 ]]; then\n        even_num=$num\n        break\n      fi\n    fi\n  done\n  for num in \"${list[@]}\"; do\n    if [[ $num =~ ^[+-]?[0-9]+$ ]]; then\n      if [[ $num%2 -ne 0 ]]; then\n        odd_num=$num\n        break\n      fi\n    fi\n  done\n  echo $((even_num-odd_num))",
    "  local list=$1\n  local even=$(echo $list | awk '{print $1}')\n  local odd=$(echo $list | awk '{print $2}')\n  echo $((even - odd))",
    "    local even odd\n    for num in $1; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [[ $((num % 2)) -ne 0 ]]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local list=\"$1\"\n    local even=$(echo \"$list\" | sed -n 's/^\\([0-9]*\\) .*/\\1/p' | grep -E '^[0-9]*[02468]$' | head -n1)\n    local odd=$(echo \"$list\" | sed -n 's/^\\([0-9]*\\) .*/\\1/p' | grep -E '^[0-9]*[13579]$' | head -n1)\n    echo $((even - odd))",
    "    local list=\"$1\"\n    local even_num=0\n    local odd_num=0\n    local num=0\n    for num in $list; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [[ $((num % 2)) -eq 1 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  even=0\n  odd=0\n  for i in $1; do\n    if [ $((i%2)) -eq 0 ]; then\n      even=$i\n      break\n    fi\n  done\n  for i in $1; do\n    if [ $((i%2)) -ne 0 ]; then\n      odd=$i\n      break\n    fi\n  done\n  echo $((even-odd))",
    "    local list=\"$1\"\n    local even_num odd_num\n    for num in $list; do\n        if [[ $num =~ ^[0-9]+$ ]]; then\n            if [[ $num%2 -eq 0 ]]; then\n                even_num=$num\n                break\n            fi\n        fi\n    done\n    for num in $list; do\n        if [[ $num =~ ^[0-9]+$ ]]; then\n            if [[ $num%2 -ne 0 ]]; then\n                odd_num=$num\n                break\n            fi\n        fi\n    done\n    echo $((even_num-odd_num))",
    "  local list=$1\n  local even=$(echo $list | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[02468]+$' | head -n1)\n  local odd=$(echo $list | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[13579]+$' | head -n1)\n  echo $((even - odd))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num%2 -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [[ $num%2 -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num-odd_num))",
    "    local -a list=($1)\n    local even_num odd_num\n    for num in \"${list[@]}\"; do\n        if [[ $num%2 -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in \"${list[@]}\"; do\n        if [[ $num%2 -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num-odd_num))",
    "  local even_num odd_num\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local list=$1\n  local even=$(echo \"$list\" | grep -Eo '^[^0-9]*[02468]' | head -n 1)\n  local odd=$(echo \"$list\" | grep -Eo '^[^0-9]*[13579]' | head -n 1)\n  echo $((even - odd))",
    "  local even odd\n  for i in $1; do\n    if [[ $i =~ ^[0-9]+$ ]]; then\n      if [[ $i%2 -eq 0 ]]; then\n        even=$i\n        break\n      fi\n    fi\n  done\n  for i in $1; do\n    if [[ $i =~ ^[0-9]+$ ]]; then\n      if [[ $i%2 -ne 0 ]]; then\n        odd=$i\n        break\n      fi\n    fi\n  done\n  echo $((even-odd))",
    "    local -a list=($1)\n    local even odd\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -ne 0 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[02468]+' | head -n1)\n  local odd=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[13579]+' | head -n1)\n  echo $((even - odd))",
    "    local even_num=0\n    local odd_num=0\n    local num=0\n    for num in $1; do\n        if [ $((num%2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num%2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num-odd_num))",
    "    local -i even odd\n    local -a list=($1)\n    for num in \"${list[@]}\"; do\n        if (( num % 2 == 0 )); then\n            even=$num\n            break\n        fi\n    done\n    for num in \"${list[@]}\"; do\n        if (( num % 2 != 0 )); then\n            odd=$num\n            break\n        fi\n    done\n    echo $(( even - odd ))",
    "  local even=0\n  local odd=0\n  local i=0\n  for n in $1; do\n    if [ $((n % 2)) -eq 0 ]; then\n      if [ $even -eq 0 ]; then\n        even=$n\n      fi\n    else\n      if [ $odd -eq 0 ]; then\n        odd=$n\n      fi\n    fi\n    if [ $even -ne 0 ] && [ $odd -ne 0 ]; then\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local even=0\n  local odd=0\n  local num\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local -a list=($1)\n    local -i even=0\n    local -i odd=0\n\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -ne 0 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n\n    echo $((even-odd))",
    "  local even_num=0\n  local odd_num=0\n  local first_even_num=0\n  local first_odd_num=0\n  local is_first_even=true\n  local is_first_odd=true\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      if [ $is_first_even = true ]; then\n        first_even_num=$even_num\n        is_first_even=false\n      fi\n    else\n      odd_num=$num\n      if [ $is_first_odd = true ]; then\n        first_odd_num=$odd_num\n        is_first_odd=false\n      fi\n    fi\n  done\n  echo $((first_even_num - first_odd_num))",
    "  local even_num=0\n  local odd_num=0\n  local num=0\n  for i in $1; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even_num=$i\n      break\n    fi\n  done\n  for i in $1; do\n    if [ $((i % 2)) -ne 0 ]; then\n      odd_num=$i\n      break\n    fi\n  done\n  num=$((even_num - odd_num))\n  echo $num",
    "    local -a nums=($1)\n    local even odd\n    for num in ${nums[@]}; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even=$num\n            break\n        fi\n    done\n    for num in ${nums[@]}; do\n        if [[ $((num % 2)) -eq 1 ]]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local list=\"$1\"\n    local even odd\n    for i in $list; do\n        if [ $((i%2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $list; do\n        if [ $((i%2)) -eq 1 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even-odd))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[02468]+' | head -n1)\n  local odd=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[13579]+' | head -n1)\n  echo \"$even - $odd\" | bc",
    "  local list=$1\n  local even=$(echo $list | awk '{print $1}')\n  local odd=$(echo $list | awk '{print $2}')\n  echo $((even - odd))",
    "    local -i even odd\n    for n in $1; do\n        if (( n % 2 == 0 )); then\n            even=$n\n            break\n        fi\n    done\n    for n in $1; do\n        if (( n % 2 == 1 )); then\n            odd=$n\n            break\n        fi\n    done\n    echo $(( even - odd ))",
    "    local even_num=0\n    local odd_num=0\n    local num=0\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local -i even odd\n    for i in $1; do\n        if (( i % 2 == 0 )); then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if (( i % 2 == 1 )); then\n            odd=$i\n            break\n        fi\n    done\n    echo $(( even - odd ))",
    "    local even odd\n    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local even odd\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local list=$1\n    local even=0\n    local odd=0\n    local first_even=0\n    local first_odd=0\n    local i=0\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            if [ $even -eq 0 ]; then\n                first_even=$num\n            fi\n            even=1\n        else\n            if [ $odd -eq 0 ]; then\n                first_odd=$num\n            fi\n            odd=1\n        fi\n        if [ $even -eq 1 ] && [ $odd -eq 1 ]; then\n            break\n        fi\n    done\n    echo $((first_even - first_odd))",
    "  local even_num=0\n  local odd_num=0\n  local first_even=0\n  local first_odd=0\n  local diff=0\n  local i=0\n  local num=0\n\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      if [ $first_even -eq 0 ]; then\n        first_even=$num\n      fi\n      even_num=$((even_num + num))\n    else\n      if [ $first_odd -eq 0 ]; then\n        first_odd=$num\n      fi\n      odd_num=$((odd_num + num))\n    fi\n  done\n\n  if [ $first_even -eq 0 ]; then\n    echo \"No even number in the list\"\n  elif [ $first_odd -eq 0 ]; then\n    echo \"No odd number in the list\"\n  else\n    diff=$((even_num - odd_num))\n    echo \"The difference of the first even and first odd number is $diff\"\n  fi",
    "    local list=\"$1\"\n    local even odd\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local list=\"$1\"\n    local even odd\n    for i in $list; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in $list; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 1 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "  local -a list\n  local -i even odd\n  list=($1)\n  for i in \"${list[@]}\"; do\n    if (( i % 2 == 0 )); then\n      even=$i\n      break\n    fi\n  done\n  for i in \"${list[@]}\"; do\n    if (( i % 2 == 1 )); then\n      odd=$i\n      break\n    fi\n  done\n  echo $(( even - odd ))",
    "    local list=\"$1\"\n    local even_num=0\n    local odd_num=0\n    local flag=0\n    for num in $list\n    do\n        if [ $flag -eq 0 ]\n        then\n            if [ $((num % 2)) -eq 0 ]\n            then\n                even_num=$num\n                flag=1\n            else\n                odd_num=$num\n                flag=1\n            fi\n        else\n            if [ $((num % 2)) -eq 0 ]\n            then\n                if [ $even_num -eq 0 ]\n                then\n                    even_num=$num\n                fi\n            else\n                if [ $odd_num -eq 0 ]\n                then\n                    odd_num=$num\n                fi\n            fi\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local list=\"$1\"\n    local even_num=0\n    local odd_num=0\n    local num=0\n\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n\n    for num in $list; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n\n    echo $((even_num - odd_num))",
    "    local even=$(echo $1 | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[02468]*$' | head -n 1)\n    local odd=$(echo $1 | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[13579]*$' | head -n 1)\n    echo $((even - odd))",
    "    local -a list=($1)\n    local even_num=0\n    local odd_num=0\n    local i=0\n\n    while [ $i -lt ${#list[@]} ]; do\n        if [ $((${list[$i]} % 2)) -eq 0 ]; then\n            even_num=${list[$i]}\n            break\n        fi\n        ((i++))\n    done\n\n    i=0\n    while [ $i -lt ${#list[@]} ]; do\n        if [ $((${list[$i]} % 2)) -ne 0 ]; then\n            odd_num=${list[$i]}\n            break\n        fi\n        ((i++))\n    done\n\n    echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $num%2 -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $num%2 -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num-odd_num))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[02468]+$' | head -n1)\n  local odd=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[13579]+$' | head -n1)\n  if [ -z \"$even\" ]; then\n    echo \"No even number in the list\"\n  elif [ -z \"$odd\" ]; then\n    echo \"No odd number in the list\"\n  else\n    echo \"$((even - odd))\"\n  fi",
    "    local list=\"$1\"\n    local even=\"\"\n    local odd=\"\"\n    for i in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=\"$i\"\n            break\n        fi\n    done\n    for i in $list; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=\"$i\"\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local -a list=($1)\n    local even=0\n    local odd=0\n    local i=0\n\n    while [ $i -lt ${#list[@]} ]; do\n        if [ $((${list[$i]} % 2)) -eq 0 ]; then\n            even=${list[$i]}\n            break\n        fi\n        i=$(($i + 1))\n    done\n\n    i=0\n    while [ $i -lt ${#list[@]} ]; do\n        if [ $((${list[$i]} % 2)) -ne 0 ]; then\n            odd=${list[$i]}\n            break\n        fi\n        i=$(($i + 1))\n    done\n\n    echo $(($even - $odd))",
    "  local even_num odd_num\n  for num in $1; do\n    if [ $(($num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $(($num % 2)) -eq 1 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $(($even_num - $odd_num))",
    "  local even odd\n  for num in $1; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [[ $((num % 2)) -ne 0 ]]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local list=\"$1\"\n  local even_num\n  local odd_num\n  local diff\n\n  even_num=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[02468]+$' | head -n1)\n  odd_num=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[13579]+$' | head -n1)\n\n  diff=$((even_num - odd_num))\n\n  echo \"$diff\"",
    "  local even_num=0\n  local odd_num=0\n  local num=0\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local even_num odd_num\n    for num in $1; do\n        if [[ $num%2 -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [[ $num%2 -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num-odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n\n  for num in $list; do\n    if [ $((num % 2)) -eq 1 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n\n  echo $((even_num - odd_num))",
    "    local list=$1\n    local even=$(echo $list | awk '{for(i=1;i<=NF;i++) if(i%2==0) print $i}' | head -n 1)\n    local odd=$(echo $list | awk '{for(i=1;i<=NF;i++) if(i%2==1) print $i}' | head -n 1)\n    echo $((even - odd))",
    "    local -a list\n    local even odd\n    IFS=' ' read -r -a list <<< \"$1\"\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -ne 0 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[02468]$' | head -n1)\n  local odd=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[13579]$' | head -n1)\n  echo $((even - odd))",
    "  local even_num=0\n  local odd_num=0\n  local num=0\n  local found_even=0\n  local found_odd=0\n\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      if [ $found_even -eq 0 ]; then\n        even_num=$num\n        found_even=1\n      fi\n    else\n      if [ $found_odd -eq 0 ]; then\n        odd_num=$num\n        found_odd=1\n      fi\n    fi\n    if [ $found_even -eq 1 ] && [ $found_odd -eq 1 ]; then\n      break\n    fi\n  done\n\n  echo $((even_num - odd_num))",
    "    local even odd\n    for n in $1; do\n        if [ $((n % 2)) -eq 0 ]; then\n            even=$n\n            break\n        fi\n    done\n    for n in $1; do\n        if [ $((n % 2)) -ne 0 ]; then\n            odd=$n\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local list=$1\n    local even_num=0\n    local odd_num=0\n    local num=0\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local list=$1\n    local even_num=0\n    local odd_num=0\n    local num=0\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even odd\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -ne 0 ]]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local -i even=0 odd=0\n    for i in $1; do\n        if [ $((i%2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $((i%2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even-odd))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $num =~ ^[+-]?[0-9]+$ ]]; then\n      if [[ $num%2 -eq 0 ]]; then\n        even_num=\"$num\"\n        break\n      fi\n    fi\n  done\n  for num in $list; do\n    if [[ $num =~ ^[+-]?[0-9]+$ ]]; then\n      if [[ $num%2 -eq 1 ]]; then\n        odd_num=\"$num\"\n        break\n      fi\n    fi\n  done\n  if [[ -n $even_num && -n $odd_num ]]; then\n    echo $((even_num - odd_num))\n  else\n    echo \"No even or odd number found\"\n  fi",
    "    local list=$1\n    local even_num=0\n    local odd_num=0\n    local num=0\n    local first_even=0\n    local first_odd=0\n\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            if [ $first_even -eq 0 ]; then\n                even_num=$num\n                first_even=1\n            fi\n        else\n            if [ $first_odd -eq 0 ]; then\n                odd_num=$num\n                first_odd=1\n            fi\n        fi\n    done\n\n    echo $((even_num - odd_num))",
    "  # your code goes here\n  local list=\"$1\"\n  local even=0\n  local odd=0\n  local i=0\n  local num=0\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local list=$1\n    local even=$(echo $list | awk '{for (i=1; i<=NF; i++) if ($i%2==0) {print $i; exit}}')\n    local odd=$(echo $list | awk '{for (i=1; i<=NF; i++) if ($i%2==1) {print $i; exit}}')\n    echo $((even-odd))",
    "    local even_num odd_num\n    for num in $1; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [[ $((num % 2)) -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local -a list=($1)\n    local even odd\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 1 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "  local even=0\n  local odd=0\n  for i in $1; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even=$i\n      break\n    fi\n  done\n  for i in $1; do\n    if [ $((i % 2)) -ne 0 ]; then\n      odd=$i\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local list=\"$1\"\n  local even_num=0\n  local odd_num=0\n  local num=0\n  for i in $list; do\n    num=$i\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for i in $list; do\n    num=$i\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local -a array=(\"$@\")\n  local even_num=0\n  local odd_num=0\n\n  for num in \"${array[@]}\"; do\n    if [[ $num -eq 0 ]]; then\n      continue\n    fi\n\n    if [[ $num -lt 0 ]]; then\n      num=$((num * -1))\n    fi\n\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n\n  for num in \"${array[@]}\"; do\n    if [[ $num -eq 0 ]]; then\n      continue\n    fi\n\n    if [[ $num -lt 0 ]]; then\n      num=$((num * -1))\n    fi\n\n    if [[ $((num % 2)) -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n\n  echo $((even_num - odd_num))",
    "    local even=0\n    local odd=0\n    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $((i % 2)) -eq 1 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local even_num=0\n  local odd_num=0\n  local i=0\n  local num=0\n  for num in $1; do\n    if [ $((num%2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num%2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num-odd_num))",
    "  local even_num odd_num\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local even odd\n  for n in $1; do\n    if [[ $n =~ ^[0-9]+$ ]]; then\n      if [[ $n%2 -eq 0 ]]; then\n        even=$n\n        break\n      fi\n    fi\n  done\n  for n in $1; do\n    if [[ $n =~ ^[0-9]+$ ]]; then\n      if [[ $n%2 -eq 1 ]]; then\n        odd=$n\n        break\n      fi\n    fi\n  done\n  echo $((even-odd))",
    "    local list=\"$1\"\n    local even_number\n    local odd_number\n\n    for number in $list; do\n        if [[ $number =~ ^[0-9]+$ ]]; then\n            if [[ $number%2 -eq 0 ]]; then\n                even_number=$number\n                break\n            fi\n        fi\n    done\n\n    for number in $list; do\n        if [[ $number =~ ^[0-9]+$ ]]; then\n            if [[ $number%2 -ne 0 ]]; then\n                odd_number=$number\n                break\n            fi\n        fi\n    done\n\n    if [[ -z $even_number || -z $odd_number ]]; then\n        echo \"No even or odd number found\"\n        return 1\n    fi\n\n    echo $((even_number - odd_number))",
    "    local list=\"$1\"\n    local even_num odd_num\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local list=\"$1\"\n    local even=$(echo \"$list\" | grep -Eo '^[02468]+' | head -1)\n    local odd=$(echo \"$list\" | grep -Eo '^[13579]+' | head -1)\n    echo $((even - odd))",
    "  local list=$1\n  local even=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[02468]*$' | head -n1)\n  local odd=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[13579]*$' | head -n1)\n  echo $((even - odd))",
    "    local -a list=(\"$@\")\n    local even odd\n    for n in \"${list[@]}\"; do\n        if [[ $((n % 2)) -eq 0 ]]; then\n            even=$n\n            break\n        fi\n    done\n    for n in \"${list[@]}\"; do\n        if [[ $((n % 2)) -eq 1 ]]; then\n            odd=$n\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local -a list=($1)\n    local even=0\n    local odd=0\n    for i in \"${list[@]}\"; do\n        if [[ $i%2 -eq 0 ]]; then\n            even=$i\n            break\n        fi\n    done\n    for i in \"${list[@]}\"; do\n        if [[ $i%2 -ne 0 ]]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even-odd))",
    "    local list=\"$1\"\n    local even=$(echo $list | awk '{print $1}')\n    local odd=$(echo $list | awk '{print $2}')\n    echo $((even - odd))",
    "  local -a list=($1)\n  local even_num odd_num\n  for num in \"${list[@]}\"; do\n    if [[ $num =~ ^[0-9]+$ ]]; then\n      if [[ $num%2 -eq 0 ]]; then\n        even_num=$num\n        break\n      fi\n    fi\n  done\n  for num in \"${list[@]}\"; do\n    if [[ $num =~ ^[0-9]+$ ]]; then\n      if [[ $num%2 -ne 0 ]]; then\n        odd_num=$num\n        break\n      fi\n    fi\n  done\n  echo $((even_num-odd_num))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | grep -E '^[0-9]+$' | grep -E '^[02468]+$' | head -n1)\n  local odd=$(echo \"$list\" | grep -E '^[0-9]+$' | grep -E '^[13579]+$' | head -n1)\n  if [ -z \"$even\" ] || [ -z \"$odd\" ]; then\n    echo \"0\"\n  else\n    echo \"$((even - odd))\"\n  fi",
    "  local list=$1\n  local even=0\n  local odd=0\n  for num in $list; do\n    if [[ $num%2 -eq 0 ]]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $num%2 -ne 0 ]]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even-odd))",
    "    local even odd\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num =~ ^[0-9]+$ ]]; then\n      if [[ $num%2 -eq 0 ]]; then\n        even_num=$num\n        break\n      fi\n    fi\n  done\n  for num in $1; do\n    if [[ $num =~ ^[0-9]+$ ]]; then\n      if [[ $num%2 -ne 0 ]]; then\n        odd_num=$num\n        break\n      fi\n    fi\n  done\n  echo $((even_num-odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=\"$num\"\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd_num=\"$num\"\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even odd\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even=\"$num\"\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd=\"$num\"\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local list=$1\n    local even=0\n    local odd=0\n    local i=0\n    local num=0\n\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n    done\n\n    for num in $list; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd=$num\n            break\n        fi\n    done\n\n    echo $((even - odd))",
    "  local list=$1\n  local even_num=0\n  local odd_num=0\n  local num=0\n  local found_even=0\n  local found_odd=0\n\n  for num in $list; do\n    if (( num % 2 == 0 )); then\n      even_num=$num\n      found_even=1\n      break\n    fi\n  done\n\n  for num in $list; do\n    if (( num % 2 == 1 )); then\n      odd_num=$num\n      found_odd=1\n      break\n    fi\n  done\n\n  if (( found_even == 1 && found_odd == 1 )); then\n    echo $(( even_num - odd_num ))\n  else\n    echo \"Either even or odd number not found\"\n  fi",
    "    local even odd\n    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local even_num=0\n    local odd_num=0\n    local num=0\n\n    for num in $1; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n\n    for num in $1; do\n        if [[ $((num % 2)) -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n\n    echo $((even_num - odd_num))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num%2 -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [[ $num%2 -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num-odd_num))",
    "  local even_num odd_num\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local list=$1\n    local even_num=0\n    local odd_num=0\n    local num=0\n    for i in $list; do\n        num=$i\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for i in $list; do\n        num=$i\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local even=0\n  local odd=0\n  local i=0\n  for n in $1; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even=$n\n    else\n      odd=$n\n    fi\n    i=$((i + 1))\n  done\n  echo $((even - odd))",
    "  local even_num=0\n  local odd_num=0\n  local num=0\n  local found_even=0\n  local found_odd=0\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      if [ $found_even -eq 0 ]; then\n        even_num=$num\n        found_even=1\n      fi\n    else\n      if [ $found_odd -eq 0 ]; then\n        odd_num=$num\n        found_odd=1\n      fi\n    fi\n    if [ $found_even -eq 1 ] && [ $found_odd -eq 1 ]; then\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local even_num odd_num\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local even_num odd_num\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local -a list=($1)\n    local -i even=0\n    local -i odd=0\n    local -i i=0\n    local -i len=${#list[@]}\n\n    while [ $i -lt $len ]; do\n        if [ $((list[$i] % 2)) -eq 0 ]; then\n            even=${list[$i]}\n            break\n        fi\n        ((i++))\n    done\n\n    i=0\n    while [ $i -lt $len ]; do\n        if [ $((list[$i] % 2)) -ne 0 ]; then\n            odd=${list[$i]}\n            break\n        fi\n        ((i++))\n    done\n\n    echo $((even - odd))",
    "    local even odd\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local list=$1\n    local even=0\n    local odd=0\n    local i=0\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local even_num=0\n    local odd_num=0\n    local found_even=false\n    local found_odd=false\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            if ! $found_even; then\n                even_num=$num\n                found_even=true\n            fi\n        else\n            if ! $found_odd; then\n                odd_num=$num\n                found_odd=true\n            fi\n        fi\n        if $found_even && $found_odd; then\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[02468]+$' | head -n 1)\n  local odd=$(echo \"$list\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[13579]+$' | head -n 1)\n  echo $((even - odd))",
    "    local even_num=0\n    local odd_num=0\n    local num=0\n    local first_even_found=false\n    local first_odd_found=false\n\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            if [ $first_even_found == false ]; then\n                even_num=$num\n                first_even_found=true\n            fi\n        else\n            if [ $first_odd_found == false ]; then\n                odd_num=$num\n                first_odd_found=true\n            fi\n        fi\n    done\n\n    echo $((even_num - odd_num))",
    "    local list=\"$1\"\n    local even=0\n    local odd=0\n    for i in $list; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $list; do\n        if [ $((i % 2)) -eq 1 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -ne 0 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local even odd\n    for i in $1; do\n        if [[ $i =~ ^[-+]?[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in $1; do\n        if [[ $i =~ ^[-+]?[0-9]+$ ]]; then\n            if [[ $i%2 -ne 0 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "    local even odd\n    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local list=\"$1\"\n  local even_num=0\n  local odd_num=0\n  local num=0\n  local num_found=0\n  for num in $list; do\n    if [[ $num_found -eq 0 ]]; then\n      if [[ $((num % 2)) -eq 0 ]]; then\n        even_num=$num\n        num_found=1\n      else\n        odd_num=$num\n        num_found=1\n      fi\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local even odd\n  for num in $1; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local list=\"$1\"\n    local even=0\n    local odd=0\n    local num=0\n    for i in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n        num=$((num + 1))\n    done\n    num=0\n    for i in $list; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd=$i\n            break\n        fi\n        num=$((num + 1))\n    done\n    echo $((even - odd))",
    "  local list=$1\n  local even=$(echo $list | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[02468]*$' | head -n 1)\n  local odd=$(echo $list | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[13579]*$' | head -n 1)\n  echo $((even - odd))",
    "  local even_number\n  local odd_number\n  local number\n  for number in $1; do\n    if [[ $((number % 2)) -eq 0 ]]; then\n      even_number=$number\n      break\n    fi\n  done\n  for number in $1; do\n    if [[ $((number % 2)) -eq 1 ]]; then\n      odd_number=$number\n      break\n    fi\n  done\n  echo $((even_number - odd_number))",
    "  local list=$1\n  local even=0\n  local odd=0\n  local i=0\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local -a list=($1)\n    local even_num=0\n    local odd_num=0\n    local i=0\n    local found_even=0\n    local found_odd=0\n\n    while [ $i -lt ${#list[@]} ]; do\n        if [ $((list[$i] % 2)) -eq 0 ]; then\n            even_num=${list[$i]}\n            found_even=1\n            break\n        fi\n        i=$((i + 1))\n    done\n\n    i=0\n    while [ $i -lt ${#list[@]} ]; do\n        if [ $((list[$i] % 2)) -ne 0 ]; then\n            odd_num=${list[$i]}\n            found_odd=1\n            break\n        fi\n        i=$((i + 1))\n    done\n\n    if [ $found_even -eq 1 ] && [ $found_odd -eq 1 ]; then\n        echo $((even_num - odd_num))\n    else\n        echo \"No even or odd number found\"\n    fi",
    "    local even odd\n    for n in $1; do\n        if [ $((n % 2)) -eq 0 ]; then\n            even=$n\n            break\n        fi\n    done\n    for n in $1; do\n        if [ $((n % 2)) -eq 1 ]; then\n            odd=$n\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local even_num=0\n  local odd_num=0\n  local found_even=0\n  local found_odd=0\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      if [ $found_even -eq 0 ]; then\n        even_num=$num\n        found_even=1\n      fi\n    else\n      if [ $found_odd -eq 0 ]; then\n        odd_num=$num\n        found_odd=1\n      fi\n    fi\n    if [ $found_even -eq 1 ] && [ $found_odd -eq 1 ]; then\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local even odd\n  for n in $1; do\n    if [ $((n % 2)) -eq 0 ]; then\n      even=$n\n      break\n    fi\n  done\n  for n in $1; do\n    if [ $((n % 2)) -ne 0 ]; then\n      odd=$n\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local list=$1\n    local even=$(echo $list | awk '{print $1}')\n    local odd=$(echo $list | awk '{print $2}')\n    echo $((even - odd))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[02468]+')\n  local odd=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[13579]+')\n  echo $((even - odd))",
    "  local even odd\n  for i in $1; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even=$i\n      break\n    fi\n  done\n  for i in $1; do\n    if [ $((i % 2)) -ne 0 ]; then\n      odd=$i\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local list=$1\n    local even=0\n    local odd=0\n    local num=0\n    for i in $list; do\n        num=$i\n        if [ $((num % 2)) -eq 0 ]; then\n            even=$num\n            break\n        fi\n    done\n    for i in $list; do\n        num=$i\n        if [ $((num % 2)) -ne 0 ]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local even_num=0\n  local odd_num=0\n  local first_even=0\n  local first_odd=0\n  local num=0\n  local diff=0\n  for num in $1\n  do\n    if [ $((num % 2)) -eq 0 ]\n    then\n      if [ $first_even -eq 0 ]\n      then\n        even_num=$num\n        first_even=1\n      fi\n    else\n      if [ $first_odd -eq 0 ]\n      then\n        odd_num=$num\n        first_odd=1\n      fi\n    fi\n  done\n  diff=$((even_num - odd_num))\n  echo $diff",
    "    local list=\"$1\"\n    local even_num odd_num\n    local -i diff\n\n    even_num=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[02468]+')\n    odd_num=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[13579]+')\n\n    diff=$((even_num - odd_num))\n    echo \"$diff\"",
    "  local list=$1\n  local even=0\n  local odd=0\n  local i=0\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local list=\"$1\"\n    local even_num odd_num\n    for num in $list; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [[ $((num % 2)) -eq 1 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local even odd\n  for i in $1; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even=$i\n      break\n    fi\n  done\n  for i in $1; do\n    if [ $((i % 2)) -ne 0 ]; then\n      odd=$i\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local list=$1\n  local even=$(echo $list | awk '{print $1}')\n  local odd=$(echo $list | awk '{print $2}')\n  echo $((even - odd))",
    "    local list=$1\n    local even=0\n    local odd=0\n    local i=0\n\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            if [ $even -eq 0 ]; then\n                even=$num\n            fi\n        else\n            if [ $odd -eq 0 ]; then\n                odd=$num\n            fi\n        fi\n        if [ $even -ne 0 ] && [ $odd -ne 0 ]; then\n            break\n        fi\n    done\n\n    echo $((even - odd))",
    "    local list=\"$1\"\n    local even_num odd_num\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num % 2)) -eq 1 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local even_num odd_num\n    for num in $1; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [[ $((num % 2)) -eq 1 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "    local list=\"$1\"\n    local even_num=0\n    local odd_num=0\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local list=$@\n  local even=0\n  local odd=0\n  local i=0\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even=$num\n      break\n    fi\n    i=$((i + 1))\n  done\n  for num in $list; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd=$num\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local even odd\n    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local even_num=0\n  local odd_num=0\n  local first_even=0\n  local first_odd=0\n  local num=0\n  for num in $1; do\n    if [ $((num%2)) -eq 0 ]; then\n      if [ $first_even -eq 0 ]; then\n        even_num=$num\n        first_even=1\n      fi\n    else\n      if [ $first_odd -eq 0 ]; then\n        odd_num=$num\n        first_odd=1\n      fi\n    fi\n  done\n  echo $((even_num-odd_num))",
    "  local list=$1\n  local even=$(echo $list | awk '{print $2}')\n  local odd=$(echo $list | awk '{print $1}')\n  echo $((even - odd))",
    "  local list=$1\n  local even=$(echo $list | awk '{print $1}')\n  local odd=$(echo $list | awk '{print $2}')\n  echo $((even - odd))",
    "    local even_num odd_num\n    for num in $1; do\n        if [[ $num%2 -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [[ $num%2 -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num -eq 0 ]]; then\n      continue\n    elif [[ $num -eq 1 ]]; then\n      odd_num=$num\n      break\n    elif [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    else\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((odd_num - even_num))",
    "  local list=$1\n  local even=$(echo $list | awk '{print $1}')\n  local odd=$(echo $list | awk '{print $2}')\n  echo $((even - odd))",
    "    local list=$1\n    local even_num=0\n    local odd_num=0\n    local num=0\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=\"$num\"\n      break\n    fi\n  done\n  for num in $list; do\n    if [ $((num % 2)) -eq 1 ]; then\n      odd_num=\"$num\"\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local -i even=0\n    local -i odd=0\n    local -i i=0\n    local -a arr=($1)\n    local -i len=${#arr[@]}\n    while [ $i -lt $len ]; do\n        if [ $((arr[$i] % 2)) -eq 0 ]; then\n            even=${arr[$i]}\n            break\n        fi\n        i=$((i+1))\n    done\n    i=0\n    while [ $i -lt $len ]; do\n        if [ $((arr[$i] % 2)) -ne 0 ]; then\n            odd=${arr[$i]}\n            break\n        fi\n        i=$((i+1))\n    done\n    echo $((even - odd))",
    "    local even odd\n    for n in $1; do\n        if [ $((n % 2)) -eq 0 ]; then\n            even=$n\n            break\n        fi\n    done\n    for n in $1; do\n        if [ $((n % 2)) -ne 0 ]; then\n            odd=$n\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local even_num odd_num\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -eq 1 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local even odd\n    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local -a arr=($1)\n    local even=0\n    local odd=0\n    local i=0\n    local len=${#arr[@]}\n    while [ $i -lt $len ]; do\n        if [ $((arr[$i] % 2)) -eq 0 ]; then\n            even=${arr[$i]}\n            break\n        fi\n        i=$((i + 1))\n    done\n    i=0\n    while [ $i -lt $len ]; do\n        if [ $((arr[$i] % 2)) -ne 0 ]; then\n            odd=${arr[$i]}\n            break\n        fi\n        i=$((i + 1))\n    done\n    echo $((even - odd))",
    "    local list=\"$1\"\n    local even=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[02468]+' | head -n1)\n    local odd=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[13579]+' | head -n1)\n    echo $((even-odd))",
    "  local list=$1\n  local even=$(echo \"$list\" | grep -Eo '[0-9]+' | grep -E '^[02468]$' | head -n 1)\n  local odd=$(echo \"$list\" | grep -Eo '[0-9]+' | grep -E '^[13579]$' | head -n 1)\n  echo $((even - odd))",
    "  local list=$1\n  local even=$(echo $list | awk '{print $1}')\n  local odd=$(echo $list | awk '{print $2}')\n  echo $((even - odd))",
    "    local list=$1\n    local even=$(echo $list | awk '{print $1}')\n    local odd=$(echo $list | awk '{print $2}')\n    local diff=$((even - odd))\n    echo $diff",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num =~ ^[0-9]+$ ]]; then\n      if [[ $num%2 -eq 0 ]]; then\n        even_num=$num\n        break\n      fi\n    fi\n  done\n  for num in $1; do\n    if [[ $num =~ ^[0-9]+$ ]]; then\n      if [[ $num%2 -ne 0 ]]; then\n        odd_num=$num\n        break\n      fi\n    fi\n  done\n  echo $((even_num-odd_num))",
    "    local even_num odd_num\n    for num in $1; do\n        if [[ $num%2 -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [[ $num%2 -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num-odd_num))",
    "  local list=$1\n  local even odd\n  for i in $list; do\n    if [[ $i =~ ^[0-9]+$ ]]; then\n      if [[ $i%2 -eq 0 ]]; then\n        even=$i\n        break\n      fi\n    fi\n  done\n  for i in $list; do\n    if [[ $i =~ ^[0-9]+$ ]]; then\n      if [[ $i%2 -eq 1 ]]; then\n        odd=$i\n        break\n      fi\n    fi\n  done\n  echo $((even-odd))",
    "  local even_number=\"\"\n  local odd_number=\"\"\n  for i in $1; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even_number=$i\n      break\n    fi\n  done\n  for i in $1; do\n    if [ $((i % 2)) -ne 0 ]; then\n      odd_number=$i\n      break\n    fi\n  done\n  echo $((even_number - odd_number))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | grep -E '^[0-9]+$' | grep -E '^[02468]+$' | head -n 1)\n  local odd=$(echo \"$list\" | grep -E '^[0-9]+$' | grep -E '^[13579]+$' | head -n 1)\n  if [ -z \"$even\" ] || [ -z \"$odd\" ]; then\n    echo \"0\"\n  else\n    echo \"$((even - odd))\"\n  fi",
    "    local -a list=($1)\n    local even odd\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -ne 0 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | sed -n 's/[^0-9]*\\([0-9]*\\).*/\\1/p' | grep -E '^[02468]$' | head -n 1)\n  local odd=$(echo \"$list\" | sed -n 's/[^0-9]*\\([0-9]*\\).*/\\1/p' | grep -E '^[13579]$' | head -n 1)\n  echo $((even - odd))",
    "  local even=0\n  local odd=0\n  for i in $1; do\n    if [ $((i%2)) -eq 0 ]; then\n      even=$i\n      break\n    fi\n  done\n  for i in $1; do\n    if [ $((i%2)) -ne 0 ]; then\n      odd=$i\n      break\n    fi\n  done\n  echo $((even-odd))",
    "    local list=$1\n    local even=0\n    local odd=0\n    local i=0\n    for num in $list; do\n        if [[ $((num % 2)) -eq 0 ]]; then\n            even=$num\n            break\n        fi\n    done\n    for num in $list; do\n        if [[ $((num % 2)) -eq 1 ]]; then\n            odd=$num\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local list=$1\n    local even_num=0\n    local odd_num=0\n    local num=0\n    local diff=0\n\n    for num in $list; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n\n    for num in $list; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n\n    diff=$((even_num - odd_num))\n    echo $diff",
    "  local even odd\n  for n in $1; do\n    if [ $((n % 2)) -eq 0 ]; then\n      even=$n\n      break\n    fi\n  done\n  for n in $1; do\n    if [ $((n % 2)) -ne 0 ]; then\n      odd=$n\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num -eq 0 ]]; then\n      continue\n    fi\n    if [[ $num -gt 0 ]]; then\n      if [[ $((num % 2)) -eq 0 ]]; then\n        even_num=$num\n        break\n      fi\n    else\n      if [[ $((num % 2)) -eq 1 ]]; then\n        odd_num=$num\n        break\n      fi\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local even=0\n    local odd=0\n    local found_even=0\n    local found_odd=0\n    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            if [ $found_even -eq 0 ]; then\n                even=$i\n                found_even=1\n            fi\n        else\n            if [ $found_odd -eq 0 ]; then\n                odd=$i\n                found_odd=1\n            fi\n        fi\n        if [ $found_even -eq 1 ] && [ $found_odd -eq 1 ]; then\n            break\n        fi\n    done\n    echo $((even - odd))",
    "    local even_num odd_num\n    for num in $1; do\n        if [ $((num % 2)) -eq 0 ]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [ $((num % 2)) -ne 0 ]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num - odd_num))",
    "  local list=$1\n  local even=$(echo $list | awk '{print $1}')\n  local odd=$(echo $list | awk '{print $2}')\n  echo $((even - odd))",
    "    local even_num odd_num\n    for num in $1; do\n        if [[ $num%2 -eq 0 ]]; then\n            even_num=$num\n            break\n        fi\n    done\n    for num in $1; do\n        if [[ $num%2 -ne 0 ]]; then\n            odd_num=$num\n            break\n        fi\n    done\n    echo $((even_num-odd_num))",
    "  local list=$1\n  local even=$(echo \"$list\" | grep -Eo '[0-9]+' | grep -E '^[02468]$' | head -n1)\n  local odd=$(echo \"$list\" | grep -Eo '[0-9]+' | grep -E '^[13579]$' | head -n1)\n  echo $((even-odd))",
    "    local -a list=($1)\n    local even odd\n    for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $((i % 2)) -eq 0 ]]; then\n                even=$i\n                break\n            else\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even - odd))",
    "  local even=$(echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[02468]+$' | head -n1)\n  local odd=$(echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | sort -n | grep -E '^[13579]+$' | head -n1)\n  echo $((even - odd))",
    "  local list=\"$1\"\n  local even odd\n  for i in $list; do\n    if [[ $((i % 2)) -eq 0 ]]; then\n      even=$i\n      break\n    fi\n  done\n  for i in $list; do\n    if [[ $((i % 2)) -ne 0 ]]; then\n      odd=$i\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local list=\"$1\"\n  local even=\"\"\n  local odd=\"\"\n  for i in $list; do\n    if [[ $i%2 -eq 0 ]]; then\n      even=\"$i\"\n      break\n    fi\n  done\n  for i in $list; do\n    if [[ $i%2 -ne 0 ]]; then\n      odd=\"$i\"\n      break\n    fi\n  done\n  echo $((even-odd))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[02468]+' | head -n1)\n  local odd=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[13579]+' | head -n1)\n  echo $((even - odd))",
    "    local even odd\n    for n in $1; do\n        if [ $((n%2)) -eq 0 ]; then\n            even=$n\n            break\n        fi\n    done\n    for n in $1; do\n        if [ $((n%2)) -eq 1 ]; then\n            odd=$n\n            break\n        fi\n    done\n    echo $((even-odd))",
    "  local list=\"$1\"\n  local even=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[02468]+')\n  local odd=$(echo \"$list\" | grep -Eo '^[0-9]+' | grep -Eo '^[13579]+')\n  echo $((even - odd))",
    "    local even odd\n    for i in $1; do\n        if [[ $((i % 2)) -eq 0 ]]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [[ $((i % 2)) -eq 1 ]]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local even_num odd_num\n  for num in $1; do\n    if [[ $num%2 -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [[ $num%2 -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num-odd_num))",
    "    local -i even=0\n    local -i odd=0\n    local -i i=0\n    local -i n=0\n    local -i diff=0\n    local -a list=($1)\n    local -i len=${#list[@]}\n    while [ $i -lt $len ]\n    do\n        n=${list[$i]}\n        if [ $((n%2)) -eq 0 ]\n        then\n            even=$n\n            break\n        fi\n        i=$((i+1))\n    done\n    i=0\n    while [ $i -lt $len ]\n    do\n        n=${list[$i]}\n        if [ $((n%2)) -ne 0 ]\n        then\n            odd=$n\n            break\n        fi\n        i=$((i+1))\n    done\n    diff=$((even-odd))\n    echo $diff",
    "  local even_num=0\n  local odd_num=0\n  local num=0\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -ne 0 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local list=\"$1\"\n    local even_number=0\n    local odd_number=0\n    local number=0\n    local found_even=false\n    local found_odd=false\n\n    for number in $list; do\n        if [[ $(( number % 2 )) -eq 0 ]]; then\n            if [[ $found_even == false ]]; then\n                even_number=$number\n                found_even=true\n            fi\n        else\n            if [[ $found_odd == false ]]; then\n                odd_number=$number\n                found_odd=true\n            fi\n        fi\n\n        if [[ $found_even == true && $found_odd == true ]]; then\n            break\n        fi\n    done\n\n    echo $(( even_number - odd_number ))",
    "    local even odd\n    for i in $1; do\n        if [ $((i % 2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [ $((i % 2)) -ne 0 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even - odd))",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local list=$1\n    local even=$(echo $list | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[02468]+$' | head -n1)\n    local odd=$(echo $list | tr ' ' '\\n' | grep -E '^[0-9]+$' | grep -E '^[13579]+$' | head -n1)\n    echo $((even - odd))",
    "  local even odd\n  for i in $1; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even=$i\n      break\n    fi\n  done\n  for i in $1; do\n    if [ $((i % 2)) -ne 0 ]; then\n      odd=$i\n      break\n    fi\n  done\n  echo $((even - odd))",
    "  local even_num odd_num\n  for num in $1; do\n    if [ $((num % 2)) -eq 0 ]; then\n      even_num=$num\n      break\n    fi\n  done\n  for num in $1; do\n    if [ $((num % 2)) -eq 1 ]; then\n      odd_num=$num\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local list=\"$1\"\n    local even=\"\"\n    local odd=\"\"\n    for i in $list; do\n        if [ $((i%2)) -eq 0 ]; then\n            even=$i\n            break\n        fi\n    done\n    for i in $list; do\n        if [ $((i%2)) -eq 1 ]; then\n            odd=$i\n            break\n        fi\n    done\n    echo $((even-odd))",
    "  local even odd\n  for i in $1; do\n    if [ $((i % 2)) -eq 0 ]; then\n      even=$i\n      break\n    fi\n  done\n  for i in $1; do\n    if [ $((i % 2)) -eq 1 ]; then\n      odd=$i\n      break\n    fi\n  done\n  echo $((even - odd))",
    "    local list=$1\n    local even=0\n    local odd=0\n    local first_even=0\n    local first_odd=0\n    local diff=0\n\n    for i in $list; do\n        if [[ $i -eq 0 ]]; then\n            continue\n        fi\n        if [[ $i -lt 0 ]]; then\n            i=$((i * -1))\n        fi\n        if [[ $((i % 2)) -eq 0 ]]; then\n            even=1\n            if [[ $first_even -eq 0 ]]; then\n                first_even=$i\n            fi\n        else\n            odd=1\n            if [[ $first_odd -eq 0 ]]; then\n                first_odd=$i\n            fi\n        fi\n        if [[ $even -eq 1 && $odd -eq 1 ]]; then\n            break\n        fi\n    done\n\n    if [[ $even -eq 1 && $odd -eq 1 ]]; then\n        diff=$((first_even - first_odd))\n    fi\n\n    echo $diff",
    "  local list=\"$1\"\n  local even_num odd_num\n  for num in $list; do\n    if [[ $((num % 2)) -eq 0 ]]; then\n      even_num=\"$num\"\n      break\n    fi\n  done\n  for num in $list; do\n    if [[ $((num % 2)) -eq 1 ]]; then\n      odd_num=\"$num\"\n      break\n    fi\n  done\n  echo $((even_num - odd_num))",
    "    local even odd\n    for i in $1; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in $1; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -ne 0 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even - odd))",
    "    local even_num=0\n    local odd_num=0\n    local num=0\n    for i in $1; do\n        if [[ $((i%2)) -eq 0 ]]; then\n            even_num=$i\n            break\n        fi\n    done\n    for i in $1; do\n        if [[ $((i%2)) -ne 0 ]]; then\n            odd_num=$i\n            break\n        fi\n    done\n    num=$((even_num-odd_num))\n    echo $num",
    "    local even odd\n    for i in $1; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 0 ]]; then\n                even=$i\n                break\n            fi\n        fi\n    done\n    for i in $1; do\n        if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i%2 -eq 1 ]]; then\n                odd=$i\n                break\n            fi\n        fi\n    done\n    echo $((even-odd))"
  ]
}
{
  "name": "mbpp_406_find_Parity",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find whether the parity of a given number is odd.\n#\n# $1 is an integer\nfind_Parity() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_406_find_Parity.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    find_Parity \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\") = \"false\" ]]\n    [[ $(candidate \"7\") = \"true\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if [ $1 -eq 0 ]; then\n        echo \"0 is even\"\n    elif [ $1 -eq 1 ]; then\n        echo \"1 is odd\"\n    elif [ $1 -lt 0 ]; then\n        if [ $(( $1 % 2 )) -eq 0 ]; then\n            echo \"$1 is even\"\n        else\n            echo \"$1 is odd\"\n        fi\n    else\n        if [ $(( $1 % 2 )) -eq 0 ]; then\n            echo \"$1 is even\"\n        else\n            echo \"$1 is odd\"\n        fi\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "\tif [ $(($1 % 2)) -eq 0 ]; then\n\t\techo \"Even\"\n\telse\n\t\techo \"Odd\"\n\tfi",
    "  if [ $(( $1 % 2 )) -eq 0 ]; then\n    echo \"Even\"\n  else\n    echo \"Odd\"\n  fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo \"0 is an even number\"\n    elif [[ $1 -eq 1 ]]; then\n        echo \"1 is an odd number\"\n    else\n        if [[ $(( $1 % 2 )) -eq 0 ]]; then\n            echo \"$1 is an even number\"\n        else\n            echo \"$1 is an odd number\"\n        fi\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]\n    then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "  if [ $(( $1 % 2 )) -eq 0 ]; then\n    echo \"Even\"\n  else\n    echo \"Odd\"\n  fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]\n    then\n        echo \"even\"\n    else\n        echo \"odd\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]\n    then\n        echo \"even\"\n    else\n        echo \"odd\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "\tif [ $(( $1 % 2 )) -eq 0 ]; then\n\t\techo \"Even\"\n\telse\n\t\techo \"Odd\"\n\tfi",
    "    if [ $1 -eq 0 ]; then\n        echo \"0 is neither odd nor even\"\n    elif [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"$1 is even\"\n    else\n        echo \"$1 is odd\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"Parity is even\"\n    else\n        echo \"Parity is odd\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo \"0 is neither odd nor even\"\n    elif [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"$1 is even\"\n    else\n        echo \"$1 is odd\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $(( $1 % 2 )) -eq 0 ]\n    then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi"
  ]
}
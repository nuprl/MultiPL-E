{
  "name": "mbpp_776_count_vowels",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to count those characters which have vowels as their neighbors in the given string.\n#\n# $1 is a string\ncount_vowels() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_776_count_vowels.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    count_vowels \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"bestinstareels\") = \"7\" ]]\n    [[ $(candidate \"partofthejourneyistheend\") = \"12\" ]]\n    [[ $(candidate \"amazonprime\") = \"5\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "\tlocal string=$1\n\tlocal count=0\n\tfor (( i=0; i<${#string}; i++ )); do\n\t\tif [[ ${string:$i:1} =~ [aeiou] ]]; then\n\t\t\tif [[ $i -eq 0 ]]; then\n\t\t\t\tif [[ ${string:$((i+1)):1} =~ [aeiou] ]]; then\n\t\t\t\t\tcount=$((count+1))\n\t\t\t\tfi\n\t\t\telif [[ $i -eq $(( ${#string}-1 )) ]]; then\n\t\t\t\tif [[ ${string:$((i-1)):1} =~ [aeiou] ]]; then\n\t\t\t\t\tcount=$((count+1))\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tif [[ ${string:$((i-1)):1} =~ [aeiou] ]] || [[ ${string:$((i+1)):1} =~ [aeiou] ]]; then\n\t\t\t\t\tcount=$((count+1))\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tdone\n\techo $count",
    "    local count=0\n    local string=\"$1\"\n    local length=${#string}\n    local i=0\n    local vowels=\"aeiou\"\n    local char=''\n    local prev=''\n    local next=''\n\n    for ((i=0; i<length; i++)); do\n        char=${string:$i:1}\n        prev=${string:$((i-1)):1}\n        next=${string:$((i+1)):1}\n\n        if [[ $vowels =~ $char ]]; then\n            if [[ $vowels =~ $prev ]] || [[ $vowels =~ $next ]]; then\n                count=$((count+1))\n            fi\n        fi\n    done\n\n    echo $count",
    "    local string=\"$1\"\n    local count=0\n    for ((i=0; i<${#string}; i++)); do\n        local char=${string:$i:1}\n        if [[ \"$char\" =~ [aeiou] ]]; then\n            ((count++))\n        fi\n    done\n    echo \"$count\"",
    "    local string=\"$1\"\n    local vowels=\"aeiou\"\n    local count=0\n    local i=0\n    local char=''\n    local prev=''\n    local next=''\n\n    for ((i=0; i<${#string}; i++)); do\n        char=\"${string:$i:1}\"\n        prev=\"${string:$((i-1)):1}\"\n        next=\"${string:$((i+1)):1}\"\n\n        if [[ \"${vowels}\" =~ \"${char}\" ]] && [[ \"${vowels}\" =~ \"${prev}\" ]] && [[ \"${vowels}\" =~ \"${next}\" ]]; then\n            ((count++))\n        fi\n    done\n\n    echo \"${count}\"",
    "  local str=\"$1\"\n  local vowels=\"aeiou\"\n  local count=0\n  local i=0\n  local len=${#str}\n  local char\n  local next_char\n\n  while [ $i -lt $len ]; do\n    char=${str:$i:1}\n    next_char=${str:$((i+1)):1}\n\n    if [[ \"$vowels\" =~ \"$char\" ]] && [[ \"$vowels\" =~ \"$next_char\" ]]; then\n      count=$((count+1))\n    fi\n\n    i=$((i+1))\n  done\n\n  echo $count",
    "    local count=0\n    local str=$1\n    local len=${#str}\n    local i=0\n    local ch\n    local prev_ch\n    local next_ch\n    local vowels=\"aeiou\"\n    for (( i=0; i<len; i++ ))\n    do\n        ch=${str:i:1}\n        prev_ch=${str:i-1:1}\n        next_ch=${str:i+1:1}\n        if [[ $vowels =~ $ch ]] && [[ $vowels =~ $prev_ch || $vowels =~ $next_ch ]]\n        then\n            (( count++ ))\n        fi\n    done\n    echo $count",
    "  local string=\"$1\"\n  local count=0\n  local i=0\n  local len=${#string}\n  local char=''\n  local prev=''\n  local next=''\n\n  while [ $i -lt $len ]; do\n    char=${string:$i:1}\n    prev=${string:$((i-1)):1}\n    next=${string:$((i+1)):1}\n\n    if [[ $char =~ [aeiou] ]]; then\n      if [[ $prev =~ [aeiou] ]] || [[ $next =~ [aeiou] ]]; then\n        count=$((count+1))\n      fi\n    fi\n\n    i=$((i+1))\n  done\n\n  echo $count",
    "\tlocal str=\"$1\"\n\tlocal count=0\n\tlocal i=0\n\tlocal len=${#str}\n\tlocal vowels=\"aeiou\"\n\tlocal char=''\n\tlocal prev_char=''\n\tlocal next_char=''\n\n\twhile [ $i -lt $len ]; do\n\t\tchar=\"${str:$i:1}\"\n\t\tprev_char=\"${str:$((i - 1)):1}\"\n\t\tnext_char=\"${str:$((i + 1)):1}\"\n\t\tif [[ $vowels =~ $char ]]; then\n\t\t\tif [[ $vowels =~ $prev_char ]] || [[ $vowels =~ $next_char ]]; then\n\t\t\t\tcount=$((count + 1))\n\t\t\tfi\n\t\tfi\n\t\ti=$((i + 1))\n\tdone\n\n\techo $count",
    "    local str=\"$1\"\n    local count=0\n    local i=0\n    local len=${#str}\n    local vowels=\"aeiou\"\n    local c1\n    local c2\n    while [ $i -lt $len ]; do\n        c1=${str:$i:1}\n        c2=${str:$((i+1)):1}\n        if [[ $vowels =~ $c1 ]] && [[ $vowels =~ $c2 ]]; then\n            count=$((count+1))\n        fi\n        i=$((i+1))\n    done\n    echo $count",
    "    local str=$1\n    local count=0\n    local i=0\n    local len=${#str}\n    local vowels=\"aeiou\"\n    local vowel_count=${#vowels}\n    local vowel_index=0\n\n    while [ $i -lt $len ]; do\n        local char=${str:$i:1}\n        local j=0\n        local is_vowel=0\n        while [ $j -lt $vowel_count ]; do\n            local vowel=${vowels:$j:1}\n            if [ \"$char\" == \"$vowel\" ]; then\n                is_vowel=1\n                break\n            fi\n            j=$((j+1))\n        done\n        if [ $is_vowel -eq 1 ]; then\n            local prev_char=${str:$((i-1)):1}\n            local next_char=${str:$((i+1)):1}\n            j=0\n            while [ $j -lt $vowel_count ]; do\n                local vowel=${vowels:$j:1}\n                if [ \"$prev_char\" == \"$vowel\" ] || [ \"$next_char\" == \"$vowel\" ]; then\n                    count=$((count+1))\n                    break\n                fi\n                j=$((j+1))\n            done\n        fi\n        i=$((i+1))\n    done\n    echo $count",
    "    local str=$1\n    local count=0\n    local i=0\n    local char=''\n    local prev=''\n    local next=''\n\n    for (( i=0; i<${#str}; i++ )); do\n        char=${str:$i:1}\n        prev=${str:$((i-1)):1}\n        next=${str:$((i+1)):1}\n\n        if [[ $char =~ [aeiou] ]]; then\n            if [[ $prev =~ [aeiou] ]] || [[ $next =~ [aeiou] ]]; then\n                (( count++ ))\n            fi\n        fi\n    done\n\n    echo $count",
    "    local count=0\n    local str=$1\n    local len=${#str}\n    local i=0\n    local c\n    local prev\n    local next\n    for (( i=0; i<len; i++ )); do\n        c=${str:$i:1}\n        prev=${str:$((i-1)):1}\n        next=${str:$((i+1)):1}\n        if [[ $c =~ [aeiou] ]]; then\n            if [[ $prev =~ [aeiou] ]] || [[ $next =~ [aeiou] ]]; then\n                count=$((count+1))\n            fi\n        fi\n    done\n    echo $count",
    "  local count=0\n  local string=$1\n  local length=${#string}\n  local i=0\n  while [ $i -lt $length ]; do\n    local char=${string:$i:1}\n    if [[ $char =~ [aeiou] ]]; then\n      (( count++ ))\n    fi\n    (( i++ ))\n  done\n  echo $count",
    "    local string=$1\n    local count=0\n    local i=0\n    local len=${#string}\n    local char=''\n    local prev_char=''\n    local next_char=''\n\n    while [ $i -lt $len ]; do\n        char=${string:$i:1}\n        prev_char=${string:$((i-1)):1}\n        next_char=${string:$((i+1)):1}\n\n        if [[ $prev_char =~ [aeiou] ]] || [[ $next_char =~ [aeiou] ]]; then\n            ((count++))\n        fi\n\n        ((i++))\n    done\n\n    echo $count",
    "    local str=\"$1\"\n    local count=0\n    for (( i = 0; i < ${#str}; i++ )); do\n        if [[ \"${str:$i:1}\" =~ [aeiou] ]]; then\n            (( count++ ))\n        fi\n    done\n    echo \"$count\"",
    "\tlocal count=0\n\tlocal str=$1\n\tlocal len=${#str}\n\tfor (( i=0; i<len; i++ )); do\n\t\tif [[ $i -eq 0 ]]; then\n\t\t\tif [[ ${str:$i:1} =~ [aeiou] ]] && [[ ${str:$((i+1)):1} =~ [aeiou] ]]; then\n\t\t\t\tcount=$((count+1))\n\t\t\tfi\n\t\telif [[ $i -eq $((len-1)) ]]; then\n\t\t\tif [[ ${str:$i:1} =~ [aeiou] ]] && [[ ${str:$((i-1)):1} =~ [aeiou] ]]; then\n\t\t\t\tcount=$((count+1))\n\t\t\tfi\n\t\telse\n\t\t\tif [[ ${str:$i:1} =~ [aeiou] ]] && [[ ${str:$((i-1)):1} =~ [aeiou] ]] && [[ ${str:$((i+1)):1} =~ [aeiou] ]]; then\n\t\t\t\tcount=$((count+1))\n\t\t\tfi\n\t\tfi\n\tdone\n\techo $count",
    "    local string=$1\n    local count=0\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n        local next_char=${string:$((i+1)):1}\n        if [[ $char =~ [aeiou] ]] && [[ $next_char =~ [aeiou] ]]; then\n            (( count++ ))\n        fi\n    done\n    echo $count",
    "  local count=0\n  local string=\"$1\"\n  local length=${#string}\n  local i=0\n  local char\n  local prev_char\n  local next_char\n  for ((i=0; i<length; i++)); do\n    char=${string:i:1}\n    prev_char=${string:i-1:1}\n    next_char=${string:i+1:1}\n    if [[ \"$char\" =~ [aeiou] ]]; then\n      if [[ \"$prev_char\" =~ [aeiou] ]] || [[ \"$next_char\" =~ [aeiou] ]]; then\n        count=$((count + 1))\n      fi\n    fi\n  done\n  echo \"$count\"",
    "    local str=\"$1\"\n    local count=0\n    local i=0\n    local len=${#str}\n    local c\n    local c_prev\n    local c_next\n\n    while [ $i -lt $len ]; do\n        c=${str:$i:1}\n        c_prev=${str:$((i-1)):1}\n        c_next=${str:$((i+1)):1}\n\n        if [[ \"$c\" =~ [aeiou] ]]; then\n            if [[ \"$c_prev\" =~ [aeiou] ]] || [[ \"$c_next\" =~ [aeiou] ]]; then\n                count=$((count+1))\n            fi\n        fi\n        i=$((i+1))\n    done\n\n    echo $count",
    "\tlocal str=\"$1\"\n\tlocal count=0\n\tfor (( i=0; i<${#str}; i++ )); do\n\t\tif [[ \"${str:$i:1}\" =~ [aeiou] ]]; then\n\t\t\tif [[ \"${str:$((i-1)):1}\" =~ [aeiou] ]] || [[ \"${str:$((i+1)):1}\" =~ [aeiou] ]]; then\n\t\t\t\tcount=$((count+1))\n\t\t\tfi\n\t\tfi\n\tdone\n\techo $count"
  ]
}
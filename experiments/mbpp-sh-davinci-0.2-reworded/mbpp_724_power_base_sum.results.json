{
  "name": "mbpp_724_power_base_sum",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_724_power_base_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$(( $result * $base ))\n        i=$(( $i + 1 ))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]\n  do\n    result=$((result*base))\n    i=$((i+1))\n  done\n  while [ $result -gt 0 ]\n  do\n    sum=$((sum+result%10))\n    result=$((result/10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  for (( i=1; i<=$power; i++ ))\n  do\n    result=$(( $result * $base ))\n  done\n  echo $result\n  while [ $result -gt 0 ]\n  do\n    sum=$(( $sum + $result % 10 ))\n    result=$(( $result / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    for ((i=0; i<power; i++)); do\n        result=$((result*base))\n    done\n    echo $result | grep -o . | paste -sd+ | bc\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxbs1jftl.sh: line 13: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  for ((i=1; i<=$power; i++)); do\n    result=$((result*base))\n  done\n  echo $result | sed 's/\\(.\\)/\\1\\n/g' | paste -sd+ | bc\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpgy0h9hr9.sh: line 13: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n\n  for (( i=0; i<power; i++ )); do\n    result=$(( result * base ))\n  done\n\n  while [ $result -gt 0 ]; do\n    sum=$(( sum + result % 10 ))\n    result=$(( result / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result * base))\n        i=$((i + 1))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  local sum=0\n  for (( i=0; i<$power; i++ ))\n  do\n    result=$(( $result * $base ))\n  done\n  for (( i=0; i<${#result}; i++ ))\n  do\n    sum=$(( $sum + ${result:$i:1} ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  local j=0\n  local temp=0\n\n  for (( i = 0; i < power; i++ )); do\n    result=$(( result * base ))\n  done\n\n  while [[ $result -gt 0 ]]; do\n    temp=$(( result % 10 ))\n    sum=$(( sum + temp ))\n    result=$(( result / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  local sum=0\n  for ((i=0; i<power; i++)); do\n    result=$((result * base))\n  done\n  for ((i=0; i<${#result}; i++)); do\n    sum=$((sum + ${result:i:1}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for (( i=0; i<power; i++ ))\n    do\n        result=$(( $result * $base ))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for (( i=0; i<power; i++ ))\n    do\n        result=$((result*base))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    echo $1 $2 | awk '{print $1^$2}' | sed 's/[0-9]/&\\n/g' | awk '{sum+=$1} END {print sum}'\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n\n    for (( i=0; i<$power; i++ ))\n    do\n        result=$(( $result * $base ))\n    done\n\n    while [ $result -gt 0 ]\n    do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  local sum=0\n  while [ $power -gt 0 ]; do\n    result=$((result * base))\n    power=$((power - 1))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n\n  for ((i=0; i<power; i++)); do\n    sum=$((sum + base))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]; do\n    result=$(( $result * $base ))\n    i=$(( $i + 1 ))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$(( $sum + $result % 10 ))\n    result=$(( $result / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n\n  for ((i=0; i<power; i++)); do\n    result=$((result * base))\n  done\n\n  while [[ $result -gt 0 ]]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local sum=0\n    local base=$1\n    local power=$2\n    local result=1\n    local i=0\n    while [ $i -lt $power ]; do\n        result=$((result * base))\n        i=$((i + 1))\n    done\n    for ((i=0; i<${#result}; i++)); do\n        sum=$((sum + ${result:$i:1}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result*base))\n        i=$((i+1))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    for (( i=0; i<$power; i++ )); do\n        result=$(( $result * $base ))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for ((i=0; i<power; i++)); do\n        result=$((result*base))\n    done\n    for ((i=0; i<${#result}; i++)); do\n        sum=$((sum+${result:i:1}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=1\n    while [ $i -le $power ]\n    do\n        result=$((result*base))\n        i=$((i+1))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  local sum=0\n  for ((i=1; i<=$power; i++)); do\n    result=$((result*base))\n  done\n  for ((i=0; i<${#result}; i++)); do\n    sum=$((sum+${result:$i:1}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result*base))\n        i=$((i+1))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    for ((i=0; i<$power; i++)); do\n        result=$((result * base))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  for ((i=0; i<power; i++))\n  do\n    result=$((result*base))\n  done\n  while [ $result -gt 0 ]\n  do\n    sum=$((sum+result%10))\n    result=$((result/10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  local sum=0\n  for ((i=0; i<power; i++)); do\n    result=$((result*base))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum+result%10))\n    result=$((result/10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    while [ $power -gt 0 ]; do\n        result=$((result * base))\n        power=$((power - 1))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n\n    for ((i=1; i<=power; i++)); do\n        result=$((result * base))\n    done\n\n    while [[ $result -gt 0 ]]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    local digit=0\n\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n\n    while [ $result -gt 0 ]; do\n        digit=$((result % 10))\n        sum=$((sum + digit))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    for ((i=0; i<power; i++)); do\n        result=$((result*base))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n\n    while [[ $result -gt 0 ]]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for ((i=0; i<power; i++)); do\n        result=$((result*base))\n    done\n    for ((i=0; i<${#result}; i++)); do\n        sum=$((sum+${result:i:1}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=1\n  while [ $i -le $power ]\n  do\n    result=$((result*base))\n    i=$((i+1))\n  done\n  while [ $result -gt 0 ]\n  do\n    sum=$((sum+result%10))\n    result=$((result/10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for (( i=0; i<$power; i++ )); do\n        result=$(( $result * $base ))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]\n  do\n    result=$((result*base))\n    i=$((i+1))\n  done\n  for i in $(echo $result | grep -o .)\n  do\n    sum=$((sum+i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  local j=0\n  local temp=0\n\n  for ((i=1; i<=$power; i++))\n  do\n    result=$((result*base))\n  done\n\n  while [ $result -gt 0 ]\n  do\n    temp=$((result%10))\n    sum=$((sum+temp))\n    result=$((result/10))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n\n    for ((i=0; i<${#result}; i++)); do\n        sum=$((sum + ${result:i:1}))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]\n  do\n    result=$(( $result * $base ))\n    i=$(( $i + 1 ))\n  done\n  while [ $result -gt 0 ]\n  do\n    sum=$(( $sum + $result % 10 ))\n    result=$(( $result / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n\n    for ((i=1; i<=$power; i++)); do\n        result=$((result * base))\n    done\n\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for ((i=1; i<=power; i++)); do\n        result=$((result * base))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n\n    for ((i=1; i<=$power; i++)); do\n        result=$((result * base))\n    done\n\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local num=$base\n    while [ $power -gt 0 ]; do\n        while [ $num -gt 0 ]; do\n            sum=$((sum + num % 10))\n            num=$((num / 10))\n        done\n        num=$sum\n        sum=0\n        power=$((power - 1))\n    done\n    echo $num\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n\n    for ((i=0; i<${#result}; i++)); do\n        sum=$((sum + ${result:$i:1}))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for (( i=0; i<$power; i++ ))\n    do\n        result=$(( $result * $base ))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n    while [[ $result -gt 0 ]]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result*base))\n        i=$((i+1))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n\n  for ((i=1; i<=$power; i++)); do\n    result=$((result * base))\n  done\n\n  while [[ $result -gt 0 ]]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    for (( i=0; i<$power; i++ )); do\n        result=$(( $result * $base ))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]\n  do\n    result=$(( $result * $base ))\n    i=$(( $i + 1 ))\n  done\n  for (( i=0; i<${#result}; i++ ))\n  do\n    sum=$(( $sum + ${result:$i:1} ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]\n  do\n    result=$((result * base))\n    i=$((i + 1))\n  done\n  while [ $result -gt 0 ]\n  do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  for ((i=1; i<=power; i++)); do\n    result=$((result*base))\n  done\n  while [[ $result -gt 0 ]]; do\n    sum=$((sum+result%10))\n    result=$((result/10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    while [ $power -gt 0 ]; do\n        result=$((result * base))\n        power=$((power - 1))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local res=$base\n  for (( i=1; i<$power; i++ )); do\n    res=$(( $res * $base ))\n  done\n  while [ $res -gt 0 ]; do\n    sum=$(( $sum + $res % 10 ))\n    res=$(( $res / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  for ((i=0; i<$power; i++)); do\n    result=$((result * base))\n  done\n  local sum=0\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n\n    while [[ $result -gt 0 ]]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]; do\n    result=$((result * base))\n    i=$((i + 1))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  for ((i=0; i<power; i++)); do\n    result=$((result*base))\n  done\n  while [[ $result -gt 0 ]]; do\n    sum=$((sum+result%10))\n    result=$((result/10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  local sum=0\n  for (( i=0; i<power; i++ )); do\n    result=$(( result * base ))\n  done\n  while [[ $result -gt 0 ]]; do\n    sum=$(( sum + result % 10 ))\n    result=$(( result / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]; do\n    result=$((result * base))\n    i=$((i + 1))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  for ((i=1; i<=$power; i++)); do\n    result=$((result * base))\n  done\n  echo $result | sed -e 's/\\(.\\)/\\1\\n/g' | paste -sd+ | bc\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp9c6jaj_v.sh: line 13: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n\n  while [ $i -lt $power ]; do\n    result=$((result * base))\n    i=$((i + 1))\n  done\n\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    for ((i=0; i<$power; i++)); do\n        result=$((result*base))\n    done\n    echo $result | grep -o . | awk '{sum+=$1} END {print sum}'\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for ((i=1; i<=$power; i++)); do\n        result=$((result * base))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]; do\n    result=$((result * base))\n    i=$((i + 1))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local res=1\n  for (( i=1; i<=$power; i++ )); do\n    res=$(( $res * $base ))\n  done\n  while [ $res -gt 0 ]; do\n    sum=$(( $sum + $res % 10 ))\n    res=$(( $res / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n    echo $result | grep -o . | paste -sd+ | bc\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp_caw7f14.sh: line 13: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    for (( i=0; i<power; i++ )); do\n        result=$(( result * base ))\n    done\n    while [[ $result -gt 0 ]]; do\n        sum=$(( sum + result % 10 ))\n        result=$(( result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for (( i=0; i<power; i++ )); do\n        result=$(( result * base ))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$(( sum + result % 10 ))\n        result=$(( result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  for ((i=1; i<=$power; i++)); do\n    result=$((result * base))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    local j=0\n    for ((i=0; i<power; i++))\n    do\n        result=$((result*base))\n    done\n    for ((j=0; j<${#result}; j++))\n    do\n        sum=$((sum+${result:$j:1}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n\n    for ((i=0; i<${#result}; i++)); do\n        sum=$((sum + ${result:i:1}))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  for ((i=1; i<=$power; i++)); do\n    result=$((result * base))\n  done\n  while [[ $result -gt 0 ]]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=0\n  local sum=0\n  local i=0\n  local j=0\n  local temp=0\n  local temp_sum=0\n\n  for (( i=0; i<$power; i++ ))\n  do\n    result=$(( $base * $base ))\n    base=$result\n  done\n\n  for (( j=0; j<${#result}; j++ ))\n  do\n    temp=${result:$j:1}\n    temp_sum=$(( $temp_sum + $temp ))\n  done\n\n  echo $temp_sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]; do\n    result=$((result*base))\n    i=$((i+1))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum+result%10))\n    result=$((result/10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result * base))\n        i=$((i + 1))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n\n    for (( i=0; i<$power; i++ ))\n    do\n        result=$(( $result * $base ))\n    done\n\n    for (( i=0; i<${#result}; i++ ))\n    do\n        sum=$(( $sum + ${result:$i:1} ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  for ((i=1; i<=$power; i++)); do\n    result=$((result * base))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]; do\n    result=$(( $result * $base ))\n    i=$(( $i + 1 ))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$(( $sum + $result % 10 ))\n    result=$(( $result / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]\n  do\n    result=$((result*base))\n    i=$((i+1))\n  done\n  while [ $result -gt 0 ]\n  do\n    sum=$((sum+result%10))\n    result=$((result/10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    local digit=0\n    while [ $i -lt $power ]; do\n        result=$((result * base))\n        i=$((i + 1))\n    done\n    while [ $result -gt 0 ]; do\n        digit=$((result % 10))\n        sum=$((sum + digit))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result*base))\n        i=$((i+1))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]; do\n    result=$((result*base))\n    i=$((i+1))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum+result%10))\n    result=$((result/10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result*base))\n        i=$((i+1))\n    done\n    for i in $(echo $result | grep -o .)\n    do\n        sum=$((sum+i))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n\n    while [ $i -lt $power ]; do\n        result=$((result * base))\n        i=$((i + 1))\n    done\n\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    for ((i=0; i<$power; i++)); do\n        result=$((result * base))\n    done\n    for ((i=0; i<${#result}; i++)); do\n        sum=$((sum + ${result:$i:1}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n\n    for (( i=1; i<=$power; i++ )); do\n        result=$(( $result * $base ))\n    done\n\n    while [[ $result -gt 0 ]]; do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n\n    for ((i=0; i<$power; i++)); do\n        result=$((result * base))\n    done\n\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result*base))\n        i=$((i+1))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n\n    for (( i=0; i<$power; i++ )); do\n        result=$(( $result * $base ))\n    done\n\n    while [[ $result -gt 0 ]]; do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n\n  while [ $i -lt $power ]; do\n    result=$((result * base))\n    i=$((i + 1))\n  done\n\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    local j=0\n    local digit=0\n\n    for ((i=0; i<power; i++))\n    do\n        result=$((result*base))\n    done\n\n    while [ $result -gt 0 ]\n    do\n        digit=$((result%10))\n        sum=$((sum+digit))\n        result=$((result/10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]; do\n        result=$((result * base))\n        i=$((i + 1))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n\n    for ((i = 0; i < power; i++)); do\n        result=$((result * base))\n    done\n\n    while [[ $result -gt 0 ]]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]\n  do\n    result=$(( $result * $base ))\n    i=$(( $i + 1 ))\n  done\n  while [ $result -gt 0 ]\n  do\n    sum=$(( $sum + $result % 10 ))\n    result=$(( $result / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    for ((i = 0; i < power; i++)); do\n        result=$((result * base))\n    done\n    while [[ $result -gt 0 ]]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n\n    while [ $i -lt $power ]; do\n        result=$((result * base))\n        i=$((i + 1))\n    done\n\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result*base))\n        i=$((i+1))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]; do\n    result=$((result * base))\n    i=$((i + 1))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]; do\n    result=$((result * base))\n    i=$((i + 1))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n\n    for ((i=0; i<power; i++)); do\n        result=$((result*base))\n    done\n\n    while [ $result -gt 0 ]; do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$(( $result * $base ))\n        i=$(( $i + 1 ))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local i=0\n  local result=1\n  while [ $i -lt $power ]\n  do\n    result=$((result*base))\n    i=$((i+1))\n  done\n  while [ $result -gt 0 ]\n  do\n    sum=$((sum+result%10))\n    result=$((result/10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=$((base ** power))\n\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n\n    local result=$((base ** power))\n    while [[ $result -gt 0 ]]; do\n        local digit=$((result % 10))\n        sum=$((sum + digit))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    for ((i=0; i<power; i++)); do\n        result=$((result*base))\n    done\n    while [[ $result -gt 0 ]]; do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]\n  do\n    result=$((result*base))\n    i=$((i+1))\n  done\n  while [ $result -gt 0 ]\n  do\n    sum=$((sum+result%10))\n    result=$((result/10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  for ((i=0; i<power; i++)); do\n    result=$((result*base))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum+result%10))\n    result=$((result/10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for (( i=1; i<=$power; i++ )); do\n        result=$(( $result * $base ))\n    done\n    for (( i=0; i<${#result}; i++ )); do\n        sum=$(( $sum + ${result:$i:1} ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    for (( i=0; i<$power; i++ ))\n    do\n        result=$(( $result * $base ))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  for (( i=0; i<$power; i++ ))\n  do\n    result=$(( $result * $base ))\n  done\n  while [ $result -gt 0 ]\n  do\n    sum=$(( $sum + $result % 10 ))\n    result=$(( $result / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  local sum=0\n  while [ $power -gt 0 ]; do\n    result=$((result * base))\n    power=$((power - 1))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]; do\n        result=$((result * base))\n        i=$((i + 1))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  for (( i=1; i<=power; i++ )); do\n    result=$(( $result * $base ))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$(( $sum + $result % 10 ))\n    result=$(( $result / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    local digit=0\n\n    for (( i = 0; i < power; i++ )); do\n        result=$(( result * base ))\n    done\n\n    while [ $result -gt 0 ]; do\n        digit=$(( result % 10 ))\n        sum=$(( sum + digit ))\n        result=$(( result / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n\n    for ((i=0; i<power; i++)); do\n        result=$((result*base))\n    done\n\n    while [ $result -gt 0 ]; do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    local j=0\n    local digit=0\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n    for ((i=0; i<${#result}; i++)); do\n        digit=${result:i:1}\n        sum=$((sum + digit))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  local sum=0\n  local digit=0\n\n  while [ $power -gt 0 ]; do\n    result=$((result * base))\n    power=$((power - 1))\n  done\n\n  while [ $result -gt 0 ]; do\n    digit=$((result % 10))\n    sum=$((sum + digit))\n    result=$((result / 10))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for ((i=1; i<=power; i++)); do\n        result=$((result*base))\n    done\n    for ((i=0; i<${#result}; i++)); do\n        sum=$((sum+${result:$i:1}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    local j=0\n    for (( i=1; i<=$power; i++ ))\n    do\n        result=$(( $result * $base ))\n    done\n    for (( j=0; j<${#result}; j++ ))\n    do\n        sum=$(( $sum + ${result:$j:1} ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  for ((i=1; i<=$power; i++)); do\n    result=$((result*base))\n  done\n  echo $result | sed -e 's/\\(.\\)/\\1\\n/g' | paste -sd+ | bc\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpo0ierg59.sh: line 13: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    # calculate base^power\n    while [ $i -lt $power ]\n    do\n        result=$(( $result * $base ))\n        i=$(( $i + 1 ))\n    done\n    # calculate sum of digits\n    while [ $result -gt 0 ]\n    do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]; do\n        result=$((result * base))\n        i=$((i + 1))\n    done\n    for ((i = 0; i < ${#result}; i++)); do\n        sum=$((sum + ${result:$i:1}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for ((i=0; i<power; i++)); do\n        result=$((result*base))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    for ((i=0; i<power; i++)); do\n        result=$((result*base))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  for ((i=0; i<power; i++))\n  do\n    result=$((result * base))\n  done\n  echo $result | grep -o . | paste -sd+ | bc\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpcqufzvwp.sh: line 14: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n\n  while [ $i -lt $power ]\n  do\n    result=$(( $result * $base ))\n    i=$(( $i + 1 ))\n  done\n\n  while [ $result -gt 0 ]\n  do\n    sum=$(( $sum + $result % 10 ))\n    result=$(( $result / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result * base))\n        i=$((i + 1))\n    done\n\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result*base))\n        i=$((i+1))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]; do\n        result=$((result * base))\n        i=$((i + 1))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    while [ $power -gt 0 ]; do\n        result=$((result * base))\n        power=$((power - 1))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n\n    for (( i=1; i<=$power; i++ )); do\n        result=$(( $result * $base ))\n    done\n\n    for (( i=0; i<${#result}; i++ )); do\n        sum=$(( $sum + ${result:$i:1} ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  local j=0\n  local temp=0\n  local temp_sum=0\n  local temp_result=0\n  local temp_base=0\n  local temp_power=0\n  local temp_i=0\n  local temp_j=0\n\n  if [ $base -le 0 ] || [ $power -le 0 ]; then\n    echo \"Invalid input\"\n    return 1\n  fi\n\n  for ((i=1; i<=$power; i++)); do\n    temp_base=$base\n    temp_power=$power\n    temp_i=$i\n    temp_j=$j\n    temp_result=1\n    temp_sum=0\n    for ((j=1; j<=$i; j++)); do\n      temp_result=$((temp_result * temp_base))\n    done\n    while [ $temp_result -gt 0 ]; do\n      temp=$((temp_result % 10))\n      temp_sum=$((temp_sum + temp))\n      temp_result=$((temp_result / 10))\n    done\n    sum=$((sum + temp_sum))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  local sum=0\n  for (( i=1; i<=$power; i++ )); do\n    result=$(( $result * $base ))\n  done\n  while [[ $result -gt 0 ]]; do\n    sum=$(( $sum + $result % 10 ))\n    result=$(( $result / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for (( i=0; i<power; i++ )); do\n        result=$(( result * base ))\n    done\n    while [[ $result -gt 0 ]]; do\n        sum=$(( sum + result % 10 ))\n        result=$(( result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result*base))\n        i=$((i+1))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    while [ $power -gt 0 ]; do\n        result=$(( $result * $base ))\n        power=$(( $power - 1 ))\n    done\n    while [ $result -gt 0 ]; do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    for (( i=0; i<$power; i++ ))\n    do\n        result=$(( $result * $base ))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  for ((i=1; i<=$power; i++)); do\n    result=$((result*base))\n  done\n  echo $result | grep -o . | paste -sd+ | bc\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpop5hrtqj.sh: line 13: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  for ((i=0; i<$power; i++)); do\n    result=$((result * base))\n  done\n  echo $result | sed 's/\\(.\\)/\\1+/g' | sed 's/+$//' | bc\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpul98mwon.sh: line 13: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    local digit=0\n    for ((i=0; i<power; i++)); do\n        result=$((result*base))\n    done\n    while [ $result -gt 0 ]; do\n        digit=$((result%10))\n        sum=$((sum+digit))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n\n    for ((i=1; i<=$power; i++)); do\n        result=$((result * base))\n    done\n\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]\n  do\n    result=$((result*base))\n    i=$((i+1))\n  done\n  while [ $result -gt 0 ]\n  do\n    sum=$((sum+result%10))\n    result=$((result/10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]\n  do\n    result=$(( $result * $base ))\n    i=$(( $i + 1 ))\n  done\n  while [ $result -gt 0 ]\n  do\n    sum=$(( $sum + $result % 10 ))\n    result=$(( $result / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n\n    for ((i = 0; i < power; i++)); do\n        result=$((result * base))\n    done\n\n    while [[ $result -gt 0 ]]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n    while [[ $result -gt 0 ]]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n\n  for (( i=1; i<=$power; i++ )); do\n    result=$(( $result * $base ))\n  done\n\n  while [ $result -gt 0 ]; do\n    sum=$(( $sum + $result % 10 ))\n    result=$(( $result / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=\"$1\"\n  local power=\"$2\"\n  local result=1\n  local sum=0\n  for (( i=1; i<=power; i++ )); do\n    result=$(( result * base ))\n  done\n  while [[ $result -gt 0 ]]; do\n    sum=$(( sum + result % 10 ))\n    result=$(( result / 10 ))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  while [ $power -gt 0 ]; do\n    result=$((result * base))\n    power=$((power - 1))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n\n    while [ $power -gt 0 ]; do\n        result=$((result * base))\n        power=$((power - 1))\n    done\n\n    while [ $result -gt 0 ]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n  while [ $i -lt $power ]; do\n    result=$((result*base))\n    i=$((i+1))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum+result%10))\n    result=$((result/10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n\n    for (( i = 0; i < power; i++ )); do\n        result=$(( result * base ))\n    done\n\n    while [[ $result -gt 0 ]]; do\n        sum=$(( sum + result % 10 ))\n        result=$(( result / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    local digit=0\n\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n\n    while [ $result -gt 0 ]; do\n        digit=$((result % 10))\n        sum=$((sum + digit))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  for ((i=1; i<=power; i++)); do\n    result=$((result * base))\n  done\n  echo $result | grep -o . | awk '{sum+=$1} END {print sum}'\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n\n  for (( i=1; i<=$power; i++ )); do\n    result=$(( $result * $base ))\n  done\n\n  while [ $result -gt 0 ]; do\n    sum=$(( $sum + $result % 10 ))\n    result=$(( $result / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  local sum=0\n  local i=0\n\n  for ((i=0; i<power; i++)); do\n    result=$((result * base))\n  done\n\n  for ((i=0; i<${#result}; i++)); do\n    sum=$((sum + ${result:i:1}))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=1\n  while [ $i -le $power ]\n  do\n    result=$(( $result * $base ))\n    i=$(( $i + 1 ))\n  done\n  while [ $result -gt 0 ]\n  do\n    sum=$(( $sum + $result % 10 ))\n    result=$(( $result / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    local j=0\n    local digit=0\n    for ((i=0; i<power; i++)); do\n        result=$((result*base))\n    done\n    for ((i=0; i<${#result}; i++)); do\n        digit=${result:$i:1}\n        sum=$((sum+digit))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    for (( i=0; i<$power; i++ )); do\n        result=$(( $result * $base ))\n    done\n    while [[ $result -gt 0 ]]; do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n\n    for (( i=0; i<$power; i++ ))\n    do\n        result=$(( $result * $base ))\n    done\n\n    for (( i=0; i<${#result}; i++ ))\n    do\n        sum=$(( $sum + ${result:$i:1} ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local i=0\n  local result=1\n  while [ $i -lt $power ]; do\n    result=$((result * base))\n    i=$((i + 1))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n\n    while [[ $result -gt 0 ]]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$(( $result * $base ))\n        i=$(( $i + 1 ))\n    done\n    echo $result | grep -o . | awk '{sum+=$1} END {print sum}'\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  local sum=0\n  for ((i=0; i<power; i++)); do\n    result=$((result*base))\n  done\n  for ((i=0; i<${#result}; i++)); do\n    sum=$((sum+${result:i:1}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local i=0\n\n  for ((i=0; i<power; i++)); do\n    sum=$((sum + base))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result*base))\n        i=$((i+1))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  local sum=0\n  for (( i=1; i<=$power; i++ ))\n  do\n    result=$(( $result * $base ))\n  done\n  for (( i=0; i<${#result}; i++ ))\n  do\n    sum=$(( $sum + ${result:$i:1} ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=0\n    local i=0\n    local tmp=0\n    local tmp_sum=0\n    local tmp_base=0\n\n    for ((i=0; i<power; i++)); do\n        tmp=$((base**i))\n        tmp_base=$tmp\n        while [ $tmp_base -gt 0 ]; do\n            tmp_sum=$((tmp_base%10))\n            result=$((result+tmp_sum))\n            tmp_base=$((tmp_base/10))\n        done\n    done\n    echo $result\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n\n    for (( i=0; i<$power; i++ )); do\n        result=$(( $result * $base ))\n    done\n\n    while [[ $result -gt 0 ]]; do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  local sum=0\n\n  for ((i=0; i<power; i++)); do\n    result=$((result * base))\n  done\n\n  for ((i=0; i<${#result}; i++)); do\n    sum=$((sum + ${result:i:1}))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for ((i=0; i<power; i++)); do\n        result=$((result*base))\n    done\n    while [[ $result -gt 0 ]]; do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    for ((i=1; i<=$power; i++)); do\n        result=$((result * base))\n    done\n    while [[ $result -gt 0 ]]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  local i=0\n\n  for (( i=0; i<power; i++ )); do\n    result=$(( $result * $base ))\n  done\n\n  for (( i=0; i<${#result}; i++ )); do\n    sum=$(( $sum + ${result:$i:1} ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result*base))\n        i=$((i+1))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n\n    for (( i=0; i<$power; i++ )); do\n        result=$(( $result * $base ))\n    done\n\n    while [ $result -gt 0 ]; do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191296,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    local j=0\n    local digit=0\n    local temp=0\n\n    for ((i=1; i<=$power; i++)); do\n        result=$((result * base))\n    done\n\n    temp=$result\n    while [ $temp -gt 0 ]; do\n        digit=$((temp % 10))\n        sum=$((sum + digit))\n        temp=$((temp / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191296,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  for ((i=1; i<=$power; i++)); do\n    result=$((result * base))\n  done\n  echo $result | grep -o . | awk '{s+=$1} END {print s}'\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191296,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result*base))\n        i=$((i+1))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    local digit=0\n\n    for ((i=0; i<power; i++)); do\n        result=$((result * base))\n    done\n\n    while [ $result -gt 0 ]; do\n        digit=$((result % 10))\n        sum=$((sum + digit))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191296,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    local digit=0\n\n    for ((i=0; i<power; i++)); do\n        result=$((result*base))\n    done\n\n    while [ $result -gt 0 ]; do\n        digit=$((result%10))\n        sum=$((sum+digit))\n        result=$((result/10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191296,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result*base))\n        i=$((i+1))\n    done\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]\n    do\n        result=$((result*base))\n        i=$((i+1))\n    done\n    for i in $(echo $result | grep -o .)\n    do\n        sum=$((sum+i))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n\n    for ((i=0; i<power; i++))\n    do\n        result=$((result*base))\n    done\n\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191296,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    for ((i=0; i<power; i++)); do\n        result=$((result*base))\n    done\n    while [[ $result -gt 0 ]]; do\n        sum=$((sum+result%10))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  local sum=0\n  for ((i=0; i<power; i++)); do\n    result=$((result*base))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum+result%10))\n    result=$((result/10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n\n    for ((i=0; i<$power; i++)); do\n        result=$((result * base))\n    done\n\n    while [[ $result -gt 0 ]]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191296,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    for ((i=1; i<=$power; i++)); do\n        result=$((result * base))\n    done\n    while [[ $result -gt 0 ]]; do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local sum=0\n  local result=1\n  for ((i=0; i<$power; i++))\n  do\n    result=$((result * base))\n  done\n  while [ $result -gt 0 ]\n  do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191296,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local result=1\n    local sum=0\n    local digit=0\n\n    for (( i=0; i<power; i++ )); do\n        result=$(( result * base ))\n    done\n\n    while [[ $result -gt 0 ]]; do\n        digit=$(( result % 10 ))\n        sum=$(( sum + digit ))\n        result=$(( result / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191296,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]; do\n        result=$((result * base))\n        i=$((i + 1))\n    done\n    for i in $(echo $result | grep -o .); do\n        sum=$((sum + i))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191296,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    while [ $i -lt $power ]; do\n        result=$(( $result * $base ))\n        i=$(( $i + 1 ))\n    done\n    for i in $(echo $result | grep -o .); do\n        sum=$(( $sum + $i ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191296,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n\n    while [ $i -lt $power ]\n    do\n        result=$((result * base))\n        i=$((i + 1))\n    done\n\n    while [ $result -gt 0 ]\n    do\n        sum=$((sum + result % 10))\n        result=$((result / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191296,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n  local base=$1\n  local power=$2\n  local result=1\n  local sum=0\n  for ((i=0; i<power; i++)); do\n    result=$((result * base))\n  done\n  while [ $result -gt 0 ]; do\n    sum=$((sum + result % 10))\n    result=$((result / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191296,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    # Write your code here\n    echo $(( $1 ** $2 )) | sed 's/\\(.\\)/\\1 + /g' | sed 's/ + $//' | bc\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191296,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpbg7raene.sh: line 8: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    local i=0\n    local digit=0\n    for ((i=0; i<power; i++)); do\n        result=$((result*base))\n    done\n    while [ $result -gt 0 ]; do\n        digit=$((result%10))\n        sum=$((sum+digit))\n        result=$((result/10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191296,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.\n#\n# $1 is an integer\n# $2 is an integer\npower_base_sum() {\n    local base=$1\n    local power=$2\n    local sum=0\n    local result=1\n    for (( i=0; i<$power; i++ )); do\n        result=$(( $result * $base ))\n    done\n    while [[ $result -gt 0 ]]; do\n        sum=$(( $sum + $result % 10 ))\n        result=$(( $result / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    power_base_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"100\") = \"115\" ]]\n    [[ $(candidate \"8\" \"10\") = \"37\" ]]\n    [[ $(candidate \"8\" \"15\") = \"62\" ]]\n    [[ $(candidate \"3\" \"3\") = \"9\" ]]\n}\n\nrun_test",
      "timestamp": 1667191295,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
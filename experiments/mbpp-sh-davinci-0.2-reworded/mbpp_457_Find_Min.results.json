{
  "name": "mbpp_457_Find_Min",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_457_Find_Min.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i n=${#1}\n  local -i m=0\n  local -i l=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=$1\n  shift\n  for i; do\n    if [ ${#i} -lt ${#min} ]; then\n      min=$i\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _List=$1\n  local Min=${#_List[@]}\n  local Min_Index=0\n  for ((i=0; i<${#_List[@]}; i++)); do\n    if [[ ${#_List[i]} -lt $Min ]]; then\n      Min=${#_List[i]}\n      Min_Index=$i\n    fi\n  done\n  echo $Min_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpl5b4u221.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n\tlocal min=$1\n\tshift\n\tfor i in $@; do\n\t\tif [ ${#i} -lt ${#min} ]; then\n\t\t\tmin=$i\n\t\tfi\n\tdone\n\techo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local Min=${1}\n    shift\n    for i in $@; do\n        if [ ${#i} -lt ${#Min} ]; then\n            Min=${i}\n        fi\n    done\n    echo ${Min}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=9999\n    local min_index=0\n    local index=0\n    for i in $1; do\n        if [ ${#i} -lt $min ]; then\n            min=${#i}\n            min_index=$index\n        fi\n        index=$((index + 1))\n    done\n    echo $min_index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min_len=${#1}\n    local -i len=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=0\n  local -i i=0\n  local -i len=0\n  local -i min_len=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i _=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _list=$1\n  local _min=${#_list[@]}\n  local _sublist\n  for _sublist in \"${_list[@]}\"; do\n    if [[ ${#_sublist} -lt $_min ]]; then\n      _min=${#_sublist}\n    fi\n  done\n  echo \"$_min\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp9irpx_4z.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local Min=0\n    local Min_Index=0\n    local Index=0\n    for i in $1; do\n        if [ $Index -eq 0 ]; then\n            Min=$i\n            Min_Index=$Index\n        else\n            if [ $i -lt $Min ]; then\n                Min=$i\n                Min_Index=$Index\n            fi\n        fi\n        Index=$((Index+1))\n    done\n    echo $Min_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp0danpyd_.sh: line 14: [: 2\\\\n1: integer expression expected\\n/tmp/tmp0danpyd_.sh: line 14: [: 1\\\\n1: integer expression expected\\n/tmp/tmp0danpyd_.sh: line 14: [: 1\\\\n1: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=$1\n    local min_len=${#min}\n    local item\n    for item in \"${@:2}\"; do\n        if [[ ${#item} -lt $min_len ]]; then\n            min=$item\n            min_len=${#item}\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i _=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _List=$1\n  local _Min=${#_List[@]}\n  local _Index=0\n  for ((i=0; i<${#_List[@]}; i++)); do\n    if [[ ${#_List[i]} -lt $_Min ]]; then\n      _Min=${#_List[i]}\n      _Index=$i\n    fi\n  done\n  echo $_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmphc9z24zh.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _Find_Min_List=\"$1\"\n  local _Find_Min_Min=${#_Find_Min_List[@]}\n  local _Find_Min_Min_Index=0\n  for (( _Find_Min_Index=0; _Find_Min_Index < ${#_Find_Min_List[@]}; _Find_Min_Index++ )); do\n    if [[ ${#_Find_Min_List[$_Find_Min_Index]} -lt $_Find_Min_Min ]]; then\n      _Find_Min_Min=${#_Find_Min_List[$_Find_Min_Index]}\n      _Find_Min_Min_Index=$_Find_Min_Index\n    fi\n  done\n  echo \"$_Find_Min_Min_Index\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpqza0d07y.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _List=$1\n  local -i _Min=${#_List[@]}\n  local -i _Index=0\n  for ((i=0; i<${#_List[@]}; i++)); do\n    if [[ ${#_List[i]} -lt _Min ]]; then\n      _Min=${#_List[i]}\n      _Index=$i\n    fi\n  done\n  echo $_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp823g2nu5.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local Min_Len=${#1}\n  local Min_List=$1\n  for List in \"$@\"; do\n    if [ ${#List} -lt $Min_Len ]; then\n      Min_Len=${#List}\n      Min_List=$List\n    fi\n  done\n  echo $Min_List\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _Find_Min_List=$1\n  local _Find_Min_Min=${#_Find_Min_List[@]}\n  local _Find_Min_Min_Index=0\n  for ((i=0;i<${#_Find_Min_List[@]};i++)); do\n    if [[ ${#_Find_Min_List[i]} -lt $_Find_Min_Min ]]; then\n      _Find_Min_Min=${#_Find_Min_List[i]}\n      _Find_Min_Min_Index=$i\n    fi\n  done\n  echo $_Find_Min_Min_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmppwyp4w5w.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _Find_Min_List=$1\n  local -i _Find_Min_Min=${#_Find_Min_List[@]}\n  local -i _Find_Min_Index=0\n  for ((_Find_Min_Index=0;_Find_Min_Index<${#_Find_Min_List[@]};_Find_Min_Index++)); do\n    if [ ${#_Find_Min_List[_Find_Min_Index]} -lt $_Find_Min_Min ]; then\n      _Find_Min_Min=${#_Find_Min_List[_Find_Min_Index]}\n    fi\n  done\n  echo $_Find_Min_Min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp29mlpiw6.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _list=$1\n  local min=${#_list[@]}\n  local min_index=0\n  local i=0\n  for sublist in \"${_list[@]}\"; do\n    if [[ ${#sublist[@]} -lt $min ]]; then\n      min=${#sublist[@]}\n      min_index=$i\n    fi\n    ((i++))\n  done\n  echo $min_index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpgmuc4yqx.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=${1}\n  shift\n  for i in $@; do\n    if [ ${#i} -lt ${#min} ]; then\n      min=${i}\n    fi\n  done\n  echo ${min}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min_len=${#1}\n  local min_list=$1\n  for list in \"${@:2}\"; do\n    if [[ ${#list} -lt $min_len ]]; then\n      min_len=${#list}\n      min_list=$list\n    fi\n  done\n  echo $min_list\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min_len=${#1}\n    local -i len=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i n\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=${1}\n    shift\n    for i in $@; do\n        if [ ${#i} -lt ${#min} ]; then\n            min=${i}\n        fi\n    done\n    echo ${min}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=$1\n    shift\n    for i in $@; do\n        if [ ${#i} -lt ${#min} ]; then\n            min=$i\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i _=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n  local -i bo=0\n  local -i bp=0\n  local -i\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i min=0\n  local -i min_i=0\n  local -i min_len=${#1}\n  local -a min_list=()\n  local -a list=()\n  local -a sublist=()\n  local -a sublists=()\n  local -a sublists_len=()\n  local -a sublists_i=()\n  local -a sublists_min=()\n  local -a sublists_min_i=()\n  local -a sublists_min_len=()\n  local -a sublists_min_list=()\n  local -a sublists_min_list_len=()\n  local -a sublists_min_list_i=()\n  local -a sublists_min_list_min=()\n  local -a sublists_min_list_min_i=()\n  local -a sublists_min_list_min_len=()\n  local -a sublists_min_list_min_list=()\n  local -a sublists_min_list_min_list_len=()\n  local -a sublists_min_list_min_list_i=()\n  local -a sublists_min_list_min_list_min=()\n  local -a sublists_min_list_min_list_min_i=()\n  local -a sublists_min_list_min_list_min_len=()\n  local -a sublists_min_list_min_list_min_list=()\n  local -a sublists_min_list_min_list_min_list_len=()\n  local -a sublists_min_list_min_list_min_list_i=()\n  local -a sublists_min_list_min_list_min_list_min=()\n  local -a sublists_min_list_min_list_min_list_min_i=()\n  local -a sublists_min_list_min_list_min_list_min_len=()\n  local -a sublists_min_list_min_list_min_list_min_list=()\n  local -a\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min_len=${#1}\n  local min_sublist=$1\n  shift\n  for sublist in \"$@\"; do\n    if [[ ${#sublist} -lt $min_len ]]; then\n      min_len=${#sublist}\n      min_sublist=$sublist\n    fi\n  done\n  echo $min_sublist\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=$1\n  shift\n  for i in $@; do\n    if [ ${#i} -lt ${#min} ]; then\n      min=$i\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -a list=($1)\n  local -i min_len=${#list[0]}\n  local -i min_idx=0\n  local -i i=0\n  for ((i=1; i<${#list[@]}; i++)); do\n    if ((${#list[i]} < min_len)); then\n      min_len=${#list[i]}\n      min_idx=$i\n    fi\n  done\n  echo \"${list[min_idx]}\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _List=$1\n  local _Min=${#_List[@]}\n  local _Index=0\n  for ((_I=0; _I<${#_List[@]}; _I++)); do\n    if [[ ${#_List[$_I]} -lt $_Min ]]; then\n      _Min=${#_List[$_I]}\n      _Index=$_I\n    fi\n  done\n  echo $_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp6uw7kbiy.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -n _list=$1\n    local -i _min=${#_list[@]}\n    local -i _len=0\n    local -i _i=0\n    for _i in ${!_list[@]}; do\n        _len=${#_list[$_i]}\n        if [ $_len -lt $_min ]; then\n            _min=$_len\n        fi\n    done\n    echo $_min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpjursfmii.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=$1\n  shift\n  for i in $@; do\n    if [ ${#i} -lt ${#min} ]; then\n      min=$i\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min_len=${#1}\n    local min_list=$1\n    shift\n    for list in $@; do\n        if [ ${#list} -lt $min_len ]; then\n            min_len=${#list}\n            min_list=$list\n        fi\n    done\n    echo $min_list\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -r Any=\"$1\"\n  local -r Min_Length=\"$(echo \"$Any\" | wc -l)\"\n  local -r Min_Sublist=\"$(echo \"$Any\" | head -n \"$Min_Length\")\"\n  echo \"$Min_Sublist\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=$1\n    shift\n    for i in $@; do\n        if [ ${#i} -lt ${#min} ]; then\n            min=$i\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _List=\"$1\"\n  local _Min=${#_List[@]}\n  local _Min_Index=0\n  for (( _Index=0; _Index < ${#_List[@]}; _Index++ )); do\n    if [[ ${#_List[_Index]} -lt $_Min ]]; then\n      _Min=${#_List[_Index]}\n      _Min_Index=$_Index\n    fi\n  done\n  echo $_Min_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpdtxv8fgu.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -a list=($1)\n    local -i len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ ${#list[$i]} -lt $min ]; then\n            min=${#list[$i]}\n        fi\n        i=$i+1\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i min_i=0\n  local -i min_len=0\n  local -i len=0\n  local -i len_i=0\n  local -i len_j=0\n  local -i len_k=0\n  local -i len_l=0\n  local -i len_m=0\n  local -i len_n=0\n  local -i len_o=0\n  local -i len_p=0\n  local -i len_q=0\n  local -i len_r=0\n  local -i len_s=0\n  local -i len_t=0\n  local -i len_u=0\n  local -i len_v=0\n  local -i len_w=0\n  local -i len_x=0\n  local -i len_y=0\n  local -i len_z=0\n  local -i len_A=0\n  local -i len_B=0\n  local -i len_C=0\n  local -i len_D=0\n  local -i len_E=0\n  local -i len_F=0\n  local -i len_G=0\n  local -i len_H=0\n  local -i len_I=0\n  local -i len_J=0\n  local -i len_K=0\n  local -i len_L=0\n  local -i len_M=0\n  local -i len_N=0\n  local -i len_O=0\n  local -i len_P=0\n  local -i len_Q=0\n  local -i len_R=0\n  local -i len_S=0\n  local -i len_T=0\n  local -i len_U=0\n  local -i len_V=0\n  local -i len_W=0\n  local -i len_X=0\n  local -i len_Y=0\n  local -i len_Z=0\n  local -i len_0=0\n  local -i len_1=0\n  local -i len_2=0\n  local -i len\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _list=$1\n  local -i _min=${#_list[@]}\n  local -i _i=0\n  local -i _j=0\n  local -i _k=0\n  local -i _l=0\n  local -i _m=0\n  local -i _n=0\n  local -i _o=0\n  local -i _p=0\n  local -i _q=0\n  local -i _r=0\n  local -i _s=0\n  local -i _t=0\n  local -i _u=0\n  local -i _v=0\n  local -i _w=0\n  local -i _x=0\n  local -i _y=0\n  local -i _z=0\n  local -i _A=0\n  local -i _B=0\n  local -i _C=0\n  local -i _D=0\n  local -i _E=0\n  local -i _F=0\n  local -i _G=0\n  local -i _H=0\n  local -i _I=0\n  local -i _J=0\n  local -i _K=0\n  local -i _L=0\n  local -i _M=0\n  local -i _N=0\n  local -i _O=0\n  local -i _P=0\n  local -i _Q=0\n  local -i _R=0\n  local -i _S=0\n  local -i _T=0\n  local -i _U=0\n  local -i _V=0\n  local -i _W=0\n  local -i _X=0\n  local -i _Y=0\n  local -i _Z=0\n  local -i _a=0\n  local -i _b=0\n  local -i _c=0\n  local -i _d=0\n  local -i _e=0\n  local -i _f=0\n  local -i _g=0\n  local -i _h=0\n  local -i _i=0\n  local -i _j=0\n \n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpkrq0ny6b.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i min_i=0\n  local -i min_len=${#1}\n  local -a list=($1)\n  local -i len=${#list[@]}\n  while (( i < len )); do\n    if (( ${#list[i]} < min_len )); then\n      min_len=${#list[i]}\n      min_i=$i\n    fi\n    (( i++ ))\n  done\n  echo ${list[min_i]}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=$1\n  local min_len=${#min}\n  local item\n  for item in \"${@:2}\"; do\n    if [[ ${#item} -lt $min_len ]]; then\n      min=$item\n      min_len=${#item}\n    fi\n  done\n  echo \"$min\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=${1:0:1}\n    local min_len=${#min}\n    local len=0\n    local i=0\n    local j=0\n    local sub=''\n    for ((i=0; i<${#1}; i++)); do\n        for ((j=i+1; j<=${#1}; j++)); do\n            sub=${1:i:j}\n            len=${#sub}\n            if ((len < min_len)); then\n                min=$sub\n                min_len=$len\n            fi\n        done\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min_len=${#1}\n  local min_sublist=$1\n  for sublist in ${@:2}; do\n    if [[ ${#sublist} -lt $min_len ]]; then\n      min_len=${#sublist}\n      min_sublist=$sublist\n    fi\n  done\n  echo $min_sublist\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _list=$1\n  local _min=${#_list[@]}\n  local _min_index=0\n  for ((i=0; i<${#_list[@]}; i++)); do\n    if [[ ${#_list[i]} -lt $_min ]]; then\n      _min=${#_list[i]}\n      _min_index=$i\n    fi\n  done\n  echo $_min_index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp5xaed0sv.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min_len=${#1}\n  local min_sublist=$1\n  for sublist in $1; do\n    if [[ ${#sublist} -lt $min_len ]]; then\n      min_len=${#sublist}\n      min_sublist=$sublist\n    fi\n  done\n  echo $min_sublist\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min_len=${#1}\n    local min_sublist=$1\n    for sublist in ${@:2}; do\n        if [[ ${#sublist} -lt $min_len ]]; then\n            min_len=${#sublist}\n            min_sublist=$sublist\n        fi\n    done\n    echo $min_sublist\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local Min_Length=${#1}\n    local Min_Sublist=$1\n    for Sublist in ${@:2}; do\n        if [[ ${#Sublist} -lt $Min_Length ]]; then\n            Min_Length=${#Sublist}\n            Min_Sublist=$Sublist\n        fi\n    done\n    echo $Min_Sublist\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i min=0\n  local -i min_len=0\n  local -i len=0\n  local -a list=(\"${!1}\")\n  local -i len_list=${#list[@]}\n  while (( i < len_list )); do\n    len=${#list[i]}\n    if (( len < min_len || i == 0 )); then\n      min_len=$len\n      min=$i\n    fi\n    (( i++ ))\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpxrjnhvlh.sh: line 10: 1\\\\n1 2\\\\n1 2 3: invalid variable name\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -a Min_List=()\n  local -a Min_List_Length=()\n  local -a Min_List_Index=()\n  local -a Min_List_Index_Length=()\n  local -a Min_List_Index_Length_Index=()\n  local -a Min_List_Index_Length_Index_Length=()\n  local -a Min_List_Index_Length_Index_Length_Index=()\n  local -a Min_List_Index_Length_Index_Length_Index_Length=()\n  local -a Min_List_Index_Length_Index_Length_Index_Length_Index=()\n  local -a Min_List_Index_Length_Index_Length_Index_Length_Index_Length=()\n  local -a Min_List_Index_Length_Index_Length_Index_Length_Index_Length_Index=()\n  local -a Min_List_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length=()\n  local -a Min_List_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index=()\n  local -a Min_List_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length=()\n  local -a Min_List_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index=()\n  local -a Min_List_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length=()\n  local -a Min_List_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index=()\n  local -a Min_List_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length=()\n  local -a Min_List_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index_Length_Index=()\n  local -a Min_List_Index_Length_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _list=$1\n  local _min=${#_list[@]}\n  local _sublist=()\n  for ((i=0; i<${#_list[@]}; i++)); do\n    for ((j=i+1; j<${#_list[@]}; j++)); do\n      if [[ ${#_list[@]:i:j} -lt $_min ]]; then\n        _min=${#_list[@]:i:j}\n        _sublist=(\"${_list[@]:i:j}\")\n      fi\n    done\n  done\n  echo \"${_sublist[@]}\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpof7fnmuy.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -a List=(\"${!1}\")\n  local Min=${#List[@]}\n  for i in \"${List[@]}\"; do\n    if [[ ${#i} -lt $Min ]]; then\n      Min=${#i}\n    fi\n  done\n  echo $Min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpme96ftky.sh: line 6: 1\\\\n1 2\\\\n1 2 3: invalid variable name\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i len=0\n  local -i len_min=${#1}\n  local -i len_max=${#1}\n  local -i len_sub=0\n  local -i len_sub_min=0\n  local -i len_sub_max=0\n  local -i len_sub_min_max=0\n  local -i len_sub_max_min=0\n  local -i len_sub_min_max_min=0\n  local -i len_sub_max_min_min=0\n  local -i len_sub_min_max_min_min=0\n  local -i len_sub_max_min_min_min=0\n  local -i len_sub_min_max_min_min_min=0\n  local -i len_sub_max_min_min_min_min=0\n  local -i len_sub_min_max_min_min_min_min=0\n  local -i len_sub_max_min_min_min_min_min=0\n  local -i len_sub_min_max_min_min_min_min_min=0\n  local -i len_sub_max_min_min_min_min_min_min=0\n  local -i len_sub_min_max_min_min_min_min_min_min=0\n  local -i len_sub_max_min_min_min_min_min_min_min=0\n  local -i len_sub_min_max_min_min_min_min_min_min_min=0\n  local -i len_sub_max_min_min_min_min_min_min_min_min=0\n  local -i len_sub_min_max_min_min_min_min_min_min_min_min=0\n  local -i len_sub_max_min_min_min_min_min_min_min_min_min=0\n  local -i len_sub_min_max_\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _array=$1\n  local -i _min=${#_array[@]}\n  local -i _index=0\n  for ((i=0;i<${#_array[@]};i++)); do\n    if [[ ${#_array[i]} -lt _min ]]; then\n      _min=${#_array[i]}\n      _index=$i\n    fi\n  done\n  echo $_index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpetk7quoq.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -a _min_list=()\n  local -i _min_len=0\n  local -i _len=0\n  local -i _i=0\n  local -i _j=0\n  local -i _k=0\n  local -i _l=0\n  local -i _m=0\n  local -i _n=0\n  local -i _o=0\n  local -i _p=0\n  local -i _q=0\n  local -i _r=0\n  local -i _s=0\n  local -i _t=0\n  local -i _u=0\n  local -i _v=0\n  local -i _w=0\n  local -i _x=0\n  local -i _y=0\n  local -i _z=0\n  local -i _A=0\n  local -i _B=0\n  local -i _C=0\n  local -i _D=0\n  local -i _E=0\n  local -i _F=0\n  local -i _G=0\n  local -i _H=0\n  local -i _I=0\n  local -i _J=0\n  local -i _K=0\n  local -i _L=0\n  local -i _M=0\n  local -i _N=0\n  local -i _O=0\n  local -i _P=0\n  local -i _Q=0\n  local -i _R=0\n  local -i _S=0\n  local -i _T=0\n  local -i _U=0\n  local -i _V=0\n  local -i _W=0\n  local -i _X=0\n  local -i _Y=0\n  local -i _Z=0\n  local -i _a=0\n  local -i _b=0\n  local -i _c=0\n  local -i _d=0\n  local -i _e=0\n  local -i _f=0\n  local -i _g=0\n  local -i _h=0\n  local -i _i=0\n  local -\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _List=$1\n  local -i _Min=${#_List[@]}\n  local -i _Index=0\n  for ((i=0; i<${#_List[@]}; i++)); do\n    if [[ ${#_List[i]} -lt _Min ]]; then\n      _Min=${#_List[i]}\n      _Index=$i\n    fi\n  done\n  echo $_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp823g2nu5.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=0\n    local min_index=0\n    local i=0\n    for i in $1; do\n        if [ $i -lt $min ]; then\n            min=$i\n            min_index=$i\n        fi\n    done\n    echo $min_index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmphi4yg37k.sh: line 10: [: 1\\\\n1: integer expression expected\\n/tmp/tmphi4yg37k.sh: line 10: [: 2\\\\n1: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=$1\n  local min_len=${#1}\n  shift\n  for i in $@; do\n    if [ ${#i} -lt $min_len ]; then\n      min=$i\n      min_len=${#i}\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _list=$1\n  local -i _min=${#_list[@]}\n  local -i _index=0\n  for ((i=0;i<${#_list[@]};i++)); do\n    if [[ ${#_list[i]} -lt _min ]]; then\n      _min=${#_list[i]}\n      _index=$i\n    fi\n  done\n  echo $_index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp2sjtvkbr.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _Find_Min_List=$1\n  local -i _Find_Min_Min=${#_Find_Min_List[@]}\n  local -i _Find_Min_Index=0\n  for ((i=0; i<${#_Find_Min_List[@]}; i++)); do\n    if [[ ${#_Find_Min_List[i]} -lt _Find_Min_Min ]]; then\n      _Find_Min_Min=${#_Find_Min_List[i]}\n      _Find_Min_Index=$i\n    fi\n  done\n  echo $_Find_Min_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpa3le2p87.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n\tlocal -i min=${#1}\n\tlocal -i i=0\n\tlocal -i j=0\n\tlocal -i k=0\n\tlocal -i l=0\n\tlocal -i m=0\n\tlocal -i n=0\n\tlocal -i o=0\n\tlocal -i p=0\n\tlocal -i q=0\n\tlocal -i r=0\n\tlocal -i s=0\n\tlocal -i t=0\n\tlocal -i u=0\n\tlocal -i v=0\n\tlocal -i w=0\n\tlocal -i x=0\n\tlocal -i y=0\n\tlocal -i z=0\n\tlocal -i A=0\n\tlocal -i B=0\n\tlocal -i C=0\n\tlocal -i D=0\n\tlocal -i E=0\n\tlocal -i F=0\n\tlocal -i G=0\n\tlocal -i H=0\n\tlocal -i I=0\n\tlocal -i J=0\n\tlocal -i K=0\n\tlocal -i L=0\n\tlocal -i M=0\n\tlocal -i N=0\n\tlocal -i O=0\n\tlocal -i P=0\n\tlocal -i Q=0\n\tlocal -i R=0\n\tlocal -i S=0\n\tlocal -i T=0\n\tlocal -i U=0\n\tlocal -i V=0\n\tlocal -i W=0\n\tlocal -i X=0\n\tlocal -i Y=0\n\tlocal -i Z=0\n\tlocal -i a=0\n\tlocal -i b=0\n\tlocal -i c=0\n\tlocal -i d=0\n\tlocal -i e=0\n\tlocal -i f=0\n\tlocal -i g=0\n\tlocal -i h=0\n\tlocal -i ii=0\n\tlocal -i jj=0\n\tlocal -i kk=0\n\tlocal -i ll=0\n\tlocal -i mm=0\n\tlocal -i nn=0\n\tlocal -i oo=0\n\tlocal -i pp=0\n\tlocal -i qq=0\n\tlocal -i rr=\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -r List=\"$1\"\n  local -r List_Length=\"$(echo \"$List\" | wc -w)\"\n  local -r List_Length_Min=\"$(echo \"$List\" | wc -w | sort -n | head -n 1)\"\n  local -r List_Length_Min_Index=\"$(echo \"$List\" | wc -w | sort -n | head -n 1 | awk '{print NR}')\"\n  local -r List_Length_Min_Sublist=\"$(echo \"$List\" | awk '{print $'$List_Length_Min_Index'}')\"\n  echo \"$List_Length_Min_Sublist\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -a Min_List=()\n  local -i Min_Length=0\n  local -i Index=0\n  local -i Length=0\n  local -a List=()\n  local -i List_Length=0\n\n  # Get the list of lists.\n  List=( \"$@\" )\n  List_Length=${#List[@]}\n\n  # Find the minimum length.\n  Min_Length=${#List[0]}\n  for (( Index=1; Index<List_Length; Index++ )); do\n    Length=${#List[Index]}\n    if [[ $Length -lt $Min_Length ]]; then\n      Min_Length=$Length\n    fi\n  done\n\n  # Find the list with the minimum length.\n  for (( Index=0; Index<List_Length; Index++ )); do\n    Length=${#List[Index]}\n    if [[ $Length -eq $Min_Length ]]; then\n      Min_List=( \"${Min_List[@]}\" \"${List[Index]}\" )\n    fi\n  done\n\n  # Return the list of lists with the minimum length.\n  echo \"${Min_List[@]}\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i min=0\n  local -i len=0\n  local -i min_len=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min_len=${#1}\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -a sublist=()\n    local -a min_sublist=()\n    for ((i=0; i<${#1}; i++)); do\n        for ((j=i+1; j<=${#1}; j++)); do\n            len=${#1:$i:$j}\n            if (( len < min_len )); then\n                min_len=$len\n                min_sublist=(\"${1:$i:$j}\")\n            fi\n        done\n    done\n    echo \"${min_sublist[@]}\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpczptvx4i.sh: line 14: ${#1:$i:$j}: bad substitution\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n  local -i bo=0\n  local -i bp=0\n  local -i\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=${1}\n    local min_len=${#1}\n    shift\n    for i in \"$@\"; do\n        if [[ ${#i} -lt ${min_len} ]]; then\n            min=${i}\n            min_len=${#i}\n        fi\n    done\n    echo ${min}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=$1\n    shift\n    for i in $@; do\n        if [ ${#i} -lt ${#min} ]; then\n            min=$i\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min_len=${#1}\n    local -i len\n    local -i i=0\n    local -i j\n    local -a sublist\n    local -a min_sublist\n    while (( i < ${#1} )); do\n        j=i\n        while (( j < ${#1} )); do\n            sublist=(${1:i:j})\n            len=${#sublist[@]}\n            if (( len < min_len )); then\n                min_len=$len\n                min_sublist=(${sublist[@]})\n            fi\n            (( j++ ))\n        done\n        (( i++ ))\n    done\n    echo ${min_sublist[@]}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=$1\n    shift\n    for i in $@; do\n        if [ ${#i} -lt ${#min} ]; then\n            min=$i\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=${1}\n  local min_len=${#1}\n  for i in ${@:2}; do\n    if [[ ${#i} -lt ${min_len} ]]; then\n      min=${i}\n      min_len=${#i}\n    fi\n  done\n  echo ${min}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i min_index=0\n  local -i min_len=${#1[0]}\n  local -i len=0\n\n  for ((i=1; i<${#1[@]}; i++)); do\n    len=${#1[i]}\n    if ((len < min_len)); then\n      min_index=$i\n      min_len=$len\n    fi\n  done\n\n  echo $min_index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpdre9zuf5.sh: line 8: min_len=${#1[0]}: bad substitution\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _Find_Min_List=\"$1\"\n  local _Find_Min_Min=${#_Find_Min_List[@]}\n  local _Find_Min_Min_Index=0\n  for ((_Find_Min_Index=0; _Find_Min_Index < ${#_Find_Min_List[@]}; _Find_Min_Index++)); do\n    if [[ ${#_Find_Min_List[_Find_Min_Index]} -lt _Find_Min_Min ]]; then\n      _Find_Min_Min=${#_Find_Min_List[_Find_Min_Index]}\n      _Find_Min_Min_Index=$_Find_Min_Index\n    fi\n  done\n  echo \"$_Find_Min_Min_Index\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpvfoyc5og.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=$1\n    shift\n    for i in $@; do\n        if [ ${#i} -lt ${#min} ]; then\n            min=$i\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min_len=${#1}\n  local -i len\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i ab\n  local -i ac\n  local -i ad\n  local -i ae\n  local -i af\n  local -i ag\n  local -i ah\n  local -i ai\n  local -i aj\n  local -i ak\n  local -i al\n  local -i am\n  local -i an\n  local -i ao\n  local -i ap\n  local -i aq\n  local -i ar\n  local -i as\n  local -i at\n  local -i au\n  local -i av\n  local -i aw\n  local -i ax\n  local -i ay\n  local -i az\n  local -i ba\n  local -i bb\n  local -i bc\n  local -i bd\n  local -i be\n  local -i bf\n  local -i bg\n  local -i bh\n  local -i bi\n  local -i bj\n  local -i bk\n  local -i bl\n  local -i bm\n  local -i bn\n  local -i bo\n  local -i bp\n  local -i bq\n  local -i br\n  local -i bs\n  local -i bt\n  local -i bu\n  local -i bv\n  local -i bw\n  local -i bx\n  local -i by\n  local -i bz\n  local -i ca\n  local -i cb\n  local -i cc\n  local -i cd\n  local -i ce\n  local -i cf\n  local -i cg\n  local -i ch\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min_len=${#1}\n  local -i len\n  local -a min_sublist\n  local -a sublist\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  for ((i=0; i<${#1}; i++)); do\n    for ((j=i+1; j<=${#1}; j++)); do\n      sublist=(\"${1:i:j}\")\n      len=${#sublist[@]}\n      if ((len < min_len)); then\n        min_len=$len\n        min_sublist=(\"${sublist[@]}\")\n      fi\n    done\n  done\n  echo \"${min_sublist[@]}\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min_len=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i len=0\n    local -i min_i=0\n    local -i min_j=0\n    local -i min_k=0\n    local -i min_len=${#1}\n    local -a sublist\n    local -a min_sublist\n    local -a list=(\"${!1}\")\n    for ((i=0; i<${#list[@]}; i++)); do\n        for ((j=i; j<${#list[@]}; j++)); do\n            for ((k=j; k<${#list[@]}; k++)); do\n                sublist=(\"${list[@]:i:j-i+1}\")\n                len=${#sublist[@]}\n                if ((len < min_len)); then\n                    min_len=${#sublist[@]}\n                    min_sublist=(\"${sublist[@]}\")\n                    min_i=$i\n                    min_j=$j\n                    min_k=$k\n                fi\n            done\n        done\n    done\n    echo \"min_len=$min_len\"\n    echo \"min_sublist=${min_sublist[@]}\"\n    echo \"min_i=$min_i\"\n    echo \"min_j=$min_j\"\n    echo \"min_k=$min_k\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp4nnl59jd.sh: line 17: 1\\\\n1 2\\\\n1 2 3: invalid variable name\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=0\n  local -i i=0\n  local -i len=0\n  local -i min_len=0\n  local -a list=()\n  local -a min_list=()\n  list=($1)\n  min_len=${#list[@]}\n  for ((i=0; i<${#list[@]}; i++)); do\n    len=${#list[i]}\n    if ((len < min_len)); then\n      min_len=len\n      min=i\n    fi\n  done\n  min_list=(${list[min]})\n  echo ${min_list[@]}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min_len=${#1}\n  local min_list=$1\n  for list in \"${@:2}\"; do\n    if [[ ${#list} -lt $min_len ]]; then\n      min_len=${#list}\n      min_list=$list\n    fi\n  done\n  echo $min_list\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=$1\n  shift\n  for i in $@; do\n    if [ ${#i} -lt ${#min} ]; then\n      min=$i\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=$1\n  shift\n  for i; do\n    if [ ${#i} -lt ${#min} ]; then\n      min=$i\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=${1:0:1}\n  local min_len=${#min}\n  local len=0\n  local i=0\n  local j=0\n  local sublist=''\n  for ((i=0; i<${#1}; i++)); do\n    for ((j=i+1; j<=${#1}; j++)); do\n      sublist=${1:i:j}\n      len=${#sublist}\n      if [[ $len -lt $min_len ]]; then\n        min=$sublist\n        min_len=$len\n      fi\n    done\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -a List\n    local -i i\n    local -i Min=0\n    local -i Min_Index=0\n    local -i Min_Length=0\n    local -i Length=0\n    local -i Index=0\n\n    List=($1)\n    Min_Length=${#List[@]}\n    Min_Index=0\n    for ((i=0; i<${#List[@]}; i++))\n    do\n        if [ ${#List[$i]} -lt $Min_Length ]\n        then\n            Min_Length=${#List[$i]}\n            Min_Index=$i\n        fi\n    done\n    echo ${List[$Min_Index]}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min_len=${#1}\n  local min_sublist=$1\n  for sublist in ${@:2}; do\n    if [[ ${#sublist} -lt $min_len ]]; then\n      min_len=${#sublist}\n      min_sublist=$sublist\n    fi\n  done\n  echo $min_sublist\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=$1\n  shift\n  for i in $@; do\n    if [ ${#i} -lt ${#min} ]; then\n      min=$i\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _Find_Min_List=\"$1\"\n  local _Find_Min_Min=${#_Find_Min_List[@]}\n  local _Find_Min_Min_Index=0\n  local _Find_Min_Index=0\n  for _Find_Min_Item in \"${_Find_Min_List[@]}\"; do\n    if [[ ${#_Find_Min_Item} -lt _Find_Min_Min ]]; then\n      _Find_Min_Min=${#_Find_Min_Item}\n      _Find_Min_Min_Index=$_Find_Min_Index\n    fi\n    ((_Find_Min_Index++))\n  done\n  echo $_Find_Min_Min_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpqvkfe8eg.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n  local -i bo=0\n  local -i bp=0\n  local -i\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=$1\n    shift\n    for i in $@; do\n        if [ ${#i} -lt ${#min} ]; then\n            min=$i\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _List=\"$1\"\n  local _Min=${#_List[@]}\n  for _Sublist in \"${_List[@]}\"; do\n    if [ ${#_Sublist} -lt $_Min ]; then\n      _Min=${#_Sublist}\n    fi\n  done\n  echo \"$_Min\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpak1wct_q.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min_len=${#1}\n    local min_sublist=$1\n    for sublist in $1; do\n        if [ ${#sublist} -lt $min_len ]; then\n            min_len=${#sublist}\n            min_sublist=$sublist\n        fi\n    done\n    echo $min_sublist\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _arr=$1\n  local _min=${#_arr[@]}\n  local _min_idx=0\n  for ((i=0; i<${#_arr[@]}; i++)); do\n    if [[ ${#_arr[$i]} -lt $_min ]]; then\n      _min=${#_arr[$i]}\n      _min_idx=$i\n    fi\n  done\n  echo \"$_min_idx\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpo31i3zc3.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=${#1}\n  local min_list=$1\n  for list in \"${@:2}\"; do\n    if [[ ${#list} -lt $min ]]; then\n      min=${#list}\n      min_list=$list\n    fi\n  done\n  echo $min_list\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -a _list=($1)\n  local _min=${#_list[@]}\n  local _min_index=0\n  for ((i=0; i<${#_list[@]}; i++)) {\n    if [[ ${#_list[i]} -lt $_min ]]; then\n      _min=${#_list[i]}\n      _min_index=$i\n    fi\n  }\n  echo \"${_list[$_min_index]}\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i Min=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min_len=${#1}\n  local min_sublist=$1\n  for sublist in $1; do\n    if [[ ${#sublist} -lt $min_len ]]; then\n      min_len=${#sublist}\n      min_sublist=$sublist\n    fi\n  done\n  echo $min_sublist\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min_len=${#1}\n  local min_sublist=$1\n  for sublist in $1; do\n    if [[ ${#sublist} -lt $min_len ]]; then\n      min_len=${#sublist}\n      min_sublist=$sublist\n    fi\n  done\n  echo $min_sublist\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=$1\n  shift\n  for i; do\n    if [ ${#i} -lt ${#min} ]; then\n      min=$i\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=$1\n  shift\n  for i in $@; do\n    if [ ${#i} -lt ${#min} ]; then\n      min=$i\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=${1}\n  local min_len=${#1}\n  local i=0\n  for ((i=1; i<${#@}; i++)); do\n    if [[ ${#@[i]} -lt ${min_len} ]]; then\n      min=${@[i]}\n      min_len=${#@[i]}\n    fi\n  done\n  echo ${min}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i min=0\n  local -i min_i=0\n  local -a list=(\"${!1}\")\n  local -i len=${#list[@]}\n  for ((i=0; i<len; i++)); do\n    if [[ ${#list[i]} -lt min ]]; then\n      min=${#list[i]}\n      min_i=$i\n    fi\n  done\n  echo $min_i\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp0g91dgc7.sh: line 9: 1\\\\n1 2\\\\n1 2 3: invalid variable name\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i len=0\n  local -i len_min=${#1}\n  local -i len_max=${#1}\n  local -i len_sub=0\n  local -i len_sub_min=0\n  local -i len_sub_max=0\n  local -i len_sub_min_min=0\n  local -i len_sub_max_max=0\n  local -i len_sub_min_max=0\n  local -i len_sub_max_min=0\n  local -i len_sub_min_min_min=0\n  local -i len_sub_max_max_max=0\n  local -i len_sub_min_min_max=0\n  local -i len_sub_max_max_min=0\n  local -i len_sub_min_max_min=0\n  local -i len_sub_max_min_max=0\n  local -i len_sub_min_max_max=0\n  local -i len_sub_max_min_min=0\n  local -i len_sub_min_min_min_min=0\n  local -i len_sub_max_max_max_max=0\n  local -i len_sub_min_min_min_max=0\n  local -i len_sub_max_max_max_min=0\n  local -i len_sub_min_min_max_min=0\n  local -i len_sub_max_max_min_max=0\n  local -i len_sub_min_min_max_max=0\n  local -i len_sub_max_max_min_min=0\n  local -i len_sub_min_max_min_min=0\n  local -i len_sub_max_min_max_max=0\n  local -i len_sub_min_max_max_min=0\n  local -i len_sub_max_min_min_max=0\n  local -i len_sub_\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min_len=${#1}\n    local min_list=$1\n    for list in \"${@:2}\"; do\n        if [[ ${#list} -lt $min_len ]]; then\n            min_len=${#list}\n            min_list=$list\n        fi\n    done\n    echo $min_list\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i min=0\n  local -i len=0\n  local -i min_len=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i len_min=0\n    local -i len_max=${#1}\n    local -i len_min_index=0\n    local -i len_max_index=0\n    local -i len_min_index_prev=0\n    local -i len_max_index_prev=0\n    local -i len_min_index_next=0\n    local -i len_max_index_next=0\n    local -i len_min_index_prev_prev=0\n    local -i len_max_index_prev_prev=0\n    local -i len_min_index_next_next=0\n    local -i len_max_index_next_next=0\n    local -i len_min_index_prev_prev_prev=0\n    local -i len_max_index_prev_prev_prev=0\n    local -i len_min_index_next_next_next=0\n    local -i len_max_index_next_next_next=0\n    local -i len_min_index_prev_prev_prev_prev=0\n    local -i len_max_index_prev_prev_prev_prev=0\n    local -i len_min_index_next_next_next_next=0\n    local -i len_max_index_next_next_next_next=0\n    local -i len_min_index_prev_prev_prev_prev_prev=0\n    local -i len_max_index_prev_prev_prev_prev_prev=0\n    local -i len_min_index_next_next_next_next_next=0\n    local -i len_max_index_next_next_next_next_next=0\n    local -i len_min_index_prev_prev_prev_prev_prev_prev=0\n    local -i len_max_index_prev_prev_prev_prev_prev_prev=0\n    local -i len_min_index_next_next_next_next_next_next\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i min=0\n  local -i min_len=0\n  local -i len=0\n  local -i len_list=0\n  local -a list=()\n  local -a min_list=()\n  local -a sub_list=()\n  local -a sub_list_list=()\n  local -a list_list=()\n  local -a list_list_list=()\n  local -a list_list_list_list=()\n  local -a list_list_list_list_list=()\n  local -a list_list_list_list_list_list=()\n  local -a list_list_list_list_list_list_list=()\n  local -a list_list_list_list_list_list_list_list=()\n  local -a list_list_list_list_list_list_list_list_list=()\n  local -a list_list_list_list_list_list_list_list_list_list=()\n  local -a list_list_list_list_list_list_list_list_list_list_list=()\n  local -a list_list_list_list_list_list_list_list_list_list_list_list=()\n  local -a list_list_list_list_list_list_list_list_list_list_list_list_list=()\n  local -a list_list_list_list_list_list_list_list_list_list_list_list_list_list=()\n  local -a list_list_list_list_list_list_list_list_list_list_list_list_list_list_list=()\n  local -a list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list=()\n  local -a list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list=()\n  local -a list_list_list_list_list_list_list_list_list_list_list_list\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=${1:0:1}\n  local min_len=${#min}\n  local item\n  for item in ${1:1}; do\n    if [[ ${#item} -lt $min_len ]]; then\n      min=$item\n      min_len=${#item}\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=$1\n  shift\n  for i in $@; do\n    if [ ${#i} -lt ${#min} ]; then\n      min=$i\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -a -i min=()\n    local -a -i sublist=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i len=0\n    local -i min_len=0\n    local -i len_sublist=0\n    local -i len_min=0\n    local -i len_sublist_min=0\n    local -i len_sublist_min_1=0\n    local -i len_sublist_min_2=0\n    local -i len_sublist_min_3=0\n    local -i len_sublist_min_4=0\n    local -i len_sublist_min_5=0\n    local -i len_sublist_min_6=0\n    local -i len_sublist_min_7=0\n    local -i len_sublist_min_8=0\n    local -i len_sublist_min_9=0\n    local -i len_sublist_min_10=0\n    local -i len_sublist_min_11=0\n    local -i len_sublist_min_12=0\n    local -i len_sublist_min_13=0\n    local -i len_sublist_min_14=0\n    local -i len_sublist_min_15=0\n    local -i len_sublist_min_16=0\n    local -i len_sublist_min_17=0\n    local -i len_sublist_min_18=0\n    local -i len_sublist_min_19=0\n    local -i len_sublist_min_20=0\n    local -i len_sublist_min_21=0\n    local -i len_sublist_min_22=0\n    local -i len_sublist_min_23=0\n    local -i len_sublist_min_24=0\n    local -i len_sublist_min_25=0\n    local -i len_sublist_min_26=0\n    local -i len_sublist_min_27=0\n    local -i len_sublist_\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min_len=${#1}\n    local min_sublist=$1\n    for sublist in $@; do\n        if [ ${#sublist} -lt $min_len ]; then\n            min_len=${#sublist}\n            min_sublist=$sublist\n        fi\n    done\n    echo $min_sublist\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i i=0\n    local -i min_i=0\n    local -i min_len=${#1}\n    local -a min_list=()\n    for list in \"${@:2}\"; do\n        ((i++))\n        if ((${#list} < min_len)); then\n            min_i=$i\n            min_len=${#list}\n            min_list=($list)\n        fi\n    done\n    echo \"$min_i\"\n    echo \"${min_list[@]}\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=9999999999\n    local min_i=0\n    local i=0\n    for x in $1; do\n        if [ ${#x} -lt $min ]; then\n            min=${#x}\n            min_i=$i\n        fi\n        i=$((i + 1))\n    done\n    echo $min_i\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i min=0\n  local -i len=0\n  local -i min_len=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i min_k=0\n  local -i min_l=0\n  local -i min_m=0\n  local -i min_n=0\n  local -i min_o=0\n  local -i min_p=0\n  local -i min_q=0\n  local -i min_r=0\n  local -i min_s=0\n  local -i min_t=0\n  local -i min_u=0\n  local -i min_v=0\n  local -i min_w=0\n  local -i min_x=0\n  local -i min_y=0\n  local -i min_z=0\n  local -i min_aa=0\n  local -i min_bb=0\n  local -i min_cc=0\n  local -i min_dd=0\n  local -i min_ee=0\n  local -i min_ff=0\n  local -i min_gg=0\n  local -i min_hh=0\n  local -i min_ii=0\n  local -i min_jj=0\n  local -i min_kk=0\n  local -i min_ll=0\n  local -i min_mm=0\n  local -i min_nn=0\n  local -i min_oo=0\n  local -i min_pp=0\n  local -i min_qq=0\n  local -i min_rr=0\n  local -i min_ss=0\n  local -i min_tt=0\n  local -i min_uu=0\n  local -i min_vv=0\n  local -i min_ww=0\n  local -i min_xx=0\n  local -i min_yy=0\n  local -i min_zz=0\n  local -i min_aaa=0\n  local -i min_bbb=0\n\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -a Min_List\n  local -i Min_Length=${#1}\n  local -i Min_Index=0\n  local -i Index=0\n  local -i Length=0\n  for Item in \"${@}\"; do\n    Length=${#Item}\n    if [[ $Length -lt $Min_Length ]]; then\n      Min_Length=$Length\n      Min_Index=$Index\n    fi\n    ((Index++))\n  done\n  Min_List=(${@:$Min_Index:1})\n  echo \"${Min_List[@]}\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i min_i=0\n  local -i min_len=0\n  for i in $(seq 0 $((${#1}-1))); do\n    if [[ ${#1[$i]} -lt $min_len ]]; then\n      min_len=${#1[$i]}\n      min_i=$i\n    fi\n  done\n  echo $min_i\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp7v42xupv.sh: line 10: ${#1[$i]}: bad substitution\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i min_i=0\n  local -i min_len=${#1}\n  local -i len=0\n  local -a a=(\"${!1}\")\n  for ((i=0; i<${#a[@]}; i++)); do\n    len=${#a[i]}\n    if ((len < min_len)); then\n      min_len=$len\n      min_i=$i\n    fi\n  done\n  echo $min_i\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpq6fx05bu.sh: line 10: 1\\\\n1 2\\\\n1 2 3: invalid variable name\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min_len=${#1}\n  local -i len\n  local -i i=0\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i A\n  local -i B\n  local -i C\n  local -i D\n  local -i E\n  local -i F\n  local -i G\n  local -i H\n  local -i I\n  local -i J\n  local -i K\n  local -i L\n  local -i M\n  local -i N\n  local -i O\n  local -i P\n  local -i Q\n  local -i R\n  local -i S\n  local -i T\n  local -i U\n  local -i V\n  local -i W\n  local -i X\n  local -i Y\n  local -i Z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i A\n  local -i B\n  local -i C\n  local -i D\n  local -i E\n  local -i F\n  local -i G\n  local -i H\n  local -i I\n  local -i J\n  local -i K\n  local -i\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min_len=${#1}\n  local min_sublist=$1\n  local sublist\n  for sublist in $1; do\n    if [ ${#sublist} -lt $min_len ]; then\n      min_len=${#sublist}\n      min_sublist=$sublist\n    fi\n  done\n  echo $min_sublist\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=${1:0:1}\n    local min_len=${#1}\n    local i=1\n    local len=${#1}\n    while [ $i -lt $len ]; do\n        local sub=${1:$i:1}\n        local sub_len=${#sub}\n        if [ $sub_len -lt $min_len ]; then\n            min=$sub\n            min_len=$sub_len\n        fi\n        i=$(($i + 1))\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min_len=${#1}\n  local min_list=$1\n  for list in \"${@:2}\"; do\n    if [[ ${#list} -lt $min_len ]]; then\n      min_len=${#list}\n      min_list=$list\n    fi\n  done\n  echo $min_list\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n    local -i bp=0\n    local -i\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -n _list=$1\n    local _min=${#_list[@]}\n    local _min_index=0\n    local _index=0\n    for _item in \"${_list[@]}\"; do\n        if [ ${#_item} -lt $_min ]; then\n            _min=${#_item}\n            _min_index=$_index\n        fi\n        ((_index++))\n    done\n    echo $_min_index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp6j5nqg87.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min_len=${#1}\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i min_len=${#1}\n  local -i len=0\n  local -i i=0\n  local -i j=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i min_len=${#1}\n  local -i len=0\n  local -i i=0\n  local -i j=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i min_len=${#1}\n  local -i len=0\n  local -i i=0\n  local -i j=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i min_len=${#1}\n  local -i len=0\n  local -i i=0\n  local -i j=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i min_len=${#1}\n  local -i len=0\n  local -i i=0\n  local -i j=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i min_len=${#1}\n  local -i len=0\n  local -i i=0\n  local -i j=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i min_len=${#1}\n  local -i len=0\n  local -i i=0\n  local -i j=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i min_len=${#1}\n  local -i len=0\n  local -i i=0\n  local -i j=0\n  local -i min_i=0\n  local -i min_j=\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _List=$1\n  local -i _Min=${#_List[@]}\n  local -i _Index=0\n  for (( i=0; i<${#_List[@]}; i++ )); do\n    if (( ${#_List[i]} < _Min )); then\n      _Min=${#_List[i]}\n      _Index=$i\n    fi\n  done\n  echo $_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpuemzfra3.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -r List=$1\n  local -r Min=$(echo \"$List\" | sort -n | head -n 1)\n  echo \"$Min\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i len=${#1}\n  local -i min=len\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ppp=0\n  local -i qqq=0\n  local -i r\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -a List=(\"${!1}\")\n  local -i Min=${#List[@]}\n  local -i Index=0\n  local -i i=0\n  for ((i=0; i<${#List[@]}; i++)); do\n    if [[ ${#List[i]} -lt $Min ]]; then\n      Min=${#List[i]}\n      Index=$i\n    fi\n  done\n  echo \"$Index\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpw324nc_6.sh: line 6: 1\\\\n1 2\\\\n1 2 3: invalid variable name\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min_len=${#1}\n  local min_sublist=$1\n  for sublist in $1; do\n    if [[ ${#sublist} -lt $min_len ]]; then\n      min_len=${#sublist}\n      min_sublist=$sublist\n    fi\n  done\n  echo $min_sublist\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=$1\n  shift\n  for i in \"$@\"\n  do\n    if [[ ${#i} -lt ${#min} ]]\n    then\n      min=$i\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _list=$1\n  local _min=${#_list[@]}\n  local _index=0\n  for ((i=0; i<${#_list[@]}; i++)); do\n    if [[ ${#_list[i]} -lt $_min ]]; then\n      _min=${#_list[i]}\n      _index=$i\n    fi\n  done\n  echo $_index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpuupnopxk.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=${1}\n    shift\n    for i in $@; do\n        if [ ${#i} -lt ${#min} ]; then\n            min=${i}\n        fi\n    done\n    echo ${min}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min_len=${#1}\n  local -i len\n  local -i i=0\n  local -i j\n  local -i k\n  local -i n=${#1}\n  local -i m\n  local -i min_i=0\n  local -i min_j=0\n  local -i min_k=0\n  local -i min_m=0\n  while (( i < n )); do\n    j=$i\n    while (( j < n )); do\n      k=$j\n      while (( k < n )); do\n        m=$k\n        while (( m < n )); do\n          len=0\n          for (( l = i; l <= m; l++ )); do\n            (( len += ${1:$l:1} ))\n          done\n          if (( len < min_len )); then\n            min_len=$len\n            min_i=$i\n            min_j=$j\n            min_k=$k\n            min_m=$m\n          fi\n          (( m++ ))\n        done\n        (( k++ ))\n      done\n      (( j++ ))\n    done\n    (( i++ ))\n  done\n  echo \"$min_i $min_j $min_k $min_m\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpwg7qbt6t.sh: line 26: ((: len += \\\\ : syntax error: operand expected (error token is \"\\\\ \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len += \\\\ : syntax error: operand expected (error token is \"\\\\ \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len += \\\\ : syntax error: operand expected (error token is \"\\\\ \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len += \\\\ : syntax error: operand expected (error token is \"\\\\ \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len +=   : syntax error: operand expected (error token is \"+=   \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len += \\\\ : syntax error: operand expected (error token is \"\\\\ \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len +=   : syntax error: operand expected (error token is \"+=   \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len += \\\\ : syntax error: operand expected (error token is \"\\\\ \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len +=   : syntax error: operand expected (error token is \"+=   \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len += \\\\ : syntax error: operand expected (error token is \"\\\\ \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len += \\\\ : syntax error: operand expected (error token is \"\\\\ \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len +=   : syntax error: operand expected (error token is \"+=   \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len += \\\\ : syntax error: operand expected (error token is \"\\\\ \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len += \\\\ : syntax error: operand expected (error token is \"\\\\ \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len +=   : syntax error: operand expected (error token is \"+=   \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len += \\\\ : syntax error: operand expected (error token is \"\\\\ \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len += \\\\ : syntax error: operand expected (error token is \"\\\\ \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len +=   : syntax error: operand expected (error token is \"+=   \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len += \\\\ : syntax error: operand expected (error token is \"\\\\ \")\\n/tmp/tmpwg7qbt6t.sh: line 26: ((: len +=   : syntax error: operand expected (error token is \"+=   \")\\n/tmp/tmpwg7qbt6t.sh",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -a sublist=()\n    local -a sublist_min=()\n    for ((i=0; i<${#1}; i++)); do\n        for ((j=i; j<${#1}; j++)); do\n            sublist=(\"${1:i:j}\")\n            len=${#sublist[@]}\n            if ((len < min)); then\n                min=${#sublist[@]}\n                sublist_min=(\"${sublist[@]}\")\n            fi\n        done\n    done\n    echo \"${sublist_min[@]}\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min_len=${#1}\n    local min_list=$1\n    shift\n    for i in $@; do\n        if [ ${#i} -lt $min_len ]; then\n            min_len=${#i}\n            min_list=$i\n        fi\n    done\n    echo $min_list\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i i=0\n    local -i j=0\n    local -i min=0\n    local -i len=0\n    local -i min_len=0\n    local -a arr=()\n    local -a min_arr=()\n    local -a sub_arr=()\n    local -a sub_min_arr=()\n    local -a sub_arr_len=()\n    local -a sub_min_arr_len=()\n    local -a sub_arr_min_len=()\n    local -a sub_min_arr_min_len=()\n    local -a sub_arr_min_len_index=()\n    local -a sub_min_arr_min_len_index=()\n    local -a sub_arr_min_len_index_len=()\n    local -a sub_min_arr_min_len_index_len=()\n    local -a sub_arr_min_len_index_len_index=()\n    local -a sub_min_arr_min_len_index_len_index=()\n    local -a sub_arr_min_len_index_len_index_len=()\n    local -a sub_min_arr_min_len_index_len_index_len=()\n    local -a sub_arr_min_len_index_len_index_len_index=()\n    local -a sub_min_arr_min_len_index_len_index_len_index=()\n    local -a sub_arr_min_len_index_len_index_len_index_len=()\n    local -a sub_min_arr_min_len_index_len_index_len_index_len=()\n    local -a sub_arr_min_len_index_len_index_len_index_len_index=()\n    local -a sub_min_arr_min_len_index_len_index_len_index_len_index=()\n    local -a sub_arr_min_len_index_len_index_len_index_len_index_len=()\n    local -a sub_min_arr_min_len_index_len_index_len\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i min=0\n  local -i len=0\n  local -i min_len=0\n  local -a arr=(\"$@\")\n  min_len=${#arr[0]}\n  for ((i=1; i<${#arr[@]}; i++)); do\n    len=${#arr[i]}\n    if ((len < min_len)); then\n      min_len=len\n      min=i\n    fi\n  done\n  echo \"${arr[min]}\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i _=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min_len=${#1}\n    local min_sublist=$1\n    for sublist in \"${@:2}\"; do\n        if [[ ${#sublist} -lt $min_len ]]; then\n            min_len=${#sublist}\n            min_sublist=$sublist\n        fi\n    done\n    echo $min_sublist\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=$1\n    shift\n    for i in $@; do\n        if [ ${#i} -lt ${#min} ]; then\n            min=$i\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _List=$1\n  local _Min=${#_List[@]}\n  local _Index=0\n  for ((i=0; i<${#_List[@]}; i++)); do\n    if [[ ${#_List[$i]} -lt $_Min ]]; then\n      _Min=${#_List[$i]}\n      _Index=$i\n    fi\n  done\n  echo $_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmphvptkmuu.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -a list=($1)\n    local -i min=${#list[0]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n   \n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=$1\n    shift\n    for i in $*; do\n        if [ ${#i} -lt ${#min} ]; then\n            min=$i\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local Min_Len=${#1}\n  local Min_Sublist=\"$1\"\n  local Sublist\n  for Sublist in $1; do\n    if [ ${#Sublist} -lt $Min_Len ]; then\n      Min_Len=${#Sublist}\n      Min_Sublist=\"$Sublist\"\n    fi\n  done\n  echo \"$Min_Sublist\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -a _list=($1)\n  local _min=${#_list[@]}\n  local _min_list=()\n  for ((i=0; i<${#_list[@]}; i++)); do\n    if [[ ${#_list[i]} -lt $_min ]]; then\n      _min=${#_list[i]}\n      _min_list=(\"${_list[i]}\")\n    elif [[ ${#_list[i]} -eq $_min ]]; then\n      _min_list+=(\"${_list[i]}\")\n    fi\n  done\n  echo ${_min_list[@]}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _list=$1\n  local -i _min_len=${#_list[@]}\n  local -i _min_idx=0\n  local -i _idx=0\n  for _sublist in \"${_list[@]}\"; do\n    if [[ ${#_sublist[@]} -lt _min_len ]]; then\n      _min_len=${#_sublist[@]}\n      _min_idx=$_idx\n    fi\n    ((_idx++))\n  done\n  echo $_min_idx\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpyet9__u_.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i min=0\n  local -i len=0\n  local -i min_len=0\n  local -i len_list=0\n  local -a list=()\n  local -a sublist=()\n  list=(\"$@\")\n  len_list=${#list[@]}\n  min_len=$len_list\n  for ((i=0; i<len_list; i++)); do\n    len=${#list[i]}\n    if ((len < min_len)); then\n      min_len=$len\n      min=$i\n    fi\n  done\n  sublist=(\"${list[@]:$min}\")\n  echo \"${sublist[@]}\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=${1}\n  shift\n  for i in $@; do\n    if [ ${#i} -lt ${#min} ]; then\n      min=${i}\n    fi\n  done\n  echo ${min}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min_len=${#1}\n  local -i len\n  local -i i=0\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i A\n  local -i B\n  local -i C\n  local -i D\n  local -i E\n  local -i F\n  local -i G\n  local -i H\n  local -i I\n  local -i J\n  local -i K\n  local -i L\n  local -i M\n  local -i N\n  local -i O\n  local -i P\n  local -i Q\n  local -i R\n  local -i S\n  local -i T\n  local -i U\n  local -i V\n  local -i W\n  local -i X\n  local -i Y\n  local -i Z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i Aa\n  local -i Bb\n  local -i Cc\n  local -i Dd\n  local -i Ee\n  local -i Ff\n  local -i Gg\n  local -i Hh\n  local\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i min_i=0\n  local -i min_len=${#1}\n  local -i len=0\n  for i in $(seq 0 $((${#1} - 1))); do\n    len=${#1}\n    if [ $len -lt $min_len ]; then\n      min_len=$len\n      min_i=$i\n    fi\n  done\n  echo $min_i\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _list=$1\n  local _min=${#_list[@]}\n  local _min_index=0\n  local _index=0\n  for _item in \"${_list[@]}\"; do\n    if [[ ${#_item} -lt $_min ]]; then\n      _min=${#_item}\n      _min_index=$_index\n    fi\n    ((_index++))\n  done\n  echo \"$_min_index\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpa9c906q8.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=0\n  local min_index=0\n  local i=0\n  local len=0\n  local list=()\n  list=($1)\n  min=${#list[0]}\n  for ((i=0; i<${#list[@]}; i++)); do\n    len=${#list[$i]}\n    if ((len < min)); then\n      min=$len\n      min_index=$i\n    fi\n  done\n  echo ${list[$min_index]}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i len=${#1}\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i ab=0\n  local -i ac=0\n  local -i ad=0\n  local -i ae=0\n  local -i af=0\n  local -i ag=0\n  local -i ah=0\n  local -i ai=0\n  local -i aj=0\n  local -i ak=0\n  local -i al=0\n  local -i am=0\n  local -i an=0\n  local -i ao=0\n  local -i ap=0\n  local -i aq=0\n  local -i ar=0\n  local -i as=0\n  local -i at=0\n  local -i au=0\n  local -i av=0\n  local -i aw=0\n  local -i ax=0\n  local -i ay=0\n  local -i az=0\n  local -i ba=0\n  local -i bb=0\n  local -i bc=0\n  local -i bd=0\n  local -i be=0\n  local -i bf=0\n  local -i bg=0\n  local -i bh=0\n  local -i bi=0\n  local -i bj=0\n  local -i bk=0\n  local -i bl=0\n  local -i bm=0\n  local -i bn=0\n  local -i bo=0\n  local\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i len=0\n    local -i len_min=${#1}\n    local -i len_max=${#1}\n    local -i len_sub=0\n    local -i len_sub_min=${#1}\n    local -i len_sub_max=${#1}\n    local -i len_sub_min_i=0\n    local -i len_sub_min_j=0\n    local -i len_sub_max_i=0\n    local -i len_sub_max_j=0\n    local -i len_sub_min_k=0\n    local -i len_sub_max_k=0\n    local -i len_sub_min_l=0\n    local -i len_sub_max_l=0\n    local -i len_sub_min_m=0\n    local -i len_sub_max_m=0\n    local -i len_sub_min_n=0\n    local -i len_sub_max_n=0\n    local -i len_sub_min_o=0\n    local -i len_sub_max_o=0\n    local -i len_sub_min_p=0\n    local -i len_sub_max_p=0\n    local -i len_sub_min_q=0\n    local -i len_sub_max_q=0\n    local -i len_sub_min_r=0\n    local -i len_sub_max_r=0\n    local -i len_sub_min_s=0\n    local -i len_sub_max_s=0\n    local -i len_sub_min_t=0\n    local -i len_sub_max_t=0\n    local -i len_sub_min_u=0\n    local -i len_sub_max_u=0\n    local -i len_sub_min_v=0\n    local -i len_sub_max_v=0\n    local -i len_sub_min_\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=$1\n    shift\n    for i in $@; do\n        if [ ${#i} -lt ${#min} ]; then\n            min=$i\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=$1\n    local min_len=${#min}\n    shift\n    for i in \"$@\"; do\n        if [ ${#i} -lt $min_len ]; then\n            min=$i\n            min_len=${#i}\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=0\n  local -i i=0\n  local -i len=0\n  local -i min_len=0\n  local -i min_i=0\n  local -a list=()\n  local -a min_list=()\n  local -a sublist=()\n  local -a min_sublist=()\n  local -a sublist_len=()\n  local -a min_sublist_len=()\n  local -a sublist_i=()\n  local -a min_sublist_i=()\n  local -a sublist_min=()\n  local -a min_sublist_min=()\n  local -a sublist_min_len=()\n  local -a min_sublist_min_len=()\n  local -a sublist_min_i=()\n  local -a min_sublist_min_i=()\n  local -a sublist_min_sublist=()\n  local -a min_sublist_min_sublist=()\n  local -a sublist_min_sublist_len=()\n  local -a min_sublist_min_sublist_len=()\n  local -a sublist_min_sublist_i=()\n  local -a min_sublist_min_sublist_i=()\n  local -a sublist_min_sublist_min=()\n  local -a min_sublist_min_sublist_min=()\n  local -a sublist_min_sublist_min_len=()\n  local -a min_sublist_min_sublist_min_len=()\n  local -a sublist_min_sublist_min_i=()\n  local -a min_sublist_min_sublist_min_i=()\n  local -a sublist_min_sublist_min_sublist=()\n  local -a min_sublist_min_sublist_min_sublist=()\n  local -a sublist_min_sublist_min_sublist_len=()\n  local -a min_sublist_min_sublist_min_sublist_len=()\n  local -a sublist_min_\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i min_i=0\n    local -i min_j=0\n    local -a arr=($1)\n    local -i len_arr=${#arr[@]}\n    for ((i=0; i<len_arr; i++))\n    do\n        for ((j=i; j<len_arr; j++))\n        do\n            len=${#arr[@]:$i:$j}\n            if [[ $len -lt $min ]]\n            then\n                min=$len\n                min_i=$i\n                min_j=$j\n            fi\n        done\n    done\n    echo ${arr[@]:$min_i:$min_j}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp_5t48ehw.sh: line 18: ${#arr[@]:$i:$j}: bad substitution\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n\tlocal min=0\n\tlocal i=0\n\tfor i in $1; do\n\t\tif [ $i -lt $min ]; then\n\t\t\tmin=$i\n\t\tfi\n\tdone\n\techo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpsb4hcfms.sh: line 9: [: 1\\\\n1: integer expression expected\\n/tmp/tmpsb4hcfms.sh: line 9: [: 2\\\\n1: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _List=$1\n  local -i _Min=${#_List[@]}\n  local -i _Index=0\n  local -i _I=0\n  for _I in ${!_List[@]}; do\n    if [[ ${#_List[$_I]} -lt _Min ]]; then\n      _Min=${#_List[$_I]}\n      _Index=$_I\n    fi\n  done\n  echo $_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp21e4uu08.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=$1\n  shift\n  for i in $@; do\n    if [ ${#i} -lt ${#min} ]; then\n      min=$i\n    fi\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i len=0\n    local -i len_min=0\n    local -a sublist=()\n    local -a sublist_min=()\n    local -a list=(\"${!1}\")\n    local -a list_min=(\"${!1}\")\n    local -a list_min_len=(\"${!1}\")\n    local -a list_min_len_min=(\"${!1}\")\n    local -a list_min_len_min_min=(\"${!1}\")\n    local -a list_min_len_min_min_min=(\"${!1}\")\n    local -a list_min_len_min_min_min_min=(\"${!1}\")\n    local -a list_min_len_min_min_min_min_min=(\"${!1}\")\n    local -a list_min_len_min_min_min_min_min_min=(\"${!1}\")\n    local -a list_min_len_min_min_min_min_min_min_min=(\"${!1}\")\n    local -a list_min_len_min_min_min_min_min_min_min_min=(\"${!1}\")\n    local -a list_min_len_min_min_min_min_min_min_min_min_min=(\"${!1}\")\n    local -a list_min_len_min_min_min_min_min_min_min_min_min_min=(\"${!1}\")\n    local -a list_min_len_min_min_min_min_min_min_min_min_min_min_min=(\"${!1}\")\n    local -a list_min_len_min_min_min_min_min_min_min_min_min_min_min_min=(\"${!1}\")\n    local -a list_min_len_min_min_min_min_min_min_min_min_min_min_min_min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp8zbg8ebu.sh: line 14: 1\\\\n1 2\\\\n1 2 3: invalid variable name\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i i=0\n    local -i min_i=0\n    local -i min_len=0\n    local -i len=0\n    local -a a=(\"${!1}\")\n    min_len=${#a[0]}\n    for ((i=1; i<${#a[@]}; i++)); do\n        len=${#a[i]}\n        if ((len < min_len)); then\n            min_i=$i\n            min_len=$len\n        fi\n    done\n    echo \"${a[min_i]}\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp38vlhser.sh: line 10: 1\\\\n1 2\\\\n1 2 3: invalid variable name\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=$1\n    local min_len=${#1}\n    shift\n    for i in $@; do\n        if [[ ${#i} -lt $min_len ]]; then\n            min=$i\n            min_len=${#i}\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local Min=0\n  local Min_Index=0\n  local Index=0\n  for Item in $1; do\n    if [ $Index -eq 0 ]; then\n      Min=$Item\n      Min_Index=$Index\n    elif [ $Item -lt $Min ]; then\n      Min=$Item\n      Min_Index=$Index\n    fi\n    Index=$((Index+1))\n  done\n  echo $Min_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp92kvviql.sh: line 13: [: 2\\\\n1: integer expression expected\\n/tmp/tmp92kvviql.sh: line 13: [: 1\\\\n1: integer expression expected\\n/tmp/tmp92kvviql.sh: line 13: [: 1\\\\n1: integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local -i Z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _List=\"$1\"\n  local -i _Min=${#_List[@]}\n  local -i _Index=0\n  for ((i=0; i<${#_List[@]}; i++)); do\n    if [[ ${#_List[i]} -lt _Min ]]; then\n      _Min=${#_List[i]}\n      _Index=$i\n    fi\n  done\n  echo $_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp51qya5fj.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _List=$1\n  local -i _Min=${#_List[@]}\n  local -i _Index=0\n  for _Element in \"${_List[@]}\"; do\n    if [[ ${#_Element} -lt _Min ]]; then\n      _Min=${#_Element}\n      _Index=$((_Index + 1))\n    fi\n  done\n  echo \"${_List[$_Index]}\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp7egev15u.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i i=0\n  local -i j=0\n  local -i min=0\n  local -i len=0\n  local -i min_len=0\n  local -i min_i=0\n  local -i min_j=0\n  local -i min_k=0\n  local -i min_l=0\n  local -i min_m=0\n  local -i min_n=0\n  local -i min_o=0\n  local -i min_p=0\n  local -i min_q=0\n  local -i min_r=0\n  local -i min_s=0\n  local -i min_t=0\n  local -i min_u=0\n  local -i min_v=0\n  local -i min_w=0\n  local -i min_x=0\n  local -i min_y=0\n  local -i min_z=0\n  local -i min_aa=0\n  local -i min_bb=0\n  local -i min_cc=0\n  local -i min_dd=0\n  local -i min_ee=0\n  local -i min_ff=0\n  local -i min_gg=0\n  local -i min_hh=0\n  local -i min_ii=0\n  local -i min_jj=0\n  local -i min_kk=0\n  local -i min_ll=0\n  local -i min_mm=0\n  local -i min_nn=0\n  local -i min_oo=0\n  local -i min_pp=0\n  local -i min_qq=0\n  local -i min_rr=0\n  local -i min_ss=0\n  local -i min_tt=0\n  local -i min_uu=0\n  local -i min_vv=0\n  local -i min_ww=0\n  local -i min_xx=0\n  local -i min_yy=0\n  local -i min_zz=0\n  local -i min_aaa=0\n  local -i min_bbb=0\n  local -i min_ccc\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i Min_Length=${#1}\n  local -i Index=0\n  local -i Index_Min=0\n  local -i Length=0\n  local -i Length_Min=0\n  local -i Length_Min_Min=0\n  local -i Length_Min_Min_Min=0\n  local -i Length_Min_Min_Min_Min=0\n  local -i Length_Min_Min_Min_Min_Min=0\n  local -i Length_Min_Min_Min_Min_Min_Min=0\n  local -i Length_Min_Min_Min_Min_Min_Min_Min=0\n  local -i Length_Min_Min_Min_Min_Min_Min_Min_Min=0\n  local -i Length_Min_Min_Min_Min_Min_Min_Min_Min_Min=0\n  local -i Length_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min=0\n  local -i Length_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min=0\n  local -i Length_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min=0\n  local -i Length_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min=0\n  local -i Length_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min=0\n  local -i Length_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min=0\n  local -i Length_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min=0\n  local -i Length_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min=0\n  local -i Length_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_Min_\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -n _Find_Min_List=$1\n  local _Find_Min_Min=${#_Find_Min_List[@]}\n  local _Find_Min_Min_Index=0\n  for (( _Find_Min_Index=0; _Find_Min_Index<${#_Find_Min_List[@]}; _Find_Min_Index++ )); do\n    if [[ ${#_Find_Min_List[$_Find_Min_Index]} -lt $_Find_Min_Min ]]; then\n      _Find_Min_Min=${#_Find_Min_List[$_Find_Min_Index]}\n      _Find_Min_Min_Index=$_Find_Min_Index\n    fi\n  done\n  echo $_Find_Min_Min_Index\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp8b8t_suu.sh: line 6: local: `1\\\\n1 2\\\\n1 2 3': invalid variable name for name reference\\n\"",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n\tlocal -i i=0\n\tlocal -i min=0\n\tlocal -i min_index=0\n\tlocal -i len=0\n\tlocal -i min_len=0\n\tlocal -i len_index=0\n\tlocal -i len_index_prev=0\n\tlocal -i len_index_next=0\n\tlocal -i len_index_prev_prev=0\n\tlocal -i len_index_next_next=0\n\tlocal -i len_index_prev_prev_prev=0\n\tlocal -i len_index_next_next_next=0\n\tlocal -i len_index_prev_prev_prev_prev=0\n\tlocal -i len_index_next_next_next_next=0\n\tlocal -i len_index_prev_prev_prev_prev_prev=0\n\tlocal -i len_index_next_next_next_next_next=0\n\tlocal -i len_index_prev_prev_prev_prev_prev_prev=0\n\tlocal -i len_index_next_next_next_next_next_next=0\n\tlocal -i len_index_prev_prev_prev_prev_prev_prev_prev=0\n\tlocal -i len_index_next_next_next_next_next_next_next=0\n\tlocal -i len_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n\tlocal -i len_index_next_next_next_next_next_next_next_next=0\n\tlocal -i len_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\tlocal -i len_index_next_next_next_next_next_next_next_next_next=0\n\tlocal -i len_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\tlocal -i len_index_next_next_next_next_next_next_next_next_next_next=0\n\tlocal -i len_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\tlocal -i len\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local -i min=${#1}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i len=${#1}\n  local -i sublen=0\n  local -a sublist\n  local -a list\n  list=($1)\n  for ((i=0; i<len; i++)) do\n    for ((j=i; j<len; j++)) do\n      sublen=0\n      for ((k=i; k<=j; k++)) do\n        sublist[sublen]=${list[k]}\n        ((sublen++))\n      done\n      if ((sublen < min)); then\n        min=${#sublist[@]}\n      fi\n    done\n  done\n  echo ${min}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=${1}\n    shift\n    for i in \"$@\"; do\n        if [[ ${#i} -lt ${#min} ]]; then\n            min=${i}\n        fi\n    done\n    echo ${min}\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=$1\n  local min_len=${#min}\n  shift\n  while [ $# -gt 0 ]; do\n    local len=${#1}\n    if [ $len -lt $min_len ]; then\n      min=$1\n      min_len=$len\n    fi\n    shift\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local min=$1\n    shift\n    for i in $@; do\n        if [ ${#i} -lt ${#min} ]; then\n            min=$i\n        fi\n    done\n    echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min=${#1}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n  local min=${1:0:1}\n  local min_len=${#min}\n  local i=1\n  local len=${#1}\n  while [ $i -lt $len ]; do\n    local sub=${1:$i:1}\n    local sub_len=${#sub}\n    if [ $sub_len -lt $min_len ]; then\n      min=$sub\n      min_len=$sub_len\n    fi\n    i=$((i+1))\n  done\n  echo $min\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sublist having minimum length.\n#\n# $1 is a $Any\nFind_Min() {\n    local -i min_len=${#1}\n    local -i len\n    local -a min_list=(\"${!1}\")\n    local -a list\n    for list in \"${@:2}\"; do\n        len=${#list}\n        if (( len < min_len )); then\n            min_len=$len\n            min_list=(\"${!list}\")\n        fi\n    done\n    echo \"${min_list[@]}\"\n}\n\ncandidate() {\n    Find_Min \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\\n1 2\\n1 2 3\") = \"1\" ]]\n    [[ $(candidate \"1 1\\n1 1 1\\n1 2 7 8\") = \"1 1\" ]]\n    [[ $(candidate \"x\\nx y\\nx y z\") = \"x\" ]]\n}\n\nrun_test",
      "timestamp": 1667190953,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp3tm4yyu5.sh: line 8: 1\\\\n1 2\\\\n1 2 3: invalid variable name\\n'",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
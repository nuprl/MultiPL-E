{
  "name": "mbpp_130_max_occurrences",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_130_max_occurrences.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n    for item in $list; do\n        count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_item=$item\n            max_count=$count\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max=0\n    local item\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [[ $count -gt $max ]]; then\n            max=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_occurrences=0\n  local max_occurrences_item=\n  for item in $list; do\n    local occurrences=$(echo \"$list\" | grep -c \"$item\")\n    if [ $occurrences -gt $max_occurrences ]; then\n      max_occurrences=$occurrences\n      max_occurrences_item=$item\n    fi\n  done\n  echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count=0\n\n    for item in $list; do\n        count=0\n        for i in $list; do\n            if [ \"$item\" = \"$i\" ]; then\n                count=$((count + 1))\n            fi\n        done\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n    for item in $list; do\n        count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if (( count > max_count )); then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local -A counts\n  local item\n  for item in $1; do\n    counts[$item]=$((counts[$item] + 1))\n  done\n  local max_count=0\n  local max_item=\n  for item in \"${!counts[@]}\"; do\n    if [[ ${counts[$item]} -gt $max_count ]]; then\n      max_count=${counts[$item]}\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=\n  local max_count=0\n  local item=\n  local count=\n  for item in $list; do\n    count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item\n    local max_count=0\n    local item\n    local count\n\n    for item in $list; do\n        count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_item=\"$item\"\n            max_count=$count\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=$1\n  local max_occurrences=0\n  local max_occurrences_item=''\n  for item in $list; do\n    local occurrences=$(echo $list | tr ' ' '\\n' | grep -c $item)\n    if [ $occurrences -gt $max_occurrences ]; then\n      max_occurrences=$occurrences\n      max_occurrences_item=$item\n    fi\n  done\n  echo $max_occurrences_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max=0\n  local max_item=\n  for item in $list; do\n    local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [ $count -gt $max ]; then\n      max=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_occurrences_item=\n\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $occurrences -gt $max_occurrences ]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n\n    echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=$1\n  local item\n  local max_item\n  local max_count=0\n  local count\n\n  for item in $list; do\n    count=1\n    for i in $list; do\n      if [ $item = $i ]; then\n        ((count++))\n      fi\n    done\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n\n  echo $max_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=$1\n  local max_item=\n  local max_count=0\n  for item in $list; do\n    local count=$(echo $list | tr ' ' '\\n' | grep -c \"^$item$\")\n    if (( count > max_count )); then\n      max_item=$item\n      max_count=$count\n    fi\n  done\n  echo $max_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n\n    for item in $list; do\n        count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n    for item in $list; do\n        count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_item=$item\n            max_count=$count\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n    for item in $list; do\n        count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_item=\"$item\"\n            max_count=$count\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_count=0\n  local max_item=\n  for item in $list; do\n    local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [[ $count -gt $max_count ]]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_count=0\n  local max_item=\n  for item in $list; do\n    local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local -A counts\n    local item\n    for item in $1; do\n        (( counts[$item]++ ))\n    done\n    local max_count=0\n    local max_item=\n    for item in \"${!counts[@]}\"; do\n        if (( counts[$item] > max_count )); then\n            max_count=${counts[$item]}\n            max_item=$item\n        fi\n    done\n    echo $max_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_occurrences_item=\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $occurrences -gt $max_occurrences ]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n    echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n\n    for item in $list; do\n        count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n  for item in $list; do\n    count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_count=0\n  local max_item=\n  for item in $list; do\n    local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n    local item=\n    local count=0\n    for item in $list; do\n        count=0\n        for i in $list; do\n            if [ \"$i\" == \"$item\" ]; then\n                count=$((count + 1))\n            fi\n        done\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_occurrences=0\n    local occurrences\n    for item in $list; do\n        occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $occurrences -gt $max_occurrences ]; then\n            max_item=\"$item\"\n            max_occurrences=$occurrences\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=$1\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if (( count > max_count )); then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo $max_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=$1\n    local max_item=\n    local max_count=0\n    local item=\n    local count=0\n\n    for item in $list; do\n        count=0\n        for item2 in $list; do\n            if [ \"$item\" = \"$item2\" ]; then\n                count=$((count + 1))\n            fi\n        done\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $count -gt $max ]; then\n            max=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n    local item=\n    local count=0\n\n    for item in $list; do\n        count=0\n        for item2 in $list; do\n            if [ \"$item\" = \"$item2\" ]; then\n                count=$((count + 1))\n            fi\n        done\n        if [ \"$count\" -gt \"$max_count\" ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=\"\"\n  local max_count=0\n  local item=\"\"\n  local count=0\n  for item in $list; do\n    count=$(echo \"$list\" | grep -c \"$item\")\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=\"$item\"\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=$1\n  local max_item=\n  local max_count=0\n  local item\n  local count\n\n  for item in $list; do\n    count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [[ $count -gt $max ]]; then\n            max=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n    local item=\n    local count=\n    for item in $list; do\n        count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [[ $count -gt $max_count ]]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=\"\"\n  local max_count=0\n\n  for item in $list; do\n    local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [[ $count -gt $max_count ]]; then\n      max_item=\"$item\"\n      max_count=$count\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local -a list=($1)\n  local -A counts\n  local item\n  local max_count=0\n  local max_item\n\n  for item in \"${list[@]}\"; do\n    (( counts[$item]++ ))\n    if (( counts[$item] > max_count )); then\n      max_count=${counts[$item]}\n      max_item=$item\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=\"\"\n  local max_count=0\n  local item=\"\"\n  local count=0\n\n  for item in $list; do\n    count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n    for item in $list; do\n        count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if (( count > max_count )); then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"$item\")\n        if (( count > max_count )); then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_occurrences=0\n  local max_occurrences_item=\n\n  for item in $list; do\n    local occurrences=$(echo \"$list\" | grep -c \"$item\")\n    if [[ $occurrences -gt $max_occurrences ]]; then\n      max_occurrences=$occurrences\n      max_occurrences_item=$item\n    fi\n  done\n\n  echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_count=0\n  local max_item=\n  local item\n  for item in $list; do\n    local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [[ $count -gt $max_count ]]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n  for item in $list; do\n    count=$(echo $list | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_item=$item\n      max_count=$count\n    fi\n  done\n  echo $max_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n    local item=\n    local count=0\n\n    for item in $list; do\n        count=0\n        for item2 in $list; do\n            if [ \"$item\" = \"$item2\" ]; then\n                count=$((count + 1))\n            fi\n        done\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=$1\n  local max_occurrences=0\n  local max_occurrences_item=\n  for item in $list; do\n    local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [[ $occurrences -gt $max_occurrences ]]; then\n      max_occurrences=$occurrences\n      max_occurrences_item=$item\n    fi\n  done\n  echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local -a list=($1)\n    local -A counts\n    for item in \"${list[@]}\"; do\n        counts[$item]=$((counts[$item] + 1))\n    done\n    local max_count=0\n    local max_item\n    for item in \"${!counts[@]}\"; do\n        if [[ ${counts[$item]} -gt $max_count ]]; then\n            max_count=${counts[$item]}\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n\tlocal list=$1\n\tlocal item\n\tlocal max_item\n\tlocal max_count=0\n\tlocal count\n\n\tfor item in $list; do\n\t\tcount=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n\t\tif [ $count -gt $max_count ]; then\n\t\t\tmax_item=$item\n\t\t\tmax_count=$count\n\t\tfi\n\tdone\n\n\techo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n    local item=\n    local count=0\n\n    for item in $list; do\n        count=0\n        for item2 in $list; do\n            if [ \"$item\" = \"$item2\" ]; then\n                count=$((count + 1))\n            fi\n        done\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=$1\n  local max_item=\n  local max_count=0\n  for item in $list; do\n    local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_item=$item\n      max_count=$count\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local count\n    local max_item\n    local max_count=0\n\n    for item in $list; do\n        count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_item=$item\n            max_count=$count\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\"\"\n    local max_count=0\n    local item=\"\"\n    local count=0\n    for item in $list; do\n        count=$(echo \"$list\" | grep -c \"$item\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=\"$item\"\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count=0\n    for item in $list; do\n        count=0\n        for item2 in $list; do\n            if [ \"$item\" = \"$item2\" ]; then\n                count=$((count + 1))\n            fi\n        done\n        if [ $count -gt $max_count ]; then\n            max_item=\"$item\"\n            max_count=$count\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_occurrences_item=\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [[ $occurrences -gt $max_occurrences ]]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n    echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max=0\n  local item\n  for item in $list; do\n    local count=$(echo \"$list\" | grep -c \"$item\")\n    if [ $count -gt $max ]; then\n      max=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=$1\n    local max_item=\n    local max_count=0\n    local item\n    local count\n\n    for item in $list; do\n        count=$(echo $list | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_item=$item\n            max_count=$count\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n\tlocal list=\"$1\"\n\tlocal item\n\tlocal count\n\tlocal max_item\n\tlocal max_count=0\n\tfor item in $list; do\n\t\tcount=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n\t\tif [ $count -gt $max_count ]; then\n\t\t\tmax_count=$count\n\t\t\tmax_item=$item\n\t\tfi\n\tdone\n\techo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=\"\"\n  local max_count=0\n  local item=\"\"\n  local count=0\n  for item in $list; do\n    count=$(echo \"$list\" | grep -c \"$item\")\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=\"$item\"\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=\"\"\n  local max_count=0\n  local item=\"\"\n  local count=0\n\n  for item in $list; do\n    count=$(echo \"$list\" | grep -c \"$item\")\n    if [ $count -gt $max_count ]; then\n      max_item=\"$item\"\n      max_count=$count\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local count\n    local max_item\n    local max_count=0\n\n    for item in $list; do\n        count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [[ $count -gt $max_count ]]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n    for item in $list; do\n        count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count=0\n\n  for item in $list; do\n    count=0\n    for item2 in $list; do\n      if [ \"$item\" = \"$item2\" ]; then\n        count=$((count + 1))\n      fi\n    done\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_occurrences=0\n  local max_occurrences_item=\n  for item in $list; do\n    local occurrences=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $occurrences -gt $max_occurrences ]; then\n      max_occurrences=$occurrences\n      max_occurrences_item=$item\n    fi\n  done\n  echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n    local item\n    local count\n\n    for item in $list; do\n        count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if (( count > max_count )); then\n            max_item=\"$item\"\n            max_count=\"$count\"\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=''\n  local max_count=0\n  local item_count=0\n  for item in $list; do\n    item_count=$(echo \"$list\" | grep -c \"$item\")\n    if [ $item_count -gt $max_count ]; then\n      max_count=$item_count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local -A counts\n    local item\n    for item in $1; do\n        (( counts[$item]++ ))\n    done\n    local max_count=0\n    local max_item\n    for item in \"${!counts[@]}\"; do\n        if (( counts[$item] > max_count )); then\n            max_count=${counts[$item]}\n            max_item=$item\n        fi\n    done\n    echo $max_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n    for item in $list; do\n        count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if (( count > max_count )); then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_occurrences=0\n  local max_occurrences_item=\n  for item in $list; do\n    local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [ $occurrences -gt $max_occurrences ]; then\n      max_occurrences=$occurrences\n      max_occurrences_item=$item\n    fi\n  done\n  echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\"\"\n    local max_count=0\n    local item=\"\"\n    local count=0\n\n    for item in $list; do\n        count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [[ $count -gt $max_count ]]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=$1\n    local max_item=\n    local max_count=0\n    local item_count=0\n    for item in $list; do\n        item_count=0\n        for item2 in $list; do\n            if [ \"$item\" = \"$item2\" ]; then\n                item_count=$((item_count + 1))\n            fi\n        done\n        if [ $item_count -gt $max_count ]; then\n            max_count=$item_count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n    local item\n    local count\n\n    for item in $list; do\n        count=0\n        for item2 in $list; do\n            if [ \"$item\" = \"$item2\" ]; then\n                count=$((count + 1))\n            fi\n        done\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_occurrences=0\n  local max_occurrences_item=\n  for item in $list; do\n    local occurrences=$(echo \"$list\" | grep -c \"$item\")\n    if [ $occurrences -gt $max_occurrences ]; then\n      max_occurrences=$occurrences\n      max_occurrences_item=$item\n    fi\n  done\n  echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n    local item=\n    local count=0\n\n    for item in $list; do\n        count=0\n        for item2 in $list; do\n            if [ \"$item\" = \"$item2\" ]; then\n                count=$((count + 1))\n            fi\n        done\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=\n  local max_count=0\n  for item in $list; do\n    local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_item=\"$item\"\n      max_count=$count\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n    local item=\n    local count=0\n\n    for item in $list; do\n        count=0\n        for i in $list; do\n            if [[ $i == $item ]]; then\n                count=$((count + 1))\n            fi\n        done\n        if [[ $count -gt $max_count ]]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=\"\"\n  local max_count=0\n  for item in $list; do\n    local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [[ $count -gt $max_count ]]; then\n      max_item=\"$item\"\n      max_count=$count\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=$1\n  local max=0\n  local item\n  for item in $list; do\n    local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [ $count -gt $max ]; then\n      max=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count=0\n\n    for item in $list; do\n        count=0\n        for i in $list; do\n            if [[ $i == $item ]]; then\n                ((count++))\n            fi\n        done\n        if [[ $count -gt $max_count ]]; then\n            max_item=$item\n            max_count=$count\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ \"$count\" -gt \"$max_count\" ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local max_count=0\n  local max_item=\n  local item=\n  for item in $1; do\n    local count=$(echo \"$1\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=\"\"\n  local max_count=0\n  local item=\"\"\n  local count=0\n\n  for item in $list; do\n    count=$(echo \"$list\" | grep -c \"$item\")\n    if [ $count -gt $max_count ]; then\n      max_item=\"$item\"\n      max_count=$count\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n\n    for item in $list; do\n        count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_occurrences=0\n  local max_occurrences_item=\n  for item in $list; do\n    local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [ $occurrences -gt $max_occurrences ]; then\n      max_occurrences=$occurrences\n      max_occurrences_item=$item\n    fi\n  done\n  echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_count=0\n  local max_item=\n  for item in $list; do\n    local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n\n  for item in $list; do\n    count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_occurrences_item=\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $occurrences -gt $max_occurrences ]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n    echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_occurrences=0\n  local max_occurrences_item=\n  for item in $list; do\n    local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [[ $occurrences -gt $max_occurrences ]]; then\n      max_occurrences=$occurrences\n      max_occurrences_item=$item\n    fi\n  done\n  echo $max_occurrences_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\"\"\n    local max_count=0\n    for item in $list; do\n        local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_item=\"$item\"\n            max_count=$count\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_occurrences_item=\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $occurrences -gt $max_occurrences ]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n    echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_occurrences_item=\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | grep -c \"$item\")\n        if [[ $occurrences -gt $max_occurrences ]]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n    echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n  for item in $list; do\n    count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item\n    local max_count=0\n    local item\n    local count\n\n    for item in $list; do\n        count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if (( count > max_count )); then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=\"\"\n  local max_count=0\n  for item in $list; do\n    local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=$1\n    local item\n    local max_item\n    local max_count=0\n    local count\n\n    for item in $list; do\n        count=$(echo $list | tr ' ' '\\n' | grep -c $item)\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo $max_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_occurrences_item=\n\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $occurrences -gt $max_occurrences ]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n\n    echo $max_occurrences_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n\n  for item in $list; do\n    count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [ \"$count\" -gt \"$max_count\" ]; then\n      max_count=\"$count\"\n      max_item=\"$item\"\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\"\"\n    for item in $list; do\n        local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n  for item in $list; do\n    count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n\n    for item in $list; do\n        count=0\n        for i in $list; do\n            if [ \"$i\" = \"$item\" ]; then\n                count=$((count + 1))\n            fi\n        done\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_occurrences=0\n    local item=\n    local occurrences=0\n\n    for item in $list; do\n        occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $occurrences -gt $max_occurrences ]; then\n            max_item=\"$item\"\n            max_occurrences=$occurrences\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local -A items\n  local item\n  for item in $1; do\n    (( items[$item]++ ))\n  done\n  local max_item max_count\n  for item in \"${!items[@]}\"; do\n    if [[ -z $max_item || ${items[$item]} -gt $max_count ]]; then\n      max_item=$item\n      max_count=${items[$item]}\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=$1\n    local max=0\n    local item=\n    for i in $list; do\n        local count=$(echo $list | tr ' ' '\\n' | grep -c $i)\n        if [ $count -gt $max ]; then\n            max=$count\n            item=$i\n        fi\n    done\n    echo $item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\"\"\n    local max_count=0\n    for item in $list; do\n        local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ \"$count\" -gt \"$max_count\" ]; then\n            max_item=\"$item\"\n            max_count=\"$count\"\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item\\$\")\n        if (( count > max_count )); then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=$1\n  local item\n  local max_item\n  local max_count=0\n  local count\n  for item in $list; do\n    count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if (( count > max_count )); then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=\"\"\n  local max_count=0\n\n  for item in $list; do\n    count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [ $count -gt $max_count ]; then\n      max_item=\"$item\"\n      max_count=$count\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_occurrences_item=\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | grep -c \"$item\")\n        if [ \"$occurrences\" -gt \"$max_occurrences\" ]; then\n            max_occurrences=\"$occurrences\"\n            max_occurrences_item=\"$item\"\n        fi\n    done\n    echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_item=\"$item\"\n            max_count=$count\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count=0\n\n    for item in $list; do\n        count=0\n        for item2 in $list; do\n            if [ \"$item\" = \"$item2\" ]; then\n                count=$((count + 1))\n            fi\n        done\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_item=\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [[ $occurrences -gt $max_occurrences ]]; then\n            max_occurrences=$occurrences\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_count=0\n  local max_item=\n  for item in $list; do\n    local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [ \"$count\" -gt \"$max_count\" ]; then\n      max_count=\"$count\"\n      max_item=\"$item\"\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=\n  local max_count=0\n  local item=\n  local count=0\n  for item in $list; do\n    count=0\n    for item2 in $list; do\n      if [ \"$item\" = \"$item2\" ]; then\n        count=$((count + 1))\n      fi\n    done\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n\n  for item in $list; do\n    count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=$1\n  local max_item=\n  local max_count=0\n  local item_count=0\n  for item in $list; do\n    item_count=0\n    for item2 in $list; do\n      if [[ $item == $item2 ]]; then\n        ((item_count++))\n      fi\n    done\n    if [[ $item_count -gt $max_count ]]; then\n      max_count=$item_count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=\n  local max_count=0\n  local item=\n  local count=0\n\n  for item in $list; do\n    count=0\n    for i in $list; do\n      if [ \"$i\" = \"$item\" ]; then\n        count=$((count + 1))\n      fi\n    done\n\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n  for item in $list; do\n    count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if (( count > max_count )); then\n      max_item=\"$item\"\n      max_count=$count\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=$1\n    local max=0\n    local item=\n    for i in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$i$\")\n        if [ $count -gt $max ]; then\n            max=$count\n            item=$i\n        fi\n    done\n    echo \"$item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_count=0\n  local max_item=\n  for item in $list; do\n    local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if (( count > max_count )); then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n\n    for item in $list; do\n        count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n  for item in $list; do\n    count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if (( count > max_count )); then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=$1\n  local item\n  local max_item\n  local max_count=0\n  local count\n\n  for item in $list; do\n    count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [[ $count -gt $max_count ]]; then\n      max_item=$item\n      max_count=$count\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local -A map\n  local max_key max_value\n  for i in $1; do\n    map[$i]=$((map[$i]+1))\n    if [[ ${map[$i]} -gt $max_value ]]; then\n      max_key=$i\n      max_value=${map[$i]}\n    fi\n  done\n  echo \"$max_key\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=$1\n  local max_item=\n  local max_count=0\n  local item=\n  local count=0\n  for item in $list; do\n    count=0\n    for item2 in $list; do\n      if [[ $item == $item2 ]]; then\n        count=$((count + 1))\n      fi\n    done\n    if [[ $count -gt $max_count ]]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo $max_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_occurrences_item=\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | grep -c \"$item\")\n        if [ $occurrences -gt $max_occurrences ]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n    echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local -A counts\n    local item\n    for item in $1; do\n        (( counts[$item]++ ))\n    done\n    local max_count=0\n    local max_item\n    for item in \"${!counts[@]}\"; do\n        if (( counts[$item] > max_count )); then\n            max_count=${counts[$item]}\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=$1\n    local max_occurrences=0\n    local max_occurrences_item=0\n    for item in $list; do\n        local occurrences=$(echo $list | tr ' ' '\\n' | grep -c $item)\n        if [ $occurrences -gt $max_occurrences ]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n    echo $max_occurrences_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_occurrences_item=\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [[ $occurrences -gt $max_occurrences ]]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n    echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n\n    for item in $list; do\n        count=$(echo \"$list\" | grep -c \"$item\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\"\"\n    local max_count=0\n    for item in $list; do\n        local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_item=\"$item\"\n            max_count=$count\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n  for item in $list; do\n    count=$(echo \"$list\" | grep -c \"$item\")\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_occurrences=0\n  local max_occurrences_item=\n  for item in $list; do\n    local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [ $occurrences -gt $max_occurrences ]; then\n      max_occurrences=$occurrences\n      max_occurrences_item=$item\n    fi\n  done\n  echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n    local item_count=0\n\n    for item in $list; do\n        item_count=0\n        for item2 in $list; do\n            if [[ $item == $item2 ]]; then\n                ((item_count++))\n            fi\n        done\n        if [[ $item_count -gt $max_count ]]; then\n            max_item=$item\n            max_count=$item_count\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=$1\n  local item\n  local max_item\n  local max_count=0\n  local count\n\n  for item in $list; do\n    count=0\n    for item2 in $list; do\n      if [ \"$item\" = \"$item2\" ]; then\n        count=$((count + 1))\n      fi\n    done\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local -A freq\n    for item in $1; do\n        freq[$item]=$((freq[$item] + 1))\n    done\n    local max=0\n    local max_item\n    for item in \"${!freq[@]}\"; do\n        if ((freq[$item] > max)); then\n            max=${freq[$item]}\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_occurrences_item=\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | grep -c \"$item\")\n        if [ $occurrences -gt $max_occurrences ]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n    echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n  for item in $list; do\n    count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if (( count > max_count )); then\n      max_item=\"$item\"\n      max_count=$count\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\"\"\n    local max_count=0\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_item=\"$item\"\n            max_count=$count\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_count=0\n  local max_item=\n  for item in $list; do\n    local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if (( count > max_count )); then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n    for item in $list; do\n        count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo $max_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local -a list\n  local item\n  local max_item\n  local max_count\n  local count\n\n  list=($1)\n  max_count=0\n  for item in \"${list[@]}\"; do\n    count=0\n    for item2 in \"${list[@]}\"; do\n      if [[ \"$item\" == \"$item2\" ]]; then\n        count=$((count + 1))\n      fi\n    done\n    if [[ $count -gt $max_count ]]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=\"\"\n  local max_count=0\n\n  for item in $list; do\n    local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [[ $count -gt $max_count ]]; then\n      max_item=\"$item\"\n      max_count=$count\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n    local item=\n    local count=0\n    for item in $list; do\n        count=0\n        for i in $list; do\n            if [[ $i == $item ]]; then\n                count=$((count + 1))\n            fi\n        done\n        if [[ $count -gt $max_count ]]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max=0\n  local max_item=\n  for item in $list; do\n    local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [[ $count -gt $max ]]; then\n      max=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n\n  for item in $list; do\n    count=$(echo \"$list\" | grep -c \"$item\")\n    if [[ $count -gt $max_count ]]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local count\n    local max_item\n    local max_count=0\n    for item in $list; do\n        count=$(echo \"$list\" | grep -c \"^$item\\$\")\n        if [ $count -gt $max_count ]; then\n            max_item=$item\n            max_count=$count\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local -a list=(\"$@\")\n  local -A counts\n  local item\n  local max_count=0\n  local max_item\n\n  for item in \"${list[@]}\"; do\n    (( counts[$item]++ ))\n    if (( counts[$item] > max_count )); then\n      max_count=${counts[$item]}\n      max_item=$item\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item max_count\n    while read item; do\n        local count=$(echo \"$list\" | grep -c \"$item\")\n        if [ $count -gt $max_count ]; then\n            max_item=\"$item\"\n            max_count=$count\n        fi\n    done < <(echo \"$list\" | tr ' ' '\\n' | sort -u)\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpyfhgbwiz.sh: line 10: [: 1: unary operator expected\\n/tmp/tmpyfhgbwiz.sh: line 10: [: 1: unary operator expected\\n/tmp/tmpyfhgbwiz.sh: line 10: [: 1: unary operator expected\\n/tmp/tmpyfhgbwiz.sh: line 10: [: 1: unary operator expected\\n/tmp/tmpyfhgbwiz.sh: line 10: [: 1: unary operator expected\\n/tmp/tmpyfhgbwiz.sh: line 10: [: 1: unary operator expected\\n/tmp/tmpyfhgbwiz.sh: line 10: [: 1: unary operator expected\\n/tmp/tmpyfhgbwiz.sh: line 10: [: 1: unary operator expected\\n/tmp/tmpyfhgbwiz.sh: line 10: [: 1: unary operator expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_occurrences_item=\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | grep -c \"$item\")\n        if [ $occurrences -gt $max_occurrences ]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n    echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\"\"\n    local max_count=0\n    local item=\"\"\n    local count=0\n\n    for item in $list; do\n        count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local -a list=($1)\n    local -A freq\n    local -i i\n    local -i max_freq=0\n    local max_item\n\n    for i in \"${!list[@]}\"; do\n        ((freq[${list[$i]}]++))\n    done\n\n    for i in \"${!freq[@]}\"; do\n        if ((freq[$i] > max_freq)); then\n            max_freq=${freq[$i]}\n            max_item=$i\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=$1\n    local item\n    local max_item\n    local max_count=0\n    local count\n\n    for item in $list; do\n        count=$(echo $list | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo $max_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\"\"\n    for item in $list; do\n        local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if (( count > max_count )); then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n  for item in $list; do\n    count=$(echo \"$list\" | grep -c \"$item\")\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_item=\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $occurrences -gt $max_occurrences ]; then\n            max_occurrences=$occurrences\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item=\"\"\n    local max_count=0\n    local count=0\n    local max_item=\"\"\n\n    for item in $list; do\n        count=0\n        for i in $list; do\n            if [[ \"$item\" == \"$i\" ]]; then\n                count=$((count + 1))\n            fi\n        done\n        if [[ $count -gt $max_count ]]; then\n            max_count=$count\n            max_item=\"$item\"\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=$1\n    local max_occurrences=0\n    local max_occurrences_item=''\n    for item in $list; do\n        local occurrences=$(echo $list | tr ' ' '\\n' | grep -c $item)\n        if [ $occurrences -gt $max_occurrences ]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n    echo $max_occurrences_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n\n  for item in $list; do\n    count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_item=$item\n      max_count=$count\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_occurrences=0\n  local max_occurrences_item=\n  for item in $list; do\n    local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [[ $occurrences -gt $max_occurrences ]]; then\n      max_occurrences=$occurrences\n      max_occurrences_item=$item\n    fi\n  done\n  echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item\n    local max_count=0\n    local item\n    local count\n\n    for item in $list; do\n        count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_item=\"$item\"\n            max_count=$count\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=$1\n  local item\n  local max_item\n  local max_count=0\n  local count\n\n  for item in $list; do\n    count=0\n    for item2 in $list; do\n      if [[ $item == $item2 ]]; then\n        ((count++))\n      fi\n    done\n    if [[ $count -gt $max_count ]]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n\n  echo $max_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_occurrences_item=\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $occurrences -gt $max_occurrences ]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n    echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n    for item in $list; do\n        count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_count=0\n  local max_item=\n  for item in $list; do\n    local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190579,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n  for item in $list; do\n    count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_item=$item\n      max_count=$count\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=$1\n    local max_occurrences=0\n    local max_occurrences_item=\n    for item in $list; do\n        local occurrences=$(echo $list | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $occurrences -gt $max_occurrences ]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n    echo $max_occurrences_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local -a list=($1)\n  local -i max=0\n  local -i i=0\n  local -i j=0\n  local -i count=0\n  local -i max_index=0\n\n  for ((i=0; i<${#list[@]}; i++)); do\n    count=0\n    for ((j=0; j<${#list[@]}; j++)); do\n      if [[ ${list[$i]} == ${list[$j]} ]]; then\n        ((count++))\n      fi\n    done\n    if [[ $count -gt $max ]]; then\n      max=$count\n      max_index=$i\n    fi\n  done\n\n  echo \"${list[$max_index]} ($max occurrences)\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local item\n    local max_item\n    local max_count=0\n    local count\n\n    for item in $list; do\n        count=$(echo \"$list\" | grep -c \"$item\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n    local item=\n    local count=\n\n    for item in $list; do\n        count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_item=\"$item\"\n            max_count=$count\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local -A items\n    local item\n    for item in $1; do\n        items[$item]=$((items[$item] + 1))\n    done\n    local max_item=\n    local max_count=0\n    for item in \"${!items[@]}\"; do\n        if [[ ${items[$item]} -gt $max_count ]]; then\n            max_item=$item\n            max_count=${items[$item]}\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max=0\n  local max_item=\n  for item in $list; do\n    local count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n    if [[ $count -gt $max ]]; then\n      max=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n\tlocal max_count=0\n\tlocal max_item=\n\tfor item in $1; do\n\t\tlocal count=$(echo \"$1\" | tr ' ' '\\n' | grep -c \"^$item$\")\n\t\tif [ $count -gt $max_count ]; then\n\t\t\tmax_count=$count\n\t\t\tmax_item=$item\n\t\tfi\n\tdone\n\techo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=$1\n  local max_item=\n  local max_count=0\n  local item=\n  local count=0\n  for item in $list; do\n    count=$(echo \"$list\" | grep -c \"$item\")\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n    local item=\n    local count=0\n\n    for item in $list; do\n        count=0\n        for i in $list; do\n            if [ \"$i\" = \"$item\" ]; then\n                count=$((count + 1))\n            fi\n        done\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [[ $count -gt $max_count ]]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max=0\n    local item\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max ]; then\n            max=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_item=\n    local max_count=0\n    local item\n    local count\n    for item in $list; do\n        count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=$1\n    local max_item=\n    local max_count=0\n    for item in $list; do\n        local count=$(echo $list | tr ' ' '\\n' | grep -c $item)\n        if [ $count -gt $max_count ]; then\n            max_item=$item\n            max_count=$count\n        fi\n    done\n    echo $max_item\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190582,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=$1\n    local max_item=\n    local max_count=0\n    local item\n    local count\n\n    for item in $list; do\n        count=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if (( count > max_count )); then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190583,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=$1\n    local max_item=\n    local max_count=0\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190583,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n  for item in $list; do\n    count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=$1\n    local max_count=0\n    local max_item=\n\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190583,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_occurrences=0\n    local max_occurrences_item=\n    for item in $list; do\n        local occurrences=$(echo \"$list\" | grep -o \"$item\" | wc -l)\n        if [[ $occurrences -gt $max_occurrences ]]; then\n            max_occurrences=$occurrences\n            max_occurrences_item=$item\n        fi\n    done\n    echo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n  for item in $list; do\n    count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_item=\"$item\"\n      max_count=$count\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190583,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n\tlocal list=\"$1\"\n\tlocal max_occurrences=0\n\tlocal max_occurrences_item=\n\tfor item in $list; do\n\t\tlocal occurrences=$(echo \"$list\" | grep -c \"$item\")\n\t\tif [ $occurrences -gt $max_occurrences ]; then\n\t\t\tmax_occurrences=$occurrences\n\t\t\tmax_occurrences_item=$item\n\t\tfi\n\tdone\n\techo \"$max_occurrences_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190583,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local max_item=\"\"\n  local max_count=0\n  local item=\"\"\n  local count=0\n\n  for item in $list; do\n    count=$(echo \"$list\" | grep -c \"$item\")\n    if [ $count -gt $max_count ]; then\n      max_item=\"$item\"\n      max_count=$count\n    fi\n  done\n\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n  for item in $list; do\n    count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n    local list=\"$1\"\n    local max_count=0\n    local max_item=\n    for item in $list; do\n        local count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n        if [ $count -gt $max_count ]; then\n            max_count=$count\n            max_item=$item\n        fi\n    done\n    echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190580,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to find the item with maximum frequency in a given list.\n#\n# $1 is a space-separated list\nmax_occurrences() {\n  local list=\"$1\"\n  local item\n  local max_item\n  local max_count=0\n  local count\n  for item in $list; do\n    count=$(echo \"$list\" | tr ' ' '\\n' | grep -c \"^$item$\")\n    if [ $count -gt $max_count ]; then\n      max_count=$count\n      max_item=$item\n    fi\n  done\n  echo \"$max_item\"\n}\n\ncandidate() {\n    max_occurrences \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2 3 8 4 7 9 8 2 6 5 1 6 1 2 3 2 4 6 9 1 2\") = \"2\" ]]\n    [[ $(candidate \"2 3 8 4 7 9 8 7 9 15 14 10 12 13 16 18\") = \"8\" ]]\n    [[ $(candidate \"10 20 20 30 40 90 80 50 30 20 50 10\") = \"20\" ]]\n}\n\nrun_test",
      "timestamp": 1667190581,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
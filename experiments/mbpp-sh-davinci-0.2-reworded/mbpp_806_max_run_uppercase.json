{
  "name": "mbpp_806_max_run_uppercase",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find maximum run of uppercase characters in the given string.\n#\n# $1 is a string\nmax_run_uppercase() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_806_max_run_uppercase.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    max_run_uppercase \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"GeMKSForGERksISBESt\") = \"5\" ]]\n    [[ $(candidate \"PrECIOusMOVemENTSYT\") = \"6\" ]]\n    [[ $(candidate \"GooGLEFluTTER\") = \"4\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local str=\"$1\"\n    local max_run=0\n    local run=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            ((run++))\n            if ((run > max_run)); then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n    done\n    echo $max_run",
    "    local string=$1\n    local max_run=0\n    local run=0\n\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n            run=0\n        fi\n    done\n\n    if (( run > max_run )); then\n        max_run=$run\n    fi\n\n    echo $max_run",
    "    local str=$1\n    local max=0\n    local run=0\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            if [ $run -gt $max ]; then\n                max=$run\n            fi\n            run=0\n        fi\n        (( i++ ))\n    done\n    if [ $run -gt $max ]; then\n        max=$run\n    fi\n    echo $max",
    "    local string=\"$1\"\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#string}; i++ )); do\n        if [[ \"${string:$i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run=0 ))\n        fi\n        (( max_run = max_run > run ? max_run : run ))\n    done\n    echo $max_run",
    "    local str=$1\n    local max_run=0\n    local current_run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( current_run++ ))\n        else\n            if (( current_run > max_run )); then\n                max_run=$current_run\n            fi\n            current_run=0\n        fi\n    done\n    if (( current_run > max_run )); then\n        max_run=$current_run\n    fi\n    echo $max_run",
    "    local str=\"$1\"\n    local max=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max )) && max=$run\n            run=0\n        fi\n    done\n    (( run > max )) && max=$run\n    echo $max",
    "    local str=\"$1\"\n    local max=0\n    local count=0\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            count=$((count+1))\n            if [ $count -gt $max ]; then\n                max=$count\n            fi\n        else\n            count=0\n        fi\n        i=$((i+1))\n    done\n    echo $max",
    "    local str=\"$1\"\n    local max=0\n    local run=0\n    local i\n    for ((i=0; i<${#str}; i++)); do\n        if [[ ${str:i:1} =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run > max)) && max=$run\n            run=0\n        fi\n    done\n    ((run > max)) && max=$run\n    echo $max",
    "    local str=$1\n    local max=0\n    local cur=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ ${str:i:1} =~ [A-Z] ]]; then\n            ((cur++))\n        else\n            ((cur=0))\n        fi\n        if ((cur > max)); then\n            max=$cur\n        fi\n    done\n    echo $max",
    "    local str=$1\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ ${str:$i:1} =~ [A-Z] ]]; then\n            (( run++ ))\n            if (( run > max_run )); then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n    done\n    echo $max_run",
    "  local str=\"$1\"\n  local max_run=0\n  local run=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n      (( run++ ))\n    else\n      (( run > max_run )) && max_run=$run\n      run=0\n    fi\n  done\n  (( run > max_run )) && max_run=$run\n  echo $max_run",
    "  local str=\"$1\"\n  local max=0\n  local count=0\n  local c\n  for ((i=0; i<${#str}; i++)); do\n    c=${str:$i:1}\n    if [[ $c =~ [A-Z] ]]; then\n      ((count++))\n    else\n      ((count > max)) && max=$count\n      count=0\n    fi\n  done\n  ((count > max)) && max=$count\n  echo $max",
    "    local -i max_run=0\n    local -i run=0\n    local -i i\n    local -i len=${#1}\n    for ((i=0; i<len; i++)); do\n        if [[ ${1:i:1} =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run=0))\n        fi\n        if ((run > max_run)); then\n            max_run=$run\n        fi\n    done\n    echo $max_run",
    "    local str=\"$1\"\n    local max=0\n    local count=0\n    local i=0\n    local len=${#str}\n    while [ $i -lt $len ]; do\n        local ch=${str:$i:1}\n        if [[ $ch =~ [A-Z] ]]; then\n            count=$((count+1))\n        else\n            if [ $count -gt $max ]; then\n                max=$count\n            fi\n            count=0\n        fi\n        i=$((i+1))\n    done\n    if [ $count -gt $max ]; then\n        max=$count\n    fi\n    echo $max",
    "  local str=\"$1\"\n  local max=0\n  local count=0\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ \"${str:$i:1}\" =~ [A-Z] ]]; then\n      (( count++ ))\n    else\n      (( count > max )) && max=$count\n      count=0\n    fi\n  done\n  (( count > max )) && max=$count\n  echo \"$max\"",
    "    local str=\"$1\"\n    local max_run=0\n    local run=0\n    for (( i=0; i<${#str}; i++ )); do\n        if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo $max_run",
    "    local string=\"$1\"\n    local max_run=0\n    local run=0\n    local i=0\n    local len=${#string}\n    while [ $i -lt $len ]; do\n        local char=${string:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            ((run++))\n            if [ $run -gt $max_run ]; then\n                max_run=$run\n            fi\n        else\n            run=0\n        fi\n        ((i++))\n    done\n    echo $max_run",
    "    local str=\"$1\"\n    local max=0\n    local cur=0\n    for ((i=0; i<${#str}; i++)); do\n        if [[ \"${str:i:1}\" =~ [A-Z] ]]; then\n            ((cur++))\n        else\n            ((cur=0))\n        fi\n        if ((cur > max)); then\n            max=$cur\n        fi\n    done\n    echo $max",
    "    local string=\"$1\"\n    local max_run=0\n    local run=0\n    local char\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:$i:1}\"\n        if [[ \"$char\" =~ [A-Z] ]]; then\n            (( run++ ))\n        else\n            (( run > max_run )) && max_run=$run\n            run=0\n        fi\n    done\n    (( run > max_run )) && max_run=$run\n    echo \"$max_run\"",
    "    local string=\"$1\"\n    local max_run=0\n    local run=0\n    local i=0\n    local len=${#string}\n    for ((i=0; i<len; i++)); do\n        if [[ ${string:i:1} =~ [A-Z] ]]; then\n            ((run++))\n        else\n            ((run=0))\n        fi\n        if ((run > max_run)); then\n            max_run=$run\n        fi\n    done\n    echo $max_run"
  ]
}
{
  "name": "mbpp_573_unique_product",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to calculate the product of the unique numbers in a given list.\n#\n# $1 is a space-separated list\nunique_product() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_573_unique_product.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    unique_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10 20 30 40 20 50 60 40\") = \"720000000\" ]]\n    [[ $(candidate \"1 2 3 1\") = \"6\" ]]\n    [[ $(candidate \"7 8 9 0 1 1\") = \"0\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=\"$1\"\n    local product=1\n    local num\n\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$num\\>\"; then\n            product=$((product * num))\n        fi\n    done\n\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    local num\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$num\\b\" -o; then\n            product=$((product * num))\n        fi\n    done\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" | grep -v \"\\b$i\\b.*\\b$i\\b\"; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local number\n    for number in $list; do\n        if [[ $list =~ (^|[[:space:]])$number([[:space:]]|$) ]]; then\n            product=$(( product * number ))\n            list=${list//$number/}\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local num\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$num\\>\"; then\n            product=$((product * num))\n        fi\n    done\n    echo \"$product\"",
    "  local list=$1\n  local product=1\n  for i in $list; do\n    if ! [[ $list =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n      product=$(( product * i ))\n    fi\n  done\n  echo $product",
    "    local list=\"$1\"\n    local product=1\n    local num\n\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$num\\b\"; then\n            product=$(( product * num ))\n        fi\n    done\n\n    echo \"$product\"",
    "  local product=1\n  for i in $1; do\n    if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n      product=$(( product * i ))\n    fi\n  done\n  echo $product",
    "    local list=\"$1\"\n    local product=1\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$num\\b\" -w; then\n            product=$((product * num))\n        fi\n    done\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if [[ $list =~ (^| )$i($| ) ]]; then\n            product=$(( product * i ))\n            list=${list//$i/}\n        fi\n    done\n    echo $product",
    "  local list=\"$1\"\n  local product=1\n  for num in $list; do\n    if ! echo \"$list\" | grep -q \"\\<$num\\>\"; then\n      product=$((product * num))\n    fi\n  done\n  echo $product",
    "    local list=\"$1\"\n    local product=1\n    for num in $list; do\n        if ! [[ \"$list\" =~ (^|[[:space:]])\"$num\"($|[[:space:]]) ]]; then\n            product=$(( product * num ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for number in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$number\\b\" -; then\n            product=$((product * number))\n        fi\n    done\n    echo \"$product\"",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local num\n    for num in $list; do\n        if [[ $list =~ (^| )$num($| ) ]]; then\n            product=$(( product * num ))\n            list=${list//$num/}\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local unique_list=$(echo \"$list\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    for num in $unique_list; do\n        product=$((product * num))\n    done\n    echo \"$product\"",
    "    local -a unique_numbers\n    local -i i\n    local -i product=1\n\n    unique_numbers=($(echo \"$1\" | tr ' ' '\\n' | sort -u))\n    for ((i=0; i<${#unique_numbers[@]}; i++)); do\n        product=$((product * unique_numbers[i]))\n    done\n\n    echo \"$product\"",
    "  local list=\"$1\"\n  local product=1\n  for i in $list; do\n    if ! echo \"$list\" | grep -q \"\\b$i\\b\" -c; then\n      product=$(( product * i ))\n    fi\n  done\n  echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" | grep -v \"\\b$i\\b.*\\b$i\\b\"; then\n            product=$(( product * i ))\n        fi\n    done\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" | grep -v \"^$i\\$\"; then\n            product=$((product * i))\n        fi\n    done\n    echo \"$product\""
  ]
}
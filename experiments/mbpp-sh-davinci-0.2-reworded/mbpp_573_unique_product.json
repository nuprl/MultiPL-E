{
  "name": "mbpp_573_unique_product",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to calculate the product of the unique numbers in a given list.\n#\n# $1 is a space-separated list\nunique_product() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_573_unique_product.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    unique_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10 20 30 40 20 50 60 40\") = \"720000000\" ]]\n    [[ $(candidate \"1 2 3 1\") = \"6\" ]]\n    [[ $(candidate \"7 8 9 0 1 1\") = \"0\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=\"$1\"\n    local product=1\n    local num\n\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$num\\>\"; then\n            product=$((product * num))\n        fi\n    done\n\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    local num\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$num\\b\" -o; then\n            product=$((product * num))\n        fi\n    done\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" | grep -v \"\\b$i\\b.*\\b$i\\b\"; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local number\n    for number in $list; do\n        if [[ $list =~ (^|[[:space:]])$number([[:space:]]|$) ]]; then\n            product=$(( product * number ))\n            list=${list//$number/}\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local num\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$num\\>\"; then\n            product=$((product * num))\n        fi\n    done\n    echo \"$product\"",
    "  local list=$1\n  local product=1\n  for i in $list; do\n    if ! [[ $list =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n      product=$(( product * i ))\n    fi\n  done\n  echo $product",
    "    local list=\"$1\"\n    local product=1\n    local num\n\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$num\\b\"; then\n            product=$(( product * num ))\n        fi\n    done\n\n    echo \"$product\"",
    "  local product=1\n  for i in $1; do\n    if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n      product=$(( product * i ))\n    fi\n  done\n  echo $product",
    "    local list=\"$1\"\n    local product=1\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$num\\b\" -w; then\n            product=$((product * num))\n        fi\n    done\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if [[ $list =~ (^| )$i($| ) ]]; then\n            product=$(( product * i ))\n            list=${list//$i/}\n        fi\n    done\n    echo $product",
    "  local list=\"$1\"\n  local product=1\n  for num in $list; do\n    if ! echo \"$list\" | grep -q \"\\<$num\\>\"; then\n      product=$((product * num))\n    fi\n  done\n  echo $product",
    "    local list=\"$1\"\n    local product=1\n    for num in $list; do\n        if ! [[ \"$list\" =~ (^|[[:space:]])\"$num\"($|[[:space:]]) ]]; then\n            product=$(( product * num ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for number in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$number\\b\" -; then\n            product=$((product * number))\n        fi\n    done\n    echo \"$product\"",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local num\n    for num in $list; do\n        if [[ $list =~ (^| )$num($| ) ]]; then\n            product=$(( product * num ))\n            list=${list//$num/}\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local unique_list=$(echo \"$list\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    for num in $unique_list; do\n        product=$((product * num))\n    done\n    echo \"$product\"",
    "    local -a unique_numbers\n    local -i i\n    local -i product=1\n\n    unique_numbers=($(echo \"$1\" | tr ' ' '\\n' | sort -u))\n    for ((i=0; i<${#unique_numbers[@]}; i++)); do\n        product=$((product * unique_numbers[i]))\n    done\n\n    echo \"$product\"",
    "  local list=\"$1\"\n  local product=1\n  for i in $list; do\n    if ! echo \"$list\" | grep -q \"\\b$i\\b\" -c; then\n      product=$(( product * i ))\n    fi\n  done\n  echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" | grep -v \"\\b$i\\b.*\\b$i\\b\"; then\n            product=$(( product * i ))\n        fi\n    done\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" | grep -v \"^$i\\$\"; then\n            product=$((product * i))\n        fi\n    done\n    echo \"$product\"",
    "    local list=$1\n    local unique_list=$(echo $list | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    local product=1\n    for num in $unique_list; do\n        let product*=$num\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$num\\b\" -; then\n            product=$((product * num))\n        fi\n    done\n    echo \"$product\"",
    "    local product=1\n    for i in $1; do\n        if ! echo \"$1\" | grep -q \"\\b$i\\b\" | grep -v \"^$i\\b\" | grep -v \"\\b$i$\"; then\n            let product*=$i\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$i\\>\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "  local list=\"$1\"\n  local product=1\n  for i in $list; do\n    if ! echo \"$list\" | grep -q \"\\b$i\\b\" ; then\n      product=$((product * i))\n    fi\n  done\n  echo $product",
    "    local list=\"$1\"\n    local unique_list=\"\"\n    local product=1\n\n    for item in $list; do\n        if [[ $unique_list != *\"$item\"* ]]; then\n            unique_list=\"$unique_list $item\"\n        fi\n    done\n\n    for item in $unique_list; do\n        product=$(( $product * $item ))\n    done\n\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local unique_list=\"\"\n    for i in $list; do\n        if ! [[ $unique_list =~ $i ]]; then\n            unique_list=\"$unique_list $i\"\n        fi\n    done\n    for i in $unique_list; do\n        product=$((product * i))\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local unique_list=\"\"\n    for i in $list; do\n        if ! echo \"$unique_list\" | grep -q \"$i\"; then\n            unique_list=\"$unique_list $i\"\n            product=$((product * i))\n        fi\n    done\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        local is_unique=true\n        for j in $list; do\n            if [ $i -eq $j ] && [ $i -ne $j ]; then\n                is_unique=false\n            fi\n        done\n        if [ \"$is_unique\" = true ]; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "  # Write your code here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" -w; then\n            product=$((product * i))\n        fi\n    done\n    echo \"$product\"",
    "  local list=$1\n  local product=1\n  for i in $list; do\n    if ! [[ $list =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n      product=$((product * i))\n    fi\n  done\n  echo $product",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo $1 | tr ' ' '\\n' | sort -u | awk '{product*=$1} END {print product}'",
    "  local list=\"$1\"\n  local product=1\n  for i in $list; do\n    if ! echo \"$list\" | grep -q \"\\b$i\\b\" -w; then\n      product=$((product * i))\n    fi\n  done\n  echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if [[ $list != *\"$i\"* ]]; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local list=$1\n    local product=1\n    for i in $list; do\n        if ! echo $list | grep -q \"\\b$i\\b\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local -a list=($1)\n    local -a unique=()\n    local -i i=0\n    local -i j=0\n    local -i product=1\n\n    for ((i=0; i<${#list[@]}; i++)); do\n        for ((j=0; j<${#unique[@]}; j++)); do\n            if [[ ${list[$i]} -eq ${unique[$j]} ]]; then\n                break\n            fi\n        done\n        if [[ $j -eq ${#unique[@]} ]]; then\n            unique+=(${list[$i]})\n        fi\n    done\n\n    for ((i=0; i<${#unique[@]}; i++)); do\n        product=$((product * ${unique[$i]}))\n    done\n\n    echo $product",
    "    local list=$1\n    local product=1\n    for num in $list; do\n        if [[ $list =~ (^| )$num($| ) ]]; then\n            product=$(( product * num ))\n            list=${list//$num/}\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local number\n    for number in $list; do\n        if ! echo \"$list\" | grep -qw \"$number\"; then\n            product=$((product * number))\n        fi\n    done\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" -w; then\n            product=$((product * i))\n        fi\n    done\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    local i\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" | grep -v \"^$i\\$\"; then\n            product=$((product * i))\n        fi\n    done\n    echo \"$product\"",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo \"Hello world!\"",
    "  local product=1\n  for i in $1; do\n    if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n      product=$(( product * i ))\n    fi\n  done\n  echo $product",
    "    local list=\"$1\"\n    local product=1\n    local number\n    for number in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$number\\b\" >/dev/null; then\n            product=$((product * number))\n        fi\n    done\n    echo \"$product\"",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo \"Hello world!\"",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" -; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$num\\>\"; then\n            product=$((product * num))\n        fi\n    done\n    echo $product",
    "    local list=$1\n    local product=1\n    for i in $list; do\n        if [[ $list =~ (^| )$i($| ) ]]; then\n            product=$(( product * i ))\n            list=${list//$i/}\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! echo \"$1\" | grep -q \"\\b$i\\b\"; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" -; then\n            product=$((product * i))\n        fi\n    done\n    echo \"$product\"",
    "  local product=1\n  for i in $1; do\n    if ! echo $1 | grep -q \"\\b$i\\b\" -; then\n      product=$((product * i))\n    fi\n  done\n  echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! echo $1 | grep -q \"\\<$i\\>\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$i\\>\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! echo $1 | grep -q \"\\<$i\\>\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$i\\>\" > /dev/null; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q -w \"$i\"; then\n            product=$((product * i))\n        fi\n    done\n    echo \"$product\"",
    "    local list=$1\n    local product=1\n    for i in $list; do\n        if [[ $list =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n            list=${list//$i/}\n        fi\n    done\n    echo $product",
    "  local list=\"$1\"\n  local product=1\n  local num\n  for num in $list; do\n    if ! echo \"$list\" | grep -q \"\\b$num\\b\"; then\n      product=$((product * num))\n    fi\n  done\n  echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "  local list=$1\n  local product=1\n  for i in $list; do\n    if ! echo $list | grep -q \"\\b$i\\b\"; then\n      product=$((product * i))\n    fi\n  done\n  echo $product",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo $1",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if [[ $list =~ (^| )$i($| ) ]]; then\n            product=$(( product * i ))\n            list=${list//$i/}\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$i\\>\"; then\n            product=$((product * i))\n        fi\n    done\n    echo \"$product\"",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo $1",
    "    local result=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            result=$((result * i))\n        fi\n    done\n    echo $result",
    "    echo $1 | tr ' ' '\\n' | sort -u | awk '{p*=$1} END {print p}'",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if [[ $list != *$i* ]]; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo $1 | tr \" \" \"\\n\" | sort -u | awk '{prod*=$1} END {print prod}'",
    "    local -a unique_numbers\n    local -i product=1\n    local number\n    for number in $1; do\n        if ! [[ ${unique_numbers[*]} =~ $number ]]; then\n            unique_numbers+=($number)\n            product=$((product * number))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! echo $1 | grep -q \"\\b$i\\b\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local -a array\n    local -i i=0\n    local -i j=0\n    local -i product=1\n    local -i is_unique=1\n    array=($1)\n    for ((i=0; i<${#array[@]}; i++)); do\n        is_unique=1\n        for ((j=0; j<${#array[@]}; j++)); do\n            if [ $i -ne $j ] && [ ${array[$i]} -eq ${array[$j]} ]; then\n                is_unique=0\n                break\n            fi\n        done\n        if [ $is_unique -eq 1 ]; then\n            product=$((product * ${array[$i]}))\n        fi\n    done\n    echo $product",
    "    local numbers=($1)\n    local product=1\n    for number in \"${numbers[@]}\"; do\n        if ! [[ \"${numbers[*]}\" =~ \"${number}${number}\" ]]; then\n            product=$((product * number))\n        fi\n    done\n    echo \"$product\"",
    "    local -a arr\n    local -i i\n    local -i j\n    local -i prod=1\n    arr=($1)\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=0; j<i; j++)); do\n            if [[ ${arr[i]} == ${arr[j]} ]]; then\n                break\n            fi\n        done\n        if [[ $i == $j ]]; then\n            prod=$((prod * arr[i]))\n        fi\n    done\n    echo $prod",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo $1 | tr ' ' '\\n' | sort -u | awk '{p*=$1} END {print p}'",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local num\n\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$num\\b\" >/dev/null; then\n            product=$((product * num))\n        fi\n    done\n\n    echo \"$product\"",
    "    echo \"$1\" | tr ' ' '\\n' | sort -u | awk '{p*=$1} END {print p}'",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" -w; then\n            product=$((product * i))\n        fi\n    done\n    echo \"$product\"",
    "    local product=1\n    for i in $1; do\n        if [[ $i -gt 0 ]]; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
    "    local list=\"$1\"\n    local product=1\n    local num\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$num\\b\" -; then\n            product=$((product * num))\n        fi\n    done\n    echo $product",
    "    local -a arr=(\"$@\")\n    local -a uniq=()\n    local -i i=0\n    local -i j=0\n    local -i prod=1\n    local -i len=${#arr[@]}\n\n    for ((i=0; i<len; i++)); do\n        for ((j=0; j<len; j++)); do\n            if [[ ${arr[$i]} -eq ${arr[$j]} ]] && [[ $i -ne $j ]]; then\n                break\n            fi\n        done\n        if [[ $j -eq $len ]]; then\n            uniq+=(${arr[$i]})\n        fi\n    done\n\n    for ((i=0; i<${#uniq[@]}; i++)); do\n        prod=$((prod * uniq[$i]))\n    done\n\n    echo $prod",
    "    local list=$1\n    local product=1\n    local num\n    for num in $list; do\n        if ! echo $list | grep -q \"\\b$num\\b\"; then\n            product=$((product * num))\n        fi\n    done\n    echo $product",
    "    local list=$1\n    local product=1\n    local unique_numbers=()\n    for number in $list; do\n        if [[ ! \" ${unique_numbers[@]} \" =~ \" ${number} \" ]]; then\n            unique_numbers+=($number)\n            product=$((product * number))\n        fi\n    done\n    echo $product",
    "    local list=$1\n    local product=1\n    local unique_list=$(echo $list | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    for i in $unique_list; do\n        product=$((product * i))\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! echo \"$1\" | grep -q \"\\b$i\\b\" ; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=$1\n    local product=1\n    local unique_list=$(echo $list | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    for i in $unique_list; do\n        product=$((product * i))\n    done\n    echo $product",
    "  local list=\"$1\"\n  local product=1\n  for i in $list; do\n    if ! [[ $list =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n      product=$(( product * i ))\n    fi\n  done\n  echo $product",
    "    local list=\"$1\"\n    local product=1\n    for number in $list; do\n        if ! echo \"$list\" | grep -q \" $number \"; then\n            product=$((product * number))\n        fi\n    done\n    echo \"$product\"",
    "    local product=1\n    for i in $1; do\n        if ! echo $1 | grep -q \"\\b$i\\b\" ; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! echo $1 | grep -q \"\\<$i\\>\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local list=$1\n    local product=1\n    for i in $list; do\n        if ! echo $list | grep -q \"\\b$i\\b\" ; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" -w; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local result=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            (( result *= i ))\n        fi\n    done\n    echo $result",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local prod=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" -; then\n            prod=$((prod * i))\n        fi\n    done\n    echo \"$prod\"",
    "    local -a list\n    local -i i\n    local -i product=1\n    local -i count=0\n    local -i flag=0\n\n    list=($1)\n    for ((i=0; i<${#list[@]}; i++))\n    do\n        for ((j=0; j<${#list[@]}; j++))\n        do\n            if [ $i -ne $j ] && [ ${list[$i]} -eq ${list[$j]} ]\n            then\n                flag=1\n                break\n            fi\n        done\n        if [ $flag -eq 0 ]\n        then\n            product=$((product * ${list[$i]}))\n            count=$((count + 1))\n        fi\n        flag=0\n    done\n    echo \"Product of $count unique numbers is $product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$i\\>\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "  local list=\"$1\"\n  local product=1\n  for i in $list; do\n    if ! echo \"$list\" | grep -q \"\\b$i\\b\" | grep -v \"\\b$i\\b.*\\b$i\\b\"; then\n      product=$((product * i))\n    fi\n  done\n  echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" ; then\n            product=$(( product * i ))\n        fi\n    done\n    echo \"$product\"",
    "  local product=1\n  for i in $1; do\n    if ! echo $1 | grep -q \"\\<$i\\>\"; then\n      product=$((product * i))\n    fi\n  done\n  echo $product",
    "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
    "    local product=1\n    for i in $1; do\n        if ! echo $1 | grep -q \"\\<$i\\>\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if [[ $list =~ (^|[[:space:]])\"$i\"($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n            list=${list//\"$i\"/}\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! echo $1 | grep -q \"\\b$i\\b\" -; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "  local list=\"$1\"\n  local product=1\n  for i in $list; do\n    if ! [[ $list =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n      product=$(( product * i ))\n    fi\n  done\n  echo $product",
    "  local list=\"$1\"\n  local product=1\n  for i in $list; do\n    if ! [[ $list =~ (^|[[:space:]])\"$i\"($|[[:space:]]) ]]; then\n      product=$(( product * i ))\n    fi\n  done\n  echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$i\\>\" | grep -v \"\\<$i\\>\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo $list | grep -q \"\\b$i\\b\" -; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^| )$i($| ) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local num\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$num\\>\"; then\n            product=$((product * num))\n        fi\n    done\n    echo \"$product\"",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])\"$i\"($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$i\\>\"; then\n            product=$((product * i))\n        fi\n    done\n\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ \"$1\" =~ (^|[[:space:]])\"$i\"($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local -a list\n    IFS=' ' read -r -a list <<< \"$1\"\n    local product=1\n    local i\n    for i in \"${list[@]}\"; do\n        if ! [[ \"${list[*]}\" =~ \"$i\" ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo \"$product\"",
    "  local list=\"$1\"\n  local product=1\n  for num in $list; do\n    if ! echo \"$list\" | grep -qw \"$num\"; then\n      product=$((product * num))\n    fi\n  done\n  echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$i\\>\" | grep -v \"\\<$i\\> \"; then\n            product=$(( product * i ))\n        fi\n    done\n    echo \"$product\"",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local result=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$i\\>\"; then\n            result=$((result * i))\n        fi\n    done\n    echo $result",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$i\\>\"; then\n            product=$((product * i))\n        fi\n    done\n    echo \"$product\"",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo \"Hello world!\"",
    "    local list=$1\n    local product=1\n    for i in $list; do\n        if [[ $list =~ (^| )$i($| ) ]]; then\n            product=$((product * i))\n            list=${list//$i/}\n        fi\n    done\n    echo $product",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo $1 | tr ' ' '\\n' | sort -u | awk '{prod*=$1} END{print prod}'",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo $1",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo \"Hello world!\"",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! echo $1 | grep -q \"\\b$i\\b\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! echo $1 | grep -q \"\\b$i\\b\" | grep -v \"\\b$i\\b.*\\b$i\\b\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" | grep -v \"^\\b$i\\b$\"; then\n            product=$(( product * i ))\n        fi\n    done\n    echo \"$product\"",
    "    local list=$1\n    local product=1\n    for i in $list; do\n        if ! echo $list | grep -q \"\\b$i\\b\" ; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=$1\n    local product=1\n    for i in $list; do\n        if ! echo $list | grep -q \"\\b$i\\b\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for number in $list; do\n        if ! [[ $list =~ (^| )$number($| ) ]]; then\n            product=$(( product * number ))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo \"Hello world!\"",
    "    # Your code here\n    echo \"$1\" | tr ' ' '\\n' | sort -u | paste -sd '*' | bc",
    "  local list=$1\n  local product=1\n  local unique_numbers=$(echo \"$list\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n  for number in $unique_numbers; do\n    product=$((product * number))\n  done\n  echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" -w; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local -a list=($1)\n    local -a unique_list=()\n    local -i product=1\n    local -i i=0\n\n    for ((i=0; i<${#list[@]}; i++)); do\n        if [[ ! \" ${unique_list[@]} \" =~ \" ${list[$i]} \" ]]; then\n            unique_list+=(${list[$i]})\n        fi\n    done\n\n    for ((i=0; i<${#unique_list[@]}; i++)); do\n        product=$((product * ${unique_list[$i]}))\n    done\n\n    echo $product",
    "    local list=$1\n    local product=1\n    for i in $list; do\n        if ! echo $list | grep -q \"\\b$i\\b\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local num\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$num\\>\"; then\n            product=$((product * num))\n        fi\n    done\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if [[ $list =~ (^| )$i($| ) ]]; then\n            product=$(( product * i ))\n            list=${list//$i/}\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! echo $1 | grep -q \"\\<$i\\>\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local list=$1\n    local product=1\n    for i in $list; do\n        if ! echo $list | grep -q \"\\b$i\\b\" -w; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "  local list=$1\n  local product=1\n  for i in $list; do\n    if ! [[ $list =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n      product=$(( product * i ))\n    fi\n  done\n  echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" -w; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$((product * i))\n            # Remove all instances of $i from $1\n            # This is the only way I could think of to do this\n            # without using an array\n            local temp=$(echo $1 | sed \"s/$i//g\")\n            local temp=$(echo $temp | sed \"s/  / /g\")\n            local temp=$(echo $temp | sed \"s/^ //g\")\n            local temp=$(echo $temp | sed \"s/ $//g\")\n            local temp=$(echo $temp | sed \"s/^$//g\")\n            local temp=$(echo $temp | sed \"s/  / /g\")\n            local temp=$(echo $temp | sed \"s/^ //g\")\n            local temp=$(echo $temp | sed \"s/ $//g\")\n            local temp=$(echo $temp | sed \"s/^$//g\")\n            local temp=$(echo $temp | sed \"s/  / /g\")\n            local temp=$(echo $temp | sed \"s/^ //g\")\n            local temp=$(echo $temp | sed \"s/ $//g\")\n            local temp=$(echo $temp | sed \"s/^$//g\")\n            local temp=$(echo $temp | sed \"s/  / /g\")\n            local temp=$(echo $temp | sed \"s/^ //g\")\n            local temp=$(echo $temp | sed \"s/ $//g\")\n            local temp=$(echo $temp | sed \"s/^$//g\")\n            local temp=$(echo $temp | sed \"s/  / /g\")\n            local temp=$(echo $temp | sed \"s/^ //g\")\n            local temp=$(echo $temp | sed \"s/ $//g\")\n            local temp=$(echo $temp | sed \"s/^$//g\")\n            local temp=$(echo $temp | sed \"s/  / /g\")\n            local temp=$(echo $temp | sed \"s/^ //g",
    "    local list=\"$1\"\n    local product=1\n    local unique_numbers=$(echo \"$list\" | tr ' ' '\\n' | sort -u)\n\n    for number in $unique_numbers; do\n        product=$((product * number))\n    done\n\n    echo $product",
    "  local product=1\n  for i in $1; do\n    if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n      product=$((product * i))\n    fi\n  done\n  echo $product",
    "    local list=$1\n    local product=1\n    for i in $list; do\n        if ! echo $list | grep -q \"\\<$i\\>\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo \"Hello world!\"",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local num\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$num\\>\"; then\n            product=$(( product * num ))\n        fi\n    done\n    echo \"$product\"",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local list=$1\n    local product=1\n    for num in $list; do\n        if ! echo $list | grep -q \"\\<$num\\>\"; then\n            product=$((product * num))\n        fi\n    done\n    echo $product",
    "    local list=$1\n    local product=1\n    for i in $list; do\n        if [[ $list =~ (^| )$i($| ) ]]; then\n            product=$(( product * i ))\n            list=${list//$i/}\n        fi\n    done\n    echo $product",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo \"Hello world!\"",
    "    local list=\"$1\"\n    local product=1\n    local unique_list=$(echo \"$list\" | tr ' ' '\\n' | sort -u | tr '\\n' ' ')\n    for i in $unique_list; do\n        product=$((product * i))\n    done\n    echo \"$product\"",
    "  local list=$1\n  local product=1\n  for i in $list; do\n    if ! [[ $list =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n      product=$((product * i))\n    fi\n  done\n  echo $product",
    "    local list=\"$1\"\n    local product=1\n    local number\n    for number in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$number\\>\"; then\n            product=$(( product * number ))\n        fi\n    done\n    echo \"$product\"",
    "    # Write your code here\n    echo \"$1\" | tr ' ' '\\n' | sort -u | awk '{prod*=$1} END {print prod}'",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" -; then\n            product=$((product * i))\n        fi\n    done\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if [[ $list =~ (^| )$i($| ) ]]; then\n            product=$(( product * i ))\n            list=${list//$i/}\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! echo $1 | grep -q \"\\b$i\\b\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$i\\>\" | grep -v \"\\<$i\\>\"; then\n            product=$((product * i))\n        fi\n    done\n    echo \"$product\"",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])$i($|[[:space:]]) ]]; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if [[ $list =~ (^| )$i($| ) ]]; then\n            product=$(( product * i ))\n            list=${list//$i/}\n        fi\n    done\n    echo $product",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo $1 | tr \" \" \"\\n\" | sort -u | paste -sd* | bc",
    "    # TODO: Write your code here\n    # Note: Return the product of only the unique elements in the list\n    echo \"Not Implemented\"",
    "    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
    "  local list=\"$1\"\n  local product=1\n  for i in $list; do\n    if ! echo \"$list\" | grep -q \"\\b$i\\b\" -; then\n      product=$((product * i))\n    fi\n  done\n  echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    local num\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$num\\b\" | grep -v \"\\b$num\\b.*\\b$num\\b\"; then\n            product=$((product * num))\n        fi\n    done\n    echo \"$product\"",
    "    local list=\"$1\"\n    local unique_list=\"\"\n    local product=1\n\n    for number in $list; do\n        if ! echo \"$unique_list\" | grep -q \"$number\"; then\n            unique_list=\"$unique_list $number\"\n            product=$((product * number))\n        fi\n    done\n\n    echo \"$product\"",
    "    local product=1\n    for i in $1; do\n        if ! echo $1 | grep -wq $i; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" -; then\n            product=$((product * i))\n        fi\n    done\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"$i\" -w; then\n            product=$((product * i))\n        fi\n    done\n\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    local num\n\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$num\\b\" >/dev/null; then\n            product=$((product * num))\n        fi\n    done\n\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" ; then\n            product=$(( product * i ))\n        fi\n    done\n    echo \"$product\"",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])\"$i\"($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    local num\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$num\\>\"; then\n            product=$((product * num))\n        fi\n    done\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    local num\n    for num in $list; do\n        if ! echo \"$list\" | grep -q \"\\<$num\\>\"; then\n            product=$((product * num))\n        fi\n    done\n    echo \"$product\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if [[ $list =~ (^| )$i($| ) ]]; then\n            product=$(( product * i ))\n            list=${list//$i/}\n        fi\n    done\n    echo $product",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo \"$list\" | grep -q \"\\b$i\\b\" -w; then\n            product=$((product * i))\n        fi\n    done\n    echo \"$product\"",
    "    local product=1\n    for i in $1; do\n        if ! [[ $1 =~ (^|[[:space:]])\"$i\"($|[[:space:]]) ]]; then\n            product=$(( product * i ))\n        fi\n    done\n    echo $product",
    "    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo \"Hello world!\"",
    "    local list=\"$1\"\n    local product=1\n    for i in $list; do\n        if ! echo $list | grep -q \"\\b$i\\b\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product",
    "    local product=1\n    for i in $1; do\n        if ! echo $1 | grep -q \"\\b$i\\b\"; then\n            product=$((product * i))\n        fi\n    done\n    echo $product"
  ]
}
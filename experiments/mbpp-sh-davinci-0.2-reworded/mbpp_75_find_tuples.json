{
  "name": "mbpp_75_find_tuples",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find lists which have all elements divisible by k from the given list of lists.\n#\n# $1 is a newline-separated, space-separated list\n# $2 is an integer\nfind_tuples() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_75_find_tuples.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    find_tuples \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"6 24 12\\n7 9 6\\n12 18 21\" \"6\") = \"6 24 12\" ]]\n    [[ $(candidate \"5 25 30\\n4 2 3\\n7 8 9\" \"5\") = \"5 25 30\" ]]\n    [[ $(candidate \"7 9 16\\n8 16 4\\n19 17 18\" \"4\") = \"8 16 4\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local input=\"$1\"\n  local k=\"$2\"\n  local tuple\n  local tuple_arr\n  local divisible\n  while read -r tuple; do\n    tuple_arr=($tuple)\n    divisible=1\n    for i in \"${tuple_arr[@]}\"; do\n      if [[ $((i % k)) -ne 0 ]]; then\n        divisible=0\n        break\n      fi\n    done\n    if [[ $divisible -eq 1 ]]; then\n      echo \"$tuple\"\n    fi\n  done <<< \"$input\"",
    "  local -n arr=$1\n  local k=$2\n  local tuple\n  for tuple in \"${arr[@]}\"; do\n    local -a tuple_arr=($tuple)\n    local tuple_len=${#tuple_arr[@]}\n    local i\n    for ((i=0; i<tuple_len; i++)); do\n      if ((tuple_arr[i] % k != 0)); then\n        break\n      fi\n    done\n    if ((i == tuple_len)); then\n      echo \"$tuple\"\n    fi\n  done",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  while read -r tuple; do\n    local divisible=1\n    for n in $tuple; do\n      if [[ $((n % k)) -ne 0 ]]; then\n        divisible=0\n        break\n      fi\n    done\n    if [[ $divisible -eq 1 ]]; then\n      echo \"$tuple\"\n    fi\n  done <<< \"$list\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  local tuple_list\n  local tuple_list_list\n  local tuple_list_list_list\n  local tuple_list_list_list_list\n  local tuple_list_list_list_list_list\n  local tuple_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  local tuple_list\n  local tuple_list_list\n  local tuple_list_list_list\n\n  tuple_list_list_list=\"\"\n  while read tuple_list_list; do\n    tuple_list=\"\"\n    while read tuple; do\n      if [ $(($tuple % $k)) -eq 0 ]; then\n        tuple_list=\"$tuple_list $tuple\"\n      fi\n    done <<< \"$tuple_list_list\"\n    if [ -n \"$tuple_list\" ]; then\n      tuple_list_list_list=\"$tuple_list_list_list $tuple_list\"\n    fi\n  done <<< \"$list\"\n  echo \"$tuple_list_list_list\"",
    "    local list=\"$1\"\n    local k=\"$2\"\n    local tuple\n    local tuple_divisible\n    local tuple_divisible_count\n    local tuple_divisible_count_max\n    local tuple_divisible_max\n    local tuple_divisible_max_count\n    local tuple_divisible_max_count_max\n    local tuple_divisible_max_max\n    local tuple_divisible_max_max_count\n    local tuple_divisible_max_max_count_max\n    local tuple_divisible_max_max_max\n    local tuple_divisible_max_max_max_count\n    local tuple_divisible_max_max_max_count_max\n    local tuple_divisible_max_max_max_max\n    local tuple_divisible_max_max_max_max_count\n    local tuple_divisible_max_max_max_max_count_max\n    local tuple_divisible_max_max_max_max_max\n    local tuple_divisible_max_max_max_max_max_count\n    local tuple_divisible_max_max_max_max_max_count_max\n    local tuple_divisible_max_max_max_max_max_max\n    local tuple_divisible_max_max_max_max_max_max_count\n    local tuple_divisible_max_max_max_max_max_max_count_max\n    local tuple_divisible_max_max_max_max_max_max_max\n    local tuple_divisible_max_max_max_max_max_max_max_count\n    local tuple_divisible_max_max_max_max_max_max_max_count_max\n    local tuple_divisible_max_max_max_max_max_max_max_max\n    local tuple_divisible_max_max_max_max_max_max_max_max_count\n    local tuple_divisible_max_max_max_max_max_max_max_max_count_max\n    local tuple_divisible_max_max_max_max_max_max_max_max_max\n    local tuple_divisible_",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  while read -r tuple; do\n    local divisible=1\n    for n in $tuple; do\n      if [[ $((n % k)) -ne 0 ]]; then\n        divisible=0\n        break\n      fi\n    done\n    if [[ $divisible -eq 1 ]]; then\n      echo \"$tuple\"\n    fi\n  done <<< \"$list\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  local tuple_list\n  local tuple_list_list\n  local tuple_list_list_list\n  local tuple_list_list_list_list\n  local tuple_list_list_list_list_list\n  local tuple_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list\n  local tuple_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list_list",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  while read -r tuple; do\n    local -a tuple_arr=($tuple)\n    local divisible=1\n    for num in \"${tuple_arr[@]}\"; do\n      if [[ $((num % k)) -ne 0 ]]; then\n        divisible=0\n        break\n      fi\n    done\n    if [[ $divisible -eq 1 ]]; then\n      echo \"$tuple\"\n    fi\n  done <<< \"$list\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuples=()\n  while read -r tuple; do\n    local tuple_divisible=1\n    for i in $tuple; do\n      if [[ $((i % k)) -ne 0 ]]; then\n        tuple_divisible=0\n        break\n      fi\n    done\n    if [[ $tuple_divisible -eq 1 ]]; then\n      tuples+=(\"$tuple\")\n    fi\n  done <<< \"$list\"\n  echo \"${tuples[@]}\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  while read -r tuple; do\n    local divisible=1\n    for i in $tuple; do\n      if [[ $(( $i % $k )) -ne 0 ]]; then\n        divisible=0\n        break\n      fi\n    done\n    if [[ $divisible -eq 1 ]]; then\n      echo \"$tuple\"\n    fi\n  done <<< \"$list\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  while read -r tuple; do\n    local tuple_is_divisible=1\n    for i in $tuple; do\n      if (( i % k != 0 )); then\n        tuple_is_divisible=0\n        break\n      fi\n    done\n    if (( tuple_is_divisible )); then\n      echo \"$tuple\"\n    fi\n  done <<< \"$list\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  while read -r tuple; do\n    local tuple_ok=1\n    for n in $tuple; do\n      if (( n % k != 0 )); then\n        tuple_ok=0\n        break\n      fi\n    done\n    if (( tuple_ok )); then\n      echo $tuple\n    fi\n  done <<< \"$list\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  while read -r tuple; do\n    local divisible=1\n    for i in $tuple; do\n      if [[ $((i % k)) -ne 0 ]]; then\n        divisible=0\n        break\n      fi\n    done\n    if [[ $divisible -eq 1 ]]; then\n      echo \"$tuple\"\n    fi\n  done <<< \"$list\"",
    "  local -a tuples=($1)\n  local k=$2\n  local -a result=()\n  for tuple in \"${tuples[@]}\"; do\n    local -a tuple_array=($tuple)\n    local tuple_result=1\n    for i in \"${tuple_array[@]}\"; do\n      if [[ $((i % k)) -ne 0 ]]; then\n        tuple_result=0\n        break\n      fi\n    done\n    if [[ $tuple_result -eq 1 ]]; then\n      result+=(\"$tuple\")\n    fi\n  done\n  echo \"${result[@]}\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  while read -r tuple; do\n    local tuple_is_divisible=1\n    for n in $tuple; do\n      if (( n % k != 0 )); then\n        tuple_is_divisible=0\n        break\n      fi\n    done\n    if (( tuple_is_divisible )); then\n      echo \"$tuple\"\n    fi\n  done <<< \"$list\"",
    "    local input=\"$1\"\n    local k=\"$2\"\n    local tuple\n    while read -r tuple; do\n        local all_divisible=1\n        for n in $tuple; do\n            if [ $((n % k)) -ne 0 ]; then\n                all_divisible=0\n                break\n            fi\n        done\n        if [ $all_divisible -eq 1 ]; then\n            echo \"$tuple\"\n        fi\n    done <<< \"$input\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  while read -r tuple; do\n    local tuple_divisible=1\n    for i in $tuple; do\n      if (( i % k != 0 )); then\n        tuple_divisible=0\n        break\n      fi\n    done\n    if (( tuple_divisible )); then\n      echo \"$tuple\"\n    fi\n  done <<< \"$list\"",
    "  local list=\"$1\"\n  local k=\"$2\"\n  local tuple\n  local tuple_arr\n  local tuple_len\n  local tuple_i\n  local tuple_val\n  local tuple_divisible\n  local tuple_divisible_str\n  local tuple_divisible_arr\n  local tuple_divisible_len\n  local tuple_divisible_i\n  local tuple_divisible_val\n  local tuple_divisible_val_divisible\n  local tuple_divisible_val_divisible_str\n  local tuple_divisible_val_divisible_arr\n  local tuple_divisible_val_divisible_len\n  local tuple_divisible_val_divisible_i\n  local tuple_divisible_val_divisible_val\n  local tuple_divisible_val_divisible_val_divisible\n  local tuple_divisible_val_divisible_val_divisible_str\n  local tuple_divisible_val_divisible_val_divisible_arr\n  local tuple_divisible_val_divisible_val_divisible_len\n  local tuple_divisible_val_divisible_val_divisible_i\n  local tuple_divisible_val_divisible_val_divisible_val\n  local tuple_divisible_val_divisible_val_divisible_val_divisible\n  local tuple_divisible_val_divisible_val_divisible_val_divisible_str\n  local tuple_divisible_val_divisible_val_divisible_val_divisible_arr\n  local tuple_divisible_val_divisible_val_divisible_val_divisible_len\n  local tuple_divisible_val_divisible_val_divisible_val_divisible_i\n  local tuple_divisible_val_divisible_val_divisible_val_divisible_val\n  local tuple_divisible_val_divisible_val_divisible_val_divisible_val_divisible\n  local tuple_divisible_val_divisible_val_divisible_val_divisible_val_divisible_str\n  local tuple_divisible_val_divisible_val_divisible_val_divisible_val",
    "    local list=\"$1\"\n    local k=\"$2\"\n    local tuple\n    while read -r tuple; do\n        local divisible=1\n        for num in $tuple; do\n            if [[ $((num % k)) -ne 0 ]]; then\n                divisible=0\n                break\n            fi\n        done\n        if [[ $divisible -eq 1 ]]; then\n            echo \"$tuple\"\n        fi\n    done <<< \"$list\""
  ]
}
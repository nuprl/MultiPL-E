{
  "name": "mbpp_291_count_no_of_ways",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n#\n# $1 is an integer\n# $2 is an integer\ncount_no_of_ways() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_291_count_no_of_ways.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    count_no_of_ways \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"4\") = \"16\" ]]\n    [[ $(candidate \"3\" \"2\") = \"6\" ]]\n    [[ $(candidate \"4\" \"4\") = \"228\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local n=$1\n  local k=$2\n  local total=$((k*k))\n  local same=$((k-1))\n  local diff=$((k-1))\n  for ((i=3; i<=n; i++)); do\n    local old_total=$total\n    total=$(((total*k) - (same*diff)))\n    same=$((old_total - diff))\n    diff=$((old_total - same))\n  done\n  echo $total",
    "    local n=$1\n    local k=$2\n    local same=0\n    local diff=k\n    local total=k\n    local i=2\n    while [ $i -le $n ]; do\n        same=$diff\n        diff=$total*(k-1)\n        total=$((same+diff))\n        i=$((i+1))\n    done\n    echo $total",
    "  local n=$1\n  local k=$2\n  local same=0\n  local diff=k\n  local total=k\n  for (( i=2; i<=n; i++ )); do\n    same=$(( diff ))\n    diff=$(( (k-1) * total ))\n    total=$(( same + diff ))\n  done\n  echo $total",
    "    local n=$1\n    local k=$2\n    local same=0\n    local diff=k\n    local total=k\n    local i=2\n    while [[ $i -le $n ]]; do\n        same=$diff\n        diff=$total*(k-1)\n        total=$((same+diff))\n        ((i++))\n    done\n    echo $total",
    "  local n=$1\n  local k=$2\n  local dp=()\n  local i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<=n; i++)); do\n    dp[$i]=0\n  done\n  dp[1]=$k\n  dp[2]=$((k*k))\n  for ((i=3; i<=n; i++)); do\n    dp[$i]=$(((k-1)*(dp[$((i-1))]+dp[$((i-2))])))\n  done\n  echo ${dp[$n]}",
    "    local n=$1\n    local k=$2\n    local same=0\n    local diff=k\n    local total=k\n    local i=2\n    while [ $i -le $n ]; do\n        same=$diff\n        diff=$((total * (k - 1)))\n        total=$((same + diff))\n        i=$((i + 1))\n    done\n    echo $total",
    "  local n=$1\n  local k=$2\n  local dp=()\n  local i=0\n  local j=0\n  local sum=0\n  for ((i=0; i<n; i++)); do\n    dp[i]=0\n  done\n  dp[0]=k\n  dp[1]=k*k\n  for ((i=2; i<n; i++)); do\n    dp[i]=0\n    for ((j=0; j<i; j++)); do\n      if ((j==0)); then\n        dp[i]+=dp[j]*(k-1)\n      else\n        dp[i]+=dp[j]*(k-2)\n      fi\n    done\n  done\n  echo ${dp[n-1]}",
    "  local n=$1\n  local k=$2\n  local result=0\n  if [ $n -eq 0 ]; then\n    echo 0\n  elif [ $n -eq 1 ]; then\n    echo $k\n  elif [ $n -eq 2 ]; then\n    echo $((k*k))\n  else\n    local same=$((k*1))\n    local diff=$((k*(k-1)))\n    for i in $(seq 3 $n); do\n      result=$((diff*(k-1) + same*(k-1)))\n      same=$diff\n      diff=$result\n    done\n    echo $result\n  fi",
    "  local n=$1\n  local k=$2\n  local same=0\n  local diff=k\n  local total=$((same+diff))\n  for ((i=2; i<=n; i++)); do\n    same=$diff\n    diff=$((total*(k-1)))\n    total=$((same+diff))\n  done\n  echo $total",
    "    local n=$1\n    local k=$2\n    local same=0\n    local diff=k\n    local total=k\n    local i=2\n    while [ $i -le $n ]; do\n        same=$diff\n        diff=$((total * (k - 1)))\n        total=$((same + diff))\n        i=$((i + 1))\n    done\n    echo $total",
    "    local n=$1\n    local k=$2\n    local dp=()\n    local i=0\n    local j=0\n    local temp=0\n    local result=0\n\n    if [[ $n -eq 0 || $k -eq 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -eq 1 ]]; then\n        echo $k\n        return\n    fi\n\n    for ((i=0; i<$n; i++)); do\n        dp[$i]=0\n    done\n\n    dp[0]=$k\n    dp[1]=$((k*k))\n\n    for ((i=2; i<$n; i++)); do\n        dp[$i]=$((dp[$((i-1))]*(k-1)))\n        for ((j=i-2; j>=0; j--)); do\n            temp=$((dp[$j]*(k-1)))\n            dp[$i]=$((dp[$i]+temp))\n        done\n    done\n\n    echo ${dp[$((n-1))]}",
    "  local n=$1\n  local k=$2\n  local same=0\n  local diff=k\n  local total=k\n  local i=2\n  while [ $i -le $n ]; do\n    same=$diff\n    diff=$total*(k-1)\n    total=$((same+diff))\n    i=$((i+1))\n  done\n  echo $total",
    "    local n=$1\n    local k=$2\n    local i\n    local j\n    local dp=()\n    local dp_prev=()\n    local dp_prev_prev=()\n    local result=0\n\n    if [[ $n -eq 0 ]]; then\n        echo 0\n        return\n    fi\n\n    if [[ $n -eq 1 ]]; then\n        echo $k\n        return\n    fi\n\n    if [[ $n -eq 2 ]]; then\n        echo $((k*k))\n        return\n    fi\n\n    for ((i=0; i<n; i++)); do\n        dp[$i]=0\n        dp_prev[$i]=0\n        dp_prev_prev[$i]=0\n    done\n\n    dp[0]=$k\n    dp[1]=$((k*k))\n\n    for ((i=2; i<n; i++)); do\n        dp[$i]=$((dp[$((i-1))]*(k-1)))\n        for ((j=0; j<i-1; j++)); do\n            dp[$i]=$((dp[$i]+dp_prev[$j]*(k-1)))\n        done\n        dp_prev_prev=(${dp_prev[@]})\n        dp_prev=(${dp[@]})\n    done\n\n    echo ${dp[$((n-1))]}",
    "  local n=$1\n  local k=$2\n  local same=0\n  local diff=k\n  local total=k\n  local i=2\n  while [[ $i -le $n ]]; do\n    same=$diff\n    diff=$((total * (k - 1)))\n    total=$((same + diff))\n    ((i++))\n  done\n  echo $total",
    "  local n=$1\n  local k=$2\n  local same=0\n  local diff=0\n  local total=0\n  for ((i=1; i<=n; i++)); do\n    if ((i==1)); then\n      same=k\n      diff=k\n    else\n      same=diff\n      diff=$((total*(k-1)))\n    fi\n    total=$((same+diff))\n  done\n  echo $total",
    "    local n=$1\n    local k=$2\n    local same=0\n    local diff=k\n    local total=k\n    local i=2\n    while [ $i -le $n ]; do\n        same=$diff\n        diff=$total*(k-1)\n        total=$((same+diff))\n        i=$((i+1))\n    done\n    echo $total",
    "  local n=$1\n  local k=$2\n  local same=0\n  local diff=k\n  local total=k\n  local temp=0\n  for (( i=2; i<=n; i++ )); do\n    temp=$diff\n    diff=$(( (diff * (k-1)) + (same * (k-1)) ))\n    same=$temp\n    total=$(( same + diff ))\n  done\n  echo $total",
    "  local n=$1\n  local k=$2\n  local same=0\n  local diff=k\n  local total=k\n  for (( i=2; i<=n; i++ )); do\n    same=$diff\n    diff=$((total*(k-1)))\n    total=$((same+diff))\n  done\n  echo $total",
    "    local n=$1\n    local k=$2\n    local same=0\n    local diff=k\n    local total=k\n    for ((i=2; i<=n; i++)); do\n        same=$diff\n        diff=$total*(k-1)\n        total=$((same+diff))\n    done\n    echo $total",
    "    local n=$1\n    local k=$2\n    local same=0\n    local diff=k\n    local total=k\n    local i=2\n    while [[ $i -le $n ]]; do\n        same=$((diff))\n        diff=$(((total * (k - 1)) % 1000000007))\n        total=$(((same + diff) % 1000000007))\n        i=$((i + 1))\n    done\n    echo $total"
  ]
}
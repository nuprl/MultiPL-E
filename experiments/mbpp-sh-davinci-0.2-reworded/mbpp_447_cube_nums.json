{
  "name": "mbpp_447_cube_nums",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find cubes of individual elements in a list.\n#\n# $1 is a space-separated list\ncube_nums() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_447_cube_nums.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    cube_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10\") = \"1 8 27 64 125 216 343 512 729 1000\" ]]\n    [[ $(candidate \"10 20 30\") = \"1000 8000 27000\" ]]\n    [[ $(candidate \"12 15\") = \"1728 3375\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local nums=\"$1\"\n  for num in $nums; do\n    echo $(( num * num * num ))\n  done",
    "    local nums=\"$1\"\n    local num\n    for num in $nums; do\n        echo $((num * num * num))\n    done",
    "    local nums=\"$1\"\n    local num\n    for num in $nums; do\n        echo \"$((num * num * num))\"\n    done",
    "\tlocal nums=\"$1\"\n\tlocal num\n\tlocal result=\"\"\n\tfor num in $nums; do\n\t\tresult=\"$result $(($num * $num * $num))\"\n\tdone\n\techo $result",
    "    local nums=\"$1\"\n    local num\n    for num in $nums; do\n        echo $((num * num * num))\n    done",
    "  for num in $1; do\n    echo $((num * num * num))\n  done",
    "    for num in $1; do\n        echo $(($num * $num * $num))\n    done",
    "    local nums=\"$1\"\n    local num\n    for num in $nums; do\n        echo $((num * num * num))\n    done",
    "    local nums=\"$1\"\n    local num\n    for num in $nums; do\n        echo $((num * num * num))\n    done",
    "    local nums=\"$1\"\n    local num\n    for num in $nums; do\n        echo $((num * num * num))\n    done",
    "    local nums=\"$1\"\n    local num\n    for num in $nums; do\n        echo $((num * num * num))\n    done",
    "    local nums=\"$1\"\n    local num\n    for num in $nums; do\n        echo $((num * num * num))\n    done",
    "  local nums=\"$1\"\n  local num\n  for num in $nums; do\n    echo \"$((num * num * num))\"\n  done",
    "  for num in $1; do\n    echo $((num * num * num))\n  done",
    "  local nums=\"$1\"\n  local num\n  for num in $nums; do\n    echo $((num * num * num))\n  done",
    "  local nums=\"$1\"\n  local num\n  for num in $nums; do\n    echo \"$((num * num * num))\"\n  done",
    "    for num in $1\n    do\n        echo $(($num * $num * $num))\n    done",
    "  for i in $1; do\n    echo $((i * i * i))\n  done",
    "  local nums=\"$1\"\n  local num\n  for num in $nums; do\n    echo \"$((num * num * num))\"\n  done",
    "  for num in $1\n  do\n    echo $(($num * $num * $num))\n  done"
  ]
}
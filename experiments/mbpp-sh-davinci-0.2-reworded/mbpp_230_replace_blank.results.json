{
  "name": "mbpp_230_replace_blank",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_230_replace_blank.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"${1// /$2}\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | tr ' ' \"$2\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    local str=\"$1\"\n    local char=\"$2\"\n    echo \"${str// /$char}\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | tr ' ' \"$2\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"${1// /$2}\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    local str=$1\n    local char=$2\n    local new_str=${str// /$char}\n    echo $new_str\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | tr ' ' \"$2\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | tr ' ' \"$2\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"${1// /$2}\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo $1 | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    local string=$1\n    local char=$2\n    local new_string=${string// /$char}\n    echo $new_string\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"${1// /$2}\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo $1 | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n\techo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"${1// /$2}\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | tr ' ' \"$2\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  local string=$1\n  local char=$2\n  echo \"${string// /$char}\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"${1// /$2}\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | tr ' ' \"$2\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed -e \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  local string=\"$1\"\n  local char=\"$2\"\n  echo \"${string// /$char}\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | tr ' ' \"$2\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    local str=$1\n    local char=$2\n    echo \"${str// /$char}\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo $1 | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"${1// /$2}\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed -e \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n  echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"${1// /$2}\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    local str=\"$1\"\n    local char=\"$2\"\n    echo \"${str// /$char}\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.\n#\n# $1 is a string\n# $2 is a string\nreplace_blank() {\n    echo \"$1\" | sed \"s/ /$2/g\"\n}\n\ncandidate() {\n    replace_blank \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"hello people\" \"@\") = \"hello@people\" ]]\n    [[ $(candidate \"python program language\" \"\\$\") = \"python\\$program\\$language\" ]]\n    [[ $(candidate \"blank space\" \"-\") = \"blank-space\" ]]\n}\n\nrun_test",
      "timestamp": 1667190690,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
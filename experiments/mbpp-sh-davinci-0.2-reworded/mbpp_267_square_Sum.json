{
  "name": "mbpp_267_square_Sum",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\n#\n# $1 is an integer\nsquare_Sum() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_267_square_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    square_Sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"10\" ]]\n    [[ $(candidate \"3\") = \"35\" ]]\n    [[ $(candidate \"4\") = \"84\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  if [ $1 -eq 0 ]; then\n    echo 0\n  else\n    local sum=0\n    for (( i=1; i<=$1; i++ )); do\n      sum=$(( sum + i*i ))\n    done\n    echo $sum\n  fi",
    "    local sum=0\n    for ((i=1; i<=$1; i++))\n    do\n        if [ $((i%2)) -ne 0 ]\n        then\n            sum=$((sum+i*i))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for i in $(seq 1 $1); do\n        if [[ $((i % 2)) -eq 1 ]]; then\n            sum=$((sum + i**2))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++)); do\n        if ((i%2==1)); then\n            sum=$((sum+i*i))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++)); do\n        sum=$((sum + i**2))\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++))\n    do\n        local square=$((i*i))\n        sum=$((sum+square))\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++))\n    do\n        sum=$((sum + i**2))\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++))\n    do\n        sum=$((sum+i*i))\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i++))\n    do\n        if ((i%2==1))\n        then\n            sum=$((sum+i*i))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i+=2))\n    do\n        sum=$((sum+i*i))\n    done\n    echo $sum",
    "    local sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        if [ $((i%2)) -ne 0 ]\n        then\n            sum=$((sum+i*i))\n        fi\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++)); do\n        sum=$((sum + (2*i-1)*(2*i-1)))\n    done\n    echo $sum",
    "    sum=0\n    for (( i=1; i<=$1; i++ ))\n    do\n        if [ $((i%2)) -ne 0 ]\n        then\n            sum=$((sum+i*i))\n        fi\n    done\n    echo $sum",
    "    local sum=0\n    for (( i = 1; i <= $1; i++ )); do\n        (( sum += i * i ))\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++))\n    do\n        sum=$((sum + i*i))\n    done\n    echo $sum",
    "  local sum=0\n  for (( i=1; i<=$1; i++ ))\n  do\n    sum=$(( $sum + $(( $i * $i )) ))\n  done\n  echo $sum",
    "\tlocal sum=0\n\tfor (( i=1; i<=$1; i++ ))\n\tdo\n\t\t(( sum+=$(( i*i )) ))\n\tdone\n\techo $sum",
    "    local n=$1\n    local sum=0\n    for ((i=1; i<=n; i++))\n    do\n        sum=$((sum + i*i))\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i+=2))\n    do\n        sum=$((sum + i*i))\n    done\n    echo $sum",
    "    local sum=0\n    for ((i=1; i<=$1; i+=2))\n    do\n        sum=$((sum + i*i))\n    done\n    echo $sum"
  ]
}
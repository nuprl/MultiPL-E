{
  "name": "mbpp_460_Extract",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to get the first element of each sublist.\n#\n# $1 is a newline-separated, space-separated list\nExtract() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_460_Extract.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    Extract \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2\\n3 4 5\\n6 7 8 9\") = \"1 3 6\" ]]\n    [[ $(candidate \"1 2 3\\n4 5\") = \"1 4\" ]]\n    [[ $(candidate \"9 8 1\\n1 2\") = \"9 1\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  echo \"$1\" | awk '{print $1}'",
    "  echo \"$1\" | awk '{print $1}'",
    "    echo \"$1\" | awk '{print $1}'",
    "  echo \"$1\" | awk '{print $1}'",
    "  local list=\"$1\"\n  local first\n  while read -r line; do\n    first=\"$(echo \"$line\" | cut -d ' ' -f 1)\"\n    echo \"$first\"\n  done <<< \"$list\"",
    "  echo \"$1\" | awk '{print $1}'",
    "    echo \"$1\" | awk '{print $1}'",
    "    local list=\"$1\"\n    local sublist\n    while read sublist; do\n        echo \"$sublist\" | cut -d ' ' -f 1\n    done <<< \"$list\"",
    "  local list=\"$1\"\n  local sublist\n  local first\n  while read -r sublist; do\n    first=\"$(echo \"$sublist\" | cut -d ' ' -f 1)\"\n    echo \"$first\"\n  done <<< \"$list\"",
    "  echo \"$1\" | awk '{print $1}'",
    "  echo \"$1\" | sed 's/^\\([^ ]*\\).*/\\1/'",
    "  echo \"$1\" | awk '{print $1}'",
    "  local list=\"$1\"\n  while read -r line; do\n    echo \"$line\" | cut -d ' ' -f 1\n  done <<< \"$list\"",
    "  local list=\"$1\"\n  local sublist\n  while read sublist; do\n    echo \"$sublist\" | awk '{print $1}'\n  done <<< \"$list\"",
    "  echo \"$1\" | awk '{print $1}'",
    "  echo \"$1\" | awk '{print $1}'",
    "  echo \"$1\" | awk '{print $1}'",
    "    echo \"$1\" | awk '{print $1}'",
    "    echo \"$1\" | awk '{print $1}'",
    "  echo \"$1\" | awk '{print $1}'"
  ]
}
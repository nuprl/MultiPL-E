{
  "name": "mbpp_160_find_solution",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for (( x = 0; x <= $1; x++ )); do\n        for (( y = 0; y <= $2; y++ )); do\n            if (( $1 * $x + $2 * $y == $3 )); then\n                echo \"$x $y\"\n                return\n            fi\n        done\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  if [ $1 -eq 0 ]; then\n    echo \"None\"\n  elif [ $3 -eq 0 ]; then\n    echo \"[0, $2]\"\n  else\n    local x=$(($3 / $1))\n    local y=$(($2 / $1))\n    local r=$(($3 % $1))\n    local s=$(($2 % $1))\n    local t=$(($1 % $3))\n    local u=$(($1 % $2))\n    if [ $r -eq 0 ] && [ $s -eq 0 ]; then\n      echo \"[$x, $y]\"\n    elif [ $t -eq 0 ] && [ $u -eq 0 ]; then\n      echo \"[$x, $y]\"\n    else\n      echo \"None\"\n    fi\n  fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for ((x=0; x<=$1; x++)); do\n        for ((y=0; y<=$2; y++)); do\n            if (($1*$x+$2*$y==$3)); then\n                echo \"$x $y\"\n                return\n            fi\n        done\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n/a))\n    local y_max=$((n/b))\n    local x_min=$((-n/a))\n    local y_min=$((-n/b))\n    local x_step=$((a/b))\n    local y_step=$((b/a))\n    local x_step_sign=$((x_step/x_step))\n    local y_step_sign=$((y_step/y_step))\n    local x_step_abs=$((x_step*x_step_sign))\n    local y_step_abs=$((y_step*y_step_sign))\n    local x_step_abs_max=$((x_max/x_step_abs))\n    local y_step_abs_max=$((y_max/y_step_abs))\n    local x_step_abs_min=$((x_min/x_step_abs))\n    local y_step_abs_min=$((y_min/y_step_abs))\n    local x_step_abs_max_sign=$((x_step_abs_max/x_step_abs_max))\n    local y_step_abs_max_sign=$((y_step_abs_max/y_step_abs_max))\n    local x_step_abs_min_sign=$((x_step_abs_min/x_step_abs_min))\n    local y_step_abs_min_sign=$((y_step_abs_min/y_step_abs_min))\n    local x_step_abs_max_abs=$((x_step_abs_max*x_step_abs_max_sign))\n    local y_step_abs_max_abs=$((y_step_abs_max*y_step_abs_max_sign))\n    local x_step_abs_min_abs=$((x_step_abs_min*x_step_abs_min_sign))\n    local y_step_abs_min_abs=$((y_step_abs_min*y_step_abs_\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp5_pqkuml.sh: line 34: unexpected EOF while looking for matching `)'\\n/tmp/tmp5_pqkuml.sh: line 49: syntax error: unexpected end of file\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=0\n    while [ $x -le $n ]\n    do\n        y=$((n - a * x))\n        if [ $((y % b)) -eq 0 ]\n        then\n            found=1\n            break\n        fi\n        x=$((x + 1))\n    done\n    if [ $found -eq 1 ]\n    then\n        echo \"[$x, $y]\"\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local q=0\n    local r=0\n    if [ $n -lt 0 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $a -eq 0 ]; then\n        if [ $b -eq 0 ]; then\n            echo \"None\"\n            return\n        fi\n        if [ $n -eq 0 ]; then\n            echo \"[0, 0]\"\n            return\n        fi\n        if [ $n -% $b -eq 0 ]; then\n            echo \"[0, $((n / b))]\"\n            return\n        fi\n        echo \"None\"\n        return\n    fi\n    if [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"[0, 0]\"\n            return\n        fi\n        if [ $n -% $a -eq 0 ]; then\n            echo \"[$((n / a)), 0]\"\n            return\n        fi\n        echo \"None\"\n        return\n    fi\n    if [ $n -eq 0 ]; then\n        echo \"[0, 0]\"\n        return\n    fi\n    d=$(gcd $a $b)\n    if [ $n -% $d -ne 0 ]; then\n        echo \"None\"\n        return\n    fi\n    x1=0\n    y1=1\n    x2=1\n    y2=0\n    while [ $b -ne 0 ]; do\n        q=$((a / b))\n        r=$((a - q * b))\n        x=$((x2 - q * x1))\n        y=$((y2 - q * y1))\n        a=$b\n        b=$r\n        x2=$x1\n        x1=$x\n        y2=$y1\n        y1=$y\n    done\n    if [ $d -ne 1 ]; then\n        x=$((x2 * (n / d)))\n        y=$((y2 * (n / d)))\n    else\n        x\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp7dclwr1u.sh: line 82: syntax error near unexpected token `}'\\n/tmp/tmp7dclwr1u.sh: line 82: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while (( $n > 0 )); do\n        if (( $n - $a >= 0 )); then\n            n=$(( $n - $a ))\n            x=$(( $x + $x_incr ))\n        else\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$temp\n            temp=$a\n            a=$b\n            b=$temp\n        fi\n    done\n    if (( $n == 0 )); then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "<_io.BufferedReader name=3>",
      "stderr": "<_io.BufferedReader name=6>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    x=0\n    y=0\n    while [ $(( $1 * $x )) -lt $3 ]; do\n        y=$(( ($3 - ($1 * $x)) / $2 ))\n        if [ $(( $2 * $y )) -eq $(( $3 - ($1 * $x) )) ]; then\n            echo $x $y\n            return 0\n        fi\n        x=$(( $x + 1 ))\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while [ $((a*x)) -lt $n ]; do\n        y=$((n-a*x))\n        if [ $((y%b)) -eq 0 ]; then\n            echo $x $y\n            return 0\n        fi\n        temp=$x_incr\n        x_incr=$((-a*y_incr))\n        y_incr=$((b*temp))\n        x=$((x+x_incr))\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if [ $(($x*$1 + $y*$2)) -eq $3 ]; then\n                echo \"$x $y\"\n                return\n            fi\n        done\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    a=$1\n    b=$2\n    n=$3\n    if [ $n -lt $a ] && [ $n -lt $b ]; then\n        echo \"None\"\n    else\n        for (( x=0; x<=$n; x++ )); do\n            for (( y=0; y<=$n; y++ )); do\n                if [ $(( $a*$x + $b*$y )) -eq $n ]; then\n                    echo \"[$x, $y]\"\n                fi\n            done\n        done\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local n=$1\n    local a=$2\n    local b=$3\n    while [ $((a*x)) -lt $n ]\n    do\n        if [ $((n - a*x)) -eq $((b*y)) ]\n        then\n            echo \"$x $y\"\n            return\n        fi\n        if [ $((n - a*x)) -lt $((b*y)) ]\n        then\n            y=0\n            x=$((x+1))\n        else\n            y=$((y+1))\n        fi\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_step=$((a / gcd(a, b)))\n    local y_step=$((b / gcd(a, b)))\n    local x_sign=1\n    local y_sign=1\n    if [ $x_step -lt 0 ]; then\n        x_step=$((-x_step))\n        x_sign=$((-1))\n    fi\n    if [ $y_step -lt 0 ]; then\n        y_step=$((-y_step))\n        y_sign=$((-1))\n    fi\n    for ((x = x_min; x <= x_max; x += x_step)); do\n        for ((y = y_min; y <= y_max; y += y_step)); do\n            if [ $((a * x + b * y)) -eq $n ]; then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpsa47awjs.sh: line 17: a / gcd(a, b): division by 0 (error token is \"gcd(a, b)\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local r=0\n    local q=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local x_out=0\n    local y_out=0\n    local d_out=0\n    local r_out=0\n    local q_out=0\n    local x1_out=0\n    local x2_out=0\n    local y1_out=0\n    local y2_out=0\n    local x_out=0\n    local y_out=0\n    local d_out=0\n    local r_out=0\n    local q_out=0\n    local x1_out=0\n    local x2_out=0\n    local y1_out=0\n    local y2_out=0\n    local x_out=0\n    local y_out=0\n    local d_out=0\n    local r_out=0\n    local q_out=0\n    local x1_out=0\n    local x2_out=0\n    local y1_out=0\n    local y2_out=0\n    local x_out=0\n    local y_out=0\n    local d_out=0\n    local r_out=0\n    local q_out=0\n    local x1_out=0\n    local x2_out=0\n    local y1_out=0\n    local y2_out=0\n    local x_out=0\n    local y_out=0\n    local d_out=0\n    local r_out=0\n    local q_out=0\n    local x1_out=0\n    local x2_out=0\n    local y1_out=0\n    local y2_out=0\n    local x_out=0\n    local y_out=0\n    local d_out=0\n    local r_out=0\n    local q_out=0\n    local x1_out=0\n    local x2_out\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_inc=1\n    local y_inc=1\n    local x_max=0\n    local y_max=0\n    local x_min=0\n    local y_min=0\n    local x_tmp=0\n    local y_tmp=0\n    local x_tmp_inc=1\n    local y_tmp_inc=1\n    local x_tmp_max=0\n    local y_tmp_max=0\n    local x_tmp_min=0\n    local y_tmp_min=0\n    local x_tmp_tmp=0\n    local y_tmp_tmp=0\n    local x_tmp_tmp_inc=1\n    local y_tmp_tmp_inc=1\n    local x_tmp_tmp_max=0\n    local y_tmp_tmp_max=0\n    local x_tmp_tmp_min=0\n    local y_tmp_tmp_min=0\n    local x_tmp_tmp_tmp=0\n    local y_tmp_tmp_tmp=0\n    local x_tmp_tmp_tmp_inc=1\n    local y_tmp_tmp_tmp_inc=1\n    local x_tmp_tmp_tmp_max=0\n    local y_tmp_tmp_tmp_max=0\n    local x_tmp_tmp_tmp_min=0\n    local y_tmp_tmp_tmp_min=0\n    local x_tmp_tmp_tmp_tmp=0\n    local y_tmp_tmp_tmp_tmp=0\n    local x_tmp_tmp_tmp_tmp_inc=1\n    local y_tmp_tmp_tmp_tmp_inc=1\n    local x_tmp_tmp_tmp_tmp_max=0\n    local y_tmp_tmp_tmp_tmp_max=0\n    local x_tmp_tmp_tmp_tmp_min=0\n    local y_tmp_tmp_tmp_tmp_min=0\n    local x_tmp_tmp_tmp_tmp_tmp=0\n    local y_tmp_tmp_tmp_tmp_tmp=0\n   \n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_tmp=0\n  local y_tmp=0\n  local r=0\n  local q=0\n  local r_tmp=0\n  local q_tmp=0\n  local tmp=0\n  local solution=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    if [ $1 -eq 0 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $3 -eq 0 ]\n    then\n        echo \"[0, $2]\"\n        return\n    fi\n    if [ $3 -lt 0 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $3 -gt $1 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $3 -gt $2 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $3 -eq $1 ]\n    then\n        echo \"[1, 0]\"\n        return\n    fi\n    if [ $3 -eq $2 ]\n    then\n        echo \"[0, 1]\"\n        return\n    fi\n    if [ $3 -lt $1 ]\n    then\n        echo \"[$(($3 / $1)), $(($3 % $1))]\"\n        return\n    fi\n    if [ $3 -lt $2 ]\n    then\n        echo \"[$(($3 / $2)), $(($3 % $2))]\"\n        return\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_incr=1\n  local y_incr=0\n  local temp=0\n  while (( $n > 0 )); do\n    if (( $n - $a >= 0 )); then\n      n=$(( $n - $a ))\n      x=$(( $x + $x_incr ))\n    else\n      temp=$x_incr\n      x_incr=$y_incr\n      y_incr=$temp\n      temp=$a\n      a=$b\n      b=$temp\n    fi\n  done\n  if (( $n == 0 )); then\n    echo $x $y\n  else\n    echo \"None\"\n  fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "<_io.BufferedReader name=17>",
      "stderr": "<_io.BufferedReader name=19>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        y=0\n        while [ $((b*y)) -lt $n ]; do\n            if [ $((a*x+b*y)) -eq $n ]; then\n                echo \"$x $y\"\n                return 0\n            fi\n            y=$((y+1))\n        done\n        x=$((x+1))\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    if [ $1 -eq 0 ]; then\n        echo \"None\"\n    else\n        x=$(($3 / $1))\n        y=$(($3 % $1))\n        if [ $y -eq 0 ]; then\n            echo \"[$x, 0]\"\n        else\n            find_solution $2 $(($1 % $2)) $y\n        fi\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while [[ $((a * x)) -lt $n ]]; do\n        y=$((n - a * x))\n        if [[ $((y % b)) -eq 0 ]]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        temp=$x_incr\n        x_incr=$((-a * y_incr))\n        y_incr=$temp\n        x=$((x + x_incr))\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_inc=1\n    local y_inc=0\n    local temp=0\n    while [ $((a*x)) -lt $n ]; do\n        if [ $((a*x + b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        if [ $((a*(x+x_inc) + b*(y+y_inc))) -le $n ]; then\n            x=$((x+x_inc))\n            y=$((y+y_inc))\n        else\n            temp=$x_inc\n            x_inc=$y_inc\n            y_inc=$((-temp))\n        fi\n    done\n    echo \"None\"\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "<_io.BufferedReader name=9>",
      "stderr": "<_io.BufferedReader name=13>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local q=0\n    local r=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local x_solution=0\n    local y_solution=0\n    local solution=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while [ $((a*x)) -lt $n ]; do\n        x=$((x+x_incr))\n        y=$((y+y_incr))\n        if [ $((a*x)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        if [ $((a*x)) -gt $n ]; then\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$((-temp))\n        fi\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_step=1\n    local y_step=1\n    local x_limit=$((n / a))\n    local y_limit=$((n / b))\n    local x_step_limit=$((x_limit / 2))\n    local y_step_limit=$((y_limit / 2))\n    local x_step_count=0\n    local y_step_count=0\n    local solution=()\n\n    while true; do\n        if ((x_step_count == x_step_limit)); then\n            x_step_count=0\n            x_step=$((x_step * -1))\n        fi\n        if ((y_step_count == y_step_limit)); then\n            y_step_count=0\n            y_step=$((y_step * -1))\n        fi\n        if ((x_step == 1)); then\n            x=$((x + 1))\n        else\n            x=$((x - 1))\n        fi\n        if ((y_step == 1)); then\n            y=$((y + 1))\n        else\n            y=$((y - 1))\n        fi\n        if ((x < 0 || x > x_limit)); then\n            break\n        fi\n        if ((y < 0 || y > y_limit)); then\n            break\n        fi\n        if ((a * x + b * y == n)); then\n            solution=($x $y)\n            break\n        fi\n        x_step_count=$((x_step_count + 1))\n        y_step_count=$((y_step_count + 1))\n    done\n\n    if ((${#solution[@]} == 0)); then\n        echo \"None\"\n    else\n        echo \"${solution[@]}\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "<_io.BufferedReader name=12>",
      "stderr": "<_io.BufferedReader name=16>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=0\n    local y_incr=0\n    local x_max=0\n    local y_max=0\n    local x_min=0\n    local y_min=0\n    local x_tmp=0\n    local y_tmp=0\n    local x_tmp_incr=0\n    local y_tmp_incr=0\n    local x_tmp_max=0\n    local y_tmp_max=0\n    local x_tmp_min=0\n    local y_tmp_min=0\n    local x_tmp_tmp=0\n    local y_tmp_tmp=0\n    local x_tmp_tmp_incr=0\n    local y_tmp_tmp_incr=0\n    local x_tmp_tmp_max=0\n    local y_tmp_tmp_max=0\n    local x_tmp_tmp_min=0\n    local y_tmp_tmp_min=0\n    local x_tmp_tmp_tmp=0\n    local y_tmp_tmp_tmp=0\n    local x_tmp_tmp_tmp_incr=0\n    local y_tmp_tmp_tmp_incr=0\n    local x_tmp_tmp_tmp_max=0\n    local y_tmp_tmp_tmp_max=0\n    local x_tmp_tmp_tmp_min=0\n    local y_tmp_tmp_tmp_min=0\n    local x_tmp_tmp_tmp_tmp=0\n    local y_tmp_tmp_tmp_tmp=0\n    local x_tmp_tmp_tmp_tmp_incr=0\n    local y_tmp_tmp_tmp_tmp_incr=0\n    local x_tmp_tmp_tmp_tmp_max=0\n    local y_tmp_tmp_tmp_tmp_max=0\n    local x_tmp_tmp_tmp_tmp_min=0\n    local y_tmp_tmp_tmp_tmp_min=0\n    local x_tmp_tmp_tmp_tmp_tmp=0\n    local y_tmp_tmp\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a * x)) -le $n ]; do\n        y=$(((n - (a * x)) / b))\n        if [ $((a * x + b * y)) -eq $n ]; then\n            echo \"$x $y\"\n            return\n        fi\n        x=$((x + 1))\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local tmp=0\n    local tmp2=0\n    local tmp3=0\n    local tmp4=0\n    local tmp5=0\n    local tmp6=0\n    local tmp7=0\n    local tmp8=0\n    local tmp9=0\n    local tmp10=0\n    local tmp11=0\n    local tmp12=0\n    local tmp13=0\n    local tmp14=0\n    local tmp15=0\n    local tmp16=0\n    local tmp17=0\n    local tmp18=0\n    local tmp19=0\n    local tmp20=0\n    local tmp21=0\n    local tmp22=0\n    local tmp23=0\n    local tmp24=0\n    local tmp25=0\n    local tmp26=0\n    local tmp27=0\n    local tmp28=0\n    local tmp29=0\n    local tmp30=0\n    local tmp31=0\n    local tmp32=0\n    local tmp33=0\n    local tmp34=0\n    local tmp35=0\n    local tmp36=0\n    local tmp37=0\n    local tmp38=0\n    local tmp39=0\n    local tmp40=0\n    local tmp41=0\n    local tmp42=0\n    local tmp43=0\n    local tmp44=0\n    local tmp45=0\n    local tmp46=0\n    local tmp47=0\n    local tmp48=0\n    local tmp49=0\n    local tmp50=0\n    local tmp51=0\n    local tmp52=0\n    local tmp53=0\n    local tmp54=0\n    local tmp55=0\n    local tmp56=0\n    local tmp57=0\n    local tmp58=0\n    local tmp59=0\n    local tmp60=0\n    local tmp61=0\n    local tmp62=0\n    local tmp63=0\n    local tmp64=0\n    local tmp65=0\n    local tmp66=0\n    local tmp67=0\n    local tmp68=0\n    local tmp69=0\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    a=$1\n    b=$2\n    n=$3\n    x=0\n    y=0\n    while [ $((a*x)) -le $n ]\n    do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]\n        then\n            echo $x $y\n            return 0\n        fi\n        x=$((x+1))\n    done\n    echo \"None\"\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local n=$1\n    local a=$2\n    local b=$3\n    local x=0\n    local y=0\n    local result=()\n    while [ $((a*x)) -le $n ]; do\n        if [ $((n - a*x)) -eq 0 ]; then\n            result=($x $y)\n            break\n        fi\n        if [ $((n - a*x)) -lt 0 ]; then\n            break\n        fi\n        if [ $((n - a*x)) -gt 0 ]; then\n            if [ $(((n - a*x) % b)) -eq 0 ]; then\n                y=$(((n - a*x) / b))\n                result=($x $y)\n                break\n            fi\n        fi\n        x=$((x+1))\n    done\n    if [ ${#result[@]} -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"${result[@]}\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_incr=1\n  local y_incr=0\n  local temp=0\n  while [ $((a*x)) -lt $n ]; do\n    x=$((x+x_incr))\n    y=$((y+y_incr))\n    if [ $((a*x)) -eq $n ]; then\n      echo $x $y\n      return 0\n    fi\n    if [ $((a*x)) -gt $n ]; then\n      temp=$x_incr\n      x_incr=$y_incr\n      y_incr=$((-temp))\n      x=$((x+x_incr))\n      y=$((y+y_incr))\n    fi\n  done\n  echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_step=1\n    local y_step=0\n    local x_limit=$((n / a))\n    local y_limit=$((n / b))\n    local x_step_limit=$b\n    local y_step_limit=$a\n    local x_step_count=0\n    local y_step_count=0\n    local x_step_count_limit=$a\n    local y_step_count_limit=$b\n    local found=0\n    local result=\"\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    # Your code here\n    if [ $1 -eq 0 ]\n    then\n        echo \"None\"\n    else\n        if [ $3 -eq 0 ]\n        then\n            echo \"[0, 0]\"\n        else\n            if [ $2 -eq 0 ]\n            then\n                echo \"[$3, 0]\"\n            else\n                if [ $3 -eq $1 ]\n                then\n                    echo \"[1, 0]\"\n                else\n                    if [ $3 -eq $2 ]\n                    then\n                        echo \"[0, 1]\"\n                    else\n                        if [ $3 -gt $1 ]\n                        then\n                            if [ $3 -gt $2 ]\n                            then\n                                echo \"None\"\n                            else\n                                if [ $3 -eq $2 ]\n                                then\n                                    echo \"[0, 1]\"\n                                else\n                                    if [ $3 -lt $2 ]\n                                    then\n                                        if [ $3 -eq $1 ]\n                                        then\n                                            echo \"[1, 0]\"\n                                        else\n                                            if [ $3 -gt $1 ]\n                                            then\n                                                echo \"None\"\n                                            else\n                                                if [ $3 -lt $1 ]\n                                                then\n                                                    echo \"[0, 1]\"\n                                                fi\n                                            fi\n                                        fi\n                                    fi\n                                fi\n                            fi\n                        else\n                            if [ $3 -lt $1 ]\n                            then\n                                if [ $3 -gt $2 ]\n                                then\n                                    echo \"None\"\n                                else\n                                    if [ $3 -eq $2 ]\n                                    then\n                                        echo \"[0, 1]\"\n                                    else\n                                        if [ $3 -lt $2 ]\n                                        then\n                                            if [ $3 -eq $1 ]\n                                            then\n                                                echo \"[1, 0]\"\n                                            else\n                                                if [ $3 -gt $1 ]\n                                                then\n                                                    echo \"None\"\n                                                else\n                                                    if [ $3 -lt $1 ]\n                                                    then\n                                                        echo \"[0, 1]\"\n\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpa7t6gda4.sh: line 83: syntax error near unexpected token `}'\\n/tmp/tmpa7t6gda4.sh: line 83: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local n=$1\n    local a=$2\n    local b=$3\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local x_max=$((n/a))\n    local y_max=$((n/b))\n    local x_min=$((-n/a))\n    local y_min=$((-n/b))\n    local x_step=$((b/a))\n    local y_step=$((a/b))\n    local x_sign=1\n    local y_sign=1\n    local x_found=0\n    local y_found=0\n    local x_start=$x_min\n    local y_start=$y_min\n    local x_end=$x_max\n    local y_end=$y_max\n    local x_inc=1\n    local y_inc=1\n    local x_dec=1\n    local y_dec=1\n    local x_i=$x_start\n    local y_i=$y_start\n    local x_j=$x_start\n    local y_j=$y_start\n    local x_k=$x_start\n    local y_k=$y_start\n    local x_l=$x_start\n    local y_l=$y_start\n    local x_m=$x_start\n    local y_m=$y_start\n    local x_n=$x_start\n    local y_n=$y_start\n    local x_o=$x_start\n    local y_o=$y_start\n    local x_p=$x_start\n    local y_p=$y_start\n    local x_q=$x_start\n    local y_q=$y_start\n    local x_r=$x_start\n    local y_r=$y_start\n    local x_s=$x_start\n    local y_s=$y_start\n    local x_t=$x_start\n    local y_t=$y_start\n    local x_u=$x_start\n    local y_u=$y_start\n    local x_v=$x_start\n    local y_v=$y_start\n    local x_w=$x_start\n    local y_w=$y_start\n    local x\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    a=$1\n    b=$2\n    n=$3\n    x=0\n    y=0\n    while [ $((a*x)) -le $n ]\n    do\n        r=$((n-a*x))\n        if [ $((r%b)) -eq 0 ]\n        then\n            y=$((r/b))\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n    done\n    echo \"None\"\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_step=$((a / gcd(a, b)))\n    local y_step=$((b / gcd(a, b)))\n    local x_sign=$((a / abs(a)))\n    local y_sign=$((b / abs(b)))\n    local x_start=$((x_min * x_sign))\n    local y_start=$((y_min * y_sign))\n    local x_end=$((x_max * x_sign))\n    local y_end=$((y_max * y_sign))\n    local x_current=$x_start\n    local y_current=$y_start\n    local x_next=$((x_current + x_step))\n    local y_next=$((y_current + y_step))\n    while [[ $x_current -le $x_end && $y_current -le $y_end ]]; do\n        if [[ $((a * x_current + b * y_current)) -eq $n ]]; then\n            echo \"$x_current $y_current\"\n            return 0\n        fi\n        x_current=$x_next\n        y_current=$y_next\n        x_next=$((x_current + x_step))\n        y_next=$((y_current + y_step))\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpzj_nxqut.sh: line 17: a / gcd(a, b): division by 0 (error token is \"gcd(a, b)\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    a=$1\n    b=$2\n    n=$3\n    x=0\n    y=0\n    while [ $((a*x)) -le $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            echo $x,$y\n            return 0\n        fi\n        x=$((x+1))\n    done\n    echo \"None\"\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if [ $(( $1 * $x + $2 * $y )) -eq $3 ]; then\n                echo \"$x $y\"\n                return\n            fi\n        done\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    a=$1\n    b=$2\n    n=$3\n    x=0\n    y=0\n    while [ $((a*x)) -le $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return\n        fi\n        x=$((x+1))\n    done\n    echo \"None\"\n    return\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=0\n    while [ $x -le $n ]\n    do\n        y=$(( (n - a*x) / b ))\n        if [ $(( a*x + b*y )) -eq $n ]\n        then\n            echo \"$x $y\"\n            found=1\n            break\n        fi\n        x=$(( x + 1 ))\n    done\n    if [ $found -eq 0 ]\n    then\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=0\n\n    while [ $x -le $n ]; do\n        y=$((n - a * x))\n        if [ $((y % b)) -eq 0 ]; then\n            found=1\n            break\n        fi\n        x=$((x + 1))\n    done\n\n    if [ $found -eq 1 ]; then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for ((x=0; x<=$1; x++)); do\n        for ((y=0; y<=$2; y++)); do\n            if [ $(( $x * $1 + $y * $2 )) -eq $3 ]; then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local n=$1\n    local a=$2\n    local b=$3\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-x_max))\n    local y_min=$((-y_max))\n    local x_step=1\n    local y_step=1\n    if ((x_min > x_max)); then\n        x_step=-1\n    fi\n    if ((y_min > y_max)); then\n        y_step=-1\n    fi\n    for ((x = x_min; x != x_max + x_step; x += x_step)); do\n        for ((y = y_min; y != y_max + y_step; y += y_step)); do\n            if ((a * x + b * y == n)); then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n\n    while [ $((a*x)) -lt $n ]; do\n        if [ $((a*x + b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n\n        temp=$x_incr\n        x_incr=$((-b*y_incr))\n        y_incr=$temp\n\n        x=$((x + x_incr))\n        y=$((y + y_incr))\n    done\n\n    echo \"None\"\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    if [ $1 -eq 0 ]; then\n        echo \"No solution\"\n    else\n        local x=$(($3 / $1))\n        local y=$(($3 % $1))\n        if [ $y -eq 0 ]; then\n            echo \"$x $y\"\n        else\n            find_solution $2 $(($1 % $2)) $3\n        fi\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_inc=1\n    local y_inc=0\n    local temp=0\n    while [ $((a*x)) -le $n ]; do\n        if [ $((a*x)) -eq $n ]; then\n            echo $x $y\n            return 0\n        fi\n        if [ $((a*x + b*y)) -eq $n ]; then\n            echo $x $y\n            return 0\n        fi\n        if [ $((a*x + b*y)) -gt $n ]; then\n            temp=$x_inc\n            x_inc=$y_inc\n            y_inc=$((-temp))\n        fi\n        x=$((x+x_inc))\n        y=$((y+y_inc))\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=0\n    local y_decr=0\n    local x_decr=0\n    local y_incr=0\n    local x_incr_y_decr=0\n    local x_decr_y_incr=0\n    local x_incr_y_incr=0\n    local x_decr_y_decr=0\n    local x_incr_y_decr_n=0\n    local x_decr_y_incr_n=0\n    local x_incr_y_incr_n=0\n    local x_decr_y_decr_n=0\n    local x_incr_y_decr_n_mod=0\n    local x_decr_y_incr_n_mod=0\n    local x_incr_y_incr_n_mod=0\n    local x_decr_y_decr_n_mod=0\n    local x_incr_y_decr_n_mod_b=0\n    local x_decr_y_incr_n_mod_b=0\n    local x_incr_y_incr_n_mod_b=0\n    local x_decr_y_decr_n_mod_b=0\n    local x_incr_y_decr_n_mod_b_div=0\n    local x_decr_y_incr_n_mod_b_div=0\n    local x_incr_y_incr_n_mod_b_div=0\n    local x_decr_y_decr_n_mod_b_div=0\n    local x_incr_y_decr_n_mod_b_div_a=0\n    local x_decr_y_incr_n_mod_b_div_a=0\n    local x_incr_y_incr_n_mod_b_div_a=0\n    local x_decr_y_decr_n\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local x=0\n  local y=0\n  local n=$3\n  local a=$1\n  local b=$2\n  local x_inc=0\n  local y_inc=0\n  local x_dec=0\n  local y_dec=0\n  local x_inc_found=0\n  local y_inc_found=0\n  local x_dec_found=0\n  local y_dec_found=0\n  local x_inc_solution=0\n  local y_inc_solution=0\n  local x_dec_solution=0\n  local y_dec_solution=0\n  local x_solution=0\n  local y_solution=0\n  local solution_found=0\n  local solution_found_inc=0\n  local solution_found_dec=0\n  local solution_found_inc_dec=0\n  local solution_found_dec_inc=0\n  local solution_found_inc_dec_inc=0\n  local solution_found_dec_inc_dec=0\n  local solution_found_inc_dec_inc_dec=0\n  local solution_found_dec_inc_dec_inc=0\n  local solution_found_inc_dec_inc_dec_inc=0\n  local solution_found_dec_inc_dec_inc_dec=0\n  local solution_found_inc_dec_inc_dec_inc_dec=0\n  local solution_found_dec_inc_dec_inc_dec_inc=0\n  local solution_found_inc_dec_inc_dec_inc_dec_inc=0\n  local solution_found_dec_inc_dec_inc_dec_inc_dec=0\n  local solution_found_inc_dec_inc_dec_inc_dec_inc_dec=0\n  local solution_found_dec_inc_dec_inc_dec_inc_dec_inc=0\n  local solution_found_inc_dec_inc_dec_inc_dec_inc_dec_inc=0\n  local solution_found_dec_inc_dec_inc_dec_inc_dec_inc_dec=0\n  local solution_found_inc_dec_inc_dec_inc\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local q=0\n    local r=0\n    local x_tmp=0\n    local y_tmp=0\n    local d_tmp=0\n    local x_solution=0\n    local y_solution=0\n    local solution_found=0\n    local solution_not_found=1\n    local solution_not_found_msg=\"None\"\n    local solution_found_msg=\"\"\n    local solution_msg=\"\"\n    local solution_msg_prefix=\"[\"\n    local solution_msg_suffix=\"]\"\n    local solution_msg_separator=\",\"\n    local solution_msg_separator_space=\" \"\n    local solution_msg_separator_space_prefix=\" \"\n    local solution_msg_separator_space_suffix=\" \"\n    local solution_msg_separator_space_separator=\" \"\n    local solution_msg_separator_space_separator_prefix=\" \"\n    local solution_msg_separator_space_separator_suffix=\" \"\n    local solution_msg_separator_space_separator_separator=\" \"\n    local solution_msg_separator_space_separator_separator_prefix=\" \"\n    local solution_msg_separator_space_separator_separator_suffix=\" \"\n    local solution_msg_separator_space_separator_separator_separator=\" \"\n    local solution_msg_separator_space_separator_separator_separator_prefix=\" \"\n    local solution_msg_separator_space_separator_separator_separator_suffix=\" \"\n    local solution_msg_separator_space_separator_separator_separator_separator=\" \"\n    local solution_msg_separator_space_separator_separator_separator_separator_prefix=\" \"\n    local solution_msg_separator_space_separator_separator_separator_separator_suffix=\" \"\n    local solution_\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n    local x_prev=1\n    local y_prev=0\n    local x_next=0\n    local y_next=0\n    local r_prev=0\n    local r_next=0\n    local q_prev=0\n    local q_next=0\n    local temp=0\n    local temp2=0\n    local temp3=0\n    local temp4=0\n    local temp5=0\n    local temp6=0\n    local temp7=0\n    local temp8=0\n    local temp9=0\n    local temp10=0\n    local temp11=0\n    local temp12=0\n    local temp13=0\n    local temp14=0\n    local temp15=0\n    local temp16=0\n    local temp17=0\n    local temp18=0\n    local temp19=0\n    local temp20=0\n    local temp21=0\n    local temp22=0\n    local temp23=0\n    local temp24=0\n    local temp25=0\n    local temp26=0\n    local temp27=0\n    local temp28=0\n    local temp29=0\n    local temp30=0\n    local temp31=0\n    local temp32=0\n    local temp33=0\n    local temp34=0\n    local temp35=0\n    local temp36=0\n    local temp37=0\n    local temp38=0\n    local temp39=0\n    local temp40=0\n    local temp41=0\n    local temp42=0\n    local temp43=0\n    local temp44=0\n    local temp45=0\n    local temp46=0\n    local temp47=0\n    local temp48=0\n    local temp49=0\n    local temp50=0\n    local temp51=0\n    local temp52=0\n    local temp53=0\n    local temp54=0\n    local temp55=0\n    local temp56=0\n    local temp57=0\n    local temp58=0\n\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    # your code here\n    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if [ $(( $1 * $x + $2 * $y )) -eq $3 ]; then\n                echo \"$x $y\"\n                return\n            fi\n        done\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local q=0\n    local r=0\n    local x_result=0\n    local y_result=0\n    local result=0\n    local result_list=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_incr=1\n  local y_incr=0\n  local temp=0\n  while [ $((a*x)) -lt $n ]; do\n    if [ $((a*x + b*y)) -eq $n ]; then\n      echo \"$x $y\"\n      return 0\n    fi\n    if [ $((a*(x+x_incr) + b*(y+y_incr))) -le $n ]; then\n      x=$((x+x_incr))\n      y=$((y+y_incr))\n    else\n      temp=$x_incr\n      x_incr=$y_incr\n      y_incr=$((-temp))\n    fi\n  done\n  echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "<_io.BufferedReader name=7>",
      "stderr": "<_io.BufferedReader name=15>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $x -le $n ]; do\n    y=$((n - a * x))\n    if [ $((y % b)) -eq 0 ]; then\n      found=1\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [ $found -eq 1 ]; then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n/a))\n    local y_max=$((n/b))\n    local x_min=$((-n/a))\n    local y_min=$((-n/b))\n    local x_sign=1\n    local y_sign=1\n    local x_step=1\n    local y_step=1\n    local found=0\n    local x_range=()\n    local y_range=()\n    if ((x_min < 0)); then\n        x_min=$((-x_min))\n        x_sign=-1\n    fi\n    if ((y_min < 0)); then\n        y_min=$((-y_min))\n        y_sign=-1\n    fi\n    if ((x_min > x_max)); then\n        x_step=-1\n    fi\n    if ((y_min > y_max)); then\n        y_step=-1\n    fi\n    for ((x=x_min; x!=x_max+x_step; x+=x_step)); do\n        for ((y=y_min; y!=y_max+y_step; y+=y_step)); do\n            if ((a*x*x_sign+b*y*y_sign == n)); then\n                x_range+=($((x*x_sign)))\n                y_range+=($((y*y_sign)))\n                found=1\n            fi\n        done\n    done\n    if ((found == 0)); then\n        echo \"None\"\n    else\n        echo \"${x_range[@]}\"\n        echo \"${y_range[@]}\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n    local t=0\n    local x1=0\n    local y1=0\n    local x2=0\n    local y2=0\n    local r1=0\n    local r2=0\n    local q1=0\n    local q2=0\n    local t1=0\n    local t2=0\n    local x_out=0\n    local y_out=0\n    local r_out=0\n    local q_out=0\n    local t_out=0\n    local x1_out=0\n    local y1_out=0\n    local x2_out=0\n    local y2_out=0\n    local r1_out=0\n    local r2_out=0\n    local q1_out=0\n    local q2_out=0\n    local t1_out=0\n    local t2_out=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=false\n    while [ $x -le $n ]; do\n        y=$((n - a * x))\n        if [ $((y % b)) -eq 0 ]; then\n            found=true\n            break\n        fi\n        x=$((x + 1))\n    done\n    if $found; then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  # Write your code here\n  # To print results to the standard output you can use echo\n  # Example: echo \"Hello world\"\n  if [ $1 -eq 0 ]\n  then\n    if [ $3 -eq 0 ]\n    then\n      echo \"0 0\"\n    else\n      echo \"None\"\n    fi\n  else\n    if [ $3 -eq 0 ]\n    then\n      echo \"$2 0\"\n    else\n      if [ $2 -eq 0 ]\n      then\n        echo \"0 $3\"\n      else\n        if [ $1 -eq $2 ]\n        then\n          if [ $3 -eq $1 ]\n          then\n            echo \"1 1\"\n          else\n            echo \"None\"\n          fi\n        else\n          if [ $1 -lt $2 ]\n          then\n            if [ $3 -lt $1 ]\n            then\n              echo \"None\"\n            else\n              if [ $3 -lt $2 ]\n              then\n                echo \"None\"\n              else\n                if [ $3 -eq $2 ]\n                then\n                  echo \"0 1\"\n                else\n                  if [ $3 -eq $1 ]\n                  then\n                    echo \"1 0\"\n                  else\n                    if [ $3 -lt $1 ]\n                    then\n                      echo \"None\"\n                    else\n                      if [ $3 -lt $2 ]\n                      then\n                        echo \"None\"\n                      else\n                        if [ $3 -eq $2 ]\n                        then\n                          echo \"0 1\"\n                        else\n                          if [ $3 -eq $1 ]\n                          then\n                            echo \"1 0\"\n                          else\n                            if [ $3 -lt $1 ]\n                            then\n                              echo \"None\"\n                            else\n                              if [ $3 -lt $2 ]\n                              then\n                                echo \"None\"\n                              else\n                                if [ $3 -eq $2 ]\n                                then\n                                  echo \"0 1\"\n                                else\n                                  if [ $3 -eq $1 ]\n                                  then\n                                    echo \"1 0\"\n                                  else\n                                    if [ $3 -lt $1 ]\n                                    then\n                                     \n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp5yc8o2qk.sh: line 90: syntax error near unexpected token `}'\\n/tmp/tmp5yc8o2qk.sh: line 90: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if [ $(( $x * $1 + $y * $2 )) -eq $3 ]; then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_incr=1\n  local y_incr=0\n  local temp=0\n  while [ $((a*x)) -le $n ]\n  do\n    if [ $((a*x + b*y)) -eq $n ]\n    then\n      echo \"$x $y\"\n      return 0\n    fi\n    if [ $((a*(x+x_incr) + b*(y+y_incr))) -le $n ]\n    then\n      x=$((x+x_incr))\n      y=$((y+y_incr))\n    else\n      temp=$x_incr\n      x_incr=$y_incr\n      y_incr=$((-temp))\n    fi\n  done\n  echo \"None\"\n  return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "<_io.BufferedReader name=20>",
      "stderr": "<_io.BufferedReader name=23>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=0\n    while [ $x -le $n ]; do\n        y=$(( (n - (a * x)) / b ))\n        if [ $(( a * x + b * y )) -eq $n ]; then\n            found=1\n            break\n        fi\n        x=$(( x + 1 ))\n    done\n    if [ $found -eq 1 ]; then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  while [ $((a*x)) -lt $n ]; do\n    y=$((n-a*x))\n    if [ $((b*y)) -eq $n ]; then\n      echo \"$x $y\"\n      return\n    fi\n    x=$((x+1))\n  done\n  echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_inc=1\n    local y_inc=0\n    local temp=0\n    while [ $((a*x)) -lt $n ]; do\n        x=$((x+x_inc))\n        y=$((y+y_inc))\n        if [ $((a*x)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        if [ $((a*x)) -gt $n ]; then\n            temp=$x_inc\n            x_inc=$y_inc\n            y_inc=$((-temp))\n        fi\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local q=0\n    local r=0\n    local x_result=0\n    local y_result=0\n    local result=0\n    if [ $n -eq 0 ]; then\n        echo \"0 0\"\n        return 0\n    fi\n    x1=1\n    x2=0\n    y1=0\n    y2=1\n    while [ $b -ne 0 ]; do\n        q=$((a / b))\n        r=$((a % b))\n        x=$((x2 - q * x1))\n        y=$((y2 - q * y1))\n        a=$b\n        b=$r\n        x2=$x1\n        x1=$x\n        y2=$y1\n        y1=$y\n    done\n    d=$a\n    x_result=$x2\n    y_result=$y2\n    if [ $n % $d -ne 0 ]; then\n        echo \"None\"\n        return 1\n    fi\n    x_result=$((x_result * (n / d)))\n    y_result=$((y_result * (n / d)))\n    result=\"$x_result $y_result\"\n    echo $result\n    return 0\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpzd4e2i9w.sh: line 46: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  while [ $((a*x)) -lt $n ]; do\n    y=0\n    while [ $((b*y)) -lt $n ]; do\n      if [ $((a*x+b*y)) -eq $n ]; then\n        echo \"$x $y\"\n        return 0\n      fi\n      y=$((y+1))\n    done\n    x=$((x+1))\n  done\n  echo \"None\"\n  return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  while [ $((a*x)) -lt $n ]; do\n    y=$(((n-a*x)/b))\n    if [ $((a*x+b*y)) -eq $n ]; then\n      echo \"$x $y\"\n      return 0\n    fi\n    x=$((x+1))\n  done\n  echo \"None\"\n  return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $((a*x)) -le $n ]; do\n    y=$(((n-a*x)/b))\n    if [ $((a*x+b*y)) -eq $n ]; then\n      found=1\n      break\n    fi\n    x=$((x+1))\n  done\n  if [ $found -eq 1 ]; then\n    echo \"[$x, $y]\"\n  else\n    echo \"None\"\n  fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local r1=0\n    local r2=0\n    local q1=0\n    local q2=0\n    local r_prev=0\n    local r_next=0\n    local q_prev=0\n    local q_next=0\n    local x_prev=0\n    local x_next=0\n    local y_prev=0\n    local y_next=0\n\n    if [ $a -eq 0 ] && [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n        else\n            echo \"None\"\n        fi\n        return\n    fi\n\n    if [ $a -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n        else\n            echo \"None\"\n        fi\n        return\n    fi\n\n    if [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n        else\n            echo \"None\"\n        fi\n        return\n    fi\n\n    if [ $n -eq 0 ]; then\n        echo \"0 0\"\n        return\n    fi\n\n    if [ $a -eq $b ]; then\n        if [ $n -eq $a ]; then\n            echo \"1 1\"\n        else\n            echo \"None\"\n        fi\n        return\n    fi\n\n    if [ $a -eq -$b ]; then\n        if [ $n -eq $a ]; then\n            echo \"1 -1\"\n        else\n            echo \"None\"\n        fi\n        return\n    fi\n\n    if [ $a -lt 0 ]; then\n        a=$((-$a))\n        x1=$((-$a))\n        y1=0\n        r1=$b\n        q1=0\n    else\n        x1=0\n        y1=$b\n        r1=$a\n        q1=0\n    fi\n\n\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  for ((x=0; x<=$1; x++)); do\n    for ((y=0; y<=$2; y++)); do\n      if [ $(( $1 * $x + $2 * $y )) -eq $3 ]; then\n        echo $x $y\n        return 0\n      fi\n    done\n  done\n  return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while (( $n > 0 )); do\n        if (( $n - $a >= 0 )); then\n            n=$(( $n - $a ))\n            x=$(( $x + $x_incr ))\n        else\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$temp\n            temp=$a\n            a=$b\n            b=$temp\n        fi\n    done\n    if (( $n == 0 )); then\n        echo $x $y\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "<_io.BufferedReader name=11>",
      "stderr": "<_io.BufferedReader name=17>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local q=0\n    local r=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local x_tmp=0\n    local y_tmp=0\n    local q_tmp=0\n    local r_tmp=0\n    local a_tmp=0\n    local b_tmp=0\n    local n_tmp=0\n    local x_list=()\n    local y_list=()\n    local q_list=()\n    local r_list=()\n    local a_list=()\n    local b_list=()\n    local n_list=()\n    local x_list_tmp=()\n    local y_list_tmp=()\n    local q_list_tmp=()\n    local r_list_tmp=()\n    local a_list_tmp=()\n    local b_list_tmp=()\n    local n_list_tmp=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local result=()\n    while [ $((a*x)) -le $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            result=($x $y)\n            break\n        fi\n        x=$((x+1))\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local n=$1\n    local a=$2\n    local b=$3\n    local result=()\n    while [ $((a*x)) -le $n ]; do\n        if [ $((n - a*x)) -eq 0 ]; then\n            result+=($x)\n            result+=($y)\n            echo \"${result[@]}\"\n            return\n        elif [ $((n - a*x)) -eq $b ]; then\n            result+=($x)\n            result+=($((y+1)))\n            echo \"${result[@]}\"\n            return\n        fi\n        x=$((x+1))\n        y=$((y-1))\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    # Write your solution here\n    if [ $1 -eq 0 ]\n    then\n        if [ $3 -eq 0 ]\n        then\n            echo \"0 0\"\n        else\n            echo \"None\"\n        fi\n    else\n        if [ $3 -eq 0 ]\n        then\n            echo \"0 $2\"\n        else\n            if [ $2 -eq 0 ]\n            then\n                echo \"$1 0\"\n            else\n                if [ $(( $3 % $1 )) -eq 0 ]\n                then\n                    echo \"$(( $3 / $1 )) 0\"\n                else\n                    if [ $(( $3 % $2 )) -eq 0 ]\n                    then\n                        echo \"0 $(( $3 / $2 ))\"\n                    else\n                        echo \"None\"\n                    fi\n                fi\n            fi\n        fi\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while true; do\n        if [ $((a * x)) -eq $((n - b * y)) ]; then\n            echo \"$x $y\"\n            return\n        fi\n        if [ $((a * x)) -gt $((n - b * y)) ]; then\n            ((y++))\n        else\n            ((x++))\n        fi\n    done\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "<_io.BufferedReader name=8>",
      "stderr": "<_io.BufferedReader name=18>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n   \n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_step=$((a / gcd(a, b)))\n    local y_step=$((b / gcd(a, b)))\n    local x_sign=$((x_step / abs(x_step)))\n    local y_sign=$((y_step / abs(y_step)))\n    local x_step=$((abs(x_step)))\n    local y_step=$((abs(y_step)))\n    local x_start=$((x_min * x_sign))\n    local y_start=$((y_min * y_sign))\n    local x_end=$((x_max * x_sign))\n    local y_end=$((y_max * y_sign))\n    local x_cur=$x_start\n    local y_cur=$y_start\n    local x_next=$((x_cur + x_step))\n    local y_next=$((y_cur + y_step))\n    local x_prev=$((x_cur - x_step))\n    local y_prev=$((y_cur - y_step))\n    local x_prev_prev=$((x_prev - x_step))\n    local y_prev_prev=$((y_prev - y_step))\n    local x_next_next=$((x_next + x_step))\n    local y_next_next=$((y_next + y_step))\n    local x_prev_prev_prev=$((x_prev_prev - x_step))\n    local y_prev_prev_prev=$((y_prev_prev - y_step))\n    local x_next_next_next=$((x_next_next + x_step))\n    local y_next_next_next=$((y_next_next + y_step))\n    local x_prev_prev_prev_prev=$((x_prev_prev_prev - x_step))\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpauy8ktiu.sh: line 17: a / gcd(a, b): division by 0 (error token is \"gcd(a, b)\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    x=0\n    y=0\n    while [ $x -le $1 ]\n    do\n        while [ $y -le $2 ]\n        do\n            if [ $(( $1 * $x + $2 * $y )) -eq $3 ]\n            then\n                echo $x $y\n                return 0\n            fi\n            y=$(( $y + 1 ))\n        done\n        y=0\n        x=$(( $x + 1 ))\n    done\n    echo \"No solution\"\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n    local r_prev=0\n    local q_prev=0\n    local x_prev=0\n    local y_prev=0\n    local x_prev_prev=0\n    local y_prev_prev=0\n    local x_temp=0\n    local y_temp=0\n    local r_temp=0\n    local q_temp=0\n    local solution_found=0\n    local solution_list=()\n    local solution_list_index=0\n    local solution_list_length=0\n    local solution_list_length_prev=0\n    local solution_list_length_prev_prev=0\n    local solution_list_length_diff=0\n    local solution_list_length_diff_prev=0\n    local solution_list_length_diff_prev_prev=0\n    local solution_list_length_diff_prev_prev_prev=0\n    local solution_list_length_diff_prev_prev_prev_prev=0\n    local solution_list_length_diff_prev_prev_prev_prev_prev=0\n    local solution_list_length_diff_prev_prev_prev_prev_prev_prev=0\n    local solution_list_length_diff_prev_prev_prev_prev_prev_prev_prev=0\n    local solution_list_length_diff_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local solution_list_length_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local solution_list_length_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local solution_list_length_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local solution_list_length_diff_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local solution_list_length_diff_prev\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=false\n  local solution=()\n  while [[ $x -le $n ]]; do\n    y=$((n - a * x))\n    if [[ $((y % b)) -eq 0 ]]; then\n      found=true\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [[ $found == true ]]; then\n    solution=($x $y)\n  fi\n  echo \"${solution[@]}\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while [ $((a*x)) -lt $n ]; do\n        x=$((x+x_incr))\n        y=$((y+y_incr))\n        if [ $((a*x)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        if [ $((a*x)) -gt $n ]; then\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$((-temp))\n            x=$((x+x_incr))\n            y=$((y+y_incr))\n        fi\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while [ $((a*x)) -lt $n ]; do\n        x=$((x+x_incr))\n        y=$((y+y_incr))\n        if [ $((a*x)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        if [ $((a*x)) -gt $n ]; then\n            x=$((x-x_incr))\n            y=$((y-y_incr))\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$((-temp))\n        fi\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "<_io.BufferedReader name=13>",
      "stderr": "<_io.BufferedReader name=19>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local n=$1\n    local a=$2\n    local b=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local q=0\n    local r=0\n    local x_out=0\n    local y_out=0\n\n    if [ $a -eq 0 ]; then\n        if [ $b -eq 0 ]; then\n            if [ $n -eq 0 ]; then\n                echo \"0 0\"\n            else\n                echo \"None\"\n            fi\n        else\n            if [ $n -eq 0 ]; then\n                echo \"0 0\"\n            else\n                if [ $n -eq $b ]; then\n                    echo \"0 1\"\n                else\n                    echo \"None\"\n                fi\n            fi\n        fi\n    else\n        if [ $b -eq 0 ]; then\n            if [ $n -eq 0 ]; then\n                echo \"0 0\"\n            else\n                if [ $n -eq $a ]; then\n                    echo \"1 0\"\n                else\n                    echo \"None\"\n                fi\n            fi\n        else\n            if [ $n -eq 0 ]; then\n                echo \"0 0\"\n            else\n                if [ $n -eq $a ]; then\n                    echo \"1 0\"\n                else\n                    if [ $n -eq $b ]; then\n                        echo \"0 1\"\n                    else\n                        d=$(gcd $a $b)\n                        if [ $n -eq $d ]; then\n                            x1=$(find_solution $a $a $b)\n                            x2=$(find_solution $b $a $b)\n                            y1=$(find_solution $a $a $b)\n                            y2=$(find_solution $b $a $b)\n                            x=$(($x1 - $x2))\n                            y=$(($y1 - $y2))\n                            echo \"$x $y\"\n                        else\n                            echo \"None\"\n                        fi\n                    fi\n                fi\n            fi\n        fi\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn9c_nky1.sh: line 62: gcd: command not found\\n/tmp/tmpn9c_nky1.sh: line 63: [: 2: unary operator expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while [ $((a*x)) -lt $n ]; do\n        y=$((n - a*x))\n        if [ $((y % b)) -eq 0 ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        temp=$x_incr\n        x_incr=$((x_incr - y_incr))\n        y_incr=$temp\n        x=$((x + x_incr))\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  for (( x=0; x<=$1; x++ )); do\n    for (( y=0; y<=$2; y++ )); do\n      if (( $1*$x + $2*$y == $3 )); then\n        echo \"$x $y\"\n        return\n      fi\n    done\n  done\n  echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if (( $1*$x + $2*$y == $3 )); then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    if [ $1 -eq 0 ]; then\n        echo \"None\"\n    else\n        x=$(($3 / $1))\n        y=$(($3 % $1))\n        if [ $y -eq 0 ]; then\n            echo \"[$x, 0]\"\n        else\n            find_solution $2 $(($1 % $2)) $y\n        fi\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  while [ $((a * x)) -lt $n ]; do\n    y=0\n    while [ $((a * x + b * y)) -lt $n ]; do\n      if [ $((a * x + b * y)) -eq $n ]; then\n        echo \"$x $y\"\n        return 0\n      fi\n      y=$((y + 1))\n    done\n    x=$((x + 1))\n  done\n  echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while [ $((a*x)) -lt $n ]; do\n        x=$((x+x_incr))\n        y=$((y+y_incr))\n        if [ $((a*x)) -eq $n ]; then\n            echo $x $y\n            return 0\n        fi\n        if [ $((a*x)) -gt $n ]; then\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$((-temp))\n        fi\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  while [ $((a*x)) -lt $n ]; do\n    y=$(((n-a*x)/b))\n    if [ $((a*x+b*y)) -eq $n ]; then\n      echo \"$x $y\"\n      return 0\n    fi\n    x=$((x+1))\n  done\n  echo \"None\"\n  return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    x=0\n    y=0\n    while [ $(( $1 * $x )) -le $3 ]; do\n        if [ $(( $3 - $1 * $x )) -eq $(( $2 * $y )) ]; then\n            echo \"$x $y\"\n            return\n        fi\n        if [ $(( $3 - $1 * $x )) -lt $(( $2 * $y )) ]; then\n            return\n        fi\n        y=$(( $y + 1 ))\n    done\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local result=()\n    while [ $((a*x)) -le $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            result=($x $y)\n            break\n        fi\n        x=$((x+1))\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-x_max))\n    local y_min=$((-y_max))\n    for ((x = x_min; x <= x_max; x++)); do\n        for ((y = y_min; y <= y_max; y++)); do\n            if ((a * x + b * y == n)); then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for ((x=0; x<=$1; x++)); do\n        for ((y=0; y<=$2; y++)); do\n            if [ $(( $1 * $x + $2 * $y )) -eq $3 ]; then\n                echo $x $y\n                return\n            fi\n        done\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local solution=()\n\n    while [ $((a*x)) -le $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            solution=($x $y)\n            break\n        fi\n        x=$((x+1))\n    done\n\n    if [ ${#solution[@]} -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"${solution[@]}\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    if [ $1 -eq 0 ]; then\n        echo \"None\"\n    else\n        x=$(($3 / $1))\n        y=$(($3 % $1))\n        if [ $y -eq 0 ]; then\n            echo \"[$x, 0]\"\n        else\n            find_solution $2 $(($1 % $2)) $y\n        fi\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  while [ $((a * x)) -le $n ]; do\n    y=$(((n - (a * x)) / b))\n    if [ $((a * x + b * y)) -eq $n ]; then\n      echo \"$x $y\"\n      return 0\n    fi\n    x=$((x + 1))\n  done\n  echo \"None\"\n  return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if (( $x*$1 + $y*$2 == $3 )); then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n\n    local x=0\n    local y=0\n\n    while [ $((a * x)) -lt $n ]; do\n        if [ $((a * x + b * y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x + 1))\n        y=$((n - a * x))\n    done\n\n    echo \"None\"\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local q=0\n    local r=0\n    local x_out=0\n    local y_out=0\n    local result=0\n    if [ $a -eq 0 ] && [ $b -eq 0 ] && [ $n -eq 0 ]; then\n        echo \"0 0\"\n        return 0\n    fi\n    if [ $a -eq 0 ] && [ $b -eq 0 ] && [ $n -ne 0 ]; then\n        echo \"None\"\n        return 1\n    fi\n    if [ $a -eq 0 ] && [ $b -ne 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return 0\n        fi\n        if [ $n -ne 0 ]; then\n            if [ $n -lt 0 ]; then\n                if [ $((n%b)) -eq 0 ]; then\n                    echo \"0 $((n/b))\"\n                    return 0\n                fi\n                if [ $((n%b)) -ne 0 ]; then\n                    echo \"None\"\n                    return 1\n                fi\n            fi\n            if [ $n -gt 0 ]; then\n                if [ $((n%b)) -eq 0 ]; then\n                    echo \"0 $((n/b))\"\n                    return 0\n                fi\n                if [ $((n%b)) -ne 0 ]; then\n                    echo \"None\"\n                    return 1\n                fi\n            fi\n        fi\n    fi\n    if [ $a -ne 0 ] && [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return 0\n        fi\n        if [ $n -ne 0 ]; then\n            if [ $n -lt 0 ]; then\n                if [ $((n%a)) -eq 0 ]; then\n                    echo \"$((n/a)) 0\"\n                    return 0\n                fi\n                if [ $((n%a)) -ne 0 ]; then\n                    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpcrjh71il.sh: line 72: syntax error near unexpected token `}'\\n/tmp/tmpcrjh71il.sh: line 72: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=0\n    local result=\"\"\n    while [ $x -le $n ]; do\n        y=$((n - a*x))\n        if [ $((y % b)) -eq 0 ]; then\n            result=\"$x $y\"\n            found=1\n            break\n        fi\n        x=$((x + 1))\n    done\n    if [ $found -eq 1 ]; then\n        echo $result\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=0\n    while [ $x -le $n ]; do\n        y=$((n - a * x))\n        if [ $((y % b)) -eq 0 ]; then\n            found=1\n            break\n        fi\n        x=$((x + 1))\n    done\n    if [ $found -eq 1 ]; then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    if [ $1 -eq 0 ]; then\n        echo \"None\"\n        return\n    fi\n    if [ $3 -eq 0 ]; then\n        echo \"[0, 0]\"\n        return\n    fi\n    if [ $2 -eq 0 ]; then\n        echo \"[$3, 0]\"\n        return\n    fi\n    if [ $3 -eq $1 ]; then\n        echo \"[1, 0]\"\n        return\n    fi\n    if [ $3 -eq $2 ]; then\n        echo \"[0, 1]\"\n        return\n    fi\n    if [ $3 -gt $1 ]; then\n        if [ $3 -gt $2 ]; then\n            if [ $3 -eq $(( $1 + $2 )) ]; then\n                echo \"[1, 1]\"\n                return\n            fi\n            if [ $3 -gt $(( $1 + $2 )) ]; then\n                echo \"None\"\n                return\n            fi\n            if [ $3 -lt $(( $1 + $2 )) ]; then\n                echo \"[$(( ($3 - $2) / $1 )), 1]\"\n                return\n            fi\n        fi\n        if [ $3 -lt $2 ]; then\n            if [ $3 -eq $(( $2 - $1 )) ]; then\n                echo \"[1, -1]\"\n                return\n            fi\n            if [ $3 -gt $(( $2 - $1 )) ]; then\n                echo \"[$(( ($3 + $1) / $2 )), -1]\"\n                return\n            fi\n            if [ $3 -lt $(( $2 - $1 )) ]; then\n                echo \"None\"\n                return\n            fi\n        fi\n    fi\n    if [ $3 -lt $1 ]; then\n        if [ $3 -gt $2 ]; then\n            if [ $3 -eq $(( $1 - $2 )) ]; then\n                echo \"[-1, 1]\"\n                return\n            fi\n            if [ $3 -gt $(( $1 - $2 )) ]; then\n                echo \"[-1, $(( ($3 + $2) / $1 ))]\"\n                return\n            fi\n            if [ $3 -lt $(( $1 - $2 )) ]; then\n                echo \"None\"\n                return\n\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpuy9_5dfg.sh: line 72: syntax error near unexpected token `}'\\n/tmp/tmpuy9_5dfg.sh: line 72: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while [ $((a*x)) -lt $n ]; do\n        y=$(((n-a*x)/b))\n        if [ $((a*x+b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n    done\n    echo \"None\"\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n    local x1=1\n    local x2=0\n    local y1=0\n    local y2=1\n    while [ $b -ne 0 ]; do\n        q=$((a / b))\n        r=$((a % b))\n        x=$((x2 - q * x1))\n        y=$((y2 - q * y1))\n        a=$b\n        b=$r\n        x2=$x1\n        x1=$x\n        y2=$y1\n        y1=$y\n    done\n    if [ $n -ne $a ]; then\n        echo \"None\"\n    else\n        echo \"[$x2, $y2]\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while [ $((a*x)) -le $n ]; do\n        y=$((n - a*x))\n        if [ $((y % b)) -eq 0 ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        temp=$x_incr\n        x_incr=$((-a*y_incr))\n        y_incr=$((b*temp))\n        x=$((x + x_incr))\n    done\n    echo \"None\"\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local q=0\n    local r=0\n    local x_result=0\n    local y_result=0\n    local result=0\n    local result_string=\"\"\n    local result_array=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $x -le $n ]; do\n    y=$((n-a*x))\n    if [ $((y%b)) -eq 0 ]; then\n      found=1\n      break\n    fi\n    x=$((x+1))\n  done\n  if [ $found -eq 1 ]; then\n    echo \"[$x, $y]\"\n  else\n    echo \"None\"\n  fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_step=1\n    local y_step=1\n    local x_start=0\n    local y_start=0\n    if [ $x_min -gt $x_max ]; then\n        x_step=-1\n        x_start=$x_max\n        x_max=$x_min\n        x_min=$x_start\n    fi\n    if [ $y_min -gt $y_max ]; then\n        y_step=-1\n        y_start=$y_max\n        y_max=$y_min\n        y_min=$y_start\n    fi\n    for ((x=$x_min; x<=$x_max; x+=$x_step)); do\n        for ((y=$y_min; y<=$y_max; y+=$y_step)); do\n            if [ $((a * x + b * y)) -eq $n ]; then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_max=$((n / a))\n  local y_max=$((n / b))\n  local x_min=$((-x_max))\n  local y_min=$((-y_max))\n  local x_step=1\n  local y_step=1\n  if [[ $a -lt 0 ]]; then\n    x_step=-1\n  fi\n  if [[ $b -lt 0 ]]; then\n    y_step=-1\n  fi\n  for ((x = x_min; x <= x_max; x += x_step)); do\n    for ((y = y_min; y <= y_max; y += y_step)); do\n      if [[ $((a * x + b * y)) -eq $n ]]; then\n        echo \"$x $y\"\n        return\n      fi\n    done\n  done\n  echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local q=0\n    local r=0\n    local x_result=0\n    local y_result=0\n\n    if [ $a -eq 0 ] && [ $b -eq 0 ] && [ $n -eq 0 ]; then\n        echo \"0 0\"\n        return\n    fi\n\n    if [ $a -eq 0 ] && [ $b -eq 0 ] && [ $n -ne 0 ]; then\n        echo \"None\"\n        return\n    fi\n\n    if [ $a -eq 0 ] && [ $b -ne 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return\n        fi\n        if [ $n -ne 0 ]; then\n            if [ $n -eq $b ]; then\n                echo \"1 0\"\n                return\n            fi\n            if [ $n -ne $b ]; then\n                if [ $n -lt $b ]; then\n                    if [ $(( $n % $b )) -eq 0 ]; then\n                        echo \"1 $(( $n / $b ))\"\n                        return\n                    fi\n                    if [ $(( $n % $b )) -ne 0 ]; then\n                        echo \"None\"\n                        return\n                    fi\n                fi\n                if [ $n -gt $b ]; then\n                    if [ $(( $n % $b )) -eq 0 ]; then\n                        echo \"$(( $n / $b )) 0\"\n                        return\n                    fi\n                    if [ $(( $n % $b )) -ne 0 ]; then\n                        echo \"None\"\n                        return\n                    fi\n                fi\n            fi\n        fi\n    fi\n\n    if [ $a -ne 0 ] && [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return\n        fi\n        if [ $n -ne 0 ]; then\n            if [ $n -eq $a ]; then\n                echo \"0 1\"\n                return\n            fi\n\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpfqh4ygg1.sh: line 79: syntax error near unexpected token `}'\\n/tmp/tmpfqh4ygg1.sh: line 79: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_step=$((a / gcd(a, b)))\n    local y_step=$((b / gcd(a, b)))\n    local x_sign=1\n    local y_sign=1\n    local found=0\n    local solution=\"\"\n    if ((x_max < x_min))\n    then\n        x_sign=-1\n    fi\n    if ((y_max < y_min))\n    then\n        y_sign=-1\n    fi\n    for ((x=x_min; x_sign*x<=x_sign*x_max; x+=x_step))\n    do\n        for ((y=y_min; y_sign*y<=y_sign*y_max; y+=y_step))\n        do\n            if ((a*x + b*y == n))\n            then\n                solution=\"$x $y\"\n                found=1\n                break\n            fi\n        done\n        if ((found == 1))\n        then\n            break\n        fi\n    done\n    if ((found == 1))\n    then\n        echo \"$solution\"\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpvi21ndh5.sh: line 17: a / gcd(a, b): division by 0 (error token is \"gcd(a, b)\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=1\n    local x2=0\n    local y1=0\n    local y2=1\n    local q=0\n    local r=0\n    while [ $b -ne 0 ]; do\n        q=$(( $a / $b ))\n        r=$(( $a % $b ))\n        x=$(( $x2 - $q * $x1 ))\n        y=$(( $y2 - $q * $y1 ))\n        a=$b\n        b=$r\n        x2=$x1\n        x1=$x\n        y2=$y1\n        y1=$y\n    done\n    d=$a\n    x=$x2\n    y=$y2\n    if [ $n -ne $(( $d * $x + $d * $y )) ]; then\n        echo \"None\"\n    else\n        echo \"[$x, $y]\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while (( $a * $x <= $n )); do\n        y=$(( ($n - $a * $x) / $b ))\n        if (( $a * $x + $b * $y == $n )); then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$(( $x + 1 ))\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local x_max=$((n/a))\n    local y_max=$((n/b))\n    local x_min=$((-n/a))\n    local y_min=$((-n/b))\n    local x_list=()\n    local y_list=()\n    local x_list_len=0\n    local y_list_len=0\n    local x_list_index=0\n    local y_list_index=0\n    local x_list_index_max=0\n    local y_list_index_max=0\n    local x_list_index_min=0\n    local y_list_index_min=0\n    local x_list_index_mid=0\n    local y_list_index_mid=0\n    local x_list_index_mid_max=0\n    local y_list_index_mid_max=0\n    local x_list_index_mid_min=0\n    local y_list_index_mid_min=0\n    local x_list_index_mid_max_prev=0\n    local y_list_index_mid_max_prev=0\n    local x_list_index_mid_min_prev=0\n    local y_list_index_mid_min_prev=0\n    local x_list_index_mid_max_prev_prev=0\n    local y_list_index_mid_max_prev_prev=0\n    local x_list_index_mid_min_prev_prev=0\n    local y_list_index_mid_min_prev_prev=0\n    local x_list_index_mid_max_prev_prev_prev=0\n    local y_list_index_mid_max_prev_prev_prev=0\n    local x_list_index_mid_min_prev_prev_prev=0\n    local y_list_index_mid_min_prev_prev_prev=0\n    local x_list_index_mid_max_prev_prev_prev_prev=0\n    local y_list_index_mid\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  for ((x=0; x<=$1; x++)); do\n    for ((y=0; y<=$1; y++)); do\n      if [ $(( $1 * $x + $2 * $y )) -eq $3 ]; then\n        echo \"$x $y\"\n        return\n      fi\n    done\n  done\n  echo \"No solution\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  x=0\n  while [ $(( $1 * $x )) -le $3 ]\n  do\n    y=0\n    while [ $(( $1 * $x + $2 * $y )) -le $3 ]\n    do\n      if [ $(( $1 * $x + $2 * $y )) -eq $3 ]\n      then\n        echo \"$x $y\"\n        return 0\n      fi\n      y=$(( $y + 1 ))\n    done\n    x=$(( $x + 1 ))\n  done\n  echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local x=0\n  local y=0\n  local n=$1\n  local a=$2\n  local b=$3\n  local r=0\n  local q=0\n  local x1=0\n  local y1=0\n  local x2=0\n  local y2=0\n  local x3=0\n  local y3=0\n  local x4=0\n  local y4=0\n\n  if [ $a -eq 0 ] && [ $b -eq 0 ]; then\n    if [ $n -eq 0 ]; then\n      echo \"0 0\"\n    else\n      echo \"None\"\n    fi\n  elif [ $a -eq 0 ]; then\n    if [ $n -eq 0 ]; then\n      echo \"0 0\"\n    elif [ $n -eq $b ]; then\n      echo \"0 1\"\n    else\n      echo \"None\"\n    fi\n  elif [ $b -eq 0 ]; then\n    if [ $n -eq 0 ]; then\n      echo \"0 0\"\n    elif [ $n -eq $a ]; then\n      echo \"1 0\"\n    else\n      echo \"None\"\n    fi\n  else\n    x1=1\n    y1=0\n    x2=0\n    y2=1\n    while [ $r -ne 0 ]; do\n      q=$(($n / $a))\n      r=$(($n % $a))\n      x3=$(($x1 - ($q * $x2)))\n      y3=$(($y1 - ($q * $y2)))\n      x1=$x2\n      y1=$y2\n      x2=$x3\n      y2=$y3\n      n=$a\n      a=$r\n    done\n    if [ $n -eq 1 ]; then\n      x=$x1\n      y=$y1\n      if [ $x -lt 0 ]; then\n        x=$(($x + $b))\n        y=$(($y - $a))\n      fi\n      echo \"$x $y\"\n    else\n      echo \"None\"\n    fi\n  fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n\n    local x=0\n    local y=0\n\n    while [ $((a*x)) -lt $n ]; do\n        if [ $((n - a*x)) -eq 0 ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        if [ $((n - a*x)) -lt $b ]; then\n            x=$((x+1))\n            continue\n        fi\n        if [ $((n - a*x)) -gt $b ]; then\n            y=$((y+1))\n            continue\n        fi\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "<_io.BufferedReader name=7>",
      "stderr": "<_io.BufferedReader name=12>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    while (( $a * $x <= $n )); do\n        y=$(( ($n - $a * $x) / $b ))\n        if (( $a * $x + $b * $y == $n )); then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$(( $x + 1 ))\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    while [ $((a*x)) -lt $n ]; do\n        y=0\n        while [ $((b*y)) -lt $n ]; do\n            if [ $((a*x+b*y)) -eq $n ]; then\n                echo \"$x $y\"\n                return 0\n            fi\n            y=$((y+1))\n        done\n        x=$((x+1))\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local r=0\n    local q=0\n    local r_prev=0\n    local x_prev=0\n    local y_prev=0\n    local q_prev=0\n    local x_prev_prev=0\n    local y_prev_prev=0\n\n    while [ $r -ne 0 ]\n    do\n        q=$((n / b))\n        r=$((n % b))\n        x_prev_prev=$x_prev\n        y_prev_prev=$y_prev\n        x_prev=$x\n        y_prev=$y\n        x=$((x_prev_prev - q * x_prev))\n        y=$((y_prev_prev - q * y_prev))\n        q_prev=$q\n        r_prev=$r\n        a=$b\n        b=$r\n        n=$r_prev\n    done\n\n    if [ $r_prev -ne $n ]\n    then\n        echo \"None\"\n    else\n        echo \"[$x_prev, $y_prev]\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  # Write your code here\n  # To print results to the standard output you can use echo\n  # Example: echo \"Hello world\"\n  echo \"Hello world\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local x=0\n  local y=0\n  local a=$1\n  local b=$2\n  local n=$3\n  local r=$((n % b))\n  if [ $r -eq 0 ]; then\n    x=0\n    y=$((n / b))\n  else\n    local q=$((n / b))\n    local s=$(find_solution $b $r $n)\n    if [ -z \"$s\" ]; then\n      return\n    fi\n    x=$(echo $s | cut -d ' ' -f 2)\n    y=$(echo $s | cut -d ' ' -f 1)\n    x=$((x + q * y))\n  fi\n  echo \"$y $x\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    x=0\n    y=0\n    while [ $(( $1 * $x )) -le $3 ]\n    do\n        if [ $(( $3 - ($1 * $x) )) -eq 0 ]\n        then\n            echo $x\n            echo $y\n            return\n        fi\n        while [ $(( $2 * $y )) -le $3 ]\n        do\n            if [ $(( $3 - ($1 * $x) - ($2 * $y) )) -eq 0 ]\n            then\n                echo $x\n                echo $y\n                return\n            fi\n            y=$(( $y + 1 ))\n        done\n        x=$(( $x + 1 ))\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_prev=1\n    local y_prev=0\n    local q=0\n    local r=0\n    local tmp=0\n    local tmp2=0\n    local tmp3=0\n    local tmp4=0\n    local tmp5=0\n    local tmp6=0\n    local tmp7=0\n    local tmp8=0\n    local tmp9=0\n    local tmp10=0\n    local tmp11=0\n    local tmp12=0\n    local tmp13=0\n    local tmp14=0\n    local tmp15=0\n    local tmp16=0\n    local tmp17=0\n    local tmp18=0\n    local tmp19=0\n    local tmp20=0\n    local tmp21=0\n    local tmp22=0\n    local tmp23=0\n    local tmp24=0\n    local tmp25=0\n    local tmp26=0\n    local tmp27=0\n    local tmp28=0\n    local tmp29=0\n    local tmp30=0\n    local tmp31=0\n    local tmp32=0\n    local tmp33=0\n    local tmp34=0\n    local tmp35=0\n    local tmp36=0\n    local tmp37=0\n    local tmp38=0\n    local tmp39=0\n    local tmp40=0\n    local tmp41=0\n    local tmp42=0\n    local tmp43=0\n    local tmp44=0\n    local tmp45=0\n    local tmp46=0\n    local tmp47=0\n    local tmp48=0\n    local tmp49=0\n    local tmp50=0\n    local tmp51=0\n    local tmp52=0\n    local tmp53=0\n    local tmp54=0\n    local tmp55=0\n    local tmp56=0\n    local tmp57=0\n    local tmp58=0\n    local tmp59=0\n    local tmp60=0\n    local tmp61=0\n    local tmp62=0\n    local tmp63=0\n    local tmp64=0\n    local tmp65=0\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    for (( x=0; x<=$1; x++ ))\n    do\n        for (( y=0; y<=$2; y++ ))\n        do\n            if [ $(( $1 * $x + $2 * $y )) -eq $3 ]\n            then\n                echo $x $y\n                return\n            fi\n        done\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  while [ $((a*x)) -lt $n ]; do\n    y=0\n    while [ $((b*y)) -lt $n ]; do\n      if [ $((a*x + b*y)) -eq $n ]; then\n        echo \"$x $y\"\n        return\n      fi\n      y=$((y+1))\n    done\n    x=$((x+1))\n  done\n  echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local x=0\n  local y=0\n  local n=$1\n  local a=$2\n  local b=$3\n  local found=0\n  while [ $x -le $n ]; do\n    y=$((n - a * x))\n    if [ $((y % b)) -eq 0 ]; then\n      found=1\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [ $found -eq 1 ]; then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for ((x = 0; x <= $1; x++)); do\n        for ((y = 0; y <= $2; y++)); do\n            if [ $(( $1 * $x + $2 * $y )) -eq $3 ]; then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    if [ $1 -eq 0 ]; then\n        echo \"None\"\n    else\n        x=$(($3 / $1))\n        y=$(($3 % $1))\n        if [ $y -eq 0 ]; then\n            echo \"[$x, 0]\"\n        else\n            find_solution $2 $(($1 % $2)) $y\n        fi\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for ((x=0; x<=$1; x++)); do\n        for ((y=0; y<=$2; y++)); do\n            if [ $(( $1 * $x + $2 * $y )) -eq $3 ]; then\n                echo $x $y\n                return\n            fi\n        done\n    done\n    echo \"No solution\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=0\n    while [ $x -le $n ]; do\n        y=$((n - a * x))\n        if [ $((y % b)) -eq 0 ]; then\n            found=1\n            break\n        fi\n        x=$((x + 1))\n    done\n    if [ $found -eq 1 ]; then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    if [ $1 -eq 0 ]; then\n        echo \"None\"\n    elif [ $3 -eq 0 ]; then\n        echo \"0,0\"\n    else\n        if [ $3 -lt 0 ]; then\n            find_solution $1 $2 $(( $3 + $2 ))\n        else\n            find_solution $1 $2 $(( $3 - $1 ))\n        fi\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local r=1\n  while [ $r -ne 0 ]; do\n    let r=$n%$a\n    let n=$n/$a\n    let x=$x+$n*$b\n    let y=$y-$n*$a\n    let n=$r\n    let r=$n%$b\n    let n=$n/$b\n    let x=$x-$n*$b\n    let y=$y+$n*$a\n    let n=$r\n  done\n  if [ $n -ne 1 ]; then\n    echo \"None\"\n  else\n    echo \"[$x, $y]\"\n  fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190643,
      "stdout": "<_io.BufferedReader name=10>",
      "stderr": "<_io.BufferedReader name=24>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_step=1\n    local y_step=0\n    local x_limit=$((n / a))\n    local y_limit=$((n / b))\n    local x_min=0\n    local y_min=0\n    local x_max=$x_limit\n    local y_max=$y_limit\n    local x_mid=0\n    local y_mid=0\n    local x_mid_step=0\n    local y_mid_step=0\n    local x_mid_limit=0\n    local y_mid_limit=0\n    local x_mid_min=0\n    local y_mid_min=0\n    local x_mid_max=0\n    local y_mid_max=0\n    local x_mid_mid=0\n    local y_mid_mid=0\n    local x_mid_mid_step=0\n    local y_mid_mid_step=0\n    local x_mid_mid_limit=0\n    local y_mid_mid_limit=0\n    local x_mid_mid_min=0\n    local y_mid_mid_min=0\n    local x_mid_mid_max=0\n    local y_mid_mid_max=0\n    local x_mid_mid_mid=0\n    local y_mid_mid_mid=0\n    local x_mid_mid_mid_step=0\n    local y_mid_mid_mid_step=0\n    local x_mid_mid_mid_limit=0\n    local y_mid_mid_mid_limit=0\n    local x_mid_mid_mid_min=0\n    local y_mid_mid_mid_min=0\n    local x_mid_mid_mid_max=0\n    local y_mid_mid_mid_max=0\n    local x_mid_mid_mid_mid=0\n    local y_mid_mid_mid_mid=0\n    local x_mid_mid_mid_mid_step=0\n    local y_mid_mid_mid_mid_step\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local x=0\n  local y=0\n  local a=$1\n  local b=$2\n  local n=$3\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local ce=0\n  local cf=0\n \n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    x=0\n    y=0\n    while [ $x -le $1 ]\n    do\n        while [ $y -le $2 ]\n        do\n            if [ $(( $1 * $x + $2 * $y )) -eq $3 ]\n            then\n                echo $x $y\n                return 0\n            fi\n            y=$(( $y + 1 ))\n        done\n        y=0\n        x=$(( $x + 1 ))\n    done\n    echo \"None\"\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    if [ $1 -eq 0 ]\n    then\n        echo \"0 0\"\n        return 0\n    fi\n    if [ $2 -eq 0 ]\n    then\n        echo \"0 0\"\n        return 0\n    fi\n    if [ $3 -eq 0 ]\n    then\n        echo \"0 0\"\n        return 0\n    fi\n    if [ $1 -eq $2 ]\n    then\n        echo \"0 0\"\n        return 0\n    fi\n    if [ $1 -eq $3 ]\n    then\n        echo \"0 0\"\n        return 0\n    fi\n    if [ $2 -eq $3 ]\n    then\n        echo \"0 0\"\n        return 0\n    fi\n    if [ $1 -lt $2 ]\n    then\n        if [ $1 -lt $3 ]\n        then\n            if [ $2 -lt $3 ]\n            then\n                if [ $1 -eq 1 ]\n                then\n                    if [ $2 -eq 2 ]\n                    then\n                        if [ $3 -eq 3 ]\n                        then\n                            echo \"1 2\"\n                            return 0\n                        fi\n                    fi\n                fi\n            fi\n        fi\n    fi\n    if [ $1 -lt $2 ]\n    then\n        if [ $1 -lt $3 ]\n        then\n            if [ $2 -lt $3 ]\n            then\n                if [ $1 -eq 1 ]\n                then\n                    if [ $2 -eq 2 ]\n                    then\n                        if [ $3 -eq 4 ]\n                        then\n                            echo \"1 2\"\n                            return 0\n                        fi\n                    fi\n                fi\n            fi\n        fi\n    fi\n    if [ $1 -lt $2 ]\n    then\n        if [ $1 -lt $3 ]\n        then\n            if [ $2 -lt $3 ]\n            then\n                if [ $1 -eq 1 ]\n                then\n                    if [ $2 -eq 2 ]\n                    then\n                        if [ $3 -eq 5 ]\n                        then\n                            echo \"1 2\"\n                            return 0\n                        fi\n                    fi\n                fi\n            fi\n        fi\n    fi\n    if [ $1 -lt $2 ]\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpr2fu0qiy.sh: line 99: syntax error near unexpected token `}'\\n/tmp/tmpr2fu0qiy.sh: line 99: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local solution=()\n  while [ $((a*x)) -le $n ]; do\n    y=$(((n-a*x)/b))\n    if [ $((a*x+b*y)) -eq $n ]; then\n      solution=($x $y)\n      return 0\n    fi\n    x=$((x+1))\n  done\n  return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  x=0\n  y=0\n  while [ $(( $1 * $x )) -le $3 ]\n  do\n    y=0\n    while [ $(( $1 * $x + $2 * $y )) -le $3 ]\n    do\n      if [ $(( $1 * $x + $2 * $y )) -eq $3 ]\n      then\n        echo \"$x $y\"\n        return 0\n      fi\n      y=$(( $y + 1 ))\n    done\n    x=$(( $x + 1 ))\n  done\n  echo \"None\"\n  return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while [ $((a*x)) -le $n ]; do\n        if [ $((a*x+b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        if [ $((a*(x+x_incr)+b*(y+y_incr))) -le $n ]; then\n            x=$((x+x_incr))\n            y=$((y+y_incr))\n        else\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$((-temp))\n        fi\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190643,
      "stdout": "<_io.BufferedReader name=15>",
      "stderr": "<_io.BufferedReader name=22>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while (( $n > 0 )); do\n        if (( $n - $a >= 0 )); then\n            n=$(( $n - $a ))\n            x=$(( $x + $x_incr ))\n        else\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$temp\n            temp=$a\n            a=$b\n            b=$temp\n        fi\n    done\n    if (( $n == 0 )); then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "<_io.BufferedReader name=3>",
      "stderr": "<_io.BufferedReader name=6>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local x=0\n  local y=0\n  local n=$1\n  local a=$2\n  local b=$3\n  local tmp=0\n  local tmp2=0\n  local tmp3=0\n  local tmp4=0\n  local tmp5=0\n  local tmp6=0\n  local tmp7=0\n  local tmp8=0\n  local tmp9=0\n  local tmp10=0\n  local tmp11=0\n  local tmp12=0\n  local tmp13=0\n  local tmp14=0\n  local tmp15=0\n  local tmp16=0\n  local tmp17=0\n  local tmp18=0\n  local tmp19=0\n  local tmp20=0\n  local tmp21=0\n  local tmp22=0\n  local tmp23=0\n  local tmp24=0\n  local tmp25=0\n  local tmp26=0\n  local tmp27=0\n  local tmp28=0\n  local tmp29=0\n  local tmp30=0\n  local tmp31=0\n  local tmp32=0\n  local tmp33=0\n  local tmp34=0\n  local tmp35=0\n  local tmp36=0\n  local tmp37=0\n  local tmp38=0\n  local tmp39=0\n  local tmp40=0\n  local tmp41=0\n  local tmp42=0\n  local tmp43=0\n  local tmp44=0\n  local tmp45=0\n  local tmp46=0\n  local tmp47=0\n  local tmp48=0\n  local tmp49=0\n  local tmp50=0\n  local tmp51=0\n  local tmp52=0\n  local tmp53=0\n  local tmp54=0\n  local tmp55=0\n  local tmp56=0\n  local tmp57=0\n  local tmp58=0\n  local tmp59=0\n  local tmp60=0\n  local tmp61=0\n  local tmp62=0\n  local tmp63=0\n  local tmp64=0\n  local tmp65=0\n  local tmp66=0\n  local tmp67=0\n  local tmp68=0\n  local tmp69=0\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if (( $1 * $x + $2 * $y == $3 )); then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if [ $(( $1 * $x + $2 * $y )) -eq $3 ]; then\n                echo \"$x $y\"\n                return\n            fi\n        done\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local n=$1\n    local a=$2\n    local b=$3\n    local result=()\n    while [ $((n - a)) -ge 0 ]; do\n        if [ $((n - a)) -eq 0 ]; then\n            result+=($x)\n            result+=($y)\n            echo \"${result[@]}\"\n            return\n        fi\n        ((n -= a))\n        ((y += 1))\n    done\n    while [ $((n - b)) -ge 0 ]; do\n        if [ $((n - b)) -eq 0 ]; then\n            result+=($x)\n            result+=($y)\n            echo \"${result[@]}\"\n            return\n        fi\n        ((n -= b))\n        ((x += 1))\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local result=()\n    while (( $((a*x)) < $n )); do\n        if (( $((n - a*x)) % b == 0 )); then\n            y=$(((n - a*x) / b))\n            result=($x $y)\n            break\n        fi\n        x=$((x+1))\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    for ((x=0; x<=$1; x++))\n    do\n        for ((y=0; y<=$2; y++))\n        do\n            if [ $(( $x * $1 + $y * $2 )) -eq $3 ]\n            then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local r=1\n    local q=0\n    local x2=1\n    local x1=0\n    local y2=0\n    local y1=1\n    local temp=0\n    while [ $r -ne 0 ]\n    do\n        q=$(( $n / $b ))\n        r=$(( $n % $b ))\n        temp=$(( $x2 - $q * $x1 ))\n        x2=$x1\n        x1=$temp\n        temp=$(( $y2 - $q * $y1 ))\n        y2=$y1\n        y1=$temp\n        n=$b\n        b=$r\n    done\n    if [ $n -ne 1 ]\n    then\n        echo \"None\"\n    else\n        x=$(( $x2 * $a ))\n        y=$(( $y2 * $a ))\n        echo \"[$x, $y]\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if [ $(( $1 * $x + $2 * $y )) -eq $3 ]; then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local d=0\n  local x1=0\n  local x2=0\n  local y1=0\n  local y2=0\n  local q=0\n  local r=0\n  if [ $a -eq 0 ] && [ $b -eq 0 ]; then\n    echo \"None\"\n  elif [ $a -eq 0 ]; then\n    if [ $n -eq 0 ]; then\n      echo \"0 0\"\n    else\n      echo \"None\"\n    fi\n  elif [ $b -eq 0 ]; then\n    if [ $n -eq 0 ]; then\n      echo \"0 0\"\n    elif [ $((n % a)) -eq 0 ]; then\n      echo \"$((n / a)) 0\"\n    else\n      echo \"None\"\n    fi\n  else\n    d=$(gcd $a $b)\n    if [ $((n % d)) -eq 0 ]; then\n      x1=0\n      x2=1\n      y1=1\n      y2=0\n      while [ $b -ne 0 ]; do\n        q=$((a / b))\n        r=$((a % b))\n        x=$((x2 - q * x1))\n        y=$((y2 - q * y1))\n        a=$b\n        b=$r\n        x2=$x1\n        x1=$x\n        y2=$y1\n        y1=$y\n      done\n      echo \"$((n / d * x2)) $((n / d * y2))\"\n    else\n      echo \"None\"\n    fi\n  fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp_jaw7juz.sh: line 37: gcd: command not found\\n/tmp/tmp_jaw7juz.sh: line 38: n % d: division by 0 (error token is \"d\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $x -le $n ]; do\n    y=$((n - a * x))\n    if [ $((y % b)) -eq 0 ]; then\n      found=1\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [ $found -eq 1 ]; then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local x_max=$((n/a))\n    local y_max=$((n/b))\n    local x_min=$((-n/a))\n    local y_min=$((-n/b))\n    local x_step=$((a/gcd(a,b)))\n    local y_step=$((b/gcd(a,b)))\n    local x_curr=$x_min\n    local y_curr=$y_min\n    local found=0\n    while [[ $x_curr -le $x_max ]] && [[ $y_curr -le $y_max ]]; do\n        if [[ $((a*x_curr + b*y_curr)) -eq $n ]]; then\n            x=$x_curr\n            y=$y_curr\n            found=1\n            break\n        fi\n        x_curr=$((x_curr+x_step))\n        y_curr=$((y_curr+y_step))\n    done\n    if [[ $found -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"[$x, $y]\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp2h1jzj_v.sh: line 17: a/gcd(a,b): division by 0 (error token is \"gcd(a,b)\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while [ $((a*x)) -lt $n ]; do\n        if [ $((a*x + b*y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        if [ $((a*(x+x_incr) + b*(y+y_incr))) -le $n ]; then\n            x=$((x+x_incr))\n            y=$((y+y_incr))\n        else\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$((-temp))\n        fi\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190643,
      "stdout": "<_io.BufferedReader name=8>",
      "stderr": "<_io.BufferedReader name=16>",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_incr=1\n  local y_incr=0\n  local temp=0\n\n  while (( n > 0 )); do\n    if (( n - a >= 0 )); then\n      n=$(( n - a ))\n      x=$(( x + x_incr ))\n      y=$(( y + y_incr ))\n    else\n      temp=$x_incr\n      x_incr=$y_incr\n      y_incr=$temp\n      a=$b\n      b=$n\n    fi\n  done\n\n  if (( n == 0 )); then\n    echo \"[$x, $y]\"\n  else\n    echo \"None\"\n  fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local x_found=false\n    local y_found=false\n    while [ $x_found = false ]\n    do\n        if [ $(( $n - $a * $x )) -lt 0 ]\n        then\n            x_found=true\n        else\n            x=$(( $x + 1 ))\n        fi\n    done\n    while [ $y_found = false ]\n    do\n        if [ $(( $n - $b * $y )) -lt 0 ]\n        then\n            y_found=true\n        else\n            y=$(( $y + 1 ))\n        fi\n    done\n    if [ $(( $n - $a * $x )) -eq 0 ] || [ $(( $n - $b * $y )) -eq 0 ]\n    then\n        echo \"[$x, $y]\"\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local x=0\n  local y=0\n  local a=$1\n  local b=$2\n  local n=$3\n  local gcd=$(gcd $a $b)\n  if [ $((n % gcd)) -ne 0 ]; then\n    echo \"None\"\n  else\n    local a_prime=$((a / gcd))\n    local b_prime=$((b / gcd))\n    local n_prime=$((n / gcd))\n    local x_prime=$(find_solution_recursive $a_prime $b_prime $n_prime)\n    x=$((x_prime * b_prime))\n    y=$((n_prime - a_prime * x_prime))\n    echo \"[$x, $y]\"\n  fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp8v9vs3z3.sh: line 13: gcd: command not found\\n/tmp/tmp8v9vs3z3.sh: line 14: n % gcd: division by 0 (error token is \"gcd\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local found=0\n    while [ $x -le $n ]\n    do\n        y=$((n - a * x))\n        if [ $((y % b)) -eq 0 ]\n        then\n            found=1\n            break\n        fi\n        x=$((x + 1))\n    done\n    if [ $found -eq 1 ]\n    then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    # your code here\n    if [ $1 -eq 0 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $3 -eq 0 ]\n    then\n        echo \"[0, 0]\"\n        return\n    fi\n    if [ $3 -lt 0 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $1 -eq $2 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $1 -lt $2 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $1 -lt 0 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $2 -lt 0 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $3 -lt $2 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $3 -lt $1 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $1 -eq 0 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $2 -eq 0 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $3 -eq 0 ]\n    then\n        echo \"[0, 0]\"\n        return\n    fi\n    if [ $3 -lt 0 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $1 -eq $2 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $1 -lt $2 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $1 -lt 0 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $2 -lt 0 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $3 -lt $2 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $3 -lt $1 ]\n    then\n        echo \"None\"\n        return\n    fi\n    if [ $1 -eq 0 ]\n    then\n        echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmparfty4dt.sh: line 107: syntax error near unexpected token `}'\\n/tmp/tmparfty4dt.sh: line 107: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    if [ $1 -eq 0 ]; then\n        echo \"None\"\n    else\n        local x=$(($3 / $1))\n        local y=$(($3 - $1 * $x))\n        if [ $(( $y % $2 )) -eq 0 ]; then\n            echo \"[$x, $(($y / $2))]\"\n        else\n            echo \"None\"\n        fi\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    x=0\n    y=0\n    while [ $x -le $1 ]\n    do\n        while [ $y -le $2 ]\n        do\n            if [ $(( $1 * $x + $2 * $y )) -eq $3 ]\n            then\n                echo $x $y\n                return 0\n            fi\n            y=$(( $y + 1 ))\n        done\n        y=0\n        x=$(( $x + 1 ))\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=0\n  while [ $((a*x)) -le $n ]; do\n    y=$(((n-a*x)/b))\n    if [ $((a*x+b*y)) -eq $n ]; then\n      found=1\n      break\n    fi\n    x=$((x+1))\n  done\n  if [ $found -eq 1 ]; then\n    echo \"[$x, $y]\"\n  else\n    echo \"None\"\n  fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_step=$((a / gcd(a, b)))\n    local y_step=$((b / gcd(a, b)))\n    local x_sign=1\n    local y_sign=1\n    if ((x_step < 0)); then\n        x_sign=-1\n    fi\n    if ((y_step < 0)); then\n        y_sign=-1\n    fi\n    while ((x_min <= x && x <= x_max)); do\n        while ((y_min <= y && y <= y_max)); do\n            if ((a * x + b * y == n)); then\n                echo \"$x $y\"\n                return 0\n            fi\n            y=$((y + y_sign))\n        done\n        x=$((x + x_sign))\n        y=0\n    done\n    echo \"None\"\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpz39v4l0n.sh: line 17: a / gcd(a, b): division by 0 (error token is \"gcd(a, b)\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local gcd=$(gcd $a $b)\n    if [ $((n % gcd)) -ne 0 ]; then\n        echo \"None\"\n        return\n    fi\n    local x_0=$(gcd_extended $a $b | cut -d' ' -f2)\n    local y_0=$(gcd_extended $a $b | cut -d' ' -f3)\n    local k=$((n / gcd))\n    x=$((k * x_0))\n    y=$((k * y_0))\n    echo \"[$x, $y]\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpz60qs95d.sh: line 13: gcd: command not found\\n/tmp/tmpz60qs95d.sh: line 14: n % gcd: division by 0 (error token is \"gcd\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    if [ $1 -eq 0 ]; then\n        echo \"None\"\n    elif [ $3 -eq 0 ]; then\n        echo \"0 0\"\n    else\n        local x=$(($3 / $1))\n        local y=$(($3 % $1))\n        if [ $y -eq 0 ]; then\n            echo \"$x 0\"\n        else\n            find_solution $2 $1 $y\n        fi\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190642,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    # TODO: implement this function\n    # return a list of integers x and y\n    # or return None if no solution exists\n    a=$1\n    b=$2\n    n=$3\n    x=0\n    y=0\n    while [ $((a*x)) -lt $n ]\n    do\n        y=0\n        while [ $((b*y)) -lt $n ]\n        do\n            if [ $((a*x+b*y)) -eq $n ]\n            then\n                echo $x $y\n                return 0\n            fi\n            y=$((y+1))\n        done\n        x=$((x+1))\n    done\n    echo None\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local q=0\n    local r=0\n    local tmp=0\n    local x_solution=0\n    local y_solution=0\n    local solution=0\n    local solution_found=0\n    local solution_list=()\n    local solution_list_index=0\n    local solution_list_size=0\n    local solution_list_string=\"\"\n    local solution_list_string_size=0\n    local solution_list_string_index=0\n    local solution_list_string_char=\"\"\n    local solution_list_string_char_ascii=0\n    local solution_list_string_char_ascii_hex=\"\"\n    local solution_list_string_char_ascii_hex_size=0\n    local solution_list_string_char_ascii_hex_index=0\n    local solution_list_string_char_ascii_hex_char=\"\"\n    local solution_list_string_char_ascii_hex_char_ascii=0\n    local solution_list_string_char_ascii_hex_char_ascii_hex=\"\"\n    local solution_list_string_char_ascii_hex_char_ascii_hex_size=0\n    local solution_list_string_char_ascii_hex_char_ascii_hex_index=0\n    local solution_list_string_char_ascii_hex_char_ascii_hex_char=\"\"\n    local solution_list_string_char_ascii_hex_char_ascii_hex_char_ascii=0\n    local solution_list_string_char_ascii_hex_char_ascii_hex_char_ascii_hex=\"\"\n    local solution_list_string_char_ascii_hex_char_ascii_hex_char_ascii_hex_size=0\n\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    local gcd=$(gcd $a $b)\n    if [ $((n % gcd)) -ne 0 ]; then\n        echo \"None\"\n        return\n    fi\n    local a_=$((a / gcd))\n    local b_=$((b / gcd))\n    local n_=$((n / gcd))\n    local x_=$(find_solution_recursive $a_ $b_ $n_)\n    x=$((x_ * gcd))\n    y=$(((n - a * x) / b))\n    echo \"[$x, $y]\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpyf2p21pq.sh: line 13: gcd: command not found\\n/tmp/tmpyf2p21pq.sh: line 14: n % gcd: division by 0 (error token is \"gcd\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for x in $(seq 0 $1); do\n        for y in $(seq 0 $2); do\n            if [ $(($x * $1 + $y * $2)) -eq $3 ]; then\n                echo $x $y\n                return\n            fi\n        done\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local y1=0\n    local x2=0\n    local y2=0\n    local q=0\n    local r=0\n    if [ $a -eq 0 ] && [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n        else\n            echo \"None\"\n        fi\n        return\n    fi\n    if [ $a -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n        else\n            if [ $n -eq $b ]; then\n                echo \"1 0\"\n            else\n                echo \"None\"\n            fi\n        fi\n        return\n    fi\n    if [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n        else\n            if [ $n -eq $a ]; then\n                echo \"0 1\"\n            else\n                echo \"None\"\n            fi\n        fi\n        return\n    fi\n    if [ $n -eq 0 ]; then\n        echo \"0 0\"\n        return\n    fi\n    x2=1\n    x1=0\n    y2=0\n    y1=1\n    while [ $b -ne 0 ]; do\n        q=$(($a / $b))\n        r=$(($a % $b))\n        x=$(($x2 - $q * $x1))\n        y=$(($y2 - $q * $y1))\n        a=$b\n        b=$r\n        x2=$x1\n        x1=$x\n        y2=$y1\n        y1=$y\n    done\n    if [ $n -eq $a ]; then\n        echo \"$x2 $y2\"\n        return\n    fi\n    if [ $n -eq 0 ]; then\n        echo \"0 0\"\n        return\n    fi\n    d=$(($n / $a))\n    x=$(($x2 * $d))\n    y=$(($y2 * $\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpqtnichn3.sh: line 82: unexpected EOF while looking for matching `)'\\n/tmp/tmpqtnichn3.sh: line 97: syntax error: unexpected end of file\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n\n    local x=0\n    local y=0\n\n    while [ $((a * x)) -lt $n ]; do\n        if [ $((a * x + b * y)) -eq $n ]; then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x + 1))\n        y=$((n - a * x))\n    done\n\n    echo \"None\"\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_max=$((n / a))\n  local y_max=$((n / b))\n  local x_min=$((-n / a))\n  local y_min=$((-n / b))\n  local x_range=$((x_max - x_min))\n  local y_range=$((y_max - y_min))\n  local x_range_half=$((x_range / 2))\n  local y_range_half=$((y_range / 2))\n  local x_mid=$((x_min + x_range_half))\n  local y_mid=$((y_min + y_range_half))\n  local x_mid_value=$((a * x_mid))\n  local y_mid_value=$((b * y_mid))\n  local mid_value=$((x_mid_value + y_mid_value))\n  local x_mid_value_neg=$((-x_mid_value))\n  local y_mid_value_neg=$((-y_mid_value))\n  local mid_value_neg=$((x_mid_value_neg + y_mid_value_neg))\n\n  if [[ $mid_value -eq $n ]]; then\n    echo \"[$x_mid, $y_mid]\"\n    return\n  elif [[ $mid_value_neg -eq $n ]]; then\n    echo \"[$x_mid_value_neg, $y_mid_value_neg]\"\n    return\n  elif [[ $mid_value -gt $n ]]; then\n    local x_mid_new=$((x_mid - 1))\n    local y_mid_new=$((y_mid + 1))\n    local x_mid_new_value=$((a * x_mid_new))\n    local y_mid_new_value=$((b * y_mid_new))\n    local mid_new_value=$((x_mid_new_value + y_mid_new_value))\n    local x_mid_new_value_neg=$((-x_mid_new_value))\n    local y\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpgb32qcko.sh: line 44: syntax error near unexpected token `}'\\n/tmp/tmpgb32qcko.sh: line 44: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    # your code here\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local result=()\n    while [ $((a*x)) -le $n ]; do\n        if [ $((a*x+b*y)) -eq $n ]; then\n            result+=($x $y)\n            break\n        fi\n        x=$((x+1))\n        y=$((n-a*x))\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local n=$1\n  local a=$2\n  local b=$3\n  local x=0\n  local y=0\n  while [ $((a*x)) -lt $n ]; do\n    y=$((n-a*x))\n    if [ $((y%b)) -eq 0 ]; then\n      echo \"$x $((y/b))\"\n      return 0\n    fi\n    x=$((x+1))\n  done\n  echo \"None\"\n  return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_step=$((a / gcd(a, b)))\n    local y_step=$((b / gcd(a, b)))\n    for ((x = x_min; x <= x_max; x += x_step)); do\n        for ((y = y_min; y <= y_max; y += y_step)); do\n            if ((a * x + b * y == n)); then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpss3r8s57.sh: line 17: a / gcd(a, b): division by 0 (error token is \"gcd(a, b)\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local result=\"\"\n    local found=false\n    while [ $x -le $n ]; do\n        y=$((n - a * x))\n        if [ $((y % b)) -eq 0 ]; then\n            result=\"$x $y\"\n            found=true\n            break\n        fi\n        x=$((x + 1))\n    done\n    if [ \"$found\" = true ]; then\n        echo $result\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for x in $(seq 0 $1); do\n        for y in $(seq 0 $2); do\n            if [ $(( $x * $1 + $y * $2 )) -eq $3 ]; then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local a=$1\n    local b=$2\n    local n=$3\n    while [ $((a*x)) -lt $n ]\n    do\n        y=$((n-a*x))\n        if [ $((y%b)) -eq 0 ]\n        then\n            echo \"$x $y\"\n            return 0\n        fi\n        x=$((x+1))\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if [ $(( $1 * $x + $2 * $y )) -eq $3 ]; then\n                echo \"$x $y\"\n                return\n            fi\n        done\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if (( $1*$x + $2*$y == $3 )); then\n                echo \"$x $y\"\n                return 0\n            fi\n        done\n    done\n    return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190633,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    if [ $1 -eq 0 ]; then\n        echo \"None\"\n    else\n        x=$(($3 / $1))\n        y=$(($3 % $1))\n        if [ $y -eq 0 ]; then\n            echo \"[$x, 0]\"\n        else\n            find_solution $2 $(($1 % $2)) $y\n        fi\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190628,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local x=0\n  local y=0\n  local a=$1\n  local b=$2\n  local n=$3\n  local sum=$((a + b))\n  local product=$((a * b))\n  local remainder=$((n % sum))\n  local quotient=$((n / sum))\n  if [ $remainder -eq 0 ]; then\n    x=$((quotient * a))\n    y=$((quotient * b))\n  elif [ $remainder -eq $a ]; then\n    x=$((quotient * a + a))\n    y=$((quotient * b))\n  elif [ $remainder -eq $b ]; then\n    x=$((quotient * a))\n    y=$((quotient * b + b))\n  elif [ $remainder -gt $a ]; then\n    x=$((quotient * a + a))\n    y=$((quotient * b + remainder - a))\n  elif [ $remainder -gt $b ]; then\n    x=$((quotient * a + remainder - b))\n    y=$((quotient * b + b))\n  else\n    x=$((quotient * a + remainder))\n    y=$((quotient * b))\n  fi\n  echo \"[$x, $y]\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local found=false\n  while [[ $((a * x)) -le $n ]]; do\n    local y=$(((n - (a * x)) / b))\n    if [[ $((a * x + b * y)) -eq $n ]]; then\n      found=true\n      break\n    fi\n    x=$((x + 1))\n  done\n  if [[ $found == true ]]; then\n    echo \"$x $y\"\n  else\n    echo \"None\"\n  fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local q=0\n    local r=0\n\n    if [ $a -eq 0 ]; then\n        if [ $b -eq 0 ]; then\n            if [ $n -eq 0 ]; then\n                echo \"0 0\"\n            else\n                echo \"None\"\n            fi\n        else\n            if [ $n -eq 0 ]; then\n                echo \"0 0\"\n            else\n                if [ $((n % b)) -eq 0 ]; then\n                    echo \"0 $((n / b))\"\n                else\n                    echo \"None\"\n                fi\n            fi\n        fi\n    else\n        if [ $b -eq 0 ]; then\n            if [ $n -eq 0 ]; then\n                echo \"0 0\"\n            else\n                if [ $((n % a)) -eq 0 ]; then\n                    echo \"$((n / a)) 0\"\n                else\n                    echo \"None\"\n                fi\n            fi\n        else\n            if [ $n -eq 0 ]; then\n                echo \"0 0\"\n            else\n                d=$(gcd $a $b)\n                if [ $((n % d)) -eq 0 ]; then\n                    x1=$(find_solution $a $b $d)\n                    y1=$(find_solution $b $a $d)\n                    q=$((n / d))\n                    x=$((q * x1))\n                    y=$((q * y1))\n                    echo \"$x $y\"\n                else\n                    echo \"None\"\n                fi\n            fi\n        fi\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpstbp3bt0.sh: line 54: gcd: command not found\\n/tmp/tmpstbp3bt0.sh: line 55: n % d: division by 0 (error token is \"d\")\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-x_max))\n    local y_min=$((-y_max))\n    local x_step=1\n    local y_step=1\n    local x_sign=1\n    local y_sign=1\n    local x_found=false\n    local y_found=false\n    local x_start=0\n    local y_start=0\n    local x_end=0\n    local y_end=0\n    local x_range=0\n    local y_range=0\n    local x_range_sign=1\n    local y_range_sign=1\n    local x_range_start=0\n    local y_range_start=0\n    local x_range_end=0\n    local y_range_end=0\n    local x_range_step=1\n    local y_range_step=1\n    local x_range_found=false\n    local y_range_found=false\n    local x_range_start_found=false\n    local y_range_start_found=false\n    local x_range_end_found=false\n    local y_range_end_found=false\n    local x_range_step_found=false\n    local y_range_step_found=false\n    local x_range_sign_found=false\n    local y_range_sign_found=false\n    local x_range_start_sign=1\n    local y_range_start_sign=1\n    local x_range_end_sign=1\n    local y_range_end_sign=1\n    local x_range_step_sign=1\n    local y_range_step_sign=1\n    local x_range_start_step=1\n    local y_range_start_step=1\n    local x_range_end_step=1\n    local y_range_end_step=1\n    local x_range_start_end=0\n    local y_range_start\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local x=0\n    local y=0\n    local n=$1\n    local a=$2\n    local b=$3\n    local x_max=$((n / a))\n    local y_max=$((n / b))\n    local x_min=$((-n / a))\n    local y_min=$((-n / b))\n    local x_step=$((a / gcd(a, b)))\n    local y_step=$((b / gcd(a, b)))\n    local x_start=$((x_min / x_step))\n    local y_start=$((y_min / y_step))\n    local x_end=$((x_max / x_step))\n    local y_end=$((y_max / y_step))\n    local x_range=$((x_end - x_start))\n    local y_range=$((y_end - y_start))\n    local x_range_abs=$((x_range < 0 ? -x_range : x_range))\n    local y_range_abs=$((y_range < 0 ? -y_range : y_range))\n    local x_range_abs_max=$((x_range_abs > y_range_abs ? x_range_abs : y_range_abs))\n    local x_range_abs_max_half=$((x_range_abs_max / 2))\n    local x_range_abs_max_half_step=$((x_range_abs_max_half / x_step))\n    local y_range_abs_max_half_step=$((x_range_abs_max_half / y_step))\n    local x_range_abs_max_half_step_start=$((x_range_abs_max_half_step * x_step))\n    local y_range_abs_max_half_step_start=$((y_range_abs_max_half_step * y_step))\n    local x_range_abs_max_half_step_start_x=$((x_start + x_range_abs_max_half_step_start))\n    local y_range_abs_max_half_step_start_y=$((y_start + y_\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpf9067i_6.sh: line 34: unexpected EOF while looking for matching `)'\\n/tmp/tmpf9067i_6.sh: line 49: syntax error: unexpected end of file\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    for (( x=0; x<=$1; x++ )); do\n        for (( y=0; y<=$2; y++ )); do\n            if (( $3 == $(( $1 * $x + $2 * $y )) )); then\n                echo \"$x $y\"\n                return\n            fi\n        done\n    done\n    echo \"None\"\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=0\n    local y_incr=0\n    local solution=\"\"\n    local found=0\n    local i=0\n    local j=0\n    local k=0\n\n    if [ $a -eq 0 ] && [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return\n        else\n            echo \"None\"\n            return\n        fi\n    fi\n\n    if [ $a -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return\n        elif [ $n -eq $b ]; then\n            echo \"0 1\"\n            return\n        else\n            echo \"None\"\n            return\n        fi\n    fi\n\n    if [ $b -eq 0 ]; then\n        if [ $n -eq 0 ]; then\n            echo \"0 0\"\n            return\n        elif [ $n -eq $a ]; then\n            echo \"1 0\"\n            return\n        else\n            echo \"None\"\n            return\n        fi\n    fi\n\n    if [ $a -lt 0 ]; then\n        x_incr=$((0 - $a))\n    else\n        x_incr=$a\n    fi\n\n    if [ $b -lt 0 ]; then\n        y_incr=$((0 - $b))\n    else\n        y_incr=$b\n    fi\n\n    while [ $found -eq 0 ]; do\n        if [ $((($a * $x) + ($b * $y))) -eq $n ]; then\n            solution=\"$x $y\"\n            found=1\n        else\n            if [ $x -eq 0 ]; then\n                if [ $y -eq 0 ]; then\n                    y=$y_incr\n                else\n                    y=$((y + y_incr))\n                fi\n            else\n                if [ $y -eq 0 ]; then\n                    x=$((x + x_incr))\n                else\n                    x=$((x + x_incr))\n                    y=$((y + y_incr))\n\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpywjgb26z.sh: line 87: syntax error near unexpected token `}'\\n/tmp/tmpywjgb26z.sh: line 87: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local d=0\n    local r=0\n    local q=0\n    local x1=0\n    local x2=0\n    local y1=0\n    local y2=0\n    local x_solution=0\n    local y_solution=0\n    local solution_found=0\n    local solution_list=()\n    local solution_string=\"\"\n    local solution_string_length=0\n    local solution_string_index=0\n    local solution_string_char=\"\"\n    local solution_string_char_ascii=0\n    local solution_string_char_ascii_hex=0\n    local solution_string_char_ascii_hex_length=0\n    local solution_string_char_ascii_hex_index=0\n    local solution_string_char_ascii_hex_char=\"\"\n    local solution_string_char_ascii_hex_char_ascii=0\n    local solution_string_char_ascii_hex_char_ascii_hex=0\n    local solution_string_char_ascii_hex_char_ascii_hex_length=0\n    local solution_string_char_ascii_hex_char_ascii_hex_index=0\n    local solution_string_char_ascii_hex_char_ascii_hex_char=\"\"\n    local solution_string_char_ascii_hex_char_ascii_hex_char_ascii=0\n    local solution_string_char_ascii_hex_char_ascii_hex_char_ascii_hex=0\n    local solution_string_char_ascii_hex_char_ascii_hex_char_ascii_hex_length=0\n    local solution_string_char_ascii_hex_char_ascii_hex_char_ascii_hex_index=0\n    local solution_string_char_ascii_hex_char_ascii_hex_char_ascii_hex\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local x=0\n  local y=0\n  local a=$1\n  local b=$2\n  local n=$3\n  while [ $((a*x)) -lt $n ]; do\n    y=0\n    while [ $((a*x+b*y)) -lt $n ]; do\n      if [ $((a*x+b*y)) -eq $n ]; then\n        echo $x $y\n        return 0\n      fi\n      y=$((y+1))\n    done\n    x=$((x+1))\n  done\n  echo None\n  return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n  local a=$1\n  local b=$2\n  local n=$3\n  local x=0\n  local y=0\n  local x_incr=1\n  local y_incr=0\n  local temp=0\n  while [ $((a*x)) -lt $n ]; do\n    x=$((x+x_incr))\n    y=$((y+y_incr))\n    if [ $((a*x)) -eq $n ]; then\n      echo \"$x $y\"\n      return 0\n    fi\n    if [ $((a*x)) -gt $n ]; then\n      temp=$x_incr\n      x_incr=$y_incr\n      y_incr=$((-temp))\n    fi\n  done\n  echo \"None\"\n  return 1\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190638,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function that returns integers x and y that satisfy ax + by = n as a list, or return None if no solution exists.\n#\n# $1 is an integer\n# $2 is an integer\n# $3 is an integer\nfind_solution() {\n    local a=$1\n    local b=$2\n    local n=$3\n    local x=0\n    local y=0\n    local x_incr=1\n    local y_incr=0\n    local temp=0\n    while (( n > 0 )); do\n        if (( n >= a )); then\n            n=$(( n - a ))\n            x=$(( x + x_incr ))\n        else\n            temp=$x_incr\n            x_incr=$y_incr\n            y_incr=$temp\n            temp=$a\n            a=$b\n            b=$temp\n        fi\n    done\n    if (( n == 0 )); then\n        echo \"$x $y\"\n    else\n        echo \"None\"\n    fi\n}\n\ncandidate() {\n    find_solution \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\" \"3\" \"7\") = \"2 1\" ]]\n    [[ $(candidate \"4\" \"2\" \"7\") = \"None\" ]]\n    [[ $(candidate \"1\" \"13\" \"17\") = \"4 1\" ]]\n}\n\nrun_test",
      "timestamp": 1667190643,
      "stdout": "<_io.BufferedReader name=7>",
      "stderr": "<_io.BufferedReader name=12>",
      "exit_code": -1,
      "status": "Timeout"
    }
  ]
}
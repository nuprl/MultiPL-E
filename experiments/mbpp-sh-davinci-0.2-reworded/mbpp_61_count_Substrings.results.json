{
  "name": "mbpp_61_count_Substrings",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_61_count_Substrings.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local sub=0\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<=len; j++))\n        do\n            sub=${string:i:j}\n            sum=0\n            for ((k=0; k<${#sub}; k++))\n            do\n                sum=$((sum+${sub:k:1}))\n            done\n            if [ $sum -eq ${#sub} ]\n            then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=${string:i:j}\n            sum=$(echo $substr | grep -o . | awk '{sum+=$1} END {print sum}')\n            if [ $sum -eq ${#substr} ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substring=\"${string:i:j}\"\n            local sum=0\n            for (( k=0; k<${#substring}; k++ )); do\n                sum=$(( sum + ${substring:k:1} ))\n            done\n            if [ $sum -eq ${#substring} ]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    echo $1 | grep -o '[0-9]*' | grep -v '^$' | awk '{sum=0; for(i=1;i<=length($1);i++) {sum+=substr($1,i,1)}; if (sum==length($1)) {print $1}}' | wc -l\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local -i count=0\n    local -i len=${#1}\n    local -i i=0\n    local -i j=0\n    local -i sum=0\n    local -i digit=0\n    local -i sub_len=0\n    local -i sub_sum=0\n    local -i sub_digit=0\n    local -i sub_len_sum=0\n    local -i sub_len_sum_digit=0\n    local -i sub_len_sum_digit_sub_len=0\n    local -i sub_len_sum_digit_sub_len_sub_sum=0\n    local -i sub_len_sum_digit_sub_len_sub_sum_sub_digit=0\n    local -i sub_len_sum_digit_sub_len_sub_sum_sub_digit_sub_len_sum=0\n    local -i sub_len_sum_digit_sub_len_sub_sum_sub_digit_sub_len_sum_sub_len_sum_digit=0\n    local -i sub_len_sum_digit_sub_len_sub_sum_sub_digit_sub_len_sum_sub_len_sum_digit_sub_len_sum_digit_sub_len=0\n    local -i sub_len_sum_digit_sub_len_sub_sum_sub_digit_sub_len_sum_sub_len_sum_digit_sub_len_sum_digit_sub_len_sub_sum=0\n    local -i sub_len_sum_digit_sub_len_sub_sum_sub_digit_sub_len_sum_sub_len_sum_digit_sub_len_sum_digit_sub_len_sub_sum_sub_digit=0\n    local -i sub_len_sum_digit_sub_len_sub_sum_sub_digit_sub_len_sum_sub_len_sum_digit_sub_len_sum_digit_sub_len_sub_sum_sub_digit_sub_len_sum=0\n    local -i sub_len_sum_digit_sub_len_sub_sum_sub_digit_sub_len_sum_sub_\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=${#string}\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            sum=$(echo ${string:$i:$j} | grep -o '[0-9]' | tr -d '\\n' | wc -m)\n            if [ $sum -eq $((j-i+1)) ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    for (( i=0; i<len; i++ )); do\n        for (( j=i; j<len; j++ )); do\n            sum=$(echo \"${str:i:j-i+1}\" | grep -o . | awk '{sum+=$1} END {print sum}')\n            if [ $sum -eq $((j-i+1)) ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    for (( i=0; i<$length; i++ )); do\n        for (( j=i+1; j<=$length; j++ )); do\n            local substring=${string:$i:$j}\n            local sum=0\n            for (( k=0; k<${#substring}; k++ )); do\n                sum=$((sum+${substring:$k:1}))\n            done\n            if [ $sum -eq ${#substring} ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    while [ $i -lt $len ]; do\n        local j=$i\n        local sum=0\n        while [ $j -lt $len ]; do\n            sum=$((sum + ${string:$j:1}))\n            if [ $sum -eq $((j - i + 1)) ]; then\n                count=$((count + 1))\n            fi\n            j=$((j + 1))\n        done\n        i=$((i + 1))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub=${str:i:j}\n            sum=$(echo $sub | sed 's/[0-9]//g' | wc -c)\n            if [ $sum -eq 0 ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substring=''\n\n    while [ $i -lt $length ]; do\n        j=$i\n        while [ $j -lt $length ]; do\n            substring=${string:$i:$j}\n            sum=0\n            for (( k=0; k<${#substring}; k++ )); do\n                sum=$((sum + ${substring:$k:1}))\n            done\n            if [ $sum -eq ${#substring} ]; then\n                count=$((count + 1))\n            fi\n            j=$((j + 1))\n        done\n        i=$((i + 1))\n    done\n\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            sum=$(echo ${string:i:j+1} | sed 's/[^0-9]//g' | awk '{sum=0; for (i=1; i<=NF; i++) {sum+=$i}; print sum}')\n            if [ ${#string:i:j+1} -eq $sum ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpiu6c0_s6.sh: line 15: ${#string:i:j+1}: bad substitution\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    while [[ $i -lt $len ]]; do\n        local j=$((i+1))\n        while [[ $j -le $len ]]; do\n            local substr=${str:$i:$j}\n            local sum=0\n            for ((k=0; k<${#substr}; k++)); do\n                sum=$((sum+${substr:$k:1}))\n            done\n            if [[ $sum -eq ${#substr} ]]; then\n                count=$((count+1))\n            fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            local sub=${string:i:j}\n            local sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                sum=$((sum + ${sub:k:1}))\n            done\n            if [ $sum -eq ${#sub} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n  local string=$1\n  local count=0\n  local i=0\n  local j=0\n  local sum=0\n  local len=0\n  local substr=''\n  local char=''\n\n  len=${#string}\n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<=len; j++)); do\n      substr=${string:i:j}\n      sum=0\n      for ((k=0; k<${#substr}; k++)); do\n        char=${substr:k:1}\n        sum=$((sum + char))\n      done\n      if [[ $sum -eq ${#substr} ]]; then\n        count=$((count + 1))\n      fi\n    done\n  done\n  echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    while [ $i -lt $len ]\n    do\n        local j=$i\n        local sum=0\n        while [ $j -lt $len ]\n        do\n            local char=${str:$j:1}\n            sum=$(($sum + $char))\n            if [ $sum -eq $((j - i + 1)) ]\n            then\n                count=$((count + 1))\n            fi\n            j=$((j + 1))\n        done\n        i=$((i + 1))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local digit=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sum=0\n            for ((k=i; k<j; k++)); do\n                digit=${string:$k:1}\n                sum=$((sum+digit))\n            done\n            if [ $sum -eq $((j-i)) ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=\"${str:i:j}\"\n            sum=0\n            for ((k=0; k<${#substr}; k++)); do\n                sum=$((sum+${substr:k:1}))\n            done\n            if [ $sum -eq ${#substr} ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local substr=''\n    local sum=0\n    local len=0\n    for ((i=0; i<${#string}; i++)); do\n        for ((j=i; j<${#string}; j++)); do\n            substr=${string:i:j+1}\n            sum=0\n            for ((k=0; k<${#substr}; k++)); do\n                sum=$((sum + ${substr:k:1}))\n            done\n            len=${#substr}\n            if [ $sum -eq $len ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            sum=0\n            for (( k=i; k<j; k++ )); do\n                sum=$(( sum + ${str:k:1} ))\n            done\n            if [ $sum -eq $(( j-i )) ]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local sub=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            sub=${str:i:j+1}\n            sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                sum=$((sum+${sub:k:1}))\n            done\n            if [ $sum -eq ${#sub} ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub=${string:i:j}\n            sum=$(echo $sub | grep -o . | awk '{sum+=$1} END {print sum}')\n            if [[ $sum -eq ${#sub} ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=${str:i:j}\n            sum=$(echo $substr | sed 's/[0-9]/ + &/g' | bc)\n            if [ $sum -eq ${#substr} ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmp0cfcx4yg.sh: line 16: bc: command not found\\n/tmp/tmp0cfcx4yg.sh: ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substr=${str:i:j}\n            local sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                sum=$(( sum + ${substr:k:1} ))\n            done\n            if (( sum == ${#substr} )); then\n                (( count++ ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            sub=\"${string:$i:$j}\"\n            sum=0\n            for (( k=0; k<${#sub}; k++ )); do\n                sum=$(( sum + ${sub:$k:1} ))\n            done\n            if [ $sum -eq ${#sub} ]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local sub=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            sub=${str:i:j-i+1}\n            sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                sum=$((sum+${sub:k:1}))\n            done\n            if [ $sum -eq ${#sub} ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local num=0\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            num=${str:i:j-i+1}\n            sum=$(awk '{print sum+=$1}' <<< \"$num\")\n            if [ $sum -eq ${#num} ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=${str:i:j}\n            sum=0\n            for ((k=0; k<${#substr}; k++)); do\n                sum=$((sum + ${substr:k:1}))\n            done\n            if [ $sum -eq ${#substr} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            local substr=${string:i:j}\n            local sum=0\n            for ((k=0; k<${#substr}; k++)); do\n                sum=$((sum + ${substr:k:1}))\n            done\n            if ((sum == ${#substr})); then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local sum=0\n    local len=0\n    local i=0\n    local j=0\n    local k=0\n    local char=0\n    local subString=0\n    local subStringLen=0\n    local subStringSum=0\n\n    len=${#string}\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<=len; j++))\n        do\n            subString=${string:$i:$j}\n            subStringLen=${#subString}\n            subStringSum=0\n            for ((k=0; k<subStringLen; k++))\n            do\n                char=${subString:$k:1}\n                subStringSum=$((subStringSum+char))\n            done\n            if [[ $subStringSum -eq $subStringLen ]]\n            then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=${#string}\n\n    for (( i=0; i<len; i++ )); do\n        for (( j=i; j<len; j++ )); do\n            sum=$(echo \"${string:$i:$j}\" | grep -o . | awk '{sum+=$1} END {print sum}')\n            if [[ $sum -eq $j ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local tmp=0\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i; j<len; j++))\n        do\n            tmp=${str:i:j-i+1}\n            sum=0\n            for ((k=0; k<${#tmp}; k++))\n            do\n                sum=$((sum+${tmp:k:1}))\n            done\n            if [ $sum -eq ${#tmp} ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191205,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            sum=$(echo ${string:i:j+1} | grep -o [0-9] | paste -sd+ | bc)\n            if [ $sum -eq $((j-i+1)) ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: line 15: [: -eq: unary operator expected\\n/tmp/tmpo9l4xqr0.sh: line 14: bc: command not found\\n/tmp/tmpo9l4xqr0.sh: ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local tmp=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            tmp=${str:$i:$j}\n            sum=0\n            for ((k=0; k<${#tmp}; k++)); do\n                sum=$((sum+${tmp:$k:1}))\n            done\n            if ((sum==${#tmp})); then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=${string:i:j}\n            sum=$(echo $substr | sed -e 's/[0-9]/ + &/g' -e 's/^ +//' | bc)\n            if [ $sum -eq ${#substr} ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: line 17: [: -eq: unary operator expected\\n/tmp/tmpv0jcdcf8.sh: line 16: bc: command not found\\n/tmp/tmpv0jcdcf8.sh: ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            sum=0\n            for ((k=i; k<=j; k++)); do\n                sum=$((sum + ${string:$k:1}))\n            done\n            if ((sum == j-i+1)); then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    for ((i=0; i<length; i++)); do\n        for ((j=i+1; j<=length; j++)); do\n            local substring=${string:i:j}\n            local sum=0\n            for ((k=0; k<${#substring}; k++)); do\n                sum=$((sum + ${substring:k:1}))\n            done\n            if [[ $sum -eq ${#substring} ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    for (( i=0; i<${#string}; i++ )); do\n        for (( j=i+1; j<=${#string}; j++ )); do\n            local substring=${string:$i:$j}\n            local sum=0\n            for (( k=0; k<${#substring}; k++ )); do\n                sum=$(( sum + ${substring:$k:1} ))\n            done\n            if [ $sum -eq ${#substring} ]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local sub=0\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<=len; j++))\n        do\n            sub=${string:$i:$j}\n            sum=0\n            for ((k=0; k<${#sub}; k++))\n            do\n                sum=$((sum + ${sub:$k:1}))\n            done\n            if [ $sum -eq ${#sub} ]\n            then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local sub_str=\"\"\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub_str=${str:$i:$j}\n            sum=$(echo $sub_str | sed 's/[0-9]//g' | wc -c)\n            if [[ $sum -eq 0 ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substring=${string:$i:$j}\n            local sum=0\n            for (( k=0; k<${#substring}; k++ )); do\n                sum=$(( sum + ${substring:$k:1} ))\n            done\n            if [ $sum -eq ${#substring} ]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n  local string=\"$1\"\n  local count=0\n  local len=${#string}\n  local i=0\n  local j=0\n  local sum=0\n  local substr=\"\"\n  for (( i=0; i<len; i++ ))\n  do\n    for (( j=i+1; j<=len; j++ ))\n    do\n      substr=\"${string:$i:$j}\"\n      sum=$(echo $substr | sed 's/\\(.\\)/\\1 + /g' | bc)\n      if [ $sum -eq ${#substr} ]\n      then\n        count=$((count+1))\n      fi\n    done\n  done\n  echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: line 19: [: -eq: unary operator expected\\n/tmp/tmpigfyue0y.sh: line 18: bc: command not found\\n/tmp/tmpigfyue0y.sh: ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local subString=''\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<=len; j++))\n        do\n            subString=${string:i:j}\n            sum=$(echo $subString | grep -o . | awk '{sum+=$1} END {print sum}')\n            if [ $sum -eq ${#subString} ]\n            then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            local sub=${string:i:j}\n            local sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                ((sum+=${sub:k:1}))\n            done\n            if ((sum==${#sub})); then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n\tlocal string=$1\n\tlocal count=0\n\tfor ((i=0; i<${#string}; i++)); do\n\t\tfor ((j=i+1; j<=${#string}; j++)); do\n\t\t\tlocal substring=${string:i:j}\n\t\t\tlocal sum=0\n\t\t\tfor ((k=0; k<${#substring}; k++)); do\n\t\t\t\tsum=$((sum+${substring:k:1}))\n\t\t\tdone\n\t\t\tif ((sum==${#substring})); then\n\t\t\t\tcount=$((count+1))\n\t\t\tfi\n\t\tdone\n\tdone\n\techo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n\tlocal str=$1\n\tlocal count=0\n\tlocal len=${#str}\n\tfor ((i=0; i<len; i++)); do\n\t\tfor ((j=i+1; j<=len; j++)); do\n\t\t\tlocal sub=${str:i:j}\n\t\t\tlocal sum=0\n\t\t\tfor ((k=0; k<${#sub}; k++)); do\n\t\t\t\tsum=$((sum + ${sub:k:1}))\n\t\t\tdone\n\t\t\tif [ $sum -eq ${#sub} ]; then\n\t\t\t\tcount=$((count + 1))\n\t\t\tfi\n\t\tdone\n\tdone\n\techo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local -i count=0\n    local -i sum=0\n    local -i len=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local tmp=0\n    local tmp_str=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            tmp_str=${str:i:j}\n            tmp=${#tmp_str}\n            sum=0\n            for ((k=0; k<tmp; k++)); do\n                sum=$((sum+${tmp_str:k:1}))\n            done\n            if [[ $sum -eq $tmp ]]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local -i count=0\n    local -i len=${#1}\n    local -i i=0\n    local -i j=0\n    local -i sum=0\n    local -i digit=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sum=0\n            for ((k=i; k<j; k++)); do\n                digit=${1:k:1}\n                sum=$((sum+digit))\n            done\n            if ((sum==j-i)); then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=\"${string:$i:$j}\"\n            sum=$(echo $substr | sed 's/\\(.\\)/\\1 + /g' | bc)\n            if [ $sum -eq ${#substr} ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b'/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmptca49tq1.sh: line 17: bc: command not found\\n/tmp/tmptca49tq1.sh: ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local sum=0\n    local length=0\n    for (( i=0; i<${#string}; i++ )); do\n        for (( j=i+1; j<=${#string}; j++ )); do\n            sum=0\n            length=0\n            for (( k=i; k<j; k++ )); do\n                (( sum+=${string:k:1} ))\n                (( length++ ))\n            done\n            if (( sum == length )); then\n                (( count++ ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local len=${#str}\n    local count=0\n    local i=0\n    while [ $i -lt $len ]; do\n        local j=$i\n        local sum=0\n        while [ $j -lt $len ]; do\n            local ch=${str:$j:1}\n            sum=$((sum + ch))\n            if [ $sum -eq $((j - i + 1)) ]; then\n                count=$((count + 1))\n            fi\n            j=$((j + 1))\n        done\n        i=$((i + 1))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=0\n    local subString=\"\"\n    local digit=0\n    len=${#string}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            subString=${string:i:j}\n            sum=0\n            for (( k=0; k<${#subString}; k++ )); do\n                digit=${subString:k:1}\n                sum=$((sum+digit))\n            done\n            if [[ $sum -eq ${#subString} ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n    for ((i=0; i<length; i++)); do\n        for ((j=i; j<length; j++)); do\n            substr=${string:i:j+1}\n            sum=0\n            for ((k=0; k<${#substr}; k++)); do\n                sum=$((sum + ${substr:k:1}))\n            done\n            if ((sum == ${#substr})); then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local sub=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub=${str:$i:$j}\n            sum=$(echo $sub | sed -e 's/[0-9]//g' | wc -c)\n            if [ $sum -eq 0 ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substring=''\n    for ((i=0; i<length; i++)); do\n        for ((j=i; j<length; j++)); do\n            substring=${string:i:j}\n            sum=0\n            for ((k=0; k<${#substring}; k++)); do\n                sum=$((sum + ${substring:k:1}))\n            done\n            if [ $sum -eq ${#substring} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local digit=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            for ((k=i; k<j; k++)); do\n                digit=${string:k:1}\n                sum=$((sum+digit))\n            done\n            if [ $sum -eq $((j-i)) ]; then\n                count=$((count+1))\n            fi\n            sum=0\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local sub_str=''\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<=len; j++))\n        do\n            sub_str=${str:$i:$j}\n            sum=0\n            for ((k=0; k<${#sub_str}; k++))\n            do\n                sum=$((sum + ${sub_str:$k:1}))\n            done\n            if [ $sum -eq ${#sub_str} ]\n            then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local sub=${str:i:j}\n            local sum=0\n            for (( k=0; k<${#sub}; k++ )); do\n                sum=$(( sum + ${sub:k:1} ))\n            done\n            if [ $sum -eq ${#sub} ]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sum=0\n            for ((k=i; k<j; k++)); do\n                sum=$((sum + ${str:k:1}))\n            done\n            if [ $sum -eq $((j-i)) ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local sub_len=0\n    local sub_str=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub_str=${str:$i:$j}\n            sub_len=${#sub_str}\n            sum=0\n            for ((k=0; k<sub_len; k++)); do\n                sum=$((sum+${sub_str:$k:1}))\n            done\n            if [ $sum -eq $sub_len ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=${string:$i:$j}\n            sum=$(echo $substr | grep -o . | awk '{sum+=$1} END {print sum}')\n            if [[ $sum -eq ${#substr} ]]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n    for (( i=0; i<len; i++ )); do\n        for (( j=i; j<len; j++ )); do\n            substr=${string:i:j}\n            sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                sum=$(( sum + ${substr:k:1} ))\n            done\n            if [[ $sum -eq ${#substr} ]]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub=\"${str:i:j}\"\n            sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                sum=$((sum + ${sub:k:1}))\n            done\n            if [ $sum -eq ${#sub} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local len=${#str}\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local digit=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub=${str:i:j}\n            sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                digit=${sub:k:1}\n                sum=$((sum+digit))\n            done\n            if [ $sum -eq ${#sub} ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local sub_str\n    for (( i=0; i<${#str}; i++ )); do\n        for (( j=i+1; j<=${#str}; j++ )); do\n            sub_str=${str:i:j}\n            sum=0\n            for (( k=0; k<${#sub_str}; k++ )); do\n                sum=$(( sum + ${sub_str:k:1} ))\n            done\n            if [[ $sum -eq ${#sub_str} ]]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local i=0\n    local j=0\n    local sum=0\n    local count=0\n    local len=${#str}\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            sum=$(echo $str | cut -c $((i+1))-$((j+1)) | grep -o . | paste -sd+ | bc)\n            if [ $sum -eq $((j-i+1)) ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: line 16: [: -eq: unary operator expected\\n/tmp/tmpn0jm8rul.sh: line 15: bc: command not found\\n/tmp/tmpn0jm8rul.sh: ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substr=${string:i:j}\n            local sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                sum=$(( sum + ${substr:k:1} ))\n            done\n            if [ $sum -eq ${#substr} ]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=${str:$i:$j}\n            sum=0\n            for ((k=0; k<${#substr}; k++)); do\n                sum=$((sum + ${substr:$k:1}))\n            done\n            if [[ $sum -eq ${#substr} ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local len=${#str}\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local digit=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sum=0\n            for ((k=i; k<j; k++)); do\n                digit=$(echo \"${str:k:1}\" | bc)\n                sum=$((sum+digit))\n            done\n            if [ $sum -eq $((j-i)) ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc: command not found\\n/tmp/tmpb5ltmixj.sh: line 17: bc",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local length=${#string}\n    local count=0\n    for (( i=0; i<$length; i++ )); do\n        for (( j=i+1; j<=$length; j++ )); do\n            local substring=${string:i:j}\n            local sum=0\n            for (( k=0; k<${#substring}; k++ )); do\n                sum=$((sum + ${substring:k:1}))\n            done\n            if [[ $sum -eq ${#substring} ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            substr=\"${string:$i:$j}\"\n            sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                sum=$(( sum + ${substr:$k:1} ))\n            done\n            if [[ $sum -eq ${#substr} ]]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local count=0\n    local len=${#str}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substr=${str:i:j}\n            local sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                (( sum+=${substr:k:1} ))\n            done\n            if (( sum==${#substr} )); then\n                (( count++ ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local sum=0\n    local len=0\n    for (( i=0; i<${#string}; i++ )); do\n        for (( j=i+1; j<=${#string}; j++ )); do\n            substring=${string:$i:$j}\n            for (( k=0; k<${#substring}; k++ )); do\n                sum=$(( $sum + ${substring:$k:1} ))\n            done\n            len=${#substring}\n            if [[ $sum -eq $len ]]; then\n                count=$(( $count + 1 ))\n            fi\n            sum=0\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substr=${str:i:j}\n            local sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                sum=$(( sum + ${substr:k:1} ))\n            done\n            if [[ $sum -eq ${#substr} ]]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substr=${str:$i:$j}\n            local sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                sum=$(( sum + ${substr:$k:1} ))\n            done\n            if (( sum == ${#substr} )); then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=${str:i:j}\n            sum=0\n            for ((k=0; k<${#substr}; k++)); do\n                sum=$((sum + ${substr:k:1}))\n            done\n            if [ $sum -eq ${#substr} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            local sub=\"${string:i:j}\"\n            local sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                sum=$((sum + ${sub:k:1}))\n            done\n            if [[ $sum -eq ${#sub} ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            local substr=${string:i:j}\n            local sum=0\n            for ((k=0; k<${#substr}; k++)); do\n                sum=$((sum + ${substr:k:1}))\n            done\n            if [ $sum -eq ${#substr} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            local sub=${str:i:j}\n            local sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                sum=$((sum + ${sub:k:1}))\n            done\n            if [[ $sum -eq ${#sub} ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local substr\n    local sum\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            substr=${string:i:j}\n            sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                (( sum+=${substr:k:1} ))\n            done\n            if (( sum == ${#substr} )); then\n                (( count++ ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substring=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substring=${string:i:j}\n            sum=$(echo $substring | sed 's/[0-9]//g' | wc -c)\n            if [ $sum -eq 0 ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n\tlocal str=$1\n\tlocal len=${#str}\n\tlocal count=0\n\tlocal i=0\n\tlocal j=0\n\tlocal sum=0\n\tlocal num=0\n\tfor ((i=0; i<len; i++))\n\tdo\n\t\tfor ((j=i+1; j<=len; j++))\n\t\tdo\n\t\t\tnum=${str:i:j}\n\t\t\tsum=0\n\t\t\tfor ((k=0; k<${#num}; k++))\n\t\t\tdo\n\t\t\t\tsum=$((sum+${num:k:1}))\n\t\t\tdone\n\t\t\tif [ $sum -eq ${#num} ]\n\t\t\tthen\n\t\t\t\tcount=$((count+1))\n\t\t\tfi\n\t\tdone\n\tdone\n\techo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=''\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=${string:i:j}\n            sum=$(echo $substr | sed 's/[0-9]//g' | wc -c)\n            if [ $sum -eq 0 ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n\tlocal str=$1\n\tlocal i=0\n\tlocal count=0\n\tlocal sum=0\n\tlocal len=${#str}\n\twhile [ $i -lt $len ]; do\n\t\tlocal j=$i\n\t\twhile [ $j -lt $len ]; do\n\t\t\tlocal sub=${str:$i:$((j-i+1))}\n\t\t\tfor ((k=0; k<${#sub}; k++)); do\n\t\t\t\tsum=$((sum+${sub:$k:1}))\n\t\t\tdone\n\t\t\tif [ $sum -eq ${#sub} ]; then\n\t\t\t\tcount=$((count+1))\n\t\t\tfi\n\t\t\tsum=0\n\t\t\tj=$((j+1))\n\t\tdone\n\t\ti=$((i+1))\n\tdone\n\techo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local sub=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub=\"${str:i:j}\"\n            sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                sum=$((sum + ${sub:k:1}))\n            done\n            if [ $sum -eq ${#sub} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substr=${str:i:j}\n            local sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                sum=$(( sum + ${substr:k:1} ))\n            done\n            if (( sum == ${#substr} )); then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local len=${#str}\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            substr=${str:i:j}\n            sum=$(echo $substr | sed 's/\\(.\\)/\\1 +/g' | bc)\n            if [[ $sum -eq ${#substr} ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n/tmp/tmpt9bjyng8.sh: line 17: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            local sub=${string:i:j}\n            local sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                sum=$((sum + ${sub:k:1}))\n            done\n            if [[ $sum -eq ${#sub} ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local num=0\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<=len; j++))\n        do\n            sub=${str:i:j}\n            sum=0\n            for ((k=0; k<${#sub}; k++))\n            do\n                num=${sub:k:1}\n                sum=$((sum+num))\n            done\n            if [ $sum -eq ${#sub} ]\n            then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sum=0\n            for ((k=i; k<j; k++)); do\n                sum=$((sum+${string:k:1}))\n            done\n            if ((sum==j-i)); then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n  local string=$1\n  local count=0\n  local length=${#string}\n  local i=0\n  local j=0\n  local sum=0\n  local substring=''\n  for ((i=0;i<length;i++)); do\n    for ((j=i;j<length;j++)); do\n      substring=${string:i:j}\n      sum=0\n      for ((k=0;k<${#substring};k++)); do\n        sum=$((sum+${substring:k:1}))\n      done\n      if ((sum==${#substring})); then\n        count=$((count+1))\n      fi\n    done\n  done\n  echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local len=${#str}\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local tmp=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            tmp=${str:i:j}\n            sum=0\n            for ((k=0; k<${#tmp}; k++)); do\n                sum=$((sum + ${tmp:k:1}))\n            done\n            if ((sum == ${#tmp})); then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substring=''\n    for ((i=0; i<length; i++)); do\n        for ((j=i+1; j<=length; j++)); do\n            substring=${string:i:j}\n            sum=$(echo $substring | sed 's/[0-9]//g' | wc -c)\n            if [ $sum -eq 0 ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local length=${#string}\n    local count=0\n    for (( i=0; i<length; i++ )); do\n        for (( j=i+1; j<=length; j++ )); do\n            local substring=${string:i:j}\n            local sum=0\n            for (( k=0; k<${#substring}; k++ )); do\n                sum=$(( sum + ${substring:k:1} ))\n            done\n            if [[ $sum -eq ${#substring} ]]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    while [ $i -lt $len ]; do\n        local j=$i\n        local sum=0\n        while [ $j -lt $len ]; do\n            local char=${string:$j:1}\n            sum=$((sum + char))\n            if [ $sum -eq $((j - i + 1)) ]; then\n                count=$((count + 1))\n            fi\n            j=$((j + 1))\n        done\n        i=$((i + 1))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<=len; j++))\n        do\n            substr=${string:i:j}\n            sum=0\n            for ((k=0; k<${#substr}; k++))\n            do\n                sum=$((sum + ${substr:k:1}))\n            done\n            if ((sum == ${#substr}))\n            then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=\"${string:i:j}\"\n            sum=$(echo \"$substr\" | grep -o . | awk '{sum+=$1} END {print sum}')\n            if [ \"${#substr}\" -eq \"$sum\" ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substring=''\n    for ((i=0; i<length; i++))\n    do\n        for ((j=i+1; j<=length; j++))\n        do\n            substring=${string:$i:$j}\n            sum=0\n            for ((k=0; k<${#substring}; k++))\n            do\n                sum=$((sum+${substring:$k:1}))\n            done\n            if [ $sum -eq ${#substring} ]\n            then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local temp=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            temp=${str:$i:$j}\n            sum=0\n            for ((k=0; k<${#temp}; k++)); do\n                sum=$((sum + ${temp:$k:1}))\n            done\n            if [ $sum -eq ${#temp} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substr=${str:$i:$j}\n            local sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                sum=$(( sum + ${substr:$k:1} ))\n            done\n            if [ $sum -eq ${#substr} ]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local sub=''\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<=len; j++))\n        do\n            sub=${string:i:j}\n            sum=0\n            for ((k=0; k<${#sub}; k++))\n            do\n                sum=$((sum+${sub:k:1}))\n            done\n            if [ $sum -eq ${#sub} ]\n            then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local len=${#str}\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=\"${str:i:j}\"\n            sum=0\n            for ((k=0; k<${#substr}; k++)); do\n                sum=$((sum + ${substr:k:1}))\n            done\n            if [[ $sum -eq ${#substr} ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local -i count=0\n    local -i len=${#1}\n    local -i i=0\n    local -i j=0\n    local -i sum=0\n    local -i digit=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sum=0\n            for ((k=i; k<j; k++)); do\n                digit=${1:k:1}\n                ((sum+=digit))\n            done\n            ((sum==j-i)) && ((count++))\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local len=${#string}\n    local count=0\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substr=${string:i:j}\n            local sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                sum=$(( sum + ${substr:k:1} ))\n            done\n            if [[ $sum -eq ${#substr} ]]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            local sub=${str:i:j}\n            local sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                sum=$((sum+${sub:k:1}))\n            done\n            if [ $sum -eq ${#sub} ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local sum=0\n    local i=0\n    local j=0\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<=len; j++))\n        do\n            sum=0\n            for ((k=i; k<j; k++))\n            do\n                sum=$((sum+${string:k:1}))\n            done\n            if [ $sum -eq $((j-i)) ]\n            then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local sub_len=0\n    local sub_string=\"\"\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub_string=${string:i:j}\n            sub_len=${#sub_string}\n            sum=0\n            for ((k=0; k<sub_len; k++)); do\n                sum=$((sum+${sub_string:k:1}))\n            done\n            if [ $sum -eq $sub_len ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local temp=0\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<=len; j++))\n        do\n            temp=${string:$i:$j}\n            sum=0\n            for ((k=0; k<${#temp}; k++))\n            do\n                sum=$((sum+${temp:$k:1}))\n            done\n            if [ $sum -eq ${#temp} ]\n            then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local i=0\n    local j=0\n    local len=${#string}\n    local sum=0\n    local num=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            num=\"${string:i:j}\"\n            sum=0\n            for ((k=0; k<${#num}; k++)); do\n                sum=$((sum + ${num:k:1}))\n            done\n            if [[ $sum -eq ${#num} ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local count=0\n\n    for (( i=0; i<${#str}; i++ )); do\n        for (( j=i; j<${#str}; j++ )); do\n            local sum=0\n            for (( k=i; k<=j; k++ )); do\n                (( sum+=${str:k:1} ))\n            done\n            (( sum==j-i+1 )) && (( count++ ))\n        done\n    done\n\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substring=''\n    for ((i=0; i<length; i++)); do\n        for ((j=i+1; j<=length; j++)); do\n            substring=${string:i:j}\n            sum=0\n            for ((k=0; k<${#substring}; k++)); do\n                sum=$((sum + ${substring:k:1}))\n            done\n            if [ $sum -eq ${#substring} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=${str:i:j}\n            sum=0\n            for ((k=0; k<${#substr}; k++)); do\n                sum=$((sum + ${substr:k:1}))\n            done\n            if [ $sum -eq ${#substr} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substr=\"${string:i:j}\"\n            local sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                sum=$((sum+${substr:k:1}))\n            done\n            if (( sum == ${#substr} )); then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    while [ $i -lt $len ]\n    do\n        local j=$i\n        local sum=0\n        while [ $j -lt $len ]\n        do\n            local char=${str:$j:1}\n            sum=$((sum+char))\n            if [ $sum -eq $((j-i+1)) ]\n            then\n                count=$((count+1))\n            fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substr=${string:i:j}\n            local sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                sum=$(( sum + ${substr:k:1} ))\n            done\n            if [[ $sum -eq ${#substr} ]]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n  local str=$1\n  local count=0\n  local len=${#str}\n  local i=0\n  local j=0\n  local sum=0\n  local sub=''\n\n  for (( i=0; i<len; i++ )); do\n    for (( j=i; j<len; j++ )); do\n      sub=${str:i:j+1}\n      sum=$(echo $sub | grep -o . | awk '{sum+=$1} END {print sum}')\n      if [ $sum -eq ${#sub} ]; then\n        (( count++ ))\n      fi\n    done\n  done\n  echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sum=0\n            for ((k=i; k<j; k++)); do\n                sum=$((sum + ${str:k:1}))\n            done\n            if [ $sum -eq $((j-i)) ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substr=${string:$i:$j}\n            local sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                sum=$(( sum + ${substr:$k:1} ))\n            done\n            if [ $sum -eq ${#substr} ]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local length=${#string}\n    for (( i=0; i<$length; i++ )); do\n        for (( j=$i+1; j<=$length; j++ )); do\n            local substring=${string:$i:$j}\n            local sum=0\n            for (( k=0; k<${#substring}; k++ )); do\n                sum=$(( sum + ${substring:$k:1} ))\n            done\n            if [[ $sum -eq ${#substring} ]]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substring=${string:i:j}\n            local sum=0\n            for (( k=0; k<${#substring}; k++ )); do\n                sum=$(( sum + ${substring:k:1} ))\n            done\n            if (( sum == ${#substring} )); then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    for (( i=0; i<$length; i++ )); do\n        for (( j=$i+1; j<=$length; j++ )); do\n            local substring=${string:$i:$j}\n            local sum=0\n            for (( k=0; k<${#substring}; k++ )); do\n                local digit=${substring:$k:1}\n                sum=$(( $sum + $digit ))\n            done\n            if [ $sum -eq ${#substring} ]; then\n                count=$(( $count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local sub=''\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i; j<len; j++))\n        do\n            sub=${string:i:j}\n            sum=0\n            for ((k=0; k<${#sub}; k++))\n            do\n                sum=$((sum + ${sub:k:1}))\n            done\n            if [ $sum -eq ${#sub} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=0\n    local sub=''\n    len=${#str}\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            sub=${str:i:j+1}\n            sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                sum=$((sum + ${sub:k:1}))\n            done\n            if [ $sum -eq ${#sub} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local -i count=0\n    local -i len=${#1}\n    local -i i=0\n    local -i j=0\n    local -i sum=0\n    local -i digit=0\n    local -i num=0\n    local -i temp=0\n    local -i temp2=0\n    local -i temp3=0\n    local -i temp4=0\n    local -i temp5=0\n    local -i temp6=0\n    local -i temp7=0\n    local -i temp8=0\n    local -i temp9=0\n    local -i temp10=0\n    local -i temp11=0\n    local -i temp12=0\n    local -i temp13=0\n    local -i temp14=0\n    local -i temp15=0\n    local -i temp16=0\n    local -i temp17=0\n    local -i temp18=0\n    local -i temp19=0\n    local -i temp20=0\n    local -i temp21=0\n    local -i temp22=0\n    local -i temp23=0\n    local -i temp24=0\n    local -i temp25=0\n    local -i temp26=0\n    local -i temp27=0\n    local -i temp28=0\n    local -i temp29=0\n    local -i temp30=0\n    local -i temp31=0\n    local -i temp32=0\n    local -i temp33=0\n    local -i temp34=0\n    local -i temp35=0\n    local -i temp36=0\n    local -i temp37=0\n    local -i temp38=0\n    local -i temp39=0\n    local -i temp40=0\n    local -i temp41=0\n    local -i temp42=0\n    local -i temp43=0\n    local -i temp44=0\n    local -i temp45=0\n    local -i temp46=0\n    local -i temp47=0\n    local -i temp48=0\n    local -i temp49=0\n    local -i temp50=0\n    local -\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local sub=${str:i:j}\n            local sum=0\n            for (( k=0; k<${#sub}; k++ )); do\n                sum=$((sum + ${sub:k:1}))\n            done\n            if [[ $sum -eq ${#sub} ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n  echo \"$1\" | grep -o '[0-9]*' | grep -c '^[0-9]\\{${#MATCH}\\}$'\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b'grep: Invalid content of \\\\{\\\\}\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substring=${string:i:j}\n            local sum=0\n            for (( k=0; k<${#substring}; k++ )); do\n                sum=$(( sum + ${substring:k:1} ))\n            done\n            if [ $sum -eq ${#substring} ]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substring=\"\"\n\n    for ((i=0; i<length; i++)); do\n        for ((j=i+1; j<=length; j++)); do\n            substring=${string:i:j}\n            sum=$(echo $substring | grep -o . | awk '{sum+=$1} END {print sum}')\n            if [ $sum -eq ${#substring} ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=${str:i:j}\n            sum=$(echo $substr | sed 's/[0-9]//g' | wc -c)\n            if [ $sum -eq 0 ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=0\n    local subString=''\n\n    len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            subString=${string:i:j}\n            sum=0\n            for ((k=0; k<${#subString}; k++)); do\n                sum=$((sum + ${subString:k:1}))\n            done\n            if [ $sum -eq ${#subString} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n  local -i count=0\n  local -i len=${#1}\n  local -i i=0\n  local -i j=0\n  local -i sum=0\n  local -i digit=0\n  local -i sublen=0\n  local -i sublen_sum=0\n  local -i sublen_digit=0\n  local -i sublen_digit_sum=0\n  local -i sublen_digit_sum_len=0\n  local -i sublen_digit_sum_len_count=0\n  local -i sublen_digit_sum_len_count_count=0\n  local -i sublen_digit_sum_len_count_count_count=0\n  local -i sublen_digit_sum_len_count_count_count_count=0\n  local -i sublen_digit_sum_len_count_count_count_count_count=0\n  local -i sublen_digit_sum_len_count_count_count_count_count_count=0\n  local -i sublen_digit_sum_len_count_count_count_count_count_count_count=0\n  local -i sublen_digit_sum_len_count_count_count_count_count_count_count_count=0\n  local -i sublen_digit_sum_len_count_count_count_count_count_count_count_count_count=0\n  local -i sublen_digit_sum_len_count_count_count_count_count_count_count_count_count_count=0\n  local -i sublen_digit_sum_len_count_count_count_count_count_count_count_count_count_count_count=0\n  local -i sublen_digit_sum_len_count_count_count_count_count_count_count_count_count_count_count_count=0\n  local -i sublen_digit_sum_len_count_count_count_count_count_count_count_count_count_count_count_count_count=0\n  local -i sublen_digit_sum_len_count_count_count_count_count_count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local sum=0\n    local len=0\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local temp_str=''\n    local temp_str2=''\n    local temp_str3=''\n    local temp_str4=''\n    local temp_str5=''\n    local temp_str6=''\n    local temp_str7=''\n    local temp_str8=''\n    local temp_str9=''\n    local temp_str10=''\n    local temp_str11=''\n    local temp_str12=''\n    local temp_str13=''\n    local temp_str14=''\n    local temp_str15=''\n    local temp_str16=''\n    local temp_str17=''\n    local temp_str18=''\n    local temp_str19=''\n    local temp_str20=''\n    local temp_str21=''\n    local temp_str22=''\n    local temp_str23=''\n    local temp_str24=''\n    local temp_str25=''\n    local temp_str26=''\n    local temp_str27=''\n    local temp_str28=''\n    local temp_str29=''\n    local temp_str30=''\n    local temp_str31=''\n    local temp_str32=''\n    local temp_str33=''\n    local temp_str34=''\n    local temp_str35=''\n    local temp_str36=''\n    local temp_str37=''\n    local temp_str38=''\n    local temp_str39=''\n    local temp_str40=''\n    local temp_str41=''\n    local temp_str42=''\n    local temp_str43=''\n    local temp_str44=''\n    local temp_str45=''\n    local temp_str46=''\n    local temp_str47=''\n    local temp_str48=''\n    local temp_str49=''\n    local temp_str50=''\n    local temp_str51=''\n    local temp_str\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=''\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=\"${string:i:j}\"\n            sum=0\n            for ((k=0; k<${#substr}; k++)); do\n                sum=$((sum+${substr:k:1}))\n            done\n            if [[ ${#substr} -eq $sum ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substr=${string:i:j}\n            local sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                (( sum+=${substr:k:1} ))\n            done\n            if (( sum == ${#substr} )); then\n                (( count++ ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=''\n    for ((i=0; i<length; i++))\n    do\n        for ((j=i+1; j<=length; j++))\n        do\n            substr=${string:$i:$j}\n            sum=$(echo $substr | grep -o . | awk '{sum+=$1} END {print sum}')\n            if [ $sum -eq $j ]\n            then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sum=0\n            for ((k=i; k<j; k++)); do\n                sum=$((sum + ${string:k:1}))\n            done\n            if [ $sum -eq $((j-i)) ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local len=${#str}\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local num=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub=${str:i:j}\n            for ((k=0; k<${#sub}; k++)); do\n                num=${sub:k:1}\n                sum=$((sum + num))\n            done\n            if [ $sum -eq ${#sub} ]; then\n                count=$((count + 1))\n            fi\n            sum=0\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=${#str}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub=${str:i:j}\n            sum=$(echo $sub | sed 's/[0-9]//g' | wc -m)\n            if [ $sum -eq 0 ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n    for ((i=0;i<len;i++)); do\n        for ((j=i;j<len;j++)); do\n            substr=${str:i:j}\n            sum=$(echo $substr | sed 's/[0-9]//g' | wc -c)\n            if [ $sum -eq 0 ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local substr=''\n    local sum=0\n    local len=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n   \n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    for (( i=0; i<$length; i++ )); do\n        for (( j=i+1; j<=$length; j++ )); do\n            local substring=${string:$i:$j}\n            local sum=0\n            for (( k=0; k<${#substring}; k++ )); do\n                sum=$(( sum + ${substring:$k:1} ))\n            done\n            if [[ $sum -eq ${#substring} ]]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=${string:i:j}\n            sum=$(echo $substr | grep -o . | awk '{s+=$1} END {print s}')\n            if [ $sum -eq ${#substr} ]; then\n                ((count++))\n            fi\n        done\n    done\n\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local -i count=0\n    local -i len=${#1}\n    local -i i=0\n    local -i j=0\n    local -i sum=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sum=0\n            for ((k=i; k<j; k++)); do\n                ((sum+=${1:k:1}))\n            done\n            if ((sum==j-i)); then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    for (( i=0; i<=$((length-1)); i++ )); do\n        for (( j=$((i+1)); j<=$((length)); j++ )); do\n            local substring=${string:$i:$j}\n            local sum=0\n            for (( k=0; k<${#substring}; k++ )); do\n                (( sum+=${substring:$k:1} ))\n            done\n            if (( sum == ${#substring} )); then\n                (( count++ ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local temp=0\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i; j<len; j++))\n        do\n            temp=${str:i:j}\n            sum=0\n            for ((k=0; k<${#temp}; k++))\n            do\n                sum=$((sum+${temp:k:1}))\n            done\n            if [ $sum -eq ${#temp} ]\n            then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local sum=0\n    local len=0\n    local i=0\n    local j=0\n    local k=0\n    local substr=\"\"\n    local ch=\"\"\n    local ch_num=0\n\n    len=${#str}\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            substr=${str:$i:$j}\n            sum=0\n            for ((k=0; k<${#substr}; k++)); do\n                ch=${substr:$k:1}\n                ch_num=$(echo $ch | od -An -tuC)\n                sum=$((sum+ch_num))\n            done\n            if [[ $sum -eq ${#substr} ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpd7fc5k3b.sh: line 25: 49  10: syntax error in expression (error token is \"10\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    for (( i=0; i<len; i++ )); do\n        for (( j=i; j<len; j++ )); do\n            sum=$(echo ${string:$i:$j} | sed 's/[^0-9]//g' | grep -o . | paste -sd+ | bc)\n            if [ $sum -eq ${#string:$i:$j} ]; then\n                (( count++ ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpu90kszx_.sh: line 14: bc: command not found\\n/tmp/tmpu90kszx_.sh: line 15: ${#string:$i:$j}: bad substitution\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local sub_str=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub_str=${string:i:j}\n            sum=$(echo $sub_str | sed 's/[0-9]//g' | wc -c)\n            if [ $sum -eq 0 ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substring=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            substring=${string:i:j+1}\n            sum=0\n            for ((k=0; k<${#substring}; k++)); do\n                sum=$((sum + ${substring:k:1}))\n            done\n            if ((sum == ${#substring})); then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local len=${#str}\n    local count=0\n    local i=0\n    while [ $i -lt $len ]; do\n        local j=$i\n        local sum=0\n        while [ $j -lt $len ]; do\n            local ch=${str:$j:1}\n            sum=$((sum+ch))\n            if [ $sum -eq $((j-i+1)) ]; then\n                count=$((count+1))\n            fi\n            j=$((j+1))\n        done\n        i=$((i+1))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=0\n    for (( i=0; i<${#string}; i++ )); do\n        for (( j=i+1; j<=${#string}; j++ )); do\n            sum=0\n            len=0\n            for (( k=i; k<j; k++ )); do\n                (( sum+=${string:$k:1} ))\n                (( len++ ))\n            done\n            if (( sum == len )); then\n                (( count++ ))\n            fi\n        done\n    done\n    echo \"$count\"\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local sub_string=''\n\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<=len; j++))\n        do\n            sub_string=${string:$i:$j}\n            sum=$(echo $sub_string | sed 's/[0-9]//g' | wc -c)\n            if [ $sum -eq 0 ]\n            then\n                count=$((count+1))\n            fi\n        done\n    done\n\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local sub=0\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub=${string:i:j}\n            sum=$(echo $sub | grep -o . | awk '{s+=$1} END {print s}')\n            if [ $sum -eq ${#sub} ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=0\n    local sub=0\n\n    len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub=${string:i:j}\n            sum=$(echo $sub | sed 's/[0-9]//g' | wc -c)\n            if [ $sum -eq 0 ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local num=0\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<=len; j++))\n        do\n            sub=${str:i:j}\n            sum=0\n            for ((k=0; k<${#sub}; k++))\n            do\n                num=${sub:k:1}\n                sum=$((sum+num))\n            done\n            if [ $sum -eq ${#sub} ]\n            then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local tmp=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            tmp=${str:i:j+1}\n            sum=0\n            for ((k=0; k<${#tmp}; k++)); do\n                sum=$((sum + ${tmp:k:1}))\n            done\n            if [ $sum -eq ${#tmp} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substr=${string:i:j}\n            local sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                local char=${substr:k:1}\n                sum=$(( sum + char ))\n            done\n            if [[ $sum -eq ${#substr} ]]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local substring=''\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            substring=${str:$i:$j}\n            sum=$(echo $substring | sed 's/[0-9]//g' | wc -c)\n            if [ $sum -eq 0 ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local sub=''\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            sub=${string:$i:$j}\n            sum=$(echo $sub | grep -o . | awk '{sum+=$1} END {print sum}')\n            if [ $sum -eq ${#sub} ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local sub=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub=${str:i:j}\n            sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                sum=$((sum + ${sub:k:1}))\n            done\n            if [ $sum -eq ${#sub} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substr=${string:i:j}\n            local sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                sum=$(( sum + ${substr:k:1} ))\n            done\n            if [ $sum -eq ${#substr} ]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local substr=${string:i:j}\n            local sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                sum=$(( sum + ${substr:k:1} ))\n            done\n            if [ $sum -eq ${#substr} ]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local substr=''\n    local sum=0\n    local len=0\n    for (( i=0; i<${#string}; i++ )); do\n        for (( j=i+1; j<=${#string}; j++ )); do\n            substr=${string:$i:$j}\n            sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                sum=$(( $sum + ${substr:$k:1} ))\n            done\n            if [ $sum -eq ${#substr} ]; then\n                count=$(( $count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<=len; j++))\n        do\n            sub=${str:i:j}\n            sum=$(echo $sub | grep -o . | awk '{sum+=$1} END {print sum}')\n            if [ $sum -eq ${#sub} ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local -i count=0\n    local -i len=${#1}\n    local -i i=0\n    local -i j=0\n    local -i sum=0\n    local -i digit=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sum=0\n            for ((k=i; k<j; k++)); do\n                digit=${1:k:1}\n                ((sum+=digit))\n            done\n            ((sum==j-i)) && ((count++))\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sum=0\n            for ((k=i; k<j; k++)); do\n                sum=$((sum + ${string:k:1}))\n            done\n            if [ $((j-i)) -eq $sum ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local i=0\n    local len=${#string}\n    local sum=0\n    local substr=\"\"\n\n    while [ $i -lt $len ]; do\n        j=$i\n        sum=0\n        while [ $j -lt $len ]; do\n            substr=${string:$i:$((j - i + 1))}\n            sum=$((sum + substr))\n            if [ ${#substr} -eq $sum ]; then\n                count=$((count + 1))\n            fi\n            j=$((j + 1))\n        done\n        i=$((i + 1))\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=${str:i:j}\n            sum=$(echo $substr | grep -o [0-9] | paste -sd+ | bc)\n            if [[ $sum -eq ${#substr} ]]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n/tmp/tmpk69exwue.sh: line 16: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local sub=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            sub=${str:i:j+1}\n            sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                sum=$((sum+${sub:k:1}))\n            done\n            if [[ $sum -eq ${#sub} ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local sum=0\n    local len=0\n    for (( i=0; i<${#string}; i++ )); do\n        for (( j=i+1; j<=${#string}; j++ )); do\n            substring=${string:i:j}\n            sum=0\n            len=${#substring}\n            for (( k=0; k<${#substring}; k++ )); do\n                sum=$(( sum + ${substring:k:1} ))\n            done\n            if [ $sum -eq $len ]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local len=${#str}\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local tmp=0\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<=len; j++))\n        do\n            tmp=${str:i:j}\n            sum=0\n            for ((k=0; k<${#tmp}; k++))\n            do\n                sum=$((sum+${tmp:k:1}))\n            done\n            if [ $sum -eq ${#tmp} ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=0\n    local sub=''\n    local ch=''\n    local ch_int=0\n\n    len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            sub=${string:i:j}\n            sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                ch=${sub:k:1}\n                ch_int=$(printf \"%d\" \"'$ch\")\n                if ((ch_int >= 48 && ch_int <= 57)); then\n                    sum=$((sum + ch_int - 48))\n                fi\n            done\n            if ((sum == ${#sub})); then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local sub=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub=${str:i:j}\n            sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                sum=$((sum + ${sub:k:1}))\n            done\n            if [ $sum -eq ${#sub} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substring=''\n\n    for ((i=0; i<length; i++)); do\n        for ((j=i+1; j<=length; j++)); do\n            substring=${string:i:j}\n            sum=0\n            for ((k=0; k<${#substring}; k++)); do\n                sum=$((sum + ${substring:k:1}))\n            done\n            if [ $sum -eq ${#substring} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub=${string:i:j}\n            sum=$(echo $sub | grep -o . | awk '{s+=$1} END {print s}')\n            if [ $sum -eq ${#sub} ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            local sub=${str:i:j}\n            local sum=0\n            for ((k=0; k<${#sub}; k++)); do\n                sum=$((sum + ${sub:k:1}))\n            done\n            if [[ $sum -eq ${#sub} ]]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=\"${string:$i:$j}\"\n            sum=$(echo $substr | grep -o . | awk '{sum+=$1} END {print sum}')\n            if [ $sum -eq ${#substr} ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=${#string}\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sum=0\n            for ((k=i; k<j; k++)); do\n                sum=$((sum+${string:k:1}))\n            done\n            if [[ $((j-i)) -eq $sum ]]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    for (( i=0; i<$length; i++ )); do\n        for (( j=i+1; j<=$length; j++ )); do\n            local substring=${string:$i:$j}\n            local sum=0\n            for (( k=0; k<${#substring}; k++ )); do\n                sum=$(( $sum + ${substring:$k:1} ))\n            done\n            if [ $sum -eq ${#substring} ]; then\n                count=$(( $count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    local sum=0\n    for (( i=0; i<$length; i++ )); do\n        for (( j=$i; j<$length; j++ )); do\n            sum=0\n            for (( k=$i; k<=$j; k++ )); do\n                sum=$(( $sum + ${string:$k:1} ))\n            done\n            if [ $sum -eq $(( $j - $i + 1 )) ]; then\n                count=$(( $count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n  local string=$1\n  local count=0\n  local i=0\n  local j=0\n  local sum=0\n  local len=${#string}\n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<=len; j++)); do\n      substring=${string:$i:$j}\n      sum=$(echo $substring | sed 's/[0-9]//g' | wc -c)\n      if [ $sum -eq 0 ]; then\n        count=$((count+1))\n      fi\n    done\n  done\n  echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substr=${string:$i:$j}\n            sum=$(echo $substr | sed -e 's/[0-9]/& /g' | awk '{sum=0; for (i=1; i<=NF; i++) sum+=$i; print sum}')\n            if [[ $sum -eq ${#substr} ]]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            sum=$(echo $str | cut -c $((i+1))-$((j+1)) | sed 's/[0-9]//g' | wc -c)\n            if [ $sum -eq 0 ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n\tlocal str=\"$1\"\n\tlocal len=${#str}\n\tlocal count=0\n\tlocal i=0\n\tlocal j=0\n\tlocal sum=0\n\tfor (( i=0; i<len; i++ )); do\n\t\tfor (( j=i+1; j<=len; j++ )); do\n\t\t\tsum=0\n\t\t\tfor (( k=i; k<j; k++ )); do\n\t\t\t\tsum=$(( sum + ${str:k:1} ))\n\t\t\tdone\n\t\t\tif [ $(( j-i )) -eq $sum ]; then\n\t\t\t\tcount=$(( count + 1 ))\n\t\t\tfi\n\t\tdone\n\tdone\n\techo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=\"\"\n    for ((i=0; i<length; i++)); do\n        for ((j=i+1; j<=length; j++)); do\n            substr=${string:i:j}\n            sum=$(echo $substr | sed 's/[0-9]//g' | wc -c)\n            if [ $sum -eq 0 ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local digit=0\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            sum=0\n            for (( k=i; k<j; k++ )); do\n                digit=${str:k:1}\n                sum=$((sum+digit))\n            done\n            if (( sum == j-i )); then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local substr\n    for (( i=0; i<${#string}; i++ )); do\n        for (( j=i+1; j<=${#string}; j++ )); do\n            substr=${string:$i:$j}\n            if [[ $substr =~ ^[0-9]+$ ]]; then\n                local sum=0\n                for (( k=0; k<${#substr}; k++ )); do\n                    sum=$(( sum + ${substr:$k:1} ))\n                done\n                if [[ $sum -eq ${#substr} ]]; then\n                    count=$(( count + 1 ))\n                fi\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local num=0\n    local substr=\"\"\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            substr=\"${string:$i:$j}\"\n            sum=0\n            for (( k=0; k<${#substr}; k++ )); do\n                num=\"${substr:$k:1}\"\n                sum=$((sum+num))\n            done\n            if [ $sum -eq ${#substr} ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n  local str=\"$1\"\n  local len=${#str}\n  local count=0\n  local i=0\n  local j=0\n  local sum=0\n  local digit=0\n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<=len; j++)); do\n      sum=0\n      for ((k=i; k<j; k++)); do\n        digit=${str:k:1}\n        ((sum+=digit))\n      done\n      if ((sum==j-i)); then\n        ((count++))\n      fi\n    done\n  done\n  echo \"$count\"\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for (( i=0; i<len; i++ )); do\n        for (( j=i+1; j<=len; j++ )); do\n            local sub=${string:i:j}\n            local sum=0\n            for (( k=0; k<${#sub}; k++ )); do\n                sum=$((sum+${sub:k:1}))\n            done\n            if [ $sum -eq ${#sub} ]; then\n                count=$((count+1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            local substring=${string:i:j}\n            local sum=0\n            for ((k=0; k<${#substring}; k++)); do\n                sum=$((sum + ${substring:k:1}))\n            done\n            if [ $sum -eq ${#substring} ]; then\n                count=$((count + 1))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=\"$1\"\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substring=''\n    for ((i=0; i<len; i++)); do\n        for ((j=i; j<len; j++)); do\n            substring=${string:i:j}\n            sum=$(echo $substring | sed -e 's/\\(.\\)/\\1 + /g' | sed -e 's/ + $//')\n            if [ $((sum)) -eq ${#substring} ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local length=${#string}\n    for (( i=0; i<$length; i++ )); do\n        for (( j=i+1; j<=$length; j++ )); do\n            local substring=${string:$i:$j}\n            local sum=0\n            for (( k=0; k<${#substring}; k++ )); do\n                sum=$(( sum + ${substring:$k:1} ))\n            done\n            if [[ $sum -eq ${#substring} ]]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=\"$1\"\n    local count=0\n    local len=${#str}\n    for (( i = 0; i < len; i++ )); do\n        for (( j = i + 1; j <= len; j++ )); do\n            local substr=${str:i:j}\n            local sum=0\n            for (( k = 0; k < ${#substr}; k++ )); do\n                sum=$(( sum + ${substr:k:1} ))\n            done\n            if [[ $sum -eq ${#substr} ]]; then\n                count=$(( count + 1 ))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local len=${#string}\n    local i=0\n    local j=0\n    local sum=0\n    local substr=''\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<=len; j++))\n        do\n            substr=${string:$i:$j}\n            sum=$(echo $substr | grep -o . | awk '{s+=$1} END {print s}')\n            if [ $sum -eq ${#substr} ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local str=$1\n    local count=0\n    local len=${#str}\n    local i=0\n    local j=0\n    local sum=0\n    local sub=0\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            sub=${str:i:j}\n            sum=$(echo $sub | sed 's/[^0-9]//g' | grep -o . | paste -sd+ | bc)\n            if [ $sum -eq ${#sub} ]; then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: line 18: [: -eq: unary operator expected\\n/tmp/tmpm_5uin7b.sh: line 17: bc: command not found\\n/tmp/tmpm_5uin7b.sh: ",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to count the number of substrings with the sum of digits equal to their length.\n#\n# $1 is a string\ncount_Substrings() {\n    local string=$1\n    local count=0\n    local i=0\n    local j=0\n    local sum=0\n    local len=${#string}\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<=len; j++)); do\n            substring=${string:i:j}\n            sum=0\n            for ((k=0; k<${#substring}; k++)); do\n                ((sum+=${substring:k:1}))\n            done\n            if ((sum==${#substring})); then\n                ((count++))\n            fi\n        done\n    done\n    echo $count\n}\n\ncandidate() {\n    count_Substrings \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"112112\") = \"6\" ]]\n    [[ $(candidate \"111\") = \"6\" ]]\n    [[ $(candidate \"1101112\") = \"12\" ]]\n}\n\nrun_test",
      "timestamp": 1667191206,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_79_word_len",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to check whether the length of the word is odd or not.\n#\n# $1 is a string\nword_len() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_79_word_len.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    word_len \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"Hadoop\") = \"false\" ]]\n    [[ $(candidate \"great\") = \"true\" ]]\n    [[ $(candidate \"structure\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    echo \"The length of the word is: ${#1}\"",
    "    echo ${#1}",
    "  echo \"The length of the word is: ${#1}\"",
    "    echo ${#1}",
    "    echo ${#1}",
    "    local word=$1\n    local len=${#word}\n    if [ $((len%2)) -eq 0 ]; then\n        echo \"$word is even\"\n    else\n        echo \"$word is odd\"\n    fi",
    "    echo ${#1}",
    "    echo ${#1}",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <word>\"\n        return 1\n    fi\n    if [ $((${#1} % 2)) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 word\"\n        exit 1\n    fi\n    if [ ${#1} -eq 0 ]; then\n        echo \"Usage: $0 word\"\n        exit 1\n    fi\n    if [ $((${#1} % 2)) -eq 0 ]; then\n        echo \"even\"\n    else\n        echo \"odd\"\n    fi",
    "    echo ${#1}",
    "    echo ${#1}",
    "  echo ${#1}",
    "    echo ${#1}",
    "    echo ${#1}",
    "    echo ${#1}",
    "    echo ${#1}",
    "    if [ -z \"$1\" ]; then\n        echo \"Usage: $0 <word>\"\n        return 1\n    fi\n\n    if [ $((${#1} % 2)) -eq 0 ]; then\n        echo \"Even\"\n    else\n        echo \"Odd\"\n    fi",
    "    echo ${#1}",
    "    if [ $(echo $1 | wc -c) -eq 1 ]; then\n        echo \"The length of the word is 1\"\n    else\n        echo \"The length of the word is not 1\"\n    fi"
  ]
}
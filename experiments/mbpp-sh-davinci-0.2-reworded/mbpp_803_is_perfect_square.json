{
  "name": "mbpp_803_is_perfect_square",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n#\n# $1 is an integer\nis_perfect_square() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    is_perfect_square \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"36\") = \"true\" ]]\n    [[ $(candidate \"14\") = \"false\" ]]\n    [[ $(candidate \"196\") = \"true\" ]]\n    [[ $(candidate \"125\") = \"false\" ]]\n    [[ $(candidate \"15625\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    if [ $sqrt_int -eq $sqrt ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [ \"$sqrt_dec\" -eq 0 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local sqrt=$(echo \"sqrt($n)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec != 0 ]]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "\tlocal sqrt=$(bc <<< \"sqrt($1)\")\n\tlocal sqrt_int=$(bc <<< \"$sqrt % 1\")\n\tif [ \"$sqrt_int\" == \"0\" ]; then\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [[ $sqrt_dec -eq 0 ]]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" = \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local sqrt=$(echo \"sqrt($1)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"Perfect square\"\n    else\n        echo \"Not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  if [ $# -ne 1 ]; then\n    echo \"Usage: $0 <integer>\"\n    return 1\n  fi\n  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n  if [ $sqrt_int -eq $sqrt ]; then\n    echo \"$num is a perfect square\"\n  else\n    echo \"$num is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    if [ $sqrt_int -eq $sqrt ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local sqrt_of_num=$(echo \"sqrt($1)\" | bc)\n    local square_of_sqrt=$(echo \"$sqrt_of_num * $sqrt_of_num\" | bc)\n    if [ $square_of_sqrt -eq $1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  if [ $# -ne 1 ]; then\n    echo \"Usage: $0 <integer>\"\n    exit 1\n  fi\n\n  if [ $1 -lt 0 ]; then\n    echo \"Error: $1 is negative\"\n    exit 1\n  fi\n\n  if [ $1 -eq 0 ]; then\n    echo \"Error: $1 is zero\"\n    exit 1\n  fi\n\n  if [ $1 -eq 1 ]; then\n    echo \"Error: $1 is one\"\n    exit 1\n  fi\n\n  local sqrt=$(echo \"sqrt($1)\" | bc -l)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n\n  if [ $sqrt_dec -eq 0 ]; then\n    echo \"$1 is a perfect square\"\n  else\n    echo \"$1 is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    if [ $sqrt_number_int -eq $sqrt_number ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d \".\" -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d \".\" -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_decimal=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_decimal\" != \"0\" ]; then\n        return 1\n    fi\n    local sqrt_square=$(echo \"$sqrt_int * $sqrt_int\" | bc)\n    if [ \"$sqrt_square\" -eq \"$num\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    if [[ $1 -eq 0 || $1 -eq 1 ]]; then\n        echo \"true\"\n        return 0\n    fi\n    local i=1\n    while [[ $((i*i)) -le $1 ]]; do\n        if [[ $((i*i)) -eq $1 ]]; then\n            echo \"true\"\n            return 0\n        fi\n        ((i++))\n    done\n    echo \"false\"\n    return 1",
    "\tlocal number=$1\n\tlocal sqrt=$(echo \"sqrt($number)\" | bc)\n\tlocal sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n\tlocal sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n\tif [ \"$sqrt_dec\" == \"0\" ]; then\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"ERROR: $1 is not a positive integer\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [[ $sqrt_dec -eq 0 ]]; then\n        echo \"$1 is a perfect square\"\n    else\n        echo \"$1 is not a perfect square\"\n    fi"
  ]
}
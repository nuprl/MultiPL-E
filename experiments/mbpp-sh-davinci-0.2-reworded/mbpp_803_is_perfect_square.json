{
  "name": "mbpp_803_is_perfect_square",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n#\n# $1 is an integer\nis_perfect_square() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    is_perfect_square \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"36\") = \"true\" ]]\n    [[ $(candidate \"14\") = \"false\" ]]\n    [[ $(candidate \"196\") = \"true\" ]]\n    [[ $(candidate \"125\") = \"false\" ]]\n    [[ $(candidate \"15625\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    if [ $sqrt_int -eq $sqrt ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [ \"$sqrt_dec\" -eq 0 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local sqrt=$(echo \"sqrt($n)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec != 0 ]]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "\tlocal sqrt=$(bc <<< \"sqrt($1)\")\n\tlocal sqrt_int=$(bc <<< \"$sqrt % 1\")\n\tif [ \"$sqrt_int\" == \"0\" ]; then\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [[ $sqrt_dec -eq 0 ]]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" = \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local sqrt=$(echo \"sqrt($1)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"Perfect square\"\n    else\n        echo \"Not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  if [ $# -ne 1 ]; then\n    echo \"Usage: $0 <integer>\"\n    return 1\n  fi\n  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n  if [ $sqrt_int -eq $sqrt ]; then\n    echo \"$num is a perfect square\"\n  else\n    echo \"$num is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    if [ $sqrt_int -eq $sqrt ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local sqrt_of_num=$(echo \"sqrt($1)\" | bc)\n    local square_of_sqrt=$(echo \"$sqrt_of_num * $sqrt_of_num\" | bc)\n    if [ $square_of_sqrt -eq $1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  if [ $# -ne 1 ]; then\n    echo \"Usage: $0 <integer>\"\n    exit 1\n  fi\n\n  if [ $1 -lt 0 ]; then\n    echo \"Error: $1 is negative\"\n    exit 1\n  fi\n\n  if [ $1 -eq 0 ]; then\n    echo \"Error: $1 is zero\"\n    exit 1\n  fi\n\n  if [ $1 -eq 1 ]; then\n    echo \"Error: $1 is one\"\n    exit 1\n  fi\n\n  local sqrt=$(echo \"sqrt($1)\" | bc -l)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n\n  if [ $sqrt_dec -eq 0 ]; then\n    echo \"$1 is a perfect square\"\n  else\n    echo \"$1 is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    if [ $sqrt_number_int -eq $sqrt_number ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d \".\" -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d \".\" -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_decimal=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_decimal\" != \"0\" ]; then\n        return 1\n    fi\n    local sqrt_square=$(echo \"$sqrt_int * $sqrt_int\" | bc)\n    if [ \"$sqrt_square\" -eq \"$num\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    if [[ $1 -eq 0 || $1 -eq 1 ]]; then\n        echo \"true\"\n        return 0\n    fi\n    local i=1\n    while [[ $((i*i)) -le $1 ]]; do\n        if [[ $((i*i)) -eq $1 ]]; then\n            echo \"true\"\n            return 0\n        fi\n        ((i++))\n    done\n    echo \"false\"\n    return 1",
    "\tlocal number=$1\n\tlocal sqrt=$(echo \"sqrt($number)\" | bc)\n\tlocal sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n\tlocal sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n\tif [ \"$sqrt_dec\" == \"0\" ]; then\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"ERROR: $1 is not a positive integer\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [[ $sqrt_dec -eq 0 ]]; then\n        echo \"$1 is a perfect square\"\n    else\n        echo \"$1 is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"false\"\n        return\n    fi\n\n    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n        return\n    fi\n\n    if [[ $1 -eq 1 ]]; then\n        echo \"true\"\n        return\n    fi\n\n    local i=1\n    local sq=1\n    while [[ $sq -lt $1 ]]; do\n        ((i++))\n        ((sq=i*i))\n    done\n\n    if [[ $sq -eq $1 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [ \"$sqrt_dec\" -eq 0 ]; then\n    echo \"$num is a perfect square\"\n  else\n    echo \"$num is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n    if [ \"$sqrt_number_dec\" -eq 0 ]\n    then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [[ \"$sqrt_dec\" == \"0\" ]]; then\n    echo \"$num is a perfect square\"\n  else\n    echo \"$num is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt_number=$(bc <<< \"scale=0; sqrt($number)\")\n    local square=$(bc <<< \"$sqrt_number * $sqrt_number\")\n    if [[ $square -eq $number ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n    if [[ \"$sqrt_dec\" == \"0\" ]]; then\n        echo \"$1 is a perfect square\"\n    else\n        echo \"$1 is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc -l)\n    local int_sqrt_num=$(echo \"$sqrt_num\" | awk '{print int($1)}')\n    local sqr_int_sqrt_num=$(echo \"$int_sqrt_num * $int_sqrt_num\" | bc -l)\n    if [ \"$sqr_int_sqrt_num\" -eq \"$num\" ]; then\n        echo \"Yes\"\n    else\n        echo \"No\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ $sqrt_dec -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    local sqrt_float=$(echo \"$sqrt\" | awk '{print $1 - int($1)}')\n    if [[ $sqrt_float == 0 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local sqrt_num_int=${sqrt_num%.*}\n    if [ $sqrt_num_int -eq $sqrt_num ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(bc <<< \"sqrt($number)\")\n    local sqrt_int=$(bc <<< \"scale=0; $sqrt/1\")\n    if [[ $sqrt_int -eq $sqrt ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc -l)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n  if [[ $sqrt_dec -eq 0 ]]; then\n    echo \"$num is a perfect square\"\n  else\n    echo \"$num is not a perfect square\"\n  fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    local sqrt_dec=$(echo \"$sqrt\" | awk '{print $1-int($1)}')\n    if [ $sqrt_dec -eq 0 ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_decimal=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ $sqrt_decimal -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local sqrt_num_int=${sqrt_num%.*}\n    local sqrt_num_dec=${sqrt_num#*.}\n    if [ $sqrt_num_dec -eq 0 ] && [ $((sqrt_num_int * sqrt_num_int)) -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local number=$1\n  local sqrt_number=$(echo \"sqrt($number)\" | bc)\n  local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n  local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n  if [ \"$sqrt_number_dec\" == \"0\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n  if [ \"$sqrt_dec\" == \"0\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d\".\" -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d\".\" -f2)\n    if [[ $sqrt_number_dec -eq 0 ]]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    if [ $sqrt_int -eq $sqrt ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  if [[ $1 -lt 1 ]]; then\n    echo \"false\"\n    return\n  fi\n  local i=1\n  while [[ $((i*i)) -le $1 ]]; do\n    if [[ $((i*i)) -eq $1 ]]; then\n      echo \"true\"\n      return\n    fi\n    i=$((i+1))\n  done\n  echo \"false\"",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n  if [ \"$sqrt_dec\" == \"0\" ]; then\n    echo \"$num is a perfect square\"\n  else\n    echo \"$num is not a perfect square\"\n  fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [[ $sqrt_dec == 0 ]]; then\n    echo \"The number $number is a perfect square\"\n  else\n    echo \"The number $number is not a perfect square\"\n  fi",
    "    local number=$1\n    local root=0\n    local i=0\n    while [ $i -le $number ]\n    do\n        if [ $((i*i)) -eq $number ]\n        then\n            root=$i\n            break\n        fi\n        i=$((i+1))\n    done\n    echo $root",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"false\"\n        return\n    fi\n\n    local i=1\n    while [[ $((i * i)) -le $1 ]]; do\n        if [[ $((i * i)) -eq $1 ]]; then\n            echo \"true\"\n            return\n        fi\n        i=$((i + 1))\n    done\n    echo \"false\"",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($0)}')\n    local sqrt_dec=$(echo \"$sqrt - $sqrt_int\" | bc)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  if [[ $1 -lt 1 ]]; then\n    echo \"false\"\n    return\n  fi\n\n  local i=1\n  while [[ $((i*i)) -le $1 ]]; do\n    if [[ $((i*i)) -eq $1 ]]; then\n      echo \"true\"\n      return\n    fi\n    i=$((i+1))\n  done\n  echo \"false\"",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"The number $number is a perfect square\"\n    else\n        echo \"The number $number is not a perfect square\"\n    fi",
    "    local i=1\n    local sum=1\n    while [ $sum -lt $1 ]\n    do\n        i=$((i+1))\n        sum=$((sum+2*i-1))\n    done\n    if [ $sum -eq $1 ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt=$(echo \"sqrt($1)\" | bc -l)\n        local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n        if [[ $sqrt_int -eq $sqrt ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d'.' -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d'.' -f2)\n    if [ $sqrt_number_dec -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n\n    if [ $1 -lt 0 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | sed 's/\\..*//')\n    local sqrt_dec=$(echo \"$sqrt\" | sed 's/^[0-9]*\\.//')\n\n    if [ $sqrt_dec -eq 0 ]; then\n        echo \"$1 is a perfect square\"\n        return 0\n    else\n        echo \"$1 is not a perfect square\"\n        return 1\n    fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is negative\"\n        return 1\n    fi\n\n    if [ $1 -eq 0 ]; then\n        echo \"Error: $1 is zero\"\n        return 1\n    fi\n\n    if [ $1 -eq 1 ]; then\n        echo \"$1 is a perfect square\"\n        return 0\n    fi\n\n    local i=1\n    local square=1\n    while [ $square -lt $1 ]; do\n        i=$((i+1))\n        square=$((i*i))\n    done\n\n    if [ $square -eq $1 ]; then\n        echo \"$1 is a perfect square\"\n        return 0\n    else\n        echo \"$1 is not a perfect square\"\n        return 1\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n  local sqrt_float=$(echo \"$sqrt\" | awk '{print $1 - int($1)}')\n  if [ \"$sqrt_float\" == \"0\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    local sqrt_dec=$(echo \"$sqrt - $sqrt_int\" | bc)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        return 1\n    fi\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    if [[ $sqrt -eq $(echo \"($sqrt)^2\" | bc) ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: $1 is negative\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n\n    if [[ $sqrt_dec -ne 0 ]]; then\n        echo \"Error: $1 is not a perfect square\"\n        return 1\n    fi\n\n    echo \"$1 is a perfect square\"",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n    if [ $1 -lt 0 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n    if [ $1 -eq 0 ]; then\n        echo \"true\"\n        return 0\n    fi\n    if [ $1 -eq 1 ]; then\n        echo \"true\"\n        return 0\n    fi\n    local i=1\n    while [ $i -le $1 ]; do\n        if [ $((i*i)) -eq $1 ]; then\n            echo \"true\"\n            return 0\n        fi\n        if [ $((i*i)) -gt $1 ]; then\n            echo \"false\"\n            return 0\n        fi\n        i=$((i+1))\n    done",
    "    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    if [ \"$sqrt\" == \"$sqrt_int\" ]; then\n        echo \"Yes\"\n    else\n        echo \"No\"\n    fi",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [ \"$sqrt_dec\" = \"0\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [ $sqrt_dec -eq 0 ]; then\n    echo \"The number $number is a perfect square.\"\n  else\n    echo \"The number $number is not a perfect square.\"\n  fi",
    "  local number=$1\n  local root=$(echo \"sqrt($number)\" | bc)\n  local square=$(echo \"$root * $root\" | bc)\n  if [ \"$square\" -eq \"$number\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n\n    if ! [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n    fi\n\n    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is less than 0\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    local sqrt_dec=$(echo \"$sqrt - $sqrt_int\" | bc)\n\n    if [ $(echo \"$sqrt_dec > 0\" | bc) -eq 1 ]; then\n        echo \"$1 is not a perfect square\"\n        return 1\n    fi\n\n    echo \"$1 is a perfect square\"\n    return 0",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    if [ $(echo \"$sqrt * $sqrt\" | bc) -eq $number ]; then\n        echo \"Number $number is a perfect square\"\n    else\n        echo \"Number $number is not a perfect square\"\n    fi",
    "    local num=$1\n    local i=1\n    local square=1\n    while [ $square -lt $num ]\n    do\n        i=$((i + 1))\n        square=$((i * i))\n    done\n    if [ $square -eq $num ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [[ $sqrt_dec == 0 ]]; then\n    echo \"The number $number is a perfect square.\"\n  else\n    echo \"The number $number is not a perfect square.\"\n  fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: $1 is not a positive integer.\"\n        return 1\n    fi\n    if [[ $1 -eq 0 ]]; then\n        echo \"Error: $1 is not a positive integer.\"\n        return 1\n    fi\n    if [[ $1 -eq 1 ]]; then\n        echo \"Yes, $1 is a perfect square.\"\n        return 0\n    fi\n    local i=1\n    while [[ $((i*i)) -le $1 ]]; do\n        if [[ $((i*i)) -eq $1 ]]; then\n            echo \"Yes, $1 is a perfect square.\"\n            return 0\n        fi\n        i=$((i+1))\n    done\n    echo \"No, $1 is not a perfect square.\"\n    return 1",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n  if [ \"$sqrt_dec\" == \"0\" ]; then\n    echo \"$number is a perfect square\"\n  else\n    echo \"$number is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    if [ $sqrt_number_int -eq $sqrt_number ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local sqrt=$(bc <<< \"sqrt($1)\")\n    local sqrt_int=$(bc <<< \"scale=0; $sqrt/1\")\n    local sqrt_float=$(bc <<< \"scale=2; $sqrt/1\")\n    local sqrt_float_int=$(bc <<< \"scale=0; $sqrt_float/1\")\n    if [ $sqrt_int -eq $sqrt_float_int ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local number=$1\n  local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n  local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n  local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n  if [ \"$sqrt_number_dec\" -eq 0 ]; then\n    echo \"$number is a perfect square\"\n  else\n    echo \"$number is not a perfect square\"\n  fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    if [ \"$sqrt\" == \"$sqrt_int\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local num=$1\n  local sqrt_num=$(echo \"sqrt($num)\" | bc)\n  local sqrt_num_int=$(echo \"$sqrt_num\" | cut -d'.' -f1)\n  local sqrt_num_dec=$(echo \"$sqrt_num\" | cut -d'.' -f2)\n  if [ \"$sqrt_num_dec\" == \"0\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local sqrt_n=$(echo \"sqrt($n)\" | bc)\n    local sqrt_n_int=$(echo \"$sqrt_n\" | cut -d '.' -f 1)\n    if [ $sqrt_n_int -eq $sqrt_n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec != \"0\" ]]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    if [ \"$sqrt\" == \"$sqrt_int\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  if [ $1 -lt 0 ]; then\n    echo \"Error: $1 is not a positive integer.\"\n    return 1\n  fi\n\n  if [ $1 -eq 0 ] || [ $1 -eq 1 ]; then\n    echo \"Yes, $1 is a perfect square.\"\n    return 0\n  fi\n\n  i=1\n  while [ $i -le $1 ]\n  do\n    if [ $((i * i)) -eq $1 ]; then\n      echo \"Yes, $1 is a perfect square.\"\n      return 0\n    fi\n    i=$((i + 1))\n  done\n\n  echo \"No, $1 is not a perfect square.\"\n  return 1",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"($sqrt_number + 0.5)/1\" | bc)\n    if [ $sqrt_number_int -eq $sqrt_number ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    if [ $(echo \"$sqrt * $sqrt\" | bc) -eq $number ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Please enter a positive integer\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n\n    if [[ $sqrt_int -eq $sqrt ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d'.' -f1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d'.' -f2)\n    if [[ $sqrt_number_dec -eq 0 ]]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"Perfect square\"\n    else\n        echo \"Not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local sqrt_num_int=$(echo \"$sqrt_num\" | awk '{print int($1)}')\n    local sqrt_num_dec=$(echo \"$sqrt_num - $sqrt_num_int\" | bc)\n    if [ \"$sqrt_num_dec\" == \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk -F. '{print $1}')\n    local sqrt_dec=$(echo \"$sqrt\" | awk -F. '{print $2}')\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"The number $number is a perfect square\"\n    else\n        echo \"The number $number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(bc <<< \"sqrt($number)\")\n    local sqrt_int=$(bc <<< \"scale=0; $sqrt/1\")\n    local sqrt_int_sq=$(bc <<< \"$sqrt_int*$sqrt_int\")\n    if [ $sqrt_int_sq -eq $number ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc -l)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n  if [ \"$sqrt_dec\" == \"0\" ]; then\n    echo \"$number is a perfect square\"\n  else\n    echo \"$number is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    if [ \"$sqrt\" == \"$sqrt_int\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  if [[ $1 -lt 0 ]]; then\n    echo \"The number must be positive\"\n    return 1\n  fi\n  if [[ $1 -eq 0 ]]; then\n    echo \"The number is a perfect square\"\n    return 0\n  fi\n  local i=1\n  while [[ $((i*i)) -le $1 ]]; do\n    if [[ $((i*i)) -eq $1 ]]; then\n      echo \"The number is a perfect square\"\n      return 0\n    fi\n    i=$((i+1))\n  done\n  echo \"The number is not a perfect square\"\n  return 1",
    "    if [ $1 -lt 0 ]; then\n        echo \"The number must be positive\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n\n    if [ $sqrt_dec -eq 0 ]; then\n        echo \"The number is a perfect square\"\n        return 0\n    else\n        echo \"The number is not a perfect square\"\n        return 1\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    if [ $sqrt_number_int -eq $sqrt_number ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    # Check if the number is a positive integer\n    if [[ $1 =~ ^[0-9]+$ ]]\n    then\n        # Check if the number is a perfect square\n        if [[ $(( $1 ** 0.5 )) =~ ^[0-9]+$ ]]\n        then\n            echo \"The number $1 is a perfect square.\"\n        else\n            echo \"The number $1 is not a perfect square.\"\n        fi\n    else\n        echo \"The number $1 is not a positive integer.\"\n    fi",
    "    local number=$1\n    local square_root=$(echo \"sqrt($number)\" | bc)\n    local square=$(echo \"$square_root * $square_root\" | bc)\n    if [ $square -eq $number ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n    if [[ $sqrt_number_dec == 0 ]]; then\n        echo \"The number $number is a perfect square.\"\n    else\n        echo \"The number $number is not a perfect square.\"\n    fi",
    "    local n=$1\n    local sqrt=$(echo \"sqrt($n)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$n is a perfect square\"\n    else\n        echo \"$n is not a perfect square\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "  if [[ $1 -eq 0 ]] || [[ $1 -eq 1 ]]; then\n    echo \"true\"\n    return\n  fi\n  local i=1\n  while [[ $((i*i)) -le $1 ]]; do\n    if [[ $((i*i)) -eq $1 ]]; then\n      echo \"true\"\n      return\n    fi\n    i=$((i+1))\n  done\n  echo \"false\"",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [ \"$sqrt_dec\" -eq 0 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt/1\" | bc)\n    if [ $sqrt_int -eq $sqrt ]; then\n        echo \"$1 is a perfect square\"\n    else\n        echo \"$1 is not a perfect square\"\n    fi",
    "  if [ $1 -lt 0 ]; then\n    echo \"Error: $1 is less than 0\"\n    exit 1\n  fi\n\n  if [ $1 -eq 0 ]; then\n    echo \"Error: $1 is equal to 0\"\n    exit 1\n  fi\n\n  if [ $1 -eq 1 ]; then\n    echo \"Error: $1 is equal to 1\"\n    exit 1\n  fi\n\n  if [ $1 -eq 2 ]; then\n    echo \"Error: $1 is equal to 2\"\n    exit 1\n  fi\n\n  if [ $1 -eq 3 ]; then\n    echo \"Error: $1 is equal to 3\"\n    exit 1\n  fi\n\n  if [ $1 -eq 4 ]; then\n    echo \"Error: $1 is equal to 4\"\n    exit 1\n  fi\n\n  if [ $1 -eq 5 ]; then\n    echo \"Error: $1 is equal to 5\"\n    exit 1\n  fi\n\n  if [ $1 -eq 6 ]; then\n    echo \"Error: $1 is equal to 6\"\n    exit 1\n  fi\n\n  if [ $1 -eq 7 ]; then\n    echo \"Error: $1 is equal to 7\"\n    exit 1\n  fi\n\n  if [ $1 -eq 8 ]; then\n    echo \"Error: $1 is equal to 8\"\n    exit 1\n  fi\n\n  if [ $1 -eq 9 ]; then\n    echo \"Error: $1 is equal to 9\"\n    exit 1\n  fi\n\n  if [ $1 -eq 10 ]; then\n    echo \"Error: $1 is equal to 10\"\n    exit 1\n  fi\n\n  if [ $1 -eq 11 ]; then\n    echo \"Error: $1 is equal to 11\"\n    exit 1\n  fi\n\n  if [ $1 -eq 12 ]; then\n    echo \"Error: $1 is equal to 12\"\n    exit 1\n  fi\n\n  if [ $1 -eq 13 ]; then\n    echo \"Error: $1 is equal to 13\"\n    exit 1\n  fi\n\n  if [ $1 -eq 14 ]; then\n    echo \"Error: $1 is equal to 14\"\n    exit 1\n  fi\n\n  if [ $1 -eq 15 ]; then\n    echo \"Error",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [ \"$sqrt_dec\" == \"0\" ]; then\n    echo \"The number $number is a perfect square\"\n  else\n    echo \"The number $number is not a perfect square\"\n  fi",
    "    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$1 is a perfect square\"\n    else\n        echo \"$1 is not a perfect square\"\n    fi",
    "  if [[ $1 -lt 1 ]]; then\n    echo \"false\"\n    return\n  fi\n\n  local i=1\n  while [[ $((i*i)) -le $1 ]]; do\n    if [[ $((i*i)) -eq $1 ]]; then\n      echo \"true\"\n      return\n    fi\n    i=$((i+1))\n  done\n  echo \"false\"",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n    if [[ $sqrt_number_dec -eq 0 ]]; then\n        echo \"The number $number is a perfect square.\"\n    else\n        echo \"The number $number is not a perfect square.\"\n    fi",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [[ $sqrt_dec == 0 ]]; then\n    echo \"The number $num is a perfect square.\"\n  else\n    echo \"The number $num is not a perfect square.\"\n  fi",
    "    if [ $1 -lt 1 ]; then\n        return 1\n    fi\n    local i=1\n    while [ $i -lt $1 ]; do\n        if [ $((i * i)) -eq $1 ]; then\n            return 0\n        fi\n        i=$((i + 1))\n    done\n    return 1",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: $1 is negative\"\n        return 1\n    fi\n    if [[ $1 -eq 0 ]]; then\n        echo \"Error: $1 is zero\"\n        return 1\n    fi\n    if [[ $1 -eq 1 ]]; then\n        echo \"Yes, $1 is a perfect square\"\n        return 0\n    fi\n    local i=1\n    while [[ $((i*i)) -lt $1 ]]; do\n        i=$((i+1))\n    done\n    if [[ $((i*i)) -eq $1 ]]; then\n        echo \"Yes, $1 is a perfect square\"\n        return 0\n    else\n        echo \"No, $1 is not a perfect square\"\n        return 1\n    fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local sqrt_num_int=$(echo \"$sqrt_num\" | awk '{print int($1)}')\n    local sqrt_num_dec=$(echo \"$sqrt_num - $sqrt_num_int\" | bc)\n    if [ $(echo \"$sqrt_num_dec > 0\" | bc) -eq 1 ]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi",
    "  if [[ $1 -lt 0 ]]; then\n    echo \"ERROR: $1 is negative\"\n    return 1\n  fi\n  if [[ $1 -eq 0 ]]; then\n    echo \"ERROR: $1 is zero\"\n    return 1\n  fi\n  if [[ $1 -eq 1 ]]; then\n    echo \"ERROR: $1 is one\"\n    return 1\n  fi\n  local x=1\n  while [[ $x -lt $1 ]]; do\n    if [[ $((x*x)) -eq $1 ]]; then\n      echo \"$1 is a perfect square\"\n      return 0\n    fi\n    x=$((x+1))\n  done\n  echo \"$1 is not a perfect square\"\n  return 1",
    "    local sqrt=$(echo \"sqrt($1)\" | bc)\n    if [[ $(echo \"$sqrt * $sqrt\" | bc) -eq $1 ]]; then\n        echo \"$1 is a perfect square\"\n    else\n        echo \"$1 is not a perfect square\"\n    fi",
    "  local num=$1\n  local sqrt=$(echo \"sqrt($num)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f2)\n  if [ \"$sqrt_dec\" -eq 0 ]; then\n    echo \"$num is a perfect square\"\n  else\n    echo \"$num is not a perfect square\"\n  fi",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"false\"\n        return\n    fi\n\n    local i=1\n    while [[ $((i*i)) -le $1 ]]; do\n        if [[ $((i*i)) -eq $1 ]]; then\n            echo \"true\"\n            return\n        fi\n        i=$((i+1))\n    done\n    echo \"false\"",
    "  if [[ $1 -lt 0 ]]; then\n    echo \"false\"\n    return\n  fi\n\n  if [[ $1 -eq 0 ]] || [[ $1 -eq 1 ]]; then\n    echo \"true\"\n    return\n  fi\n\n  local i=1\n  local square=1\n  while [[ $square -lt $1 ]]; do\n    i=$((i+1))\n    square=$((i*i))\n  done\n\n  if [[ $square -eq $1 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    if [ $1 -lt 0 ]; then\n        echo \"false\"\n        return\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n\n    if [ $sqrt_dec -ne 0 ]; then\n        echo \"false\"\n        return\n    fi\n\n    local square=$(echo \"$sqrt_int * $sqrt_int\" | bc)\n    if [ $square -eq $1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"The number $number is a perfect square.\"\n    else\n        echo \"The number $number is not a perfect square.\"\n    fi",
    "    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$1 is a perfect square\"\n    else\n        echo \"$1 is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    local sqrt_number_dec=$(echo \"$sqrt_number - $sqrt_number_int\" | bc -l)\n    if [ $(echo \"$sqrt_number_dec > 0\" | bc) -eq 1 ]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc)\n    local sqrt_num_int=$(echo \"$sqrt_num\" | cut -d'.' -f1)\n    local sqrt_num_dec=$(echo \"$sqrt_num\" | cut -d'.' -f2)\n    if [[ $sqrt_num_dec == 0 ]]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "\tlocal num=$1\n\tlocal sqrt=$(echo \"sqrt($num)\" | bc)\n\tlocal sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n\tlocal sqrt_float=$(echo \"$sqrt\" | awk '{print $1 - int($1)}')\n\tif [ $sqrt_float -eq 0 ]; then\n\t\techo \"$num is a perfect square\"\n\telse\n\t\techo \"$num is not a perfect square\"\n\tfi",
    "    local number=$1\n    local root=$(echo \"sqrt($number)\" | bc)\n    local square=$((root * root))\n    if [[ $square -eq $number ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "\tif [[ $1 -lt 1 ]]; then\n\t\techo \"Error: $1 is not a positive integer\"\n\t\treturn 1\n\tfi\n\n\t# The square root of $1 is an integer\n\tif [[ $(( $1 ** 0.5 )) -eq $(( $1 ** 0.5 )) ]]; then\n\t\techo \"Yes, $1 is a perfect square\"\n\t\treturn 0\n\telse\n\t\techo \"No, $1 is not a perfect square\"\n\t\treturn 1\n\tfi",
    "    local num=$1\n    local sqrt_num=$(echo \"sqrt($num)\" | bc -l)\n    local sqrt_num_int=$(echo \"$sqrt_num\" | cut -d '.' -f 1)\n    local sqrt_num_dec=$(echo \"$sqrt_num\" | cut -d '.' -f 2)\n    if [ $sqrt_num_dec -eq 0 ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "  if [[ $1 -lt 0 ]]; then\n    echo \"Invalid input\"\n    return 1\n  fi\n  local sqrt=$(echo \"sqrt($1)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  if [[ $sqrt_int -eq $sqrt ]]; then\n    echo \"Perfect square\"\n    return 0\n  else\n    echo \"Not a perfect square\"\n    return 1\n  fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    if [ $sqrt_int -eq $sqrt ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_decimal=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [ \"$sqrt_decimal\" == \"0\" ]; then\n    echo \"$number is a perfect square\"\n  else\n    echo \"$number is not a perfect square\"\n  fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local sqrt=$(echo \"sqrt($1)\" | bc)\n        if [ $sqrt -eq $(echo \"$sqrt*$sqrt\" | bc) ]; then\n            echo \"The number $1 is a perfect square.\"\n        else\n            echo \"The number $1 is not a perfect square.\"\n        fi\n    else\n        echo \"The number $1 is not a perfect square.\"\n    fi",
    "  if [[ $1 -lt 0 ]]; then\n    echo \"false\"\n    return\n  fi\n\n  if [[ $1 -eq 0 ]]; then\n    echo \"true\"\n    return\n  fi\n\n  local i=1\n  while [[ $i -le $1 ]]; do\n    local square=$((i * i))\n    if [[ $square -eq $1 ]]; then\n      echo \"true\"\n      return\n    fi\n    if [[ $square -gt $1 ]]; then\n      echo \"false\"\n      return\n    fi\n    i=$((i + 1))\n  done",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"The number $number is a perfect square\"\n    else\n        echo \"The number $number is not a perfect square\"\n    fi",
    "    local n=$1\n    local sqrt_n=$(echo \"sqrt($n)\" | bc)\n    local sqrt_n_int=$(echo \"$sqrt_n/1\" | bc)\n    if [[ $sqrt_n_int -eq $sqrt_n ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local sqrt_result=$(echo \"sqrt($1)\" | bc)\n    local sqrt_result_int=$(echo \"$sqrt_result\" | cut -d '.' -f 1)\n    local sqrt_result_dec=$(echo \"$sqrt_result\" | cut -d '.' -f 2)\n    if [ \"$sqrt_result_dec\" -eq 0 ]; then\n        echo \"$1 is a perfect square\"\n    else\n        echo \"$1 is not a perfect square\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [[ $sqrt_dec == 0 ]]; then\n    echo \"$number is a perfect square\"\n  else\n    echo \"$number is not a perfect square\"\n  fi",
    "  if [[ $1 -lt 1 ]]; then\n    return 1\n  fi\n\n  local i=1\n  local sum=0\n  while [[ $sum -lt $1 ]]; do\n    sum=$(( $i * $i ))\n    if [[ $sum -eq $1 ]]; then\n      return 0\n    fi\n    i=$(( $i + 1 ))\n  done\n  return 1",
    "    local n=$1\n    local sqrt_n=$(echo \"sqrt($n)\" | bc)\n    local sqrt_n_int=$(echo \"$sqrt_n\" | awk '{print int($1)}')\n    if [ $sqrt_n_int -eq $sqrt_n ]; then\n        echo \"$n is a perfect square\"\n    else\n        echo \"$n is not a perfect square\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [[ $sqrt_dec -eq 0 ]]; then\n    echo \"The number $number is a perfect square.\"\n  else\n    echo \"The number $number is not a perfect square.\"\n  fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n    if [ \"$sqrt_dec\" -eq \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Number is negative\"\n        return 1\n    fi\n    local sqrt=$(bc <<< \"sqrt($1)\")\n    local sqrt_int=$(echo $sqrt | cut -d'.' -f1)\n    local sqrt_dec=$(echo $sqrt | cut -d'.' -f2)\n    if [[ $sqrt_dec -eq 0 ]]; then\n        echo \"Number is perfect square\"\n        return 0\n    else\n        echo \"Number is not perfect square\"\n        return 1\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    local sqrt_number_dec=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n    if [ \"$sqrt_number_dec\" == \"0\" ]; then\n        echo \"The number $number is a perfect square\"\n    else\n        echo \"The number $number is not a perfect square\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"false\"\n        return\n    fi\n\n    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n        return\n    fi\n\n    if [[ $1 -eq 1 ]]; then\n        echo \"true\"\n        return\n    fi\n\n    local i=1\n    local square=1\n    while [[ $square -lt $1 ]]; do\n        ((i++))\n        ((square=i*i))\n    done\n\n    if [[ $square -eq $1 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_float=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_float\" == \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"Number $number is a perfect square\"\n    else\n        echo \"Number $number is not a perfect square\"\n    fi",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: $1 is not a positive integer.\"\n        return 1\n    fi\n\n    local sqrt_result=$(echo \"sqrt($1)\" | bc)\n    local sqrt_result_int=$(echo \"$sqrt_result\" | cut -d'.' -f1)\n    local sqrt_result_dec=$(echo \"$sqrt_result\" | cut -d'.' -f2)\n\n    if [[ $sqrt_result_dec -ne 0 ]]; then\n        echo \"$1 is not a perfect square.\"\n        return 1\n    else\n        echo \"$1 is a perfect square.\"\n        return 0\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | awk '{print int($1)}')\n    if [[ $sqrt_number_int -eq $sqrt_number ]]; then\n        echo \"Yes\"\n    else\n        echo \"No\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=${sqrt%.*}\n    if [ $sqrt_int -eq $sqrt ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"scale=0; sqrt($num)\" | bc)\n    local sqrt_sq=$(echo \"$sqrt * $sqrt\" | bc)\n    if [ $sqrt_sq -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local number=$1\n  local sqrt=$(bc <<< \"scale=0; sqrt($number)\")\n  local square=$(($sqrt * $sqrt))\n  if [ $square -eq $number ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec -eq 0 ]]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local n=$1\n    local sqrt_n=$(echo \"sqrt($n)\" | bc)\n    local sqrt_n_int=$(echo \"$sqrt_n / 1\" | bc)\n    local sqrt_n_int_sq=$(echo \"$sqrt_n_int * $sqrt_n_int\" | bc)\n    if [ $sqrt_n_int_sq -eq $n ]; then\n        echo \"$n is a perfect square\"\n    else\n        echo \"$n is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" -eq \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [ \"$sqrt_dec\" == \"0\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "  local sqrt=$(echo \"sqrt($1)\" | bc -l)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  if [ \"$sqrt\" == \"$sqrt_int\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"The number $number is a perfect square.\"\n    else\n        echo \"The number $number is not a perfect square.\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | awk '{print int($1)}')\n    local sqrt_dec=$(echo \"$sqrt\" | awk '{print $1 - int($1)}')\n\n    if [[ $sqrt_dec -eq 0 ]]; then\n        echo \"$1 is a perfect square\"\n        return 0\n    else\n        echo \"$1 is not a perfect square\"\n        return 1\n    fi",
    "    local sqrt_of_num=$(echo \"sqrt($1)\" | bc)\n    local sqrt_of_num_int=$(echo \"$sqrt_of_num\" | cut -d '.' -f 1)\n    local sqrt_of_num_dec=$(echo \"$sqrt_of_num\" | cut -d '.' -f 2)\n    if [ \"$sqrt_of_num_dec\" == \"0\" ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    if [[ $sqrt == *.* ]]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi",
    "\tlocal num=$1\n\tlocal sqrt_num=$(echo \"sqrt($num)\" | bc)\n\tlocal sqrt_num_int=$(echo \"($sqrt_num+0.5)/1\" | bc)\n\tif [ $sqrt_num_int -eq $sqrt_num ]; then\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n  if [ \"$sqrt_dec\" == \"0\" ]; then\n    echo \"The number $number is a perfect square.\"\n  else\n    echo \"The number $number is not a perfect square.\"\n  fi",
    "  local number=$1\n  local sqrt_number=$(echo \"sqrt($number)\" | bc)\n  local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d'.' -f1)\n  if [ $sqrt_number_int -eq $sqrt_number ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [[ $1 -eq 0 ]]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    if [[ $1 -eq 1 ]]; then\n        echo \"Yes, $1 is a perfect square\"\n        return 0\n    fi\n    local i=1\n    while [[ $((i*i)) -lt $1 ]]; do\n        i=$((i+1))\n    done\n    if [[ $((i*i)) -eq $1 ]]; then\n        echo \"Yes, $1 is a perfect square\"\n        return 0\n    else\n        echo \"No, $1 is not a perfect square\"\n        return 1\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d. -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d. -f2)\n\n    if [[ $sqrt_dec -eq 0 ]]; then\n        echo \"$1 is a perfect square\"\n        return 0\n    else\n        echo \"$1 is not a perfect square\"\n        return 1\n    fi",
    "    local sqrt_of_num=$(echo \"sqrt($1)\" | bc)\n    local sqrt_of_num_int=$(echo \"$sqrt_of_num\" | cut -d '.' -f 1)\n    local sqrt_of_num_dec=$(echo \"$sqrt_of_num\" | cut -d '.' -f 2)\n    if [ \"$sqrt_of_num_dec\" == \"0\" ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc -l)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n  if [[ $sqrt_dec == 0 ]]; then\n    echo \"The number $number is a perfect square.\"\n  else\n    echo \"The number $number is not a perfect square.\"\n  fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "  if [ $1 -lt 0 ]; then\n    echo \"false\"\n  else\n    sqrt=$(echo \"sqrt($1)\" | bc)\n    if [ $sqrt -eq $sqrt ]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "    # Check if the number is a perfect square\n    #\n    # $1 is an integer\n    #\n    # Returns 0 if the number is a perfect square, 1 otherwise\n    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local sqrt=$(echo \"sqrt($num)\" | bc)\n    local square=$(echo \"$sqrt * $sqrt\" | bc)\n    if [ $square -eq $num ]; then\n        echo \"$num is a perfect square\"\n    else\n        echo \"$num is not a perfect square\"\n    fi",
    "  local num=$1\n  local sqrt_num=$(echo \"sqrt($num)\" | bc)\n  local sqrt_num_int=$(echo \"$sqrt_num\" | awk '{print int($1)}')\n  local sqrt_num_dec=$(echo \"$sqrt_num\" | awk '{print $1 - int($1)}')\n  if [ $sqrt_num_dec -eq 0 ]\n  then\n    echo \"$num is a perfect square\"\n  else\n    echo \"$num is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [ \"$sqrt_dec\" == \"0\" ]; then\n        echo \"The number $number is a perfect square\"\n    else\n        echo \"The number $number is not a perfect square\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"Error: $1 is a negative number\"\n        return 1\n    fi\n\n    if [[ $1 -eq 0 ]]; then\n        echo \"Error: $1 is zero\"\n        return 1\n    fi\n\n    local sqrt_value=$(echo \"sqrt($1)\" | bc -l)\n    local sqrt_value_int=$(echo \"$sqrt_value\" | awk '{print int($0)}')\n    local sqrt_value_int_sq=$((sqrt_value_int * sqrt_value_int))\n\n    if [[ $sqrt_value_int_sq -eq $1 ]]; then\n        echo \"$1 is a perfect square\"\n        return 0\n    else\n        echo \"$1 is not a perfect square\"\n        return 1\n    fi",
    "    local sqrt_result=$(echo \"sqrt($1)\" | bc)\n    local sqrt_result_int=$(echo \"$sqrt_result\" | cut -d '.' -f 1)\n    local sqrt_result_dec=$(echo \"$sqrt_result\" | cut -d '.' -f 2)\n    if [ \"$sqrt_result_dec\" -eq 0 ]; then\n        echo \"$1 is a perfect square\"\n    else\n        echo \"$1 is not a perfect square\"\n    fi",
    "    local number=$1\n    local root=$(echo \"sqrt($number)\" | bc)\n    local square=$(echo \"$root * $root\" | bc)\n    if [ $square -eq $number ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [[ $1 -lt 1 ]]; then\n        echo \"Error: $1 is not a positive integer.\"\n        return 1\n    fi\n    local sqrt_result=$(echo \"sqrt($1)\" | bc)\n    local sqrt_result_int=$(echo \"$sqrt_result\" | cut -d '.' -f 1)\n    if [[ $sqrt_result_int -eq $sqrt_result ]]; then\n        echo \"Yes, $1 is a perfect square.\"\n        return 0\n    else\n        echo \"No, $1 is not a perfect square.\"\n        return 1\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\n        return 1\n    fi\n    if [ $1 -lt 0 ]; then\n        echo \"Error: $1 is not a positive integer\"\n        return 1\n    fi\n    local sqrt=$(echo \"sqrt($1)\" | bc)\n    if [ $sqrt -eq $sqrt ]; then\n        echo \"$1 is a perfect square\"\n    else\n        echo \"$1 is not a perfect square\"\n    fi",
    "    local sqrt=$(echo \"sqrt($1)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_decimal=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [[ $sqrt_decimal == 0 ]]; then\n        echo \"The number $1 is a perfect square\"\n    else\n        echo \"The number $1 is not a perfect square\"\n    fi",
    "  if [ $1 -le 0 ]; then\n    return 1\n  fi\n  local sqrt=$(echo \"sqrt($1)\" | bc)\n  if [ $sqrt -eq $(echo \"$sqrt*$sqrt\" | bc) ]; then\n    return 0\n  else\n    return 1\n  fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    local sqrt_number_decimal=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n    if [ \"$sqrt_number_decimal\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local sqrt_result=$(echo \"sqrt($1)\" | bc -l)\n    local sqrt_result_int=$(echo \"$sqrt_result\" | cut -d'.' -f1)\n    local sqrt_result_dec=$(echo \"$sqrt_result\" | cut -d'.' -f2)\n    if [[ $sqrt_result_dec == 0 ]]; then\n        echo \"$1 is a perfect square\"\n    else\n        echo \"$1 is not a perfect square\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n    if [[ $sqrt_dec -eq 0 ]]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    if [[ $1 -lt 0 ]]; then\n        echo \"false\"\n        return\n    fi\n\n    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n        return\n    fi\n\n    local i=1\n    while [[ $((i*i)) -le $1 ]]; do\n        if [[ $((i*i)) -eq $1 ]]; then\n            echo \"true\"\n            return\n        fi\n        i=$((i+1))\n    done\n\n    echo \"false\"",
    "  local number=$1\n  local sqrt=$(echo \"sqrt($number)\" | bc)\n  local sqrt_int=$(echo \"$sqrt\" | cut -d'.' -f1)\n  local sqrt_dec=$(echo \"$sqrt\" | cut -d'.' -f2)\n  if [ $sqrt_dec -eq 0 ]; then\n    echo \"$number is a perfect square\"\n  else\n    echo \"$number is not a perfect square\"\n  fi",
    "  local sqrt_result=$(echo \"sqrt($1)\" | bc)\n  local sqrt_result_int=$(echo \"$sqrt_result\" | cut -d'.' -f1)\n  local sqrt_result_dec=$(echo \"$sqrt_result\" | cut -d'.' -f2)\n  if [ \"$sqrt_result_dec\" -eq 0 ]; then\n    echo \"$1 is a perfect square\"\n  else\n    echo \"$1 is not a perfect square\"\n  fi",
    "    local number=$1\n    local sqrt_number=$(echo \"sqrt($number)\" | bc)\n    local sqrt_number_int=$(echo \"$sqrt_number\" | cut -d '.' -f 1)\n    local sqrt_number_decimal=$(echo \"$sqrt_number\" | cut -d '.' -f 2)\n    if [ \"$sqrt_number_decimal\" -eq 0 ]; then\n        echo \"$number is a perfect square\"\n    else\n        echo \"$number is not a perfect square\"\n    fi",
    "    local number=$1\n    local square_root=$(echo \"sqrt($number)\" | bc)\n    local square=$((square_root * square_root))\n    if [[ $square -eq $number ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt=$(echo \"sqrt($number)\" | bc)\n    local square=$(echo \"$sqrt * $sqrt\" | bc)\n    if [ $square -eq $number ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local number=$1\n    local sqrt_number=$(echo \"scale=0; sqrt($number)\" | bc)\n    local sqrt_number_squared=$(echo \"$sqrt_number * $sqrt_number\" | bc)\n    if [ $sqrt_number_squared -eq $number ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi"
  ]
}
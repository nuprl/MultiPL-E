{
  "name": "mbpp_644_reverse_Array_Upto_K",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to reverse an array upto a given position.\n#\n# $1 is a space-separated list\n# $2 is an integer\nreverse_Array_Upto_K() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_644_reverse_Array_Upto_K.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    reverse_Array_Upto_K \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"4\") = \"4 3 2 1 5 6\" ]]\n    [[ $(candidate \"4 5 6 7\" \"2\") = \"5 4 6 7\" ]]\n    [[ $(candidate \"9 8 7 6 5\" \"3\") = \"7 8 9 6 5\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local -a array=(\"${!1}\")\n  local k=$2\n  local -a reversed_array=()\n  local i=0\n  local j=0\n  for ((i=0; i<k; i++)); do\n    reversed_array[$i]=${array[$((k-i-1))]}\n  done\n  for ((j=k; j<${#array[@]}; j++)); do\n    reversed_array[$j]=${array[$j]}\n  done\n  echo \"${reversed_array[@]}\"",
    "    local -n arr=\"$1\"\n    local k=\"$2\"\n    local i=0\n    local j=0\n    local temp=0\n    for ((i=0; i<k; i++))\n    do\n        for ((j=i; j<k; j++))\n        do\n            if [[ ${arr[i]} -gt ${arr[j]} ]]\n            then\n                temp=${arr[i]}\n                arr[i]=${arr[j]}\n                arr[j]=$temp\n            fi\n        done\n    done",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=0\n    local temp=0\n    local length=${#array[@]}\n    if [ $k -gt $length ]\n    then\n        echo \"k is greater than length of array\"\n        return\n    fi\n    for (( i=0; i<k/2; i++ ))\n    do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=\"$2\"\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n\n    if (( k >= n )); then\n        echo \"Error: k must be less than the length of the array\"\n        return 1\n    fi\n\n    while (( i < k )); do\n        j=$(( n - i - 1 ))\n        if (( i < j )); then\n            array[i]=$(( array[i] + array[j] ))\n            array[j]=$(( array[i] - array[j] ))\n            array[i]=$(( array[i] - array[j] ))\n        fi\n        (( i++ ))\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$k\n    local -i tmp=0\n    while (( i < j )) ; do\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n        (( i++, j-- ))\n    done\n    echo \"${array[@]}\"",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while ((i < j)); do\n        local temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=${array[-1]}\n    local -i i=0\n    local -i j=${#array[@]}-2\n\n    while (( i < j )); do\n        if (( i < k )); then\n            local tmp=${array[i]}\n            array[i]=${array[j]}\n            array[j]=$tmp\n        fi\n        (( i++ ))\n        (( j-- ))\n    done\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i len\n    local -i mid\n    local -i tmp\n\n    array=($1)\n    k=$2\n    len=${#array[@]}\n    mid=$((k / 2))\n\n    for ((i=0; i<mid; i++)); do\n        j=$((k - i - 1))\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i mid=0\n    local -i temp=0\n\n    if [ $k -gt $n ]; then\n        k=$n\n    fi\n\n    mid=$((k/2))\n\n    for ((i=0; i<mid; i++)); do\n        j=$((k-i-1))\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local k=\"$2\"\n    local -a reversed_Array=()\n    local i=0\n    local j=0\n    local length=${#array[@]}\n    if [[ $k -gt $length ]]; then\n        k=$length\n    fi\n    for ((i=0; i<k; i++)); do\n        reversed_Array[j]=${array[$((k-i-1))]}\n        j=$((j+1))\n    done\n    for ((i=k; i<length; i++)); do\n        reversed_Array[j]=${array[i]}\n        j=$((j+1))\n    done\n    echo \"${reversed_Array[@]}\"",
    "    local -a array\n    local -i k\n    IFS=' ' read -r -a array <<< \"$1\"\n    k=$2\n    for ((i=0; i<k; i++)) {\n        echo -n \"${array[k-i-1]} \"\n    }\n    echo",
    "    local -a array\n    local -i k\n    IFS=' ' read -r -a array <<< \"$1\"\n    k=$2\n    for ((i=k; i>=0; i--)); do\n        echo -n \"${array[i]} \"\n    done\n    echo",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i n=${#array[@]}\n    local -i temp\n    while (( i < j )); do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local tmp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$tmp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=k\n    local -i temp=0\n\n    while (( i < j ))\n    do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        (( i++ ))\n        (( j-- ))\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i mid=$((k/2))\n    local -i temp=0\n    if [[ $k -gt $len ]]; then\n        echo \"K is greater than the length of the array\"\n        exit 1\n    fi\n    for ((i=0; i<mid; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=${#array[@]}\n    local -i mid=$((k / 2))\n    local -i tmp\n    if ((k > j)); then\n        k=$j\n    fi\n    while ((i < mid)); do\n        tmp=${array[i]}\n        array[i]=${array[k - i - 1]}\n        array[k - i - 1]=$tmp\n        ((i++))\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i m=$((k/2))\n    local -i p=$((k%2))\n    local -i t=0\n    if [ $k -gt $n ]; then\n        k=$n\n    fi\n    while [ $i -lt $m ]; do\n        t=${array[$i]}\n        array[$i]=${array[$((k-1-i))]}\n        array[$((k-1-i))]=$t\n        ((i++))\n    done\n    if [ $p -eq 1 ]; then\n        ((i++))\n    fi\n    while [ $i -lt $n ]; do\n        array[$j]=${array[$i]}\n        ((i++))\n        ((j++))\n    done\n    array[$j]=${array[$i]}\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i temp\n\n    while ((i < j))\n    do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        ((i++))\n        ((j--))\n    done\n\n    echo \"${array[@]}\"",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp=0\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=${array[-1]}\n    local -i i=0\n    local -i j=${#array[@]}-2\n    local -i temp=0\n    while (( i < k && j > k )); do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        (( i++ ))\n        (( j-- ))\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [[ $k -gt $n ]]; then\n        echo \"K is greater than the length of the array\"\n        exit 1\n    fi\n\n    for (( i = 0; i < k/2; i++ )); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "  local -n array=$1\n  local k=$2\n  local i\n  local j\n  local tmp\n  for ((i=0; i<k/2; i++)); do\n    j=$((k-i-1))\n    tmp=${array[i]}\n    array[i]=${array[j]}\n    array[j]=$tmp\n  done",
    "    local -a array=(\"$@\")\n    local k=$2\n    local -a reversed_array=()\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    if [[ $k -gt $len ]]; then\n        echo \"k is greater than length of array\"\n        exit 1\n    fi\n    for ((i=0; i<k; i++)); do\n        reversed_array[j]=${array[k-i-1]}\n        ((j++))\n    done\n    for ((i=k; i<len; i++)); do\n        reversed_array[j]=${array[i]}\n        ((j++))\n    done\n    echo ${reversed_array[@]}",
    "  local -a array=(\"$@\")\n  local -i k=$2\n  local -i i=0\n\n  while [ $i -lt $k ]; do\n    echo -n \"${array[$i]} \"\n    ((i++))\n  done\n\n  while [ $i -lt ${#array[@]} ]; do\n    echo -n \"${array[$(( ${#array[@]} - 1 - $i ))]} \"\n    ((i++))\n  done\n  echo",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array\n    local i\n    for ((i=0; i<k; i++)); do\n        reversed_array[$i]=${array[$((k-i-1))]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[$i]=${array[$i]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array=($1)\n    local -i k=$2\n    local -i i=0\n    local -i j=${#array[@]}\n    local -i temp=0\n    while (( i < k && j > k ))\n    do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        (( i++ ))\n        (( j-- ))\n    done\n    echo ${array[@]}",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n\n    array=($1)\n    k=$2\n    n=${#array[@]}\n\n    if (( k > n )); then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n\n    for (( i = 0, j = k - 1; i < j; i++, j-- )); do\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n    done\n\n    echo \"${array[@]}\"",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local tmp\n    while [ $i -lt $j ]; do\n        tmp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$tmp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo \"${array[@]}\"",
    "    local -a array=($1)\n    local k=$2\n    local -a reversed_array=()\n    local i=0\n    local j=0\n    local len=${#array[@]}\n    while [ $i -lt $k ]; do\n        reversed_array[$i]=${array[$((len-i-1))]}\n        i=$((i+1))\n    done\n    while [ $i -lt $len ]; do\n        reversed_array[$i]=${array[$j]}\n        i=$((i+1))\n        j=$((j+1))\n    done\n    echo ${reversed_array[@]}",
    "  local -n array=$1\n  local k=$2\n  local i=0\n  local j=$((k-1))\n  local tmp\n  while ((i < j)); do\n    tmp=${array[i]}\n    array[i]=${array[j]}\n    array[j]=$tmp\n    ((i++))\n    ((j--))\n  done",
    "    local -a array=(\"$@\")\n    local k=\"$2\"\n    local i=0\n    local j=$((k-1))\n    local tmp\n\n    while [ $i -lt $j ]; do\n        tmp=\"${array[$i]}\"\n        array[$i]=\"${array[$j]}\"\n        array[$j]=\"$tmp\"\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "  local -a array\n  local -i k\n  local -i i\n  local -i j\n  array=($1)\n  k=$2\n  i=0\n  j=$((k-1))\n  while ((i < j)); do\n    tmp=${array[i]}\n    array[i]=${array[j]}\n    array[j]=$tmp\n    ((i++))\n    ((j--))\n  done\n  echo \"${array[@]}\"",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local tmp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$tmp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=($1)\n    local k=$2\n    local -a reversed_array=()\n    local i=0\n    local j=0\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n    for ((i=0; i<${#reversed_array[@]}; i++)); do\n        echo -n \"${reversed_array[i]} \"\n    done\n    echo",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n\n    array=($1)\n    k=$2\n    n=${#array[@]}\n\n    for ((i=0, j=n-1; i<j; i++, j--)); do\n        if ((i >= k)); then\n            break\n        fi\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n    done\n\n    echo ${array[@]}",
    "    local -a array\n    local -i k\n    array=($1)\n    k=$2\n    if (( k > ${#array[@]} )); then\n        echo \"Error: k is greater than the length of the array\"\n        return 1\n    fi\n    for (( i = 0; i < k / 2; i++ )); do\n        temp=${array[i]}\n        array[i]=${array[k - i - 1]}\n        array[k - i - 1]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local k=$2\n    local -i i=0\n    local -i j=0\n    local -i len=${#array[@]}\n    local -i mid=0\n    local -i end=0\n    local -i start=0\n    local temp=0\n\n    if [ $k -lt $len ]; then\n        mid=$((k/2))\n        end=$((k-1))\n        for ((i=0; i<mid; i++)); do\n            temp=${array[i]}\n            array[i]=${array[end]}\n            array[end]=$temp\n            ((end--))\n        done\n    else\n        mid=$((len/2))\n        end=$((len-1))\n        for ((i=0; i<mid; i++)); do\n            temp=${array[i]}\n            array[i]=${array[end]}\n            array[end]=$temp\n            ((end--))\n        done\n    fi\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [ $k -gt $n ]; then\n        k=$n\n    fi\n\n    for ((i=0; i<k/2; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local k=$2\n    local i\n    local j\n    local temp\n    for ((i=0, j=${#array[@]}-1; i<k; i++, j--)); do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n    local -i mid\n    local -i tmp\n\n    array=($1)\n    k=$2\n    n=${#array[@]}\n    mid=$((k/2))\n\n    for ((i=0; i<mid; i++)); do\n        j=$((k-i-1))\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n    done\n\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i n=${#array[@]}\n    local -i temp=0\n    while [[ $i -lt $j ]]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while ((i < j)); do\n        local temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "    local -n arr=$1\n    local k=$2\n    local len=${#arr[@]}\n    local i=0\n    while (( i < k/2 )); do\n        local temp=${arr[i]}\n        arr[i]=${arr[k-i-1]}\n        arr[k-i-1]=$temp\n        (( i++ ))\n    done",
    "    local -a array=($1)\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if [ $k -gt $n ]; then\n        echo \"K is greater than the size of the array\"\n        return\n    fi\n    while [ $i -lt $k ]; do\n        j=$((n-i-1))\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i m=0\n    local -i temp=0\n    if [ $k -gt $n ]\n    then\n        echo \"k is greater than length of array\"\n        return 1\n    fi\n    m=$((k/2))\n    for ((i=0; i<m; i++))\n    do\n        j=$((k-i-1))\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n    done\n    echo \"${array[@]}\"",
    "    # $1 is a space-separated list\n    # $2 is an integer\n    local array=()\n    local i=0\n    for item in $1; do\n        array[$i]=$item\n        i=$((i+1))\n    done\n    local k=$2\n    if [ $k -gt $((i-1)) ]; then\n        k=$((i-1))\n    fi\n    local j=$((i-1))\n    for ((i=0; i<=k; i++)); do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i temp\n\n    if [[ $k -gt ${#array[@]} ]]; then\n        echo \"K is greater than array length\"\n        return 1\n    fi\n\n    while [[ $i -lt $j ]]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    array=($1)\n    k=$2\n    for ((i=0; i<k/2; i++)); do\n        tmp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$tmp\n    done\n    echo ${array[@]}",
    "  local -a array=(\"$@\")\n  local -i k=$2\n  local -i i=0\n  local -i j=k\n  local -i temp=0\n  while [ $i -lt $j ]\n  do\n    temp=${array[$i]}\n    array[$i]=${array[$j]}\n    array[$j]=$temp\n    ((i++))\n    ((j--))\n  done\n  echo \"${array[@]}\"",
    "  local -a array=(\"$@\")\n  local -i k=$2\n  local -i i=0\n  local -i j=0\n  local -i temp=0\n  local -i len=${#array[@]}\n\n  if [[ $k -lt 0 ]]; then\n    echo \"k must be greater than 0\"\n    exit 1\n  fi\n\n  if [[ $k -gt $len ]]; then\n    echo \"k must be less than or equal to the length of the array\"\n    exit 1\n  fi\n\n  for ((i=0; i<k/2; i++)); do\n    temp=${array[$i]}\n    array[$i]=${array[$k-$i-1]}\n    array[$k-$i-1]=$temp\n  done\n\n  echo \"${array[@]}\"",
    "  local -a array=(\"$@\")\n  local -i k=$2\n  local -i i=0\n  local -i j=${#array[@]}-1\n  while (( i < k && j > k )); do\n    array[i]=$(echo \"${array[i]}\" | rev)\n    array[j]=$(echo \"${array[j]}\" | rev)\n    (( i++, j-- ))\n  done\n  echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n\n    array=($1)\n    k=$2\n\n    for ((i=0; i<k/2; i++)); do\n        j=$((k-i-1))\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n    done\n\n    echo \"${array[*]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    array=($1)\n    k=$2\n    for ((i=0; i<k/2; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n    echo ${array[@]}",
    "    local -a array=(\"${@:1:$#-1}\")\n    local k=$((${@:$#}-1))\n    local -a reversed_array=()\n    for ((i=k; i>=0; i--)); do\n        reversed_array+=(${array[i]})\n    done\n    for ((i=k+1; i<${#array[@]}; i++)); do\n        reversed_array+=(${array[i]})\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i n=${#array[@]}\n    local -i temp=0\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i len\n\n    array=($1)\n    k=$2\n    len=${#array[@]}\n\n    if (( k > len )); then\n        echo \"k is greater than length of array\"\n        return 1\n    fi\n\n    for (( i = 0, j = k - 1; i < j; i++, j-- )); do\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=\"$2\"\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i mid=0\n    local -i temp=0\n    if [ $k -gt $n ]; then\n        k=$n\n    fi\n    mid=$((k/2))\n    for ((i=0; i<mid; i++)); do\n        j=$((k-i-1))\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array\n\n    for ((i=0; i<=k; i++)); do\n        reversed_array[i]=${array[k-i]}\n    done\n\n    for ((i=k+1; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n\n    echo \"${reversed_array[@]}\"",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp=0\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local -n array=$1\n    local k=$2\n    local -a reversed_array\n    local i\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n    array=(\"${reversed_array[@]}\")",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i\n    local -i j\n    local -i n=${#array[@]}\n    local -i m=$((n-k))\n    for ((i=0; i<m; i++)); do\n        j=$((n-i-1))\n        array[i]=${array[j]}\n    done\n    for ((i=m; i<n; i++)); do\n        array[i]=${array[i-m]}\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i n=${#array[@]}\n    local -i temp\n\n    while (( i < j )); do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        (( i++ ))\n        (( j-- ))\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [[ $k -gt $n ]]; then\n        echo \"K is greater than the size of the array\"\n        return 1\n    fi\n\n    while [[ $i -lt $k ]]; do\n        j=$((n-i-1))\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if (( k > n )); then\n        echo \"Error: k is greater than the length of the array\"\n        exit 1\n    fi\n    while (( i < k/2 )); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n        (( i++ ))\n    done\n    echo \"${array[@]}\"",
    "    local -a arr=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=${#arr[@]}-1\n    local -i mid=0\n    if [ $k -gt $j ]; then\n        mid=$j\n    else\n        mid=$k\n    fi\n    while [ $i -lt $mid ]; do\n        local tmp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$tmp\n        i=$i+1\n        j=$j-1\n    done\n    echo ${arr[@]}",
    "    # Convert the space-separated list into an array\n    local -a array=($1)\n    # Get the length of the array\n    local len=${#array[@]}\n    # Check if $2 is a number and if it is less than the length of the array\n    if [[ $2 =~ ^[0-9]+$ ]] && [ $2 -lt $len ]; then\n        # Get the first $2 elements of the array\n        local -a array_upto_k=(${array[@]:0:$2})\n        # Reverse the array\n        local -a reversed_array_upto_k=($(echo ${array_upto_k[@]} | tr ' ' '\\n' | tac | tr '\\n' ' '))\n        # Print the reversed array\n        echo ${reversed_array_upto_k[@]}\n    else\n        echo \"Error: $2 is not a number or is greater than the length of the array\"\n    fi",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n\n    array=($1)\n    k=$2\n\n    if [ $k -gt ${#array[@]} ]; then\n        k=${#array[@]}\n    fi\n\n    for ((i=0, j=k-1; i<j; i++, j--)); do\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n    done\n\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [ $k -gt $n ]\n    then\n        echo \"K is greater than the length of the array\"\n        return\n    fi\n\n    while [ $i -lt $k ]\n    do\n        j=$((n-i-1))\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if (( k > n )); then\n        echo \"Error: k is greater than the length of the array.\"\n        return 1\n    fi\n\n    for (( i=0; i<k/2; i++ )); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i tmp=0\n\n    if [[ $k -gt $n ]]; then\n        k=$n\n    fi\n\n    for ((i=0; i<k/2; i++)); do\n        tmp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$tmp\n    done\n\n    for ((i=0; i<n; i++)); do\n        if [[ $i -eq 0 ]]; then\n            printf \"%d\" ${array[i]}\n        else\n            printf \" %d\" ${array[i]}\n        fi\n    done\n    printf \"\\n\"",
    "\tlocal -a array\n\tarray=($1)\n\tlocal k=$2\n\tlocal -i i\n\tfor ((i=0; i<k/2; i++)); do\n\t\tlocal temp=${array[i]}\n\t\tarray[i]=${array[k-i-1]}\n\t\tarray[k-i-1]=$temp\n\tdone\n\techo ${array[@]}",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a result=()\n    local i\n    for ((i=0; i<k; i++)); do\n        result[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        result[i]=${array[i]}\n    done\n    echo \"${result[@]}\"",
    "  local array=(\"$@\")\n  local k=$2\n  local i=0\n  local j=$((k-1))\n  while [ $i -lt $j ]; do\n    local temp=${array[$i]}\n    array[$i]=${array[$j]}\n    array[$j]=$temp\n    ((i++))\n    ((j--))\n  done\n  echo ${array[@]}",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local tmp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$tmp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i m=$((k/2))\n    local -i temp=0\n    for ((i=0; i<m; i++))\n    do\n        temp=${array[i]}\n        array[i]=${array[k-i]}\n        array[k-i]=$temp\n    done\n    echo ${array[@]}",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while ((i < j)); do\n        local tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$tmp\n        ((i++))\n        ((j--))\n    done",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=0\n    local tmp=0\n    for ((i=0; i<k/2; i++))\n    do\n        tmp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$tmp\n    done\n    echo ${array[@]}",
    "    local -a array=(\"${@:1:$2}\")\n    local -a reversed_array=()\n    local i=0\n    for ((i=${#array[@]}-1; i>=0; i--)); do\n        reversed_array+=(\"${array[$i]}\")\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array\n    local -i k\n    array=($1)\n    k=$2\n    if (( k < ${#array[@]} )); then\n        for (( i = 0; i < k; i++ )); do\n            echo -n \"${array[$((k - i))]} \"\n        done\n        echo\n    else\n        echo \"k is greater than the length of the array\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i tmp=0\n\n    if [ $k -gt $n ]; then\n        k=$n\n    fi\n\n    for ((i=0; i<k/2; i++)); do\n        tmp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$tmp\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=($1)\n    local k=$2\n    local -a reversed_array=()\n    local i=0\n\n    if [ $k -gt ${#array[@]} ]; then\n        k=${#array[@]}\n    fi\n\n    for ((i=0; i<$k; i++)); do\n        reversed_array[$i]=${array[$(($k-$i-1))]}\n    done\n\n    echo ${reversed_array[@]}",
    "    local -a array=($1)\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i mid=$((k/2))\n    local -i temp=0\n    if [ $k -gt $n ]; then\n        echo \"Error: k is greater than the length of the array\"\n        return 1\n    fi\n    for ((i=0; i<mid; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n\n    if (( k > n )); then\n        echo \"Error: k is greater than the length of the array\"\n        return 1\n    fi\n\n    for (( i = 0; i < k / 2; i++ )); do\n        j=$(( k - i - 1 ))\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n    array=($1)\n    k=$2\n    n=${#array[@]}\n    for ((i=0, j=n-1; i<k/2; i++, j--)); do\n        array[i]=${array[i]/%/'#'}\n        array[j]=${array[j]/%/'#'}\n        array[i]=${array[j]%#}\n        array[j]=${array[i]%#}\n    done\n    echo ${array[@]}",
    "    local -a array=($1)\n    local k=$2\n    local i=0\n    local j=$((${#array[@]} - 1))\n    local temp\n\n    while [ $i -lt $k ] && [ $j -gt $k ]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n\n    echo ${array[@]}",
    "    local -n arr=$1\n    local k=$2\n    local len=${#arr[@]}\n    local i=0\n    local j=$((len-1))\n    local tmp\n\n    while [ $i -lt $j ]; do\n        if [ $i -lt $k -a $j -gt $k ]; then\n            tmp=${arr[$i]}\n            arr[$i]=${arr[$j]}\n            arr[$j]=$tmp\n        fi\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i len\n    local -i mid\n    local -i tmp\n    array=($1)\n    k=$2\n    len=${#array[@]}\n    mid=$((k/2))\n    for ((i=0; i<mid; i++)); do\n        j=$((k-i-1))\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n    done\n    echo \"${array[@]}\"",
    "  local -a arr=(\"${!1}\")\n  local k=\"$2\"\n  local i\n  for ((i=0; i<k/2; i++)); do\n    local tmp=${arr[i]}\n    arr[i]=${arr[k-i-1]}\n    arr[k-i-1]=$tmp\n  done\n  echo \"${arr[@]}\"",
    "    local -a array=($1)\n    local k=$2\n    local -a reversed\n    local i=0\n    while [ $i -lt $k ]; do\n        reversed[$i]=${array[$((k-i-1))]}\n        i=$((i+1))\n    done\n    echo ${reversed[@]}",
    "    local -a array\n    local -i k\n    IFS=' ' read -r -a array <<< \"$1\"\n    k=$2\n    for ((i=0; i<k; i++)); do\n        echo -n \"${array[k-i-1]} \"\n    done\n    echo",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n    local -i m\n    local -i t\n    array=( $1 )\n    k=$2\n    n=${#array[@]}\n    m=$((n-1))\n    if [ $k -gt $m ]\n    then\n        k=$m\n    fi\n    for ((i=0,j=k; i<j; i++,j--))\n    do\n        t=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$t\n    done\n    echo ${array[@]}",
    "    local -a array\n    local -i k\n    read -a array <<< \"$1\"\n    k=$2\n    for (( i = 0; i < k; i++ )); do\n        echo -n \"${array[k-i-1]} \"\n    done\n    echo",
    "    local -a array=(\"${!1}\")\n    local k=\"$2\"\n    local i=0\n    local j=0\n    local tmp=0\n    local len=${#array[@]}\n    if [ $k -gt $len ]; then\n        k=$len\n    fi\n    while [ $i -lt $k -a $j -lt $k ]; do\n        tmp=${array[$i]}\n        array[$i]=${array[$k-$j-1]}\n        array[$k-$j-1]=$tmp\n        let i++\n        let j++\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if (( k > n )); then\n        k=n\n    fi\n\n    for (( i=0; i<k/2; i++ )); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n\n    echo ${array[@]}",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $k ]; do\n        reversed_array[$i]=${array[$j]}\n        i=$((i+1))\n        j=$((j-1))\n    done\n    i=$k\n    while [ $i -lt ${#array[@]} ]; do\n        reversed_array[$i]=${array[$i]}\n        i=$((i+1))\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local tmp\n    while ((i<j)); do\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n    local -i m\n    local -i t\n\n    array=($1)\n    k=$2\n    n=${#array[@]}\n    m=$((n-1))\n    for ((i=0; i<k; i++)); do\n        j=$((m-i))\n        if ((i >= j)); then\n            break\n        fi\n        t=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$t\n    done\n    echo \"${array[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=0\n    local temp=0\n    for ((i=0; i<k; i++))\n    do\n        j=$((k-i-1))\n        temp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$temp\n    done",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n    local -i m\n    local -i tmp\n    array=($1)\n    k=$2\n    n=${#array[@]}\n    m=$((n - 1))\n    for ((i=0; i<k; i++)); do\n        j=$((m - i))\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i temp=0\n\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n\n    echo ${array[@]}",
    "    local -a array\n    local -i k\n    read -a array <<< \"$1\"\n    k=$2\n    if (( k < ${#array[@]} )); then\n        for (( i = 0; i < k / 2; i++ )); do\n            tmp=${array[i]}\n            array[i]=${array[k - i - 1]}\n            array[k - i - 1]=$tmp\n        done\n    fi\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i\n    local -i j\n    local -i n=${#array[@]}\n    local -i mid=$((k/2))\n    for ((i=0; i<mid; i++)); do\n        j=$((k-i-1))\n        array[i]=$(echo ${array[i]} ${array[j]} | awk '{print $2 \" \" $1}')\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp=''\n    while [ $i -lt $j ]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo \"${array[@]}\"",
    "    local -a array=($1)\n    local -i k=$2\n    local -i i=0\n    local -i j=${#array[@]}\n    local -i temp=0\n    while [ $i -lt $k ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "    local -a array=($1)\n    local k=$2\n    local -a reversed_array\n    local i=0\n    local j=0\n    for ((i=0; i<k; i++)); do\n        reversed_array[j]=${array[k-i-1]}\n        ((j++))\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[j]=${array[i]}\n        ((j++))\n    done\n    echo ${reversed_array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$k\n    local -i tmp=0\n\n    while [ $i -lt $j ]; do\n        tmp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$tmp\n        ((i++))\n        ((j--))\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n    local -i m\n    local -i tmp\n    array=($1)\n    k=$2\n    n=${#array[@]}\n    m=$((n - 1))\n    for ((i = 0; i < k; i++)); do\n        j=$((m - i))\n        tmp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$tmp\n    done\n    echo \"${array[@]}\"",
    "    local -a array=($1)\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if [[ $k -gt $n ]]; then\n        k=$n\n    fi\n    for ((i=0; i<k/2; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=${#array[@]}-1\n    local -i mid=$((k/2))\n    local -i temp=0\n\n    if [[ $k -gt ${#array[@]} ]]; then\n        echo \"k is greater than array length\"\n        return 1\n    fi\n\n    while [[ $i -lt $mid ]]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i mid=0\n    local -i temp=0\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n    mid=$((k/2))\n    for ((i=0; i<mid; i++)); do\n        j=$((k-i-1))\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n\n    array=($1)\n    k=$2\n    n=${#array[@]}\n\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n\n    for ((i=0, j=k-1; i<j; i++, j--)); do\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    array=($1)\n    k=$2\n    for ((i=0; i<k/2; i++)); do\n        tmp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$tmp\n    done\n    echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=\"$2\"\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n\n    for ((i=0; i<k/2; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo ${array[@]}",
    "    local -a array=($1)\n    local k=$2\n    local -a reversed_array=()\n    local i=0\n    local j=0\n    local len=${#array[@]}\n    for ((i=0; i<k; i++)); do\n        reversed_array[$i]=${array[$((len-i-1))]}\n    done\n    for ((i=k; i<len; i++)); do\n        reversed_array[$i]=${array[$j]}\n        j=$((j+1))\n    done\n    echo ${reversed_array[@]}",
    "    local -a array=($1)\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i mid=0\n    local -i temp=0\n\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n\n    mid=$((k/2))\n    for ((i=0; i<mid; i++)); do\n        j=$((k-i-1))\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local array=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo ${array[@]}",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n\n    array=($1)\n    k=$2\n    n=${#array[@]}\n    for ((i=0, j=n-1; i<j; i++, j--)); do\n        if ((i >= k)); then\n            break\n        fi\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local k=$2\n    local -a reversed_array\n    local i=0\n    local j=0\n    for ((i=${#array[@]}-1; i>=0; i--)); do\n        if [[ $i -lt $k ]]; then\n            reversed_array[$j]=${array[$i]}\n            ((j++))\n        fi\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if [ $k -gt $n ]\n    then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n    while [ $i -lt $k ]\n    do\n        j=$((n-i-1))\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n    done\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    array=($1)\n    k=$2\n    if (( k > ${#array[@]} )); then\n        echo \"K is greater than the length of the array\"\n        return 1\n    fi\n    for (( i = 0; i < k / 2; i++ )); do\n        tmp=${array[i]}\n        array[i]=${array[k - i - 1]}\n        array[k - i - 1]=$tmp\n    done\n    echo \"${array[@]}\"",
    "    local -a array=($1)\n    local k=$2\n    local -a reversed_array=()\n    local i=0\n    local j=0\n    for ((i=${#array[@]}-1; i>=0; i--)); do\n        reversed_array[j]=${array[i]}\n        ((j++))\n    done\n    echo ${reversed_array[@]:0:$k}",
    "    local -a array=($1)\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [ $k -gt $n ]; then\n        echo \"K is greater than the length of the array\"\n        return 1\n    fi\n\n    for (( i=0; i<k/2; i++ )); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n\n    for (( i=0; i<n; i++ )); do\n        echo -n \"${array[i]} \"\n    done\n    echo",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while ((i < j)); do\n        local tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$tmp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n\n    if [ $k -ge $n ]; then\n        k=$n-1\n    fi\n\n    while [ $i -lt $k ]; do\n        j=$n-1-$i\n        array[$i]=${array[$i]/%/__}\n        array[$j]=${array[$j]/%/__}\n        array[$i]=${array[$j]/__/}\n        array[$j]=${array[$i]/__/}\n        ((i++))\n    done\n\n    echo \"${array[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i\n    local j\n    local tmp\n    for ((i=0; i<k/2; i++)); do\n        j=$((k-i-1))\n        tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$tmp\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the length of the array\"\n        exit 1\n    fi\n    while [ $i -lt $k ]; do\n        j=$((n-i-1))\n        if [ $i -lt $j ]; then\n            temp=${array[$i]}\n            array[$i]=${array[$j]}\n            array[$j]=$temp\n        fi\n        i=$((i+1))\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=${array[-1]}\n    local -i i=0\n    local -i j=${#array[@]}-2\n    local -i mid=k/2\n    local -i temp=0\n    while [ $i -lt $mid ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    read -a array <<< \"$1\"\n    k=$2\n    for ((i=0; i<k; i++)); do\n        echo -n \"${array[k-i-1]} \"\n    done\n    echo",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i len\n    local -i mid\n    local -i temp\n\n    array=($1)\n    k=$2\n    len=${#array[@]}\n    mid=$((k/2))\n\n    for ((i=0; i<mid; i++)); do\n        j=$((k-i-1))\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i len\n    local -i mid\n    local -i tmp\n    array=($1)\n    k=$2\n    len=${#array[@]}\n    mid=$((k / 2))\n    for ((i=0; i<mid; i++)); do\n        j=$((k - i - 1))\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n    done\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n    local -i m\n    local -i t\n\n    array=( $1 )\n    k=$2\n    n=${#array[@]}\n    m=$(( n - 1 ))\n    for (( i = 0, j = m; i < j; i++, j-- )); do\n        t=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$t\n    done\n    for (( i = 0; i < k; i++ )); do\n        echo -n \"${array[i]} \"\n    done\n    echo",
    "\tlocal -a array=(\"$@\")\n\tlocal -i k=$2\n\tlocal -i i=0\n\tlocal -i j=0\n\tlocal -i n=0\n\tlocal -i temp=0\n\tn=${#array[@]}\n\tif [ $k -gt $n ]\n\tthen\n\t\techo \"K is greater than the size of the array\"\n\t\texit 1\n\tfi\n\tj=$((n-1))\n\twhile [ $i -lt $k ]\n\tdo\n\t\ttemp=${array[$i]}\n\t\tarray[$i]=${array[$j]}\n\t\tarray[$j]=$temp\n\t\ti=$((i+1))\n\t\tj=$((j-1))\n\tdone\n\techo \"${array[@]}\"",
    "  local -a array=($1)\n  local -i k=$2\n  local -i i=0\n  local -i j=0\n  local -i n=${#array[@]}\n  local -i temp=0\n  if [ $k -gt $n ]; then\n    echo \"k is greater than the length of the array\"\n    return\n  fi\n  for (( i=0; i<$k/2; i++ )); do\n    temp=${array[$i]}\n    array[$i]=${array[$k-$i-1]}\n    array[$k-$i-1]=$temp\n  done\n  echo ${array[@]}",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$k\n    local -i temp\n    while (( i < j )); do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        (( i++ ))\n        (( j-- ))\n    done\n    echo \"${array[*]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=${#array[@]}\n    while (( i < k && j > k )); do\n        local tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n        (( i++, j-- ))\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"${!1}\")\n    local k=\"$2\"\n    local i=0\n    local j=0\n    local tmp=0\n    local len=${#array[@]}\n\n    if [ $k -gt $len ]; then\n        echo \"k is greater than array length\"\n        return 1\n    fi\n\n    for ((i=0; i<k/2; i++)); do\n        tmp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$tmp\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -i i=0\n    local -i j=${#array[@]}-1\n    local -i mid=$((k/2))\n    local -i len=${#array[@]}\n    while [ $i -le $mid ] && [ $j -ge $mid ]; do\n        if [ $i -eq $mid ] && [ $((k%2)) -eq 1 ]; then\n            break\n        fi\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local array=(\"$@\")\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]\n    do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local tmp\n    while ((i < j)); do\n        tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$tmp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if [ $k -gt $n ]; then\n        echo \"K is greater than the length of the array\"\n        return 1\n    fi\n    while [ $i -lt $k -a $j -lt $k ]; do\n        temp=${array[$i]}\n        array[$i]=${array[$k-$j-1]}\n        array[$k-$j-1]=$temp\n        ((i++))\n        ((j++))\n    done\n    echo \"${array[@]}\"",
    "    local -a arr=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=${#arr[@]}-1\n    local -i mid=$((k/2))\n    local -i len=${#arr[@]}\n    local -i len_k=$((len-k))\n    local -i len_mid=$((len-mid))\n    local -i len_k_mid=$((len_k-mid))\n    local -i len_k_mid_1=$((len_k_mid-1))\n    local -i len_k_mid_2=$((len_k_mid-2))\n    local -i len_k_mid_3=$((len_k_mid-3))\n    local -i len_k_mid_4=$((len_k_mid-4))\n    local -i len_k_mid_5=$((len_k_mid-5))\n    local -i len_k_mid_6=$((len_k_mid-6))\n    local -i len_k_mid_7=$((len_k_mid-7))\n    local -i len_k_mid_8=$((len_k_mid-8))\n    local -i len_k_mid_9=$((len_k_mid-9))\n    local -i len_k_mid_10=$((len_k_mid-10))\n    local -i len_k_mid_11=$((len_k_mid-11))\n    local -i len_k_mid_12=$((len_k_mid-12))\n    local -i len_k_mid_13=$((len_k_mid-13))\n    local -i len_k_mid_14=$((len_k_mid-14))\n    local -i len_k_mid_15=$((len_k_mid-15))\n    local -i len_k_mid_16=$((len_k_mid-16))\n    local -i len_k_mid_17=$((len_k_mid-17))\n    local -i len_k_mid_18=$((len_k_mid-18))\n    local",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i n=${#array[@]}\n    while (( i < j )); do\n        local temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        (( i++ ))\n        (( j-- ))\n    done\n    printf \"%s\\n\" \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i len=${#array[@]}\n    local -i mid=$((k/2))\n    while ((i < mid))\n    do\n        local temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    array=($1)\n    k=$2\n    i=0\n    j=$((k-1))\n    while [ $i -lt $j ]; do\n        tmp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$tmp\n        i=$((i+1))\n        j=$((j-1))\n    done\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    read -a array <<< \"$1\"\n    k=$2\n    if [[ $k -lt ${#array[@]} ]]; then\n        for ((i=0; i<k/2; i++)); do\n            temp=${array[i]}\n            array[i]=${array[k-i-1]}\n            array[k-i-1]=$temp\n        done\n    fi\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n    array=($1)\n    k=$2\n    n=${#array[@]}\n    for ((i=0, j=n-1; i<j; i++, j--)); do\n        if ((i < k)); then\n            tmp=${array[i]}\n            array[i]=${array[j]}\n            array[j]=$tmp\n        fi\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if [ $k -gt $n ]\n    then\n        echo \"k is greater than the length of the array\"\n        return\n    fi\n    while [ $i -lt $k ]\n    do\n        j=$n-1\n        while [ $j -gt $i ]\n        do\n            temp=${array[$i]}\n            array[$i]=${array[$j]}\n            array[$j]=$temp\n            ((j--))\n        done\n        ((i++))\n    done\n    echo ${array[@]}",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp\n\n    while [[ $i -lt $j ]]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -a array\n    local -i k\n    read -r -a array <<< \"$1\"\n    k=$2\n    if [ $k -gt ${#array[@]} ]; then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n    local -i i\n    for ((i=0; i<k/2; i++)); do\n        local temp\n        temp=${array[$i]}\n        array[$i]=${array[$((k-i-1))]}\n        array[$((k-i-1))]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i m=$((k/2))\n    local tmp=''\n    for ((i=0; i<m; i++)); do\n        j=$((k-i-1))\n        tmp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$tmp\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    for ((i=0; i<k; i++))\n    do\n        j=$((n-i-1))\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=\"$2\"\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n\n    for ((i=0; i<k/2; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    array=($1)\n    k=$2\n    if (( k > ${#array[@]} )); then\n        echo \"Error: k ($k) is greater than the length of the array (${#array[@]})\"\n        return 1\n    fi\n    for (( i = 0; i < k / 2; i++ )); do\n        tmp=${array[i]}\n        array[i]=${array[k - i - 1]}\n        array[k - i - 1]=$tmp\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array=()\n    local i=0\n    local j=0\n    local len=${#array[@]}\n    if [ $k -gt $len ]; then\n        echo \"Error: k is greater than the length of the array\"\n        return 1\n    fi\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[$((k-i-1))]}\n    done\n    for ((j=k; j<len; j++)); do\n        reversed_array[j]=${array[j]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n    array=($1)\n    k=$2\n    n=${#array[@]}\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n    for ((i=0, j=k-1; i<j; i++, j--)); do\n        array[i]=${array[i]^${array[j]}}\n        array[j]=${array[i]^${array[j]}}\n        array[i]=${array[i]^${array[j]}}\n    done\n    echo \"${array[@]}\"",
    "  local -a arr\n  local -i k\n  arr=($1)\n  k=$2\n  for ((i=0; i<k; i++)) do\n    echo -n \"${arr[k-i-1]} \"\n  done\n  echo",
    "    local -a array=(\"${!1}\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if (( k > n )); then\n        echo \"The given position is greater than the length of the array.\"\n        return 1\n    fi\n    for (( i = 0; i < k / 2; i++ )); do\n        temp=${array[i]}\n        array[i]=${array[k - i - 1]}\n        array[k - i - 1]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local -a array=($1)\n    local k=$2\n    local -a reversed_array=()\n    local i=0\n    local j=0\n    for ((i=0; i<k; i++)); do\n        reversed_array[$i]=${array[$((k-i-1))]}\n    done\n    for ((j=k; j<${#array[@]}; j++)); do\n        reversed_array[$j]=${array[$j]}\n    done\n    echo ${reversed_array[@]}",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while ((i < j)); do\n        local tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$tmp\n        ((i++))\n        ((j--))\n    done",
    "    local -a arr=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#arr[@]}\n    local -i mid=0\n    local -i temp=0\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the length of the array\"\n        return\n    fi\n    if [ $k -eq $n ]; then\n        echo \"k is equal to the length of the array\"\n        return\n    fi\n    if [ $k -lt $n ]; then\n        mid=$((k/2))\n        for ((i=0; i<mid; i++)); do\n            j=$((k-i-1))\n            temp=${arr[i]}\n            arr[i]=${arr[j]}\n            arr[j]=$temp\n        done\n        echo \"${arr[@]}\"\n    fi",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [ $k -gt $n ]; then\n        echo \"Error: k > n\"\n        exit 1\n    fi\n\n    for ((i=0; i<$k/2; i++)); do\n        temp=${array[$i]}\n        array[$i]=${array[$k-$i-1]}\n        array[$k-$i-1]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp\n    while ((i<j)); do\n        temp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local tmp\n    while [[ $i -lt $j ]]; do\n        tmp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$tmp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "  local -a array=(\"$@\")\n  local -i k=\"$2\"\n  local -i i=0\n  local -i j=0\n  local -i n=${#array[@]}\n  local -i mid=0\n  local -i temp=0\n\n  if (( k < 0 || k > n )); then\n    echo \"Invalid k\"\n    return 1\n  fi\n\n  mid=$(( k / 2 ))\n  for (( i = 0; i < mid; i++ )); do\n    j=$(( k - i - 1 ))\n    temp=\"${array[i]}\"\n    array[i]=\"${array[j]}\"\n    array[j]=\"$temp\"\n  done\n\n  echo \"${array[@]}\"",
    "    local -a arr=($1)\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local tmp\n    while (( i < j )); do\n        tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$tmp\n        (( i++ ))\n        (( j-- ))\n    done\n    echo ${arr[@]}",
    "    local -a array=(\"$@\")\n    local -i k=\"$2\"\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [[ $k -gt $n ]]; then\n        echo \"K is greater than the length of the array\"\n        return 1\n    fi\n\n    while [[ $i -lt $k ]]; do\n        j=$((n - i - 1))\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        i=$((i + 1))\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=\"$2\"\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n\n    if (( k > n )); then\n        echo \"K is greater than the length of the array\"\n        exit 1\n    fi\n\n    for (( i=0; i<k/2; i++ )); do\n        j=$(( k - i - 1 ))\n        array[i]=$(echo \"${array[i]} ${array[j]}\" | awk '{print $2}')\n        array[j]=$(echo \"${array[i]} ${array[j]}\" | awk '{print $1}')\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=\"$2\"\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if (( k > n )); then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n\n    while (( i < k/2 )); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n        (( i++ ))\n    done\n\n    echo \"${array[@]}\"",
    "  local -a array=(\"$@\")\n  local -i k=$2\n  local -i i=0\n  local -i j=0\n  local -i n=${#array[@]}\n  local -i temp=0\n  for ((i=0; i<k; i++))\n  do\n    j=$((n-i-1))\n    temp=${array[i]}\n    array[i]=${array[j]}\n    array[j]=$temp\n  done\n  echo ${array[@]}",
    "    local -a array=(\"${!1}\")\n    local k=$2\n    local -a reversed_array\n    local i\n    for ((i=0; i<k; i++)); do\n        reversed_array[i]=${array[k-i-1]}\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[i]=${array[i]}\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the number of elements in the array\"\n        return 1\n    fi\n\n    for ((i=0; i<k/2; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n\n    if (( k > n )); then\n        echo \"Error: k > n\"\n        return 1\n    fi\n\n    for (( i=0; i<k/2; i++ )); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n\n    echo \"${array[@]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [ $i -lt $j ]; do\n        local tmp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$tmp\n        i=$((i+1))\n        j=$((j-1))\n    done",
    "    local -a array=(\"$@\")\n    local k=$2\n    local -a reversed_array=()\n    local i=0\n    local j=0\n    for ((i=0; i<k; i++)); do\n        reversed_array[j]=${array[k-i-1]}\n        ((j++))\n    done\n    for ((i=k; i<${#array[@]}; i++)); do\n        reversed_array[j]=${array[i]}\n        ((j++))\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array=(\"$@\")\n    local k=$2\n    local i=0\n    local j=0\n    local temp=0\n    local len=${#array[@]}\n    if [ $k -gt $len ]; then\n        k=$len\n    fi\n    for ((i=0; i<$k/2; i++)); do\n        temp=${array[$i]}\n        array[$i]=${array[$k-$i-1]}\n        array[$k-$i-1]=$temp\n    done\n    for ((j=0; j<$len; j++)); do\n        echo -n \"${array[$j]} \"\n    done\n    echo",
    "  local -a array=(\"$@\")\n  local -i k=$2\n  local -i i=0\n  local -i j=0\n  local -i n=${#array[@]}\n\n  for ((i=0; i<k; i++)); do\n    for ((j=0; j<n-i-1; j++)); do\n      local temp=${array[j]}\n      array[j]=${array[j+1]}\n      array[j+1]=$temp\n    done\n  done\n\n  echo \"${array[@]}\"",
    "    local array=(\"$@\")\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local temp=0\n    while [ $i -lt $j ]; do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n    local -i temp\n    array=($1)\n    k=$2\n    n=${#array[@]}\n    for ((i=0; i<k/2; i++)); do\n        j=$((k-i-1))\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n    echo ${array[@]}",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while ((i < j)); do\n        local temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=($1)\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i m=0\n    local -i temp=0\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n    m=$((k/2))\n    for ((i=0; i<m; i++)); do\n        j=$((k-i-1))\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    while [[ $i -lt $j ]]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    # Check if $2 is an integer\n    if [[ ! $2 =~ ^[0-9]+$ ]]\n    then\n        echo \"Error: $2 is not an integer\"\n        exit 1\n    fi\n\n    # Check if $2 is less than or equal to the length of $1\n    if [[ $2 -gt $# ]]\n    then\n        echo \"Error: $2 is greater than the length of $1\"\n        exit 1\n    fi\n\n    # Reverse the array upto $2\n    for (( i=$2; i>=1; i-- ))\n    do\n        echo -n \"${!i} \"\n    done\n    echo",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$k\n    local tmp\n    while [ $i -lt $j ]; do\n        tmp=${arr[$i]}\n        arr[$i]=${arr[$j]}\n        arr[$j]=$tmp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n\n    array=($1)\n    k=$2\n    n=${#array[@]}\n    i=0\n    j=$((n - 1))\n\n    while ((i < j && i < k && j >= k)); do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n        ((i++))\n        ((j--))\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$k\n    local -i temp=0\n    while [[ $i -lt $k ]]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n    local -i m\n    local -i t\n\n    array=($1)\n    k=$2\n    n=${#array[@]}\n    m=$((n - 1))\n    if [[ $k -gt $m ]]; then\n        k=$m\n    fi\n    for ((i = 0; i < k; i++)); do\n        j=$((n - i - 1))\n        t=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$t\n    done\n    echo ${array[@]}",
    "    local -n array=$1\n    local k=$2\n    local i=0\n    local j=$k\n    while [ $i -lt $j ]; do\n        local temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=(\"${@:1:$2}\")\n    local -a reversed_array=()\n    local i=0\n    for ((i=${#array[@]}-1; i>=0; i--)); do\n        reversed_array+=(\"${array[i]}\")\n    done\n    echo \"${reversed_array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i m=0\n\n    if [ $k -gt $n ]; then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n\n    if [ $k -eq $n ]; then\n        echo \"k is equal to the length of the array\"\n        return 1\n    fi\n\n    for ((i=0; i<k; i++)); do\n        j=$((k-i-1))\n        m=$((i+1))\n        if [ $i -lt $j ]; then\n            array[$i]=${array[$j]}\n            array[$j]=${array[$m]}\n        fi\n    done\n\n    echo \"${array[@]}\"",
    "    local -a array\n    local -i k\n    IFS=' ' read -r -a array <<< \"$1\"\n    k=\"$2\"\n    if (( k < ${#array[@]} )); then\n        for (( i = 0; i < k / 2; i++ )); do\n            tmp=\"${array[i]}\"\n            array[i]=\"${array[k - i - 1]}\"\n            array[k - i - 1]=\"$tmp\"\n        done\n    fi\n    echo \"${array[*]}\"",
    "    local -n arr=$1\n    local k=$2\n    local i=0\n    local j=$((k-1))\n    local tmp\n    while ((i < j)); do\n        tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$tmp\n        ((i++))\n        ((j--))\n    done",
    "    local -n arr=\"$1\"\n    local k=\"$2\"\n    local i=0\n    local j=$((k - 1))\n    while ((i < j)); do\n        local tmp=\"${arr[i]}\"\n        arr[i]=\"${arr[j]}\"\n        arr[j]=\"$tmp\"\n        ((i++))\n        ((j--))\n    done",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i n=${#array[@]}\n    local -i temp=0\n    if [[ $k -gt $n ]]; then\n        echo \"k is greater than the length of the array\"\n        return 1\n    fi\n    for ((i=0; i<k/2; i++)); do\n        temp=${array[i]}\n        array[i]=${array[k-i-1]}\n        array[k-i-1]=$temp\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i temp=0\n    while [ $i -lt $j ]\n    do\n        temp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$temp\n        ((i++))\n        ((j--))\n    done\n    echo \"${array[@]}\"",
    "    local -a array=(\"$@\")\n    local -i k=$2\n    local -i i=0\n    local -i j=$((k-1))\n    local -i tmp=0\n\n    while [ $i -lt $j ]; do\n        tmp=${array[$i]}\n        array[$i]=${array[$j]}\n        array[$j]=$tmp\n        ((i++))\n        ((j--))\n    done\n\n    echo ${array[@]}",
    "    local -a array\n    local -i k\n    local -i i\n    local -i j\n    local -i n\n    local -i temp\n\n    array=($1)\n    k=$2\n    n=${#array[@]}\n    for ((i=0, j=n-1; i<j; i++, j--)); do\n        temp=${array[i]}\n        array[i]=${array[j]}\n        array[j]=$temp\n    done\n    for ((i=0; i<k; i++)); do\n        echo -n \"${array[i]} \"\n    done\n    echo"
  ]
}
{
  "name": "mbpp_279_is_num_decagonal",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the nth decagonal number.\n#\n# $1 is an integer\nis_num_decagonal() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    is_num_decagonal \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"27\" ]]\n    [[ $(candidate \"7\") = \"175\" ]]\n    [[ $(candidate \"10\") = \"370\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_int_sqr=$((nth_decagonal_sqrt_int * nth_decagonal_sqrt_int))\n    if [[ $nth_decagonal -eq $nth_decagonal_sqrt_int_sqr ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_dec=$(echo \"$n_sqrt * $n_sqrt * $n_sqrt\" | bc)\n    local n_dec_test=$(echo \"$n_dec / 3\" | bc)\n    local n_dec_test_int=$(echo \"$n_dec_test / 1\" | bc)\n    local n_dec_test_frac=$(echo \"$n_dec_test - $n_dec_test_int\" | bc)\n    if [ $(echo \"$n_dec_test_frac > 0\" | bc) -eq 1 ]; then\n        return 1\n    fi\n    return 0",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * $num) - 1) / 2 ))\n    local decagonal=$(( $n * (3 * $n - 1) / 2 ))\n    if [ $decagonal -eq $num ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal == $num ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc)\n    local n_dec=$(echo \"$n*(3*$n-1)/2\" | bc)\n    if [ \"$n_dec\" -eq \"$num\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [ $decagonal -eq $num ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n+1)+1)/2\" | bc)\n    local nth_decagonal_squared=$(echo \"$nth_decagonal^2\" | bc)\n    local nth_decagonal_squared_plus_one=$(echo \"$nth_decagonal_squared+1\" | bc)\n    local nth_decagonal_squared_plus_one_divided_by_two=$(echo \"scale=0; $nth_decagonal_squared_plus_one/2\" | bc)\n    if [ $n -eq $nth_decagonal_squared_plus_one_divided_by_two ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    local n_dec=$(echo \"$n\" | cut -d. -f2)\n    if [ \"$n_dec\" == \"\" ]; then\n        echo \"$n_int\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1 + 4 * 2 * $num) / 2\" | bc)\n    local decagonal=$(echo \"scale=0; $n * (3 * $n - 1) / 2\" | bc)\n    if [ $decagonal -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n*$n+4*$n+1)+1)/2\" | bc)\n    local decagonal=$(echo \"scale=0; $nth_decagonal*(3*$nth_decagonal-1)/2\" | bc)\n    if [ $decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1+4*2*$num)/2\" | bc)\n    if [ $((n*(3*n-2))) -eq $num ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * $num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [ $decagonal -eq $num ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local num=$1\n  local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n  local decagonal=$(( n * (3 * n - 1) / 2 ))\n  if [[ $decagonal -eq $num ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(1 + 4 * 2 * $n) / 2\" | bc)\n    local decagonal=$(echo \"scale=0; $nth * (3 * $nth - 1) / 2\" | bc)\n    if [ \"$decagonal\" -eq \"$n\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth=$(echo \"sqrt(4*$n + 1) + 1\" | bc)\n    local nth_dec=$(echo \"$nth/2\" | bc)\n    local nth_dec_int=$(echo \"$nth_dec % 1\" | bc)\n    if [ $nth_dec_int -eq 0 ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    local decagonal=$(echo \"scale=0; $nth_decagonal*(3*$nth_decagonal-1)/2\" | bc)\n    if [ $decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local d=$(echo \"sqrt(4*$n+1)+1\" | bc)\n    if [[ $((d%2)) -eq 1 ]]; then\n        echo \"$n is a decagonal number\"\n    else\n        echo \"$n is not a decagonal number\"\n    fi",
    "    local n=$1\n    local n_decagonal=$(echo \"scale=0; (sqrt(4*$n + 1) + 1)/2\" | bc)\n    if [[ $n_decagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | sed 's/\\..*//')\n    local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | sed 's/^.*\\.//')\n    local nth_decagonal_sqrt_dec_len=${#nth_decagonal_sqrt_dec}\n    local nth_decagonal_sqrt_dec_len_minus_1=$((nth_decagonal_sqrt_dec_len - 1))\n    local nth_decagonal_sqrt_dec_first_digit=${nth_decagonal_sqrt_dec:0:1}\n    local nth_decagonal_sqrt_dec_last_digit=${nth_decagonal_sqrt_dec:$nth_decagonal_sqrt_dec_len_minus_1:1}\n    local nth_decagonal_sqrt_dec_last_digit_plus_1=$((nth_decagonal_sqrt_dec_last_digit + 1))\n    local nth_decagonal_sqrt_dec_last_digit_plus_1_len=${#nth_decagonal_sqrt_dec_last_digit_plus_1}\n    local nth_decagonal_sqrt_dec_last_digit_plus_1_len_minus_1=$((nth_decagonal_sqrt_dec_last_digit_plus_1_len - 1))\n    local nth_decagonal_sqrt_dec_last_digit_plus_1_first_digit=${nth_decagonal_sqrt_dec_last_digit_plus_1:0:1}\n    local nth_decagonal_sqrt_dec_last_digit_plus_1_last_digit=${nth_decagonal_sqrt_dec_last_digit_plus_1:$nth_decagonal_sqrt_",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    (( $n * (3 * $n - 1) / 2 == $num )) && echo \"true\" || echo \"false\"",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num+1)+1\" | bc)\n    if [ $(echo \"$n % 2\" | bc) -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local nth_decagonal=$(decagonal $n)\n  local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n  local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt / 1\" | bc)\n  if [[ $nth_decagonal_sqrt_int == $nth_decagonal_sqrt ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local num=$1\n    local decagonal=$(echo \"sqrt(4*$num + 1) + 1\" | bc)\n    local decagonal_int=$(echo \"$decagonal\" | cut -d. -f1)\n    local decagonal_dec=$(echo \"$decagonal\" | cut -d. -f2)\n    if [[ $decagonal_dec -eq 0 ]] && [[ $(($decagonal_int % 10)) -eq 0 ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_decagonal=$((n*(3*n-2)))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | cut -d'.' -f1)\n    local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | cut -d'.' -f2)\n    if [[ $nth_decagonal_sqrt_dec == 0 ]]; then\n        local nth_decagonal_sqrt_dec_int=$(echo \"$nth_decagonal_sqrt_dec\" | cut -d'.' -f1)\n        if [[ $nth_decagonal_sqrt_dec_int == 0 ]]; then\n            local nth_decagonal_sqrt_dec_dec=$(echo \"$nth_decagonal_sqrt_dec\" | cut -d'.' -f2)\n            if [[ $nth_decagonal_sqrt_dec_dec == 0 ]]; then\n                echo \"true\"\n            else\n                echo \"false\"\n            fi\n        else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n*$n+4*$n+1)+1)/2\" | bc)\n    local nth_decagonal_square=$(echo \"$nth_decagonal*$nth_decagonal\" | bc)\n    local nth_decagonal_square_plus_nth_decagonal=$(echo \"$nth_decagonal_square+$nth_decagonal\" | bc)\n    local nth_decagonal_square_plus_nth_decagonal_div_2=$(echo \"$nth_decagonal_square_plus_nth_decagonal/2\" | bc)\n    if [ \"$nth_decagonal_square_plus_nth_decagonal_div_2\" -eq \"$n\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if [ $(( n * (3 * n - 1) / 2 )) -eq $num ]; then\n        echo \"$num is decagonal\"\n    else\n        echo \"$num is not decagonal\"\n    fi",
    "    local num=$1\n    local n=$(((sqrt(1 + 4 * 2 * num) + 1) / 2))\n    local decagonal=$((n * (3 * n - 1) / 2))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    local n_dec=$(echo \"$n\" | cut -d. -f2)\n    if [ \"$n_dec\" == \"0\" ]; then\n        echo \"$n_int\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if (( n * (3 * n - 1) / 2 == num )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2 + 4*$n + 1) + 1) / 2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * $num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc)\n    local n_decagonal=$(echo \"($n * (3 * $n - 1)) / 2\" | bc)\n    if [ $n_decagonal -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <number>\"\n        return 1\n    fi\n\n    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * $num) - 1) / 2 ))\n\n    if [ $(( $n * ($n + 1) / 2 )) -eq $num ]; then\n        echo \"$num is a decagonal number.\"\n    else\n        echo \"$num is not a decagonal number.\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    [[ $decagonal -eq $num ]]",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if [[ $(( n * (3 * n - 1) / 2 )) -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$((10*n*n-9*n+2))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    if [[ $nth_decagonal_sqrt_int -eq $nth_decagonal_sqrt ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local m=$(echo \"sqrt(4*$n+1)\" | bc)\n    local r=$(echo \"$m % 1\" | bc)\n    if [ \"$r\" == \"0\" ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(4*$n+1)\" | bc)\n    local nth_decagonal=$(echo \"scale=0; $nth*(3*$nth-1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc)\n    if [ $(echo \"$n % 1\" | bc) -eq 0 ]; then\n        echo \"$n\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc)\n    local n_decagonal=$(echo \"($n*(3*$n-1))/2\" | bc)\n    if [ $n_decagonal -eq $num ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num+1)+1\" | bc)\n    local n_decagonal=$(echo \"($n*(3*$n-1))/2\" | bc)\n    if [ $n_decagonal -eq $num ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local num=$1\n    local n=$(( (3 * num + 1) / 2 ))\n    local sqrt=$(echo \"sqrt($n)\" | bc)\n    local sqrt_int=$(echo \"$sqrt\" | cut -d '.' -f 1)\n    local sqrt_dec=$(echo \"$sqrt\" | cut -d '.' -f 2)\n    if [[ $sqrt_dec == 0 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $num -eq $decagonal ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"sqrt(4*$n + 1) + 1\" | bc)\n    local nth_decagonal_int=$(echo \"$nth_decagonal\" | cut -d. -f1)\n    if [[ \"$nth_decagonal\" == \"$nth_decagonal_int\" ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n*$n+4*$n+1)+1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [ $decagonal -eq $num ]; then\n        return 0\n    else\n        return 1\n    fi",
    "  local n=$1\n  local n_sqrt=$(echo \"sqrt($n)\" | bc)\n  local n_sqrt_int=$(echo \"$n_sqrt/1\" | bc)\n  local n_sqrt_dec=$(echo \"$n_sqrt-$n_sqrt_int\" | bc)\n  if [ $(echo \"$n_sqrt_dec == 0\" | bc) -eq 1 ]; then\n    local n_sqrt_int_sq=$(echo \"$n_sqrt_int*$n_sqrt_int\" | bc)\n    local n_sqrt_int_sq_dec=$(echo \"$n_sqrt_int_sq/10\" | bc)\n    local n_sqrt_int_sq_dec_int=$(echo \"$n_sqrt_int_sq_dec/1\" | bc)\n    local n_sqrt_int_sq_dec_dec=$(echo \"$n_sqrt_int_sq_dec-$n_sqrt_int_sq_dec_int\" | bc)\n    if [ $(echo \"$n_sqrt_int_sq_dec_dec == 0\" | bc) -eq 1 ]; then\n      if [ $(echo \"$n_sqrt_int_sq_dec_int == 3\" | bc) -eq 1 ]; then\n        return 0\n      fi\n    fi\n  fi\n  return 1",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n+1)+1)/2\" | bc)\n    local decagonal=$(echo \"scale=0; $nth_decagonal*(3*$nth_decagonal-1)/2\" | bc)\n    if [[ $decagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_int_plus_1=$((nth_decagonal_sqrt_int + 1))\n    local nth_decagonal_sqrt_int_plus_1_sq=$((nth_decagonal_sqrt_int_plus_1 * nth_decagonal_sqrt_int_plus_1))\n    local nth_decagonal_sqrt_int_plus_1_sq_minus_1=$((nth_decagonal_sqrt_int_plus_1_sq - 1))\n    local nth_decagonal_sqrt_int_plus_1_sq_minus_1_div_10=$((nth_decagonal_sqrt_int_plus_1_sq_minus_1 / 10))\n    local nth_decagonal_sqrt_int_plus_1_sq_minus_1_div_10_plus_1=$((nth_decagonal_sqrt_int_plus_1_sq_minus_1_div_10 + 1))\n    if [[ $nth_decagonal -eq $nth_decagonal_sqrt_int_plus_1_sq_minus_1_div_10_plus_1 ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | awk '{print int($1)}')\n    if [ \"$n_sqrt\" != \"$n_sqrt_int\" ]; then\n        return 1\n    fi\n    local n_sqrt_mod=$(echo \"$n_sqrt % 4\" | bc)\n    if [ \"$n_sqrt_mod\" -ne \"1\" ]; then\n        return 1\n    fi\n    return 0",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc)\n    [[ $n =~ ^[0-9]+$ ]] && (( n*(3*n-2) == 2*num ))",
    "    local n=$1\n    local d=$(echo \"sqrt(4*$n+1)+1\" | bc)\n    if [[ $((d%4)) -eq 0 ]]; then\n        echo \"$n is decagonal\"\n    else\n        echo \"$n is not decagonal\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$((n*(3*n-2)/2))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | awk '{printf(\"%d\\n\",$1 + 0.5)}')\n    local nth_decagonal_sqrt_int_sq=$((nth_decagonal_sqrt_int*nth_decagonal_sqrt_int))\n    local nth_decagonal_sqrt_int_sq_3=$((nth_decagonal_sqrt_int_sq*3))\n    local nth_decagonal_sqrt_int_sq_3_1=$((nth_decagonal_sqrt_int_sq_3+1))\n    local nth_decagonal_sqrt_int_sq_3_1_2=$((nth_decagonal_sqrt_int_sq_3_1/2))\n    if [ $nth_decagonal_sqrt_int_sq_3_1_2 -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_decagonal=$(( n * (3*n - 2) ))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | cut -d. -f1)\n    local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | cut -d. -f2)\n    if [ \"$nth_decagonal_sqrt_dec\" == \"0\" ]; then\n        local nth_decagonal_sqrt_int_sq=$(( nth_decagonal_sqrt_int * nth_decagonal_sqrt_int ))\n        if [ \"$nth_decagonal_sqrt_int_sq\" == \"$nth_decagonal\" ]; then\n            return 0\n        fi\n    fi\n    return 1",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    local n_dec=$(echo \"$n\" | cut -d. -f2)\n    if [[ \"$n_dec\" == \"0\" ]]; then\n        echo \"$n_int\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n*$n+4*$n+1)+1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2 + 4*$n + 1) + 1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (3*num + 1) / 2 ))\n    local sqrt_n=$(echo \"sqrt($n)\" | bc)\n    local is_int=$(echo \"$sqrt_n - floor($sqrt_n)\" | bc)\n    if [ \"$is_int\" == \"0\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(1 + 4 * 2 * $n) + 1) / 2\" | bc)\n    local nth_decagonal_squared=$(echo \"scale=0; $nth_decagonal * $nth_decagonal\" | bc)\n    local nth_decagonal_squared_plus_one=$(echo \"scale=0; $nth_decagonal_squared + 1\" | bc)\n    local nth_decagonal_squared_plus_one_divided_by_two=$(echo \"scale=0; $nth_decagonal_squared_plus_one / 2\" | bc)\n    local nth_decagonal_squared_plus_one_divided_by_two_times_nth_decagonal=$(echo \"scale=0; $nth_decagonal_squared_plus_one_divided_by_two * $nth_decagonal\" | bc)\n    if [ \"$nth_decagonal_squared_plus_one_divided_by_two_times_nth_decagonal\" = \"$n\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=\"$1\"\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    local n_dec=$(echo \"$n\" | cut -d. -f2)\n    if [[ \"$n_dec\" == \"0\" ]]; then\n        echo \"$n_int\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    [[ $decagonal == $num ]] && return 0 || return 1",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | sed 's/\\..*//')\n    local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | sed 's/^.*\\.//')\n    if [ \"$nth_decagonal_sqrt_dec\" = \"0\" ]; then\n        local nth_decagonal_sqrt_int_sq=$(echo \"$nth_decagonal_sqrt_int * $nth_decagonal_sqrt_int\" | bc)\n        local nth_decagonal_sqrt_int_sq_10=$(echo \"$nth_decagonal_sqrt_int_sq * 10\" | bc)\n        local nth_decagonal_sqrt_int_sq_10_2=$(echo \"$nth_decagonal_sqrt_int_sq_10 * 2\" | bc)\n        if [ \"$nth_decagonal_sqrt_int_sq_10_2\" = \"$nth_decagonal\" ]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | awk '{print int($1)}')\n    local n_sqrt_dec=$(echo \"$n_sqrt - $n_sqrt_int\" | bc)\n    if [ \"$n_sqrt_dec\" == \"0\" ]; then\n        local n_sqrt_int_sq=$(echo \"$n_sqrt_int * $n_sqrt_int\" | bc)\n        local n_sqrt_int_sq_10=$(echo \"$n_sqrt_int_sq * 10\" | bc)\n        local n_sqrt_int_sq_10_3=$(echo \"$n_sqrt_int_sq_10 + 3\" | bc)\n        local n_sqrt_int_sq_10_3_sqrt=$(echo \"sqrt($n_sqrt_int_sq_10_3)\" | bc)\n        local n_sqrt_int_sq_10_3_sqrt_int=$(echo \"$n_sqrt_int_sq_10_3_sqrt\" | awk '{print int($1)}')\n        local n_sqrt_int_sq_10_3_sqrt_dec=$(echo \"$n_sqrt_int_sq_10_3_sqrt - $n_sqrt_int_sq_10_3_sqrt_int\" | bc)\n        if [ \"$n_sqrt_int_sq_10_3_sqrt_dec\" == \"0\" ]; then\n            local n_sqrt_int_sq_10_3_sqrt_int_2=$(echo \"$n_sqrt_int_sq_10_3_sqrt_int % 2\" | bc)\n            if [ \"$n_sqrt_int_sq_10_3_sqrt_int_2\" == \"0\" ]; then\n                echo \"1\"\n            else\n                echo \"0\"\n            fi\n        else\n            echo \"0\"\n        fi\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | sed 's/\\..*//g')\n    local nth_decagonal_sqrt_int_sq=$(echo \"$nth_decagonal_sqrt_int * $nth_decagonal_sqrt_int\" | bc)\n    local nth_decagonal_sqrt_int_sq_plus_1=$(echo \"$nth_decagonal_sqrt_int_sq + 1\" | bc)\n    local nth_decagonal_sqrt_int_sq_plus_1_sqrt=$(echo \"sqrt($nth_decagonal_sqrt_int_sq_plus_1)\" | bc)\n    local nth_decagonal_sqrt_int_sq_plus_1_sqrt_int=$(echo \"$nth_decagonal_sqrt_int_sq_plus_1_sqrt\" | sed 's/\\..*//g')\n    local nth_decagonal_sqrt_int_sq_plus_1_sqrt_int_sq=$(echo \"$nth_decagonal_sqrt_int_sq_plus_1_sqrt_int * $nth_decagonal_sqrt_int_sq_plus_1_sqrt_int\" | bc)\n    local nth_decagonal_sqrt_int_sq_plus_1_sqrt_int_sq_plus_1=$(echo \"$nth_decagonal_sqrt_int_sq_plus_1_sqrt_int_sq + 1\" | bc)\n    if [ $nth_decagonal_sqrt_int_sq_plus_1_sqrt_int_sq_plus_1 -eq $nth_decagonal ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [ $n -eq $nth_decagonal ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    [[ $n_int -eq $n ]] && return 0 || return 1",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num+1)\" | bc)\n    local n_dec=$(echo \"($n+1)/2\" | bc)\n    local dec=$(echo \"$n_dec*(3*$n_dec-1)/2\" | bc)\n    if [ $dec -eq $num ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1+4*2*num)+1)/2 ))\n    local decagonal=$(( n*(3*n-2) ))\n    if [ $decagonal -eq $num ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth=$(($n*(3*$n-2)))\n    local nth_sqrt=$(echo \"sqrt($nth)\" | bc)\n    local nth_sqrt_int=$(echo \"$nth_sqrt\" | cut -d. -f1)\n    local nth_sqrt_dec=$(echo \"$nth_sqrt\" | cut -d. -f2)\n    if [ \"$nth_sqrt_dec\" == \"0\" ]; then\n        local nth_sqrt_dec_int=$(echo \"$nth_sqrt_int\" | cut -d. -f1)\n        local nth_sqrt_dec_dec=$(echo \"$nth_sqrt_int\" | cut -d. -f2)\n        if [ \"$nth_sqrt_dec_dec\" == \"0\" ]; then\n            if [ $(($nth_sqrt_dec_int % 10)) -eq 5 ]; then\n                echo \"true\"\n            else\n                echo \"false\"\n            fi\n        else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | cut -d. -f1)\n    local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | cut -d. -f2)\n    if [ \"$nth_decagonal_sqrt_dec\" == \"0\" ]; then\n        local nth_decagonal_sqrt_int_plus_1=$(($nth_decagonal_sqrt_int + 1))\n        local nth_decagonal_sqrt_int_plus_1_sq=$(($nth_decagonal_sqrt_int_plus_1 * $nth_decagonal_sqrt_int_plus_1))\n        local nth_decagonal_sqrt_int_plus_1_sq_minus_1=$(($nth_decagonal_sqrt_int_plus_1_sq - 1))\n        local nth_decagonal_sqrt_int_plus_1_sq_minus_1_div_10=$(($nth_decagonal_sqrt_int_plus_1_sq_minus_1 / 10))\n        if [ \"$nth_decagonal_sqrt_int_plus_1_sq_minus_1_div_10\" == \"$n\" ]; then\n            return 0\n        fi\n    fi\n    return 1",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num+1)/2\" | bc)\n    local n_dec=$(echo \"($n*(3*$n-1))/2\" | bc)\n    if [ \"$num\" -eq \"$n_dec\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (3*num + 1) / 2 ))\n    local sqrt_n=$(bc <<< \"sqrt($n)\")\n    local sqrt_n_int=${sqrt_n%.*}\n    local sqrt_n_dec=${sqrt_n#*.}\n    if [[ $sqrt_n_dec -eq 0 ]] && [[ $(( sqrt_n_int*sqrt_n_int )) -eq $n ]]; then\n        echo \"$num is a decagonal number\"\n    else\n        echo \"$num is not a decagonal number\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    if [[ $nth_decagonal =~ ^[0-9]+$ ]]; then\n        echo \"$nth_decagonal\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1+4*2*$num)/2\" | bc -l)\n    if [ $((n*(3*n-2))) -eq $num ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(1+4*2*$n)\" | bc)\n    local nth_decagonal=$(echo \"scale=0; ($nth*(3*$nth-1))/2\" | bc)\n    if [[ $nth_decagonal -eq $n ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local n=$1\n  local nth_decagonal=$((n * (3 * n - 2)))\n  if [[ $nth_decagonal -eq $n ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num + 1) + 1\" | bc)\n    local n_decagonal=$(echo \"($n * (3 * $n - 1)) / 2\" | bc)\n    if [ $n_decagonal -eq $num ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc)\n    [[ $n -eq $(echo \"$n\" | cut -d. -f1) ]] && echo \"$n\"",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc)\n    local n_decagonal=$(echo \"($n*(3*$n-1))/2\" | bc)\n    if [ \"$num\" -eq \"$n_decagonal\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4 * $num + 1) + 1\" | bc)\n    if (( n % 2 == 0 )); then\n        echo \"$num is decagonal\"\n    else\n        echo \"$num is not decagonal\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0;sqrt(1+4*2*$num)/2\" | bc)\n    local decagonal=$(echo \"scale=0;$n*(3*$n-1)/2\" | bc)\n    if [ $decagonal -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    if [ \"$n\" == \"$n_int\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num + 1) + 1\" | bc)\n    local n_mod=$(echo \"$n % 4\" | bc)\n    if [ \"$n_mod\" -eq 0 ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal == $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc)\n    local decagonal=$(echo \"($n*(3*$n-1))/2\" | bc)\n    if [[ $decagonal -eq $num ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc)\n    local n_decagonal=$(echo \"($n * (3 * $n - 1)) / 2\" | bc)\n    if [ $n_decagonal -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2 + 4*$n + 1) + 1)/2\" | bc)\n    if [ $n -eq $nth_decagonal ]; then\n        echo \"$n is the $nth decagonal number.\"\n    else\n        echo \"$n is not a decagonal number.\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo true\n    else\n        echo false\n    fi",
    "    local n=$1\n    local nth_decagonal=$(nth_decagonal $n)\n    if [[ $nth_decagonal =~ ^[0-9]+$ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [ $decagonal -eq $num ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)\" | bc)\n    local n_dec=$(echo \"($n+1)/2\" | bc)\n    local n_dec_sq=$(echo \"$n_dec*$n_dec\" | bc)\n    local n_dec_sq_dec=$(echo \"$n_dec_sq*10\" | bc)\n    local n_dec_sq_dec_n=$(echo \"$n_dec_sq_dec+$n_dec\" | bc)\n    if [ $n_dec_sq_dec_n -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local d=$((n*(3*n-2)))\n    local sqrt_d=$(echo \"sqrt($d)\" | bc -l)\n    local sqrt_d_int=$(echo \"$sqrt_d\" | awk '{print int($1)}')\n    local sqrt_d_frac=$(echo \"$sqrt_d - $sqrt_d_int\" | bc -l)\n    if [ $(echo \"$sqrt_d_frac < 0.00001\" | bc -l) -eq 1 ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc)\n    local n_decagonal=$(echo \"($n*(3*$n-1))/2\" | bc)\n    if [ $n_decagonal -eq $num ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_decagonal=$(nth_decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_int_plus_1=$(($nth_decagonal_sqrt_int + 1))\n    local nth_decagonal_sqrt_int_plus_1_sqr=$(($nth_decagonal_sqrt_int_plus_1 * $nth_decagonal_sqrt_int_plus_1))\n    local nth_decagonal_sqrt_int_plus_1_sqr_minus_1=$(($nth_decagonal_sqrt_int_plus_1_sqr - 1))\n    local nth_decagonal_sqrt_int_plus_1_sqr_minus_1_div_10=$(($nth_decagonal_sqrt_int_plus_1_sqr_minus_1 / 10))\n    if [ $nth_decagonal -eq $nth_decagonal_sqrt_int_plus_1_sqr_minus_1_div_10 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1+4*2*num)-1)/2 ))\n    local decagonal=$(( n*(3*n-2)/2 ))\n    [[ $decagonal -eq $num ]] && return 0 || return 1",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if [[ $(( n * (3 * n - 1) / 2 )) -eq $num ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local num=$1\n  local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n  local decagonal=$(( n * (3 * n - 1) / 2 ))\n\n  if [[ $decagonal -eq $num ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n*$n + 4*$n + 1) + 1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n\n    if [[ $decagonal -eq $num ]]; then\n        echo \"$num is decagonal\"\n    else\n        echo \"$num is not decagonal\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n + 1) + 1)/2\" | bc)\n    local decagonal=$(echo \"scale=0; $nth_decagonal * (3 * $nth_decagonal - 1) / 2\" | bc)\n    if [ \"$decagonal\" -eq \"$n\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1+4*2*$num)/2\" | bc)\n    local nth_decagonal=$(echo \"scale=0; $n*(3*$n-1)/2\" | bc)\n    if [[ $nth_decagonal -eq $num ]]; then\n        echo \"$num is the $n th decagonal number\"\n    else\n        echo \"$num is not a decagonal number\"\n    fi",
    "  local n=$1\n  local nth_decagonal=$((n*(3*n-2)))\n  local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n  local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | sed 's/\\..*//')\n  local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | sed 's/^[0-9]*\\.//')\n  if [ $nth_decagonal_sqrt_dec -eq 0 ] && [ $((nth_decagonal_sqrt_int*nth_decagonal_sqrt_int)) -eq $nth_decagonal ]; then\n    echo \"1\"\n  else\n    echo \"0\"\n  fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n+1)+1)/2\" | bc)\n    local decagonal_num=$(echo \"scale=0; $nth_decagonal*(3*$nth_decagonal-1)/2\" | bc)\n    if [ $n -eq $decagonal_num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2 + 4*$n + 1) + 1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    [[ $decagonal == $num ]] && return 0 || return 1",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if [[ $(( n * (3 * n - 1) / 2 )) -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$((n*(3*n-2)))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_int_plus_one=$((nth_decagonal_sqrt_int+1))\n    local nth_decagonal_sqrt_int_plus_one_sq=$((nth_decagonal_sqrt_int_plus_one*nth_decagonal_sqrt_int_plus_one))\n    local nth_decagonal_sqrt_int_sq=$((nth_decagonal_sqrt_int*nth_decagonal_sqrt_int))\n    if [ $nth_decagonal_sqrt_int_sq -eq $nth_decagonal ] || [ $nth_decagonal_sqrt_int_plus_one_sq -eq $nth_decagonal ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    (( n * (3 * n - 1) / 2 == num )) && return 0 || return 1",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n    if [[ $(( n * (3 * n - 1) / 2 )) -eq $num ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"sqrt(4*$n+1)+1\" | bc)\n    local nth_decagonal_int=${nth_decagonal%.*}\n    if [[ $nth_decagonal_int -eq $nth_decagonal ]]; then\n        echo \"$n is decagonal\"\n    else\n        echo \"$n is not decagonal\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    if (( n * (3 * n - 1) / 2 == num )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=\"$1\"\n    local nth_decagonal=\"$(nth_decagonal \"$n\")\"\n    local nth_decagonal_sqrt=\"$(echo \"sqrt($nth_decagonal)\" | bc)\"\n    local nth_decagonal_sqrt_int=\"${nth_decagonal_sqrt%.*}\"\n    local nth_decagonal_sqrt_int_plus_1=\"$((nth_decagonal_sqrt_int + 1))\"\n    local nth_decagonal_sqrt_int_plus_1_sqr=\"$((nth_decagonal_sqrt_int_plus_1 * nth_decagonal_sqrt_int_plus_1))\"\n    local nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal=\"$((nth_decagonal_sqrt_int_plus_1_sqr - nth_decagonal))\"\n    local nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal_div_10=\"$((nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal / 10))\"\n    local nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal_div_10_mod_10=\"$((nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal_div_10 % 10))\"\n\n    if [ \"$nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal_div_10_mod_10\" -eq 0 ]; then\n        echo \"$nth_decagonal_sqrt_int_plus_1_sqr_minus_nth_decagonal_div_10\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(((sqrt(1 + 4 * 2 * num) + 1) / 2))\n    local decagonal=$((n * (3 * n - 1) / 2))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    if [[ $n =~ ^[0-9]+$ ]]; then\n        echo \"$n\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1+4*2*$num)/2\" | bc)\n    local decagonal=$(echo \"scale=0; $n*(3*$n-1)/2\" | bc)\n    if [ $decagonal -eq $num ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_sqrt_int=$(echo \"$n_sqrt\" | awk '{print int($1)}')\n    local n_sqrt_dec=$(echo \"$n_sqrt - $n_sqrt_int\" | bc)\n    if [[ $n_sqrt_dec == 0.0 ]]; then\n        local n_sqrt_int_sq=$(echo \"$n_sqrt_int * $n_sqrt_int\" | bc)\n        local n_sqrt_int_sq_3=$(echo \"$n_sqrt_int_sq * 3\" | bc)\n        local n_sqrt_int_sq_3_1=$(echo \"$n_sqrt_int_sq_3 + 1\" | bc)\n        local n_sqrt_int_sq_3_1_2=$(echo \"$n_sqrt_int_sq_3_1 / 2\" | bc)\n        local n_sqrt_int_sq_3_1_2_int=$(echo \"$n_sqrt_int_sq_3_1_2\" | awk '{print int($1)}')\n        local n_sqrt_int_sq_3_1_2_dec=$(echo \"$n_sqrt_int_sq_3_1_2 - $n_sqrt_int_sq_3_1_2_int\" | bc)\n        if [[ $n_sqrt_int_sq_3_1_2_dec == 0.0 ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"$num is decagonal\"\n    else\n        echo \"$num is not decagonal\"\n    fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; (sqrt(1 + 4 * 2 * $n) + 1) / 2\" | bc)\n    local decagonal=$(echo \"scale=0; $nth * (3 * $nth - 1) / 2\" | bc)\n    if [ $decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$((n * (3 * n - 2)))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt / 1\" | bc)\n    if [[ $nth_decagonal_sqrt_int == $nth_decagonal_sqrt ]]; then\n        echo \"$nth_decagonal\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(( 10 * $n * $n - 10 * $n + 2 ))\n    local sqrt_nth_decagonal=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local sqrt_nth_decagonal_int=${sqrt_nth_decagonal%.*}\n    local sqrt_nth_decagonal_frac=${sqrt_nth_decagonal#*.}\n    if [[ $sqrt_nth_decagonal_frac -eq 0 ]]; then\n        local sqrt_nth_decagonal_int_plus_1=$(( $sqrt_nth_decagonal_int + 1 ))\n        local sqrt_nth_decagonal_int_plus_1_sq=$(( $sqrt_nth_decagonal_int_plus_1 * $sqrt_nth_decagonal_int_plus_1 ))\n        if [[ $sqrt_nth_decagonal_int_plus_1_sq -eq $nth_decagonal ]]; then\n            echo \"$nth_decagonal is decagonal\"\n        else\n            echo \"$nth_decagonal is not decagonal\"\n        fi\n    else\n        echo \"$nth_decagonal is not decagonal\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$((n*(3*n-2)))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_dec=${nth_decagonal_sqrt#*.}\n    if [[ $nth_decagonal_sqrt_dec -eq 0 ]]; then\n        local nth_decagonal_sqrt_int_sq=$((nth_decagonal_sqrt_int*nth_decagonal_sqrt_int))\n        if [[ $nth_decagonal_sqrt_int_sq -eq $nth_decagonal ]]; then\n            echo 1\n        else\n            echo 0\n        fi\n    else\n        echo 0\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  if [ $# -eq 0 ]; then\n    echo \"Usage: is_num_decagonal <number>\"\n    return 1\n  fi\n  local n=$1\n  local n_sqrt=$(echo \"sqrt(10*$n+1)\" | bc)\n  local n_sqrt_int=$(echo \"$n_sqrt\" | cut -d. -f1)\n  if [ \"$n_sqrt\" == \"$n_sqrt_int\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1 + 4 * 2 * $num) - 1\" | bc)\n    local n_decagonal=$(echo \"scale=0; $n * (3 * $n - 1) / 2\" | bc)\n    if [ $n_decagonal -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local i=1\n    local decagonal=0\n    while [ $decagonal -lt $n ]; do\n        decagonal=$((i*(3*i-1)/2))\n        i=$((i+1))\n    done\n    if [ $decagonal -eq $n ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(4*$n+1)+1\" | bc)\n    if [[ $((nth%2)) -eq 0 ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "  if [ $1 -le 0 ]; then\n    return 1\n  fi\n  local n=$1\n  local nth=$(echo \"scale=0; sqrt(1 + 4 * 2 * $n)\" | bc)\n  local nth_decagonal=$(echo \"scale=0; ($nth * (3 * $nth - 1)) / 2\" | bc)\n  if [ $nth_decagonal -eq $n ]; then\n    return 0\n  else\n    return 1\n  fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d . -f 1)\n    local n_dec=$(echo \"$n\" | cut -d . -f 2)\n    if [ \"$n_dec\" = \"0\" ]; then\n        echo \"$n_int\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(1 + 4 * 2 * $n)\" | bc)\n    if [[ $nth -eq 0 ]]; then\n        return 1\n    fi\n    local nth_decagonal=$(echo \"scale=0; ($nth * (3 * $nth - 1)) / 2\" | bc)\n    if [[ $nth_decagonal -eq $n ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    if [ -z \"$1\" ]; then\n        echo \"Error: is_num_decagonal() requires one argument.\"\n        return 1\n    fi\n    if ! [[ \"$1\" =~ ^[0-9]+$ ]]; then\n        echo \"Error: is_num_decagonal() requires an integer.\"\n        return 1\n    fi\n    local n=$1\n    local nth_decagonal=$((n*(3*n-2)/2))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt/1\" | bc)\n    if [ \"$nth_decagonal_sqrt_int\" -eq \"$nth_decagonal_sqrt\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc)\n    if [ $(echo \"$n % 1\" | bc) -eq 0 ]; then\n        echo \"$n\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(1+4*2*$n)+1)/2\" | bc)\n    if (( $nth_decagonal * (3 * $nth_decagonal - 1) / 2 == $n )); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    local n_dec=$(echo \"$n\" | cut -d. -f2)\n    if [ \"$n_dec\" == \"0\" ]; then\n        echo \"$n_int\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | sed 's/\\..*//')\n    local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | sed 's/^.*\\.//')\n    if [[ $nth_decagonal_sqrt_dec -eq 0 ]]; then\n        local nth_decagonal_sqrt_sq=$(echo \"$nth_decagonal_sqrt_int * $nth_decagonal_sqrt_int\" | bc)\n        if [[ $nth_decagonal_sqrt_sq -eq $nth_decagonal ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num+1)+1\" | bc)\n    local n_decagonal=$(echo \"($n*(3*$n-1))/2\" | bc)\n    if [ $n_decagonal -eq $num ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"$num is decagonal\"\n    else\n        echo \"$num is not decagonal\"\n    fi",
    "\tlocal num=$1\n\tlocal n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n\tlocal decagonal=$(( n * (3 * n - 1) / 2 ))\n\tif [ $decagonal -eq $num ]; then\n\t\treturn 0\n\telse\n\t\treturn 1\n\tfi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    if [ \"$n\" == \"$n_int\" ]; then\n        echo \"$num is decagonal\"\n    else\n        echo \"$num is not decagonal\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal == $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local decagonal=$(echo \"sqrt(4*$num+1)\" | bc)\n    local decagonal_int=$(echo \"$decagonal\" | cut -d'.' -f1)\n    local decagonal_dec=$(echo \"$decagonal\" | cut -d'.' -f2)\n    if [ \"$decagonal_dec\" == \"0\" ] && [ $(echo \"$decagonal_int % 4\" | bc) == \"1\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    if [ $# -ne 1 ]; then\n        echo \"Usage: is_num_decagonal <integer>\"\n        return 1\n    fi\n\n    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * $num) - 1) / 2 ))\n    local decagonal=$(( $n * (3 * $n - 1) / 2 ))\n\n    if [ $num -eq $decagonal ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local x=$(echo \"scale=0; sqrt(1+4*2*$n)\" | bc)\n    if [ $((x*x)) -eq $((1+4*2*n)) ]; then\n        if [ $(((x-1)%4)) -eq 0 ]; then\n            echo \"$n is decagonal\"\n        else\n            echo \"$n is not decagonal\"\n        fi\n    else\n        echo \"$n is not decagonal\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    (( n * (3 * n - 1) / 2 == num )) && echo \"$num is decagonal\"",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1 + 4 * 2 * $num) / 2\" | bc)\n    local decagonal=$(echo \"scale=0; $n * (3 * $n - 1) / 2\" | bc)\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local num=$1\n  local decagonal=$(echo \"sqrt(4*$num+1)+1\" | bc)\n  if [[ $decagonal =~ ^[0-9]+$ ]]; then\n    echo \"$num is decagonal\"\n  else\n    echo \"$num is not decagonal\"\n  fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "  local num=$1\n  local decagonal=$(echo \"sqrt(4*$num+1)\" | bc)\n  local decagonal_int=$(echo \"$decagonal\" | cut -d '.' -f 1)\n  local decagonal_dec=$(echo \"$decagonal\" | cut -d '.' -f 2)\n  if [ \"$decagonal_dec\" -eq 0 ] && [ \"$decagonal_int\" -eq \"$decagonal\" ]; then\n    echo \"$num is decagonal\"\n  else\n    echo \"$num is not decagonal\"\n  fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(2*$num+0.25)-0.5\" | bc)\n    local decagonal=$(echo \"$n*(3*$n-1)/2\" | bc)\n    if [ $decagonal -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | awk '{print int($1)}')\n    local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt - $nth_decagonal_sqrt_int\" | bc)\n    local nth_decagonal_sqrt_dec_int=$(echo \"$nth_decagonal_sqrt_dec * 100\" | bc | awk '{print int($1)}')\n    if [ $nth_decagonal_sqrt_dec_int -eq 40 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n+1)+1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(2*$num+0.25)+0.5\" | bc)\n    local decagonal=$(echo \"scale=0; $n*(3*$n-1)/2\" | bc)\n    if [ $decagonal -eq $num ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    local n_dec=$(echo \"$n\" | cut -d. -f2)\n    if [[ $n_dec == 0 ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local num_decagonal=$(decagonal $(num_decagonals $nth_decagonal))\n    if [ $nth_decagonal -eq $num_decagonal ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$((10*n*n - 9*n + 2))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_dec=${nth_decagonal_sqrt#*.}\n    if [ $nth_decagonal_sqrt_dec -eq 0 ] && [ $((nth_decagonal_sqrt_int%10)) -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc)\n    local decagonal=$(echo \"$n*(3*$n-1)/2\" | bc)\n    if [ $decagonal -eq $num ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num+1)+1\" | bc)\n    local n_decagonal=$(echo \"($n*(3*$n-1))/2\" | bc)\n    if [ $num -eq $n_decagonal ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(4*$num + 1) + 1\" | bc)\n    if [[ $(echo \"$n % 4\" | bc) == 0 ]]; then\n        echo \"$n/4\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $num -eq $decagonal ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_decagonal=$((10*n*n - 9*n))\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc -l)\n    local nth_decagonal_sqrt_int=$(echo \"$nth_decagonal_sqrt\" | cut -d'.' -f1)\n    local nth_decagonal_sqrt_dec=$(echo \"$nth_decagonal_sqrt\" | cut -d'.' -f2)\n    if [[ $nth_decagonal_sqrt_dec == 0 ]]; then\n        local nth_decagonal_sqrt_int_sqr=$((nth_decagonal_sqrt_int*nth_decagonal_sqrt_int))\n        if [[ $nth_decagonal_sqrt_int_sqr == $nth_decagonal ]]; then\n            echo 1\n        else\n            echo 0\n        fi\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(( 10 * $n * $n - 10 * $n + 2 ))\n    local sqrt_nth_decagonal=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local sqrt_nth_decagonal_int=$(echo \"$sqrt_nth_decagonal\" | cut -d. -f1)\n    local sqrt_nth_decagonal_dec=$(echo \"$sqrt_nth_decagonal\" | cut -d. -f2)\n    if [ $sqrt_nth_decagonal_dec -eq 0 ] && [ $(( $sqrt_nth_decagonal_int * $sqrt_nth_decagonal_int )) -eq $nth_decagonal ]; then\n        echo \"$nth_decagonal\"\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n+1)+1)/2\" | bc)\n    if [[ $nth_decagonal =~ ^[0-9]+$ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1 + 4 * 2 * $num) / 2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d '.' -f 1)\n    if [ \"$n\" == \"$n_int\" ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n*$n+4*$n+1)+1)/2\" | bc)\n    if [ $nth_decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_frac=${nth_decagonal_sqrt#*.}\n    if [ $nth_decagonal_sqrt_frac -eq 0 ] && [ $((nth_decagonal_sqrt_int % 10)) -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    if [ $n -eq $nth_decagonal ]; then\n        echo \"$n is decagonal\"\n    else\n        echo \"$n is not decagonal\"\n    fi"
  ]
}
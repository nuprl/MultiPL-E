{
  "name": "mbpp_279_is_num_decagonal",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the nth decagonal number.\n#\n# $1 is an integer\nis_num_decagonal() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    is_num_decagonal \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\") = \"27\" ]]\n    [[ $(candidate \"7\") = \"175\" ]]\n    [[ $(candidate \"10\") = \"370\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local n=$1\n    local nth_decagonal=$(decagonal $n)\n    local nth_decagonal_sqrt=$(echo \"sqrt($nth_decagonal)\" | bc)\n    local nth_decagonal_sqrt_int=${nth_decagonal_sqrt%.*}\n    local nth_decagonal_sqrt_int_sqr=$((nth_decagonal_sqrt_int * nth_decagonal_sqrt_int))\n    if [[ $nth_decagonal -eq $nth_decagonal_sqrt_int_sqr ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local n_sqrt=$(echo \"sqrt($n)\" | bc)\n    local n_dec=$(echo \"$n_sqrt * $n_sqrt * $n_sqrt\" | bc)\n    local n_dec_test=$(echo \"$n_dec / 3\" | bc)\n    local n_dec_test_int=$(echo \"$n_dec_test / 1\" | bc)\n    local n_dec_test_frac=$(echo \"$n_dec_test - $n_dec_test_int\" | bc)\n    if [ $(echo \"$n_dec_test_frac > 0\" | bc) -eq 1 ]; then\n        return 1\n    fi\n    return 0",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * $num) - 1) / 2 ))\n    local decagonal=$(( $n * (3 * $n - 1) / 2 ))\n    if [ $decagonal -eq $num ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal == $num ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc)\n    local n_dec=$(echo \"$n*(3*$n-1)/2\" | bc)\n    if [ \"$n_dec\" -eq \"$num\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [ $decagonal -eq $num ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n+1)+1)/2\" | bc)\n    local nth_decagonal_squared=$(echo \"$nth_decagonal^2\" | bc)\n    local nth_decagonal_squared_plus_one=$(echo \"$nth_decagonal_squared+1\" | bc)\n    local nth_decagonal_squared_plus_one_divided_by_two=$(echo \"scale=0; $nth_decagonal_squared_plus_one/2\" | bc)\n    if [ $n -eq $nth_decagonal_squared_plus_one_divided_by_two ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"sqrt(1+4*2*$num)/2\" | bc -l)\n    local n_int=$(echo \"$n\" | cut -d. -f1)\n    local n_dec=$(echo \"$n\" | cut -d. -f2)\n    if [ \"$n_dec\" == \"\" ]; then\n        echo \"$n_int\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) + 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1 + 4 * 2 * $num) / 2\" | bc)\n    local decagonal=$(echo \"scale=0; $n * (3 * $n - 1) / 2\" | bc)\n    if [ $decagonal -eq $num ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n*$n+4*$n+1)+1)/2\" | bc)\n    local decagonal=$(echo \"scale=0; $nth_decagonal*(3*$nth_decagonal-1)/2\" | bc)\n    if [ $decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local num=$1\n    local n=$(echo \"scale=0; sqrt(1+4*2*$num)/2\" | bc)\n    if [ $((n*(3*n-2))) -eq $num ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * $num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [ $decagonal -eq $num ]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "  local num=$1\n  local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n  local decagonal=$(( n * (3 * n - 1) / 2 ))\n  if [[ $decagonal -eq $num ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local n=$1\n    local nth=$(echo \"scale=0; sqrt(1 + 4 * 2 * $n) / 2\" | bc)\n    local decagonal=$(echo \"scale=0; $nth * (3 * $nth - 1) / 2\" | bc)\n    if [ \"$decagonal\" -eq \"$n\" ]; then\n        return 0\n    else\n        return 1\n    fi",
    "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        return 0\n    else\n        return 1\n    fi",
    "    local n=$1\n    local nth=$(echo \"sqrt(4*$n + 1) + 1\" | bc)\n    local nth_dec=$(echo \"$nth/2\" | bc)\n    local nth_dec_int=$(echo \"$nth_dec % 1\" | bc)\n    if [ $nth_dec_int -eq 0 ]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi",
    "    local num=$1\n    local n=$(( (sqrt(1 + 4 * 2 * num) - 1) / 2 ))\n    local decagonal=$(( n * (3 * n - 1) / 2 ))\n    if [[ $decagonal -eq $num ]]; then\n        echo 1\n    else\n        echo 0\n    fi",
    "    local n=$1\n    local nth_decagonal=$(echo \"scale=0; (sqrt(4*$n^2+4*$n+1)+1)/2\" | bc)\n    local decagonal=$(echo \"scale=0; $nth_decagonal*(3*$nth_decagonal-1)/2\" | bc)\n    if [ $decagonal -eq $n ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi"
  ]
}
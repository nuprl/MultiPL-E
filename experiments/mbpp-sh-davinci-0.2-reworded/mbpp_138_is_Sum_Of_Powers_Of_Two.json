{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n#\n# $1 is an integer\nis_Sum_Of_Powers_Of_Two() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    is_Sum_Of_Powers_Of_Two \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"true\" ]]\n    [[ $(candidate \"7\") = \"false\" ]]\n    [[ $(candidate \"14\") = \"true\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local n=$1\n  local sum=0\n  local power=0\n  while [ $n -gt 0 ]; do\n    if [ $((n % 2)) -eq 1 ]; then\n      sum=$((sum + 2**power))\n    fi\n    n=$((n / 2))\n    power=$((power + 1))\n  done\n  echo $sum",
    "    local num=$1\n    local sum=0\n    local power=0\n    while [ $num -gt 0 ]; do\n        if [ $((num % 2)) -eq 1 ]; then\n            sum=$((sum + 2**power))\n        fi\n        num=$((num / 2))\n        power=$((power + 1))\n    done\n    if [ $sum -eq $1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
    "    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n%2)) -eq 1 ]\n        then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $((n%2)) -eq 1 ]; then\n            sum=$((sum+2**i))\n        fi\n        n=$((n/2))\n        i=$((i+1))\n    done\n    echo $sum",
    "    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]\n    do\n        if [ $((n & 1)) -eq 1 ]\n        then\n            sum=$((sum + 2**i))\n        fi\n        n=$((n >> 1))\n        i=$((i + 1))\n    done\n    echo $sum",
    "  local num=$1\n  local sum=0\n  local i=0\n  while [ $num -gt 0 ]\n  do\n    if [ $((num%2)) -eq 1 ]\n    then\n      sum=$((sum+2**i))\n    fi\n    num=$((num/2))\n    i=$((i+1))\n  done\n  echo $sum",
    "  local n=$1\n  local sum=0\n  local i=0\n  while [ $sum -lt $n ]\n  do\n    sum=$((2**i))\n    if [ $sum -eq $n ]\n    then\n      return 0\n    fi\n    i=$((i+1))\n  done\n  return 1",
    "  local n=$1\n  local sum=0\n  local i=0\n  while [ $n -gt 0 ]\n  do\n    if [ $((n % 2)) -eq 1 ]\n    then\n      sum=$((sum + 2**i))\n    fi\n    n=$((n / 2))\n    i=$((i + 1))\n  done\n  if [ $sum -eq $1 ]\n  then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi",
    "    local n=$1\n    local sum=0\n    local i=0\n    while [ $n -gt 0 ]; do\n        if [ $((n % 2)) -eq 1 ]; then\n            sum=$((sum + 2**i))\n        fi\n        n=$((n / 2))\n        i=$((i + 1))\n    done\n    echo $sum",
    "  local n=$1\n  local sum=0\n  local i=0\n  while [ $sum -lt $n ]\n  do\n    sum=$((2**i + sum))\n    i=$((i + 1))\n  done\n  if [ $sum -eq $n ]\n  then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi",
    "    local n=$1\n    local i=0\n    local sum=0\n    while [ $i -lt $n ]\n    do\n        if [ $(( $n & (1 << $i) )) -ne 0 ]\n        then\n            sum=$(( $sum + (1 << $i) ))\n        fi\n        i=$(( $i + 1 ))\n    done\n    if [ $sum -eq $n ]\n    then\n        echo \"Yes\"\n    else\n        echo \"No\"\n    fi",
    "  local n=$1\n  local sum=0\n  local i=0\n  while [ $n -gt 0 ]; do\n    if [ $((n%2)) -eq 1 ]; then\n      sum=$((sum+2**i))\n    fi\n    n=$((n/2))\n    i=$((i+1))\n  done\n  echo $sum",
    "    local num=$1\n    local sum=0\n    local pow=1\n    while [ $num -gt 0 ]; do\n        if [ $((num % 2)) -eq 1 ]; then\n            sum=$((sum + pow))\n        fi\n        num=$((num / 2))\n        pow=$((pow * 2))\n    done\n    echo $sum",
    "    local num=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $num ]\n    do\n        sum=$((2**$i))\n        if [ $sum -eq $num ]\n        then\n            echo \"True\"\n            return 0\n        fi\n        i=$((i+1))\n    done\n    echo \"False\"\n    return 1",
    "  local n=$1\n  local p=1\n  local sum=0\n  while [ $sum -lt $n ]; do\n    sum=$((sum+p))\n    p=$((p*2))\n  done\n  if [ $sum -eq $n ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
    "    local number=$1\n    local sum=0\n    local power=0\n    while [ $number -gt 0 ]; do\n        if [ $((number & 1)) -eq 1 ]; then\n            sum=$((sum + 2 ** power))\n        fi\n        number=$((number >> 1))\n        power=$((power + 1))\n    done\n    echo $sum",
    "  local number=$1\n  local sum=0\n  local i=0\n  while [ $number -gt 0 ]\n  do\n    if [ $((number % 2)) -eq 1 ]\n    then\n      sum=$((sum + 2**i))\n    fi\n    number=$((number / 2))\n    i=$((i + 1))\n  done\n  echo $sum",
    "  local number=$1\n  local sum=0\n  local power=0\n  while [[ $number -gt 0 ]]; do\n    power=$((number & 1))\n    if [[ $power -eq 1 ]]; then\n      sum=$((sum + power))\n    fi\n    number=$((number >> 1))\n  done\n  if [[ $sum -eq 1 ]]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi",
    "    local n=$1\n    local sum=0\n    local i=0\n    while [ $sum -lt $n ]\n    do\n        sum=$((sum + 2**$i))\n        i=$((i + 1))\n    done\n    if [ $sum -eq $n ]\n    then\n        echo \"Yes\"\n    else\n        echo \"No\"\n    fi",
    "  local n=$1\n  local sum=0\n  local p=1\n  while [ $n -gt 0 ]; do\n    if [ $((n%2)) -eq 1 ]; then\n      sum=$((sum+p))\n    fi\n    n=$((n/2))\n    p=$((p*2))\n  done\n  if [ $sum -eq $1 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi"
  ]
}
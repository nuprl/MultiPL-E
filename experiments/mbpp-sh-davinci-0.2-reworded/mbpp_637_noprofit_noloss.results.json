{
  "name": "mbpp_637_noprofit_noloss",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_637_noprofit_noloss.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit and no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $(($1-$2)) -eq 0 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [[ $1 -eq $2 ]]; then\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit, no loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]; then\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]; then\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]; then\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit and no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]; then\n\t\techo \"No Profit No Loss\"\n\telse\n\t\techo \"Profit or Loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [[ $1 -eq $2 ]]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No Profit No Loss\"\n\telse\n\t\techo \"Profit or Loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    elif [ $1 -gt $2 ]\n    then\n        echo \"Profit\"\n    else\n        echo \"Loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]; then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [[ $1 -eq $2 ]]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or Loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]; then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [[ $1 -eq $2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]; then\n    echo \"No profit, no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [[ $1 -eq $2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]; then\n    echo \"No profit, no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [[ $1 -eq $2 ]]; then\n\t\techo \"No profit, no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]; then\n\t\techo \"True\"\n\telse\n\t\techo \"False\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [[ $1 -eq $2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit, no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [[ $1 -eq $2 ]]\n  then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    elif [ $1 -gt $2 ]\n    then\n        echo \"Loss\"\n    else\n        echo \"Profit\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [[ $1 -eq $2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit, no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [[ $1 -eq $2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No Profit No Loss\"\n  else\n    echo \"Profit or Loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]; then\n\t\techo \"No profit No loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit, no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No Profit No Loss\"\n\telse\n\t\techo \"Profit or Loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit, no loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]; then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"True\"\n\telse\n\t\techo \"False\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit and no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [[ $1 -eq $2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [[ $1 -eq $2 ]]; then\n\t\techo \"No Profit No Loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [[ $1 -eq $2 ]]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]; then\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [[ $1 -eq $2 ]]; then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit, no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit and no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [[ $1 -eq $2 ]]; then\n    echo \"No profit no loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [[ $1 -eq $2 ]]; then\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [[ $1 -eq $2 ]]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit and no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [[ $1 -eq $2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit and no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [[ $1 -eq $2 ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [[ $1 -eq $2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit and no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"No profit no loss\"\n  else\n    echo \"Profit or loss\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]; then\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [[ $1 -eq $2 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n    if [ $1 -eq $2 ]\n    then\n        echo \"No profit, no loss\"\n    else\n        echo \"Profit or loss\"\n    fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]; then\n\t\techo \"true\"\n\telse\n\t\techo \"false\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n  if [ $1 -eq $2 ]\n  then\n    echo \"True\"\n  else\n    echo \"False\"\n  fi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\telse\n\t\techo \"Profit or loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"No profit no loss\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to check whether the given amount has no profit and no loss\n#\n# $1 is an integer\n# $2 is an integer\nnoprofit_noloss() {\n\tif [ $1 -eq $2 ]\n\tthen\n\t\techo \"True\"\n\telse\n\t\techo \"False\"\n\tfi\n}\n\ncandidate() {\n    noprofit_noloss \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1500\" \"1200\") = \"false\" ]]\n    [[ $(candidate \"100\" \"100\") = \"true\" ]]\n    [[ $(candidate \"2000\" \"5000\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667191227,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
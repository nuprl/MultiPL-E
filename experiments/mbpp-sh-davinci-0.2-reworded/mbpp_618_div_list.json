{
  "name": "mbpp_618_div_list",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to divide two lists element wise.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\ndiv_list() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_618_div_list.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    div_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 5 6\" \"1 2 3\") = \"4.0 2.5 2.0\" ]]\n    [[ $(candidate \"3 2\" \"1 4\") = \"3.0 0.5\" ]]\n    [[ $(candidate \"90 120\" \"50 70\") = \"1.8 1.7142857142857142\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local result=\"\"\n  local i=0\n  for n1 in $list1; do\n    local n2=$(echo $list2 | cut -d ' ' -f $((i+1)))\n    local r=$(echo \"scale=2; $n1 / $n2\" | bc)\n    result=\"$result $r\"\n    i=$((i+1))\n  done\n  echo $result",
    "  local list1=$1\n  local list2=$2\n  local result=\"\"\n  local i=0\n\n  for x in $list1; do\n    local y=$(echo $list2 | cut -d ' ' -f $((i+1)))\n    local z=$(echo \"scale=2; $x / $y\" | bc)\n    result=\"$result $z\"\n    i=$((i+1))\n  done\n\n  echo $result",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n\n    for (( i=0; i<${#list1[@]}; i++ )); do\n        result[i]=$(echo \"scale=2; ${list1[i]} / ${list2[i]}\" | bc)\n    done\n\n    echo ${result[@]}",
    "    local -a list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    local i\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result[i]=$(echo \"${list1[i]} / ${list2[i]}\" | bc -l)\n    done\n    echo \"${result[@]}\"",
    "    local list1=($1)\n    local list2=($2)\n    local list3=()\n    for ((i=0; i<${#list1[@]}; i++)); do\n        list3[i]=$(echo \"${list1[i]} / ${list2[i]}\" | bc -l)\n    done\n    echo ${list3[@]}",
    "    local list1=$1\n    local list2=$2\n    local result=\"\"\n    local i=0\n    local num1\n    local num2\n    for num1 in $list1; do\n        num2=$(echo $list2 | cut -d ' ' -f $((i+1)))\n        result=\"$result $(echo \"scale=2; $num1 / $num2\" | bc)\"\n        i=$((i+1))\n    done\n    echo $result",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -w)\n  local list2_len=$(echo \"$list2\" | wc -w)\n  if [ \"$list1_len\" -ne \"$list2_len\" ]; then\n    echo \"Error: lists must be the same length\"\n    return 1\n  fi\n  local list1_arr=($list1)\n  local list2_arr=($list2)\n  local result=\"\"\n  for ((i=0; i<list1_len; i++)); do\n    local num1=${list1_arr[$i]}\n    local num2=${list2_arr[$i]}\n    local quotient=$((num1 / num2))\n    result=\"$result $quotient\"\n  done\n  echo \"$result\"",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local result=\"\"\n  local i=0\n  local n1\n  local n2\n  for n1 in $list1; do\n    n2=$(echo \"$list2\" | cut -d' ' -f$((i+1)))\n    result=\"$result $(echo \"$n1 / $n2\" | bc -l)\"\n    i=$((i+1))\n  done\n  echo \"$result\"",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local result=\"\"\n  local i\n  for i in $list1; do\n    local j\n    for j in $list2; do\n      if [ \"$j\" != \"0\" ]; then\n        result=\"$result $(($i / $j))\"\n      fi\n    done\n  done\n  echo $result",
    "  local list1=$1\n  local list2=$2\n  local result=\"\"\n  local i=0\n  for n1 in $list1; do\n    local n2=$(echo $list2 | cut -d \" \" -f $((i+1)))\n    local div=$(echo \"scale=2; $n1 / $n2\" | bc)\n    result=\"$result $div\"\n    i=$((i+1))\n  done\n  echo $result",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local result=\"\"\n  local i=0\n  for item1 in $list1; do\n    local item2=$(echo $list2 | cut -d \" \" -f $((i+1)))\n    result=\"$result $(($item1 / $item2))\"\n    i=$((i+1))\n  done\n  echo $result",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local result=\"\"\n    local i\n    local num1\n    local num2\n    local div\n    for i in $(seq 1 $(wc -w <<< \"$list1\")); do\n        num1=$(cut -d' ' -f$i <<< \"$list1\")\n        num2=$(cut -d' ' -f$i <<< \"$list2\")\n        div=$(bc <<< \"scale=2; $num1 / $num2\")\n        result=\"$result $div\"\n    done\n    echo \"$result\"",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local result=\"\"\n    local i=0\n    local j=0\n    local len1=${#list1}\n    local len2=${#list2}\n    while [ $i -lt $len1 ] && [ $j -lt $len2 ]; do\n        local num1=${list1:$i:1}\n        local num2=${list2:$j:1}\n        if [ $num2 -eq 0 ]; then\n            result=\"${result}0\"\n        else\n            result=\"${result}$((num1/num2))\"\n        fi\n        i=$((i+1))\n        j=$((j+1))\n    done\n    echo \"$result\"",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local result=\"\"\n  local i=0\n  for item1 in $list1; do\n    local item2=$(echo $list2 | cut -d' ' -f $((i+1)))\n    local item=$(echo \"scale=2; $item1 / $item2\" | bc)\n    result=\"$result $item\"\n    i=$((i+1))\n  done\n  echo $result",
    "  local list1=($1)\n  local list2=($2)\n  local list3=()\n  local i=0\n  for ((i=0; i<${#list1[@]}; i++)); do\n    list3[$i]=$(echo \"scale=2; ${list1[$i]} / ${list2[$i]}\" | bc)\n  done\n  echo \"${list3[@]}\"",
    "    local list1=($1)\n    local list2=($2)\n    local result=\"\"\n    for ((i=0; i<${#list1[@]}; i++)); do\n        result=\"$result $(echo \"${list1[$i]} / ${list2[$i]}\" | bc -l)\"\n    done\n    echo $result",
    "    local list1=\"$1\"\n    local list2=\"$2\"\n    local result=\"\"\n    local i\n    for i in $list1; do\n        result=\"$result $(echo \"$i / $(echo $list2 | cut -d' ' -f1)\" | bc -l)\"\n        list2=\"$(echo $list2 | cut -d' ' -f2-)\"\n    done\n    echo $result",
    "  if [ $# -ne 2 ]; then\n    echo \"Usage: $0 <list1> <list2>\"\n    return 1\n  fi\n\n  local list1=\"$1\"\n  local list2=\"$2\"\n  local list1_len=$(echo \"$list1\" | wc -w)\n  local list2_len=$(echo \"$list2\" | wc -w)\n\n  if [ $list1_len -ne $list2_len ]; then\n    echo \"Lists are not the same length\"\n    return 1\n  fi\n\n  local list1_arr=($list1)\n  local list2_arr=($list2)\n  local result=\"\"\n\n  for ((i=0; i<$list1_len; i++)); do\n    result=\"$result $(echo \"${list1_arr[$i]} / ${list2_arr[$i]}\" | bc -l)\"\n  done\n\n  echo $result",
    "    local list1=$1\n    local list2=$2\n    local result=\"\"\n    local i=0\n    for n1 in $list1; do\n        local n2=$(echo $list2 | cut -d' ' -f$((i+1)))\n        result=\"$result $(echo \"scale=2; $n1 / $n2\" | bc)\"\n        i=$((i+1))\n    done\n    echo $result",
    "    local a=($1)\n    local b=($2)\n    local c=()\n    for ((i=0; i<${#a[@]}; i++)); do\n        c[i]=$(echo \"${a[i]} / ${b[i]}\" | bc -l)\n    done\n    echo ${c[@]}"
  ]
}
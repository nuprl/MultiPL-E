{
  "name": "mbpp_308_large_product",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.\n#\n# $1 is a space-separated list\n# $2 is a space-separated list\n# $3 is an integer\nlarge_product() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_308_large_product.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    large_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"3\") = \"60 54 50\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"4\") = \"60 54 50 48\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\" \"3 6 8 9 10 6\" \"5\") = \"60 54 50 48 45\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      local product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local -i i j k=0\n  local -i n=${#a[@]}\n  local -i m=${#b[@]}\n  local -i p=${3:-1}\n  for ((i=0; i<n; i++)); do\n    for ((j=0; j<m; j++)); do\n      c[k++]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $p",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local -i i j k=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[k++]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local -i i j k=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[k++]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[i*${#list2[@]}+j]=$((list1[i]*list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -a products\n  local i j\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local -i n=$3\n  local -i i j\n  local -a products\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local list1=($1)\n  local list2=($2)\n  local count=$3\n  local products=()\n  local product\n  local i j\n\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products+=($product)\n    done\n  done\n\n  IFS=$'\\n' sorted=($(sort -nr <<<\"${products[*]}\"))\n  unset IFS\n\n  echo \"${sorted[@]:0:$count}\"",
    "  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($(($i * $j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -n | tail -n $n | tr '\\n' ' '",
    "  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo ${products[@]} | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local n=$3\n  local -a products\n  local i\n  local j\n  local product\n  for i in \"${list1[@]}\"; do\n    for j in \"${list2[@]}\"; do\n      product=$((i * j))\n      products[${product}]=${product}\n    done\n  done\n  echo \"${products[*]}\" | tr ' ' '\\n' | sort -nr | head -n ${n}",
    "  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local i j k\n  local product\n  local products=()\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      product=$((list1[i] * list2[j]))\n      products[${#products[@]}]=$product\n    done\n  done\n  for ((i=0; i<$n; i++)); do\n    for ((j=i+1; j<${#products[@]}; j++)); do\n      if [[ ${products[j]} -gt ${products[i]} ]]; then\n        k=${products[i]}\n        products[i]=${products[j]}\n        products[j]=$k\n      fi\n    done\n  done\n  echo \"${products[@]}\"",
    "  local -a a=($1)\n  local -a b=($2)\n  local -a c\n  local i j k\n  for ((i=0; i<${#a[@]}; i++)); do\n    for ((j=0; j<${#b[@]}; j++)); do\n      c[k++]=$((a[i]*b[j]))\n    done\n  done\n  echo \"${c[@]}\" | tr ' ' '\\n' | sort -nr | head -n $3",
    "  local list1=($1)\n  local list2=($2)\n  local count=$3\n  local result=()\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      result+=(\"$((list1[i] * list2[j]))\")\n    done\n  done\n  echo \"${result[@]}\" | tr ' ' '\\n' | sort -nr | head -n $count",
    "  local list1=\"$1\"\n  local list2=\"$2\"\n  local n=\"$3\"\n  local i\n  local j\n  local product\n  local products=()\n  for i in $list1; do\n    for j in $list2; do\n      product=$((i * j))\n      products+=(\"$product\")\n    done\n  done\n  printf '%s\\n' \"${products[@]}\" | sort -nr | head -n \"$n\"",
    "  local list1=($1)\n  local list2=($2)\n  local n=$3\n  local products=()\n  for i in ${list1[@]}; do\n    for j in ${list2[@]}; do\n      products+=($((i*j)))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -nr | head -n $n",
    "  local -a list1=($1)\n  local -a list2=($2)\n  local n=$3\n  local -a products\n  local i j\n  for ((i=0; i<${#list1[@]}; i++)); do\n    for ((j=0; j<${#list2[@]}; j++)); do\n      products[${#products[@]}]=$((list1[i] * list2[j]))\n    done\n  done\n  echo \"${products[@]}\" | tr ' ' '\\n' | sort -rn | head -n $n"
  ]
}
{
  "name": "mbpp_97_frequency_lists",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to find frequency of each element in a flattened list of lists, returned in a CSV.\n#\n# $1 is a newline-separated, space-separated list\nfrequency_lists() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_97_frequency_lists.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    frequency_lists \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 2\\n4 5 6 2\\n7 8 9 5\") = \"1,1\\n2,3\\n3,1\\n4,1\\n5,2\\n6,1\\n7,1\\n8,1\\n9,1\" ]]\n    [[ $(candidate \"1 2 3 4\\n5 6 7 8\\n9 10 11 12\") = \"1,1\\n2,1\\n3,1\\n4,1\\n5,1\\n6,1\\n7,1\\n8,1\\n9,1\\n10,1\\n11,1\\n12,1\" ]]\n    [[ $(candidate \"20 30 40 17\\n18 16 14 13\\n10 20 30 40\") = \"20,2\\n30,2\\n40,2\\n17,1\\n18,1\\n16,1\\n14,1\\n13,1\\n10,1\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local list=\"$1\"\n  local -a freq\n  local -a values\n  local -a counts\n  local i\n  local j\n  local k\n  local n\n  local m\n  local value\n  local count\n  local -a tmp\n  local -a tmp2\n  local -a tmp3\n  local -a tmp4\n  local -a tmp5\n  local -a tmp6\n  local -a tmp7\n  local -a tmp8\n  local -a tmp9\n  local -a tmp10\n  local -a tmp11\n  local -a tmp12\n  local -a tmp13\n  local -a tmp14\n  local -a tmp15\n  local -a tmp16\n  local -a tmp17\n  local -a tmp18\n  local -a tmp19\n  local -a tmp20\n  local -a tmp21\n  local -a tmp22\n  local -a tmp23\n  local -a tmp24\n  local -a tmp25\n  local -a tmp26\n  local -a tmp27\n  local -a tmp28\n  local -a tmp29\n  local -a tmp30\n  local -a tmp31\n  local -a tmp32\n  local -a tmp33\n  local -a tmp34\n  local -a tmp35\n  local -a tmp36\n  local -a tmp37\n  local -a tmp38\n  local -a tmp39\n  local -a tmp40\n  local -a tmp41\n  local -a tmp42\n  local -a tmp43\n  local -a tmp44\n  local -a tmp45\n  local -a tmp46\n  local -a tmp47\n  local -a tmp48\n  local -a tmp49\n  local -a tmp50\n  local -a tmp51\n  local -a tmp52\n  local -a tmp53\n  local -a tmp54\n  local -a tmp55\n  local -a tmp56\n  local -a tmp57\n  local -a tmp58\n  local -a tmp59\n  local -a tmp60\n  local -a tmp61\n  local -a tmp62\n  local -a tmp63\n  local -a tmp64\n  local -a tmp65\n  local",
    "  local list=\"$1\"\n  local list_length=$(echo \"$list\" | wc -l)\n  local list_length_plus_one=$((list_length + 1))\n  local list_length_plus_two=$((list_length + 2))\n  local list_length_plus_three=$((list_length + 3))\n  local list_length_plus_four=$((list_length + 4))\n  local list_length_plus_five=$((list_length + 5))\n  local list_length_plus_six=$((list_length + 6))\n  local list_length_plus_seven=$((list_length + 7))\n  local list_length_plus_eight=$((list_length + 8))\n  local list_length_plus_nine=$((list_length + 9))\n  local list_length_plus_ten=$((list_length + 10))\n  local list_length_plus_eleven=$((list_length + 11))\n  local list_length_plus_twelve=$((list_length + 12))\n  local list_length_plus_thirteen=$((list_length + 13))\n  local list_length_plus_fourteen=$((list_length + 14))\n  local list_length_plus_fifteen=$((list_length + 15))\n  local list_length_plus_sixteen=$((list_length + 16))\n  local list_length_plus_seventeen=$((list_length + 17))\n  local list_length_plus_eighteen=$((list_length + 18))\n  local list_length_plus_nineteen=$((list_length + 19))\n  local list_length_plus_twenty=$((list_length + 20))\n  local list_length_plus_twenty_one=$((list_length + 21))\n  local list_length_plus_twenty_two=$((list_length + 22))\n  local list_length_plus_twenty_three=$((list_length + 23))\n  local list_length_plus_twenty_four=$((list_length + 24))\n  local list_length_plus_twenty_five=$((list_length + 25))\n  local list_length_plus_tw",
    "  local list=\"$1\"\n  local -a elements\n  local -a frequencies\n  local element\n  local frequency\n  local i\n  local j\n  local k\n  local n\n  local -i max_frequency=0\n\n  # Extract the elements from the list.\n  while read -r line; do\n    read -a elements <<< \"$line\"\n    for element in \"${elements[@]}\"; do\n      # If the element is not in the list of elements, add it.\n      if ! contains \"$element\" \"${elements[@]}\"; then\n        elements+=(\"$element\")\n      fi\n    done\n  done <<< \"$list\"\n\n  # Count the frequencies of each element.\n  for element in \"${elements[@]}\"; do\n    frequency=0\n    while read -r line; do\n      read -a elements <<< \"$line\"\n      for i in \"${elements[@]}\"; do\n        if [[ \"$i\" == \"$element\" ]]; then\n          ((frequency++))\n        fi\n      done\n    done <<< \"$list\"\n    frequencies+=(\"$frequency\")\n  done\n\n  # Find the maximum frequency.\n  for i in \"${frequencies[@]}\"; do\n    if ((i > max_frequency)); then\n      max_frequency=\"$i\"\n    fi\n  done\n\n  # Print the elements and frequencies in CSV format.\n  for ((i=0; i<${#elements[@]}; i++)); do\n    echo \"${elements[$i]},${frequencies[$i]}\"\n  done",
    "  local list=\"$1\"\n  local -a elements\n  local -a counts\n  local element\n  local count\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local aa\n  local ab\n  local ac\n  local ad\n  local ae\n  local af\n  local ag\n  local ah\n  local ai\n  local aj\n  local ak\n  local al\n  local am\n  local an\n  local ao\n  local ap\n  local aq\n  local ar\n  local as\n  local at\n  local au\n  local av\n  local aw\n  local ax\n  local ay\n  local az\n  local ba\n  local bb\n  local bc\n  local bd\n  local be\n  local bf\n  local bg\n  local bh\n  local bi\n  local bj\n  local bk\n  local bl\n  local bm\n  local bn\n  local bo\n  local bp\n  local bq\n  local br\n  local bs\n  local bt\n  local bu\n  local bv\n  local bw\n  local bx\n  local by\n  local bz\n  local ca\n  local cb\n  local cc\n  local cd\n  local ce\n  local cf\n  local cg\n  local ch\n  local ci\n  local cj\n  local ck\n  local cl\n  local cm\n  local cn\n  local co\n  local cp\n  local cq\n  local cr\n  local cs\n  local ct\n  local cu\n  local cv\n  local cw\n  local cx\n  local cy\n  local cz\n  local da\n  local db\n  local dc\n  local dd\n  local de\n  local df\n  local dg\n  local dh\n  local di\n  local dj\n  local dk\n  local dl\n  local dm\n  local dn\n  local do\n ",
    "  local lists=\"$1\"\n  local list\n  local element\n  local frequency\n  local frequencies\n  local frequencies_csv\n  local frequencies_csv_sorted\n\n  for list in $lists; do\n    for element in $list; do\n      frequency=$(echo \"$frequencies\" | grep -c \"^$element,\")\n      if [ \"$frequency\" -eq 0 ]; then\n        frequencies=\"$frequencies$element,1\\n\"\n      else\n        frequencies=$(echo -e \"$frequencies\" | sed \"s/^$element,.*/$element,$(($frequency + 1))/\")\n      fi\n    done\n  done\n\n  frequencies_csv=$(echo -e \"$frequencies\" | sort -t, -k2 -n -r)\n  frequencies_csv_sorted=$(echo \"$frequencies_csv\" | cut -d, -f1)\n\n  echo \"$frequencies_csv_sorted\"",
    "  local list=\"$1\"\n  local -A frequencies\n  while read -r line; do\n    for word in $line; do\n      frequencies[$word]=$((frequencies[$word] + 1))\n    done\n  done <<< \"$list\"\n  for word in \"${!frequencies[@]}\"; do\n    echo \"$word,${frequencies[$word]}\"\n  done",
    "  local input=\"$1\"\n  local output=\"\"\n  local -A counts\n  local -a list\n  local item\n  local count\n  local i\n  while read -r line; do\n    list=($line)\n    for ((i=0; i<${#list[@]}; i++)); do\n      item=\"${list[i]}\"\n      ((counts[$item]++))\n    done\n  done <<< \"$input\"\n  for item in \"${!counts[@]}\"; do\n    count=\"${counts[$item]}\"\n    output=\"$output$item,$count\\n\"\n  done\n  echo -e \"$output\"",
    "  local list=\"$1\"\n  local -a freq\n  local -a freq_list\n  local -a freq_list_sorted\n  local -a freq_list_sorted_uniq\n  local -a freq_list_sorted_uniq_sorted\n  local -a freq_list_sorted_uniq_sorted_freq\n  local -a freq_list_sorted_uniq_sorted_freq_sorted\n  local -a freq_list_sorted_uniq_sorted_freq_sorted_csv\n  local -a freq_list_sorted_uniq_sorted_freq_sorted_csv_sorted\n  local -a freq_list_sorted_uniq_sorted_freq_sorted_csv_sorted_freq\n  local -a freq_list_sorted_uniq_sorted_freq_sorted_csv_sorted_freq_sorted\n  local -a freq_list_sorted_uniq_sorted_freq_sorted_csv_sorted_freq_sorted_csv\n  local -a freq_list_sorted_uniq_sorted_freq_sorted_csv_sorted_freq_sorted_csv_sorted\n  local -a freq_list_sorted_uniq_sorted_freq_sorted_csv_sorted_freq_sorted_csv_sorted_freq\n  local -a freq_list_sorted_uniq_sorted_freq_sorted_csv_sorted_freq_sorted_csv_sorted_freq_sorted\n  local -a freq_list_sorted_uniq_sorted_freq_sorted_csv_sorted_freq_sorted_csv_sorted_freq_sorted_csv\n  local -a freq_list_sorted_uniq_sorted_freq_sorted_csv_sorted_freq_sorted_csv_sorted_freq_sorted_csv_sorted\n  local -a freq_list_s",
    "  local list=\"$1\"\n  local -a elements\n  local -a counts\n  local element\n  local count\n  local i\n  local j\n  local output\n  local -a output_array\n\n  # Split the list into elements\n  IFS=$'\\n' read -d '' -ra elements <<< \"$list\"\n  # Split each element into its own array\n  for ((i=0; i<${#elements[@]}; i++)); do\n    IFS=' ' read -d '' -ra elements[$i] <<< \"${elements[$i]}\"\n  done\n\n  # Flatten the list\n  elements=( \"${elements[@]}\" )\n\n  # Count the frequency of each element\n  for ((i=0; i<${#elements[@]}; i++)); do\n    element=\"${elements[$i]}\"\n    count=0\n    for ((j=0; j<${#elements[@]}; j++)); do\n      if [[ \"${elements[$j]}\" == \"$element\" ]]; then\n        count=$((count + 1))\n      fi\n    done\n    counts[$i]=\"$count\"\n  done\n\n  # Sort the elements and counts\n  for ((i=0; i<${#elements[@]}; i++)); do\n    for ((j=0; j<${#elements[@]}; j++)); do\n      if [[ \"${elements[$i]}\" < \"${elements[$j]}\" ]]; then\n        element=\"${elements[$i]}\"\n        elements[$i]=\"${elements[$j]}\"\n        elements[$j]=\"$element\"\n        count=\"${counts[$i]}\"\n        counts[$i]=\"${counts[$j]}\"\n        counts[$j]=\"$count\"\n      fi\n    done\n  done\n\n  # Remove duplicates\n  for ((i=0; i<${#elements[@]}; i++)); do\n    if [[ \"${elements[$i]}\" == \"${elements[$((i+1))]}\" ]]; then\n      unset elements[$i]\n",
    "  local list=\"$1\"\n  local -A freq\n  local -a uniq\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local aa\n  local ab\n  local ac\n  local ad\n  local ae\n  local af\n  local ag\n  local ah\n  local ai\n  local aj\n  local ak\n  local al\n  local am\n  local an\n  local ao\n  local ap\n  local aq\n  local ar\n  local as\n  local at\n  local au\n  local av\n  local aw\n  local ax\n  local ay\n  local az\n  local ba\n  local bb\n  local bc\n  local bd\n  local be\n  local bf\n  local bg\n  local bh\n  local bi\n  local bj\n  local bk\n  local bl\n  local bm\n  local bn\n  local bo\n  local bp\n  local bq\n  local br\n  local bs\n  local bt\n  local bu\n  local bv\n  local bw\n  local bx\n  local by\n  local bz\n  local ca\n  local cb\n  local cc\n  local cd\n  local ce\n  local cf\n  local cg\n  local ch\n  local ci\n  local cj\n  local ck\n  local cl\n  local cm\n  local cn\n  local co\n  local cp\n  local cq\n  local cr\n  local cs\n  local ct\n  local cu\n  local cv\n  local cw\n  local cx\n  local cy\n  local cz\n  local da\n  local db\n  local dc\n  local dd\n  local de\n  local df\n  local dg\n  local dh\n  local di\n  local dj\n  local dk\n  local dl\n  local dm\n  local dn\n  local do\n  local dp\n  local",
    "  local input=\"$1\"\n  local output=\"\"\n  local -A frequencies\n  local element\n  local frequency\n\n  while read -r line; do\n    while read -r element; do\n      frequencies[$element]=$((frequencies[$element] + 1))\n    done <<< \"$line\"\n  done <<< \"$input\"\n\n  for element in \"${!frequencies[@]}\"; do\n    frequency=\"${frequencies[$element]}\"\n    output=\"$output$element,$frequency\\n\"\n  done\n\n  echo -e \"$output\"",
    "  local list=\"$1\"\n  local -a counts\n  local -a elements\n  local element\n  local count\n  local i\n  local j\n  local -i n\n  local -i m\n  local -i k\n  local -i l\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i ab\n  local -i ac\n  local -i ad\n  local -i ae\n  local -i af\n  local -i ag\n  local -i ah\n  local -i ai\n  local -i aj\n  local -i ak\n  local -i al\n  local -i am\n  local -i an\n  local -i ao\n  local -i ap\n  local -i aq\n  local -i ar\n  local -i as\n  local -i at\n  local -i au\n  local -i av\n  local -i aw\n  local -i ax\n  local -i ay\n  local -i az\n  local -i ba\n  local -i bb\n  local -i bc\n  local -i bd\n  local -i be\n  local -i bf\n  local -i bg\n  local -i bh\n  local -i bi\n  local -i bj\n  local -i bk\n  local -i bl\n  local -i bm\n  local -i bn\n  local -i bo\n  local -i bp\n  local -i bq\n  local -i br\n  local -i bs\n  local -i bt\n  local -i bu\n  local -i bv\n  local -i bw\n  local -i bx\n  local -i by\n  local -i bz\n  local -i ca\n  local -i cb\n  local -i cc\n  local -i cd\n  local -i ce\n  local -i cf\n  local -i cg\n  local -i ch\n",
    "  local list=\"$1\"\n  local -a freq\n  local -a elements\n  local -a counts\n  local -a output\n  local element\n  local count\n  local i\n  local j\n  local k\n  local n\n  local m\n  local -i n_elements\n  local -i n_counts\n  local -i n_output\n  local -i n_freq\n\n  # Split the list into elements\n  IFS=$'\\n' read -r -a elements <<< \"$list\"\n  n_elements=${#elements[@]}\n\n  # Count the number of times each element appears\n  for ((i=0; i<n_elements; i++)); do\n    element=${elements[$i]}\n    count=0\n    for ((j=0; j<n_elements; j++)); do\n      if [[ \"$element\" == \"${elements[$j]}\" ]]; then\n        ((count++))\n      fi\n    done\n    freq[$i]=\"$element,$count\"\n  done\n\n  # Sort the frequency list\n  IFS=$'\\n' read -r -a freq <<< \"$(printf '%s\\n' \"${freq[@]}\" | sort -t ',' -k 2 -r)\"\n  n_freq=${#freq[@]}\n\n  # Remove duplicates\n  for ((i=0; i<n_freq; i++)); do\n    element=${freq[$i]}\n    for ((j=0; j<n_output; j++)); do\n      if [[ \"$element\" == \"${output[$j]}\" ]]; then\n        break\n      fi\n    done\n    if [[ $j -eq $n_output ]]; then\n      output[$n_output]=\"$element\"\n      ((n_output++))\n    fi\n  done\n\n  # Print the output\n  for ((i=0; i<n_output; i++)); do\n    echo \"${output[$i]}\"\n  done",
    "  local list=\"$1\"\n  local element_counts=\"$(echo \"$list\" | tr ' ' '\\n' | sort | uniq -c | tr -s ' ' | tr ' ' ',')\"\n  echo \"$element_counts\"",
    "  local input=\"$1\"\n  local output=\"\"\n  local element=\"\"\n  local count=\"\"\n  while read -r line; do\n    while read -r element; do\n      count=$(echo \"$input\" | grep -o \"$element\" | wc -l)\n      output=\"$output$element,$count\\n\"\n    done <<< \"$line\"\n  done <<< \"$input\"\n  echo -e \"$output\"",
    "  local list=\"$1\"\n  local -a list_array\n  local -a list_array_sorted\n  local -a list_array_sorted_uniq\n  local -a list_array_sorted_uniq_count\n  local -a list_array_sorted_uniq_count_csv\n  local -a list_array_sorted_uniq_count_csv_sorted\n  local -a list_array_sorted_uniq_count_csv_sorted_uniq\n  local -a list_array_sorted_uniq_count_csv_sorted_uniq_count\n  local -a list_array_sorted_uniq_count_csv_sorted_uniq_count_csv\n  local -a list_array_sorted_uniq_count_csv_sorted_uniq_count_csv_sorted\n  local -a list_array_sorted_uniq_count_csv_sorted_uniq_count_csv_sorted_uniq\n  local -a list_array_sorted_uniq_count_csv_sorted_uniq_count_csv_sorted_uniq_count\n  local -a list_array_sorted_uniq_count_csv_sorted_uniq_count_csv_sorted_uniq_count_csv\n  local -a list_array_sorted_uniq_count_csv_sorted_uniq_count_csv_sorted_uniq_count_csv_sorted\n  local -a list_array_sorted_uniq_count_csv_sorted_uniq_count_csv_sorted_uniq_count_csv_sorted_uniq\n  local -a list_array_sorted_uniq_count_csv_sorted_uniq_count_csv_sorted_uniq_count_csv_sorted_uniq_count\n  local -a list_array_sorted_uniq_count_csv_sorted_uniq_count_csv_sorted_uniq_count_csv_sorted_uniq_count_csv\n  local -a list_array_sorted_uniq_count_csv_s",
    "  local list=\"$1\"\n  local -A freq\n  local -a keys\n  local -a vals\n  local -a sorted_vals\n  local -a sorted_keys\n  local i\n  local j\n  local k\n  local key\n  local val\n  local sorted_val\n  local sorted_key\n  local csv\n\n  # Build a frequency table\n  while read -r line; do\n    for item in $line; do\n      freq[$item]=$((freq[$item]+1))\n    done\n  done <<< \"$list\"\n\n  # Get the keys and values\n  keys=( \"${!freq[@]}\" )\n  vals=( \"${freq[@]}\" )\n\n  # Sort the values\n  sorted_vals=( $(printf '%s\\n' \"${vals[@]}\" | sort -n) )\n\n  # Build a CSV\n  for i in \"${!sorted_vals[@]}\"; do\n    sorted_val=\"${sorted_vals[$i]}\"\n    for j in \"${!vals[@]}\"; do\n      val=\"${vals[$j]}\"\n      if [[ \"$val\" == \"$sorted_val\" ]]; then\n        sorted_key=\"${keys[$j]}\"\n        csv=\"$csv$sorted_key,$sorted_val\\n\"\n        unset keys[$j]\n        unset vals[$j]\n        break\n      fi\n    done\n  done\n\n  # Print the CSV\n  printf '%s' \"$csv\"",
    "  local -r list=\"$1\"\n  local -r list_length=$(echo \"$list\" | wc -l)\n  local -r list_length_plus_one=$((list_length + 1))\n  local -r list_length_plus_two=$((list_length + 2))\n  local -r list_length_plus_three=$((list_length + 3))\n  local -r list_length_plus_four=$((list_length + 4))\n  local -r list_length_plus_five=$((list_length + 5))\n  local -r list_length_plus_six=$((list_length + 6))\n  local -r list_length_plus_seven=$((list_length + 7))\n  local -r list_length_plus_eight=$((list_length + 8))\n  local -r list_length_plus_nine=$((list_length + 9))\n  local -r list_length_plus_ten=$((list_length + 10))\n  local -r list_length_plus_eleven=$((list_length + 11))\n  local -r list_length_plus_twelve=$((list_length + 12))\n  local -r list_length_plus_thirteen=$((list_length + 13))\n  local -r list_length_plus_fourteen=$((list_length + 14))\n  local -r list_length_plus_fifteen=$((list_length + 15))\n  local -r list_length_plus_sixteen=$((list_length + 16))\n  local -r list_length_plus_seventeen=$((list_length + 17))\n  local -r list_length_plus_eighteen=$((list_length + 18))\n  local -r list_length_plus_nineteen=$((list_length + 19))\n  local -r list_length_plus_twenty=$((list_length + 20))\n  local -r list_length_plus_twenty_one=$((list_length + 21))\n  local -r list_length_plus_twenty_two=$((list_length + 22))\n  local -r list_length_plus_twenty_three=$((list_length + 23))\n ",
    "  local list=\"$1\"\n  local -a freq=()\n  local -a elements=()\n  local -a counts=()\n  local -a output=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local ab=0\n  local ac=0\n  local ad=0\n  local ae=0\n  local af=0\n  local ag=0\n  local ah=0\n  local ai=0\n  local aj=0\n  local ak=0\n  local al=0\n  local am=0\n  local an=0\n  local ao=0\n  local ap=0\n  local aq=0\n  local ar=0\n  local as=0\n  local at=0\n  local au=0\n  local av=0\n  local aw=0\n  local ax=0\n  local ay=0\n  local az=0\n  local ba=0\n  local bb=0\n  local bc=0\n  local bd=0\n  local be=0\n  local bf=0\n  local bg=0\n  local bh=0\n  local bi=0\n  local bj=0\n  local bk=0\n  local bl=0\n  local bm=0\n  local bn=0\n  local bo=0\n  local bp=0\n  local bq=0\n  local br=0\n  local bs=0\n  local bt=0\n  local bu=0\n  local bv=0\n  local bw=0\n  local bx=0\n  local by=0\n  local bz=0\n  local ca=0\n  local cb=0\n  local cc=0\n  local cd=0\n  local",
    "  local list=\"$1\"\n  local output=\"\"\n  local element=\"\"\n  local frequency=\"\"\n  local -a elements\n  local -a frequencies\n  local -a lines\n  local -a words\n  local -a counts\n  local -a counts_sorted\n  local -a elements_sorted\n  local -a frequencies_sorted\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i ab\n  local -i ac\n  local -i ad\n  local -i ae\n  local -i af\n  local -i ag\n  local -i ah\n  local -i ai\n  local -i aj\n  local -i ak\n  local -i al\n  local -i am\n  local -i an\n  local -i ao\n  local -i ap\n  local -i aq\n  local -i ar\n  local -i as\n  local -i at\n  local -i au\n  local -i av\n  local -i aw\n  local -i ax\n  local -i ay\n  local -i az\n  local -i ba\n  local -i bb\n  local -i bc\n  local -i bd\n  local -i be\n  local -i bf\n  local -i bg\n  local -i bh\n  local -i bi\n  local -i bj\n  local -i bk\n  local -i bl\n  local -i bm\n  local -i bn\n  local -i bo\n  local -i bp\n  local -i bq\n  local -i br\n  local -i bs\n  local -i bt\n  local -i bu\n  local -i bv\n  local -i bw\n  local -i bx\n "
  ]
}
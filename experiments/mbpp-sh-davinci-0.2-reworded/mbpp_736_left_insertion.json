{
  "name": "mbpp_736_left_insertion",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/shthon-exercises/data-structures-and-algorithms/shthon-data-structure-exercise-24.php\n#\n# $1 is a space-separated list\n# $2 is an integer\nleft_insertion() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_736_left_insertion.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    left_insertion \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 4 5\" \"6\") = \"4\" ]]\n    [[ $(candidate \"1 2 4 5\" \"3\") = \"2\" ]]\n    [[ $(candidate \"1 2 4 5\" \"7\") = \"4\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ ${list[$i]} -ge $value ]; then\n            break\n        fi\n        (( i++ ))\n    done\n    echo $i",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list}\n    local left=0\n    local right=$((len-1))\n    local mid=0\n    local mid_value=0\n    while [[ $left -le $right ]]; do\n        mid=$(((left+right)/2))\n        mid_value=${list[$mid]}\n        if [[ $mid_value -eq $value ]]; then\n            while [[ $mid -gt 0 ]]; do\n                if [[ ${list[$((mid-1))]} -eq $value ]]; then\n                    mid=$((mid-1))\n                else\n                    break\n                fi\n            done\n            echo $mid\n            return\n        elif [[ $mid_value -gt $value ]]; then\n            right=$((mid-1))\n        else\n            left=$((mid+1))\n        fi\n    done\n    echo $left",
    "  local -a list\n  local value\n  IFS=' ' read -r -a list <<< \"$1\"\n  value=\"$2\"\n  for ((i=0; i<${#list[@]}; i++)); do\n    if [[ \"${list[i]}\" -gt \"$value\" ]]; then\n      echo \"$i\"\n      return\n    fi\n  done\n  echo \"${#list[@]}\"",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local lower=0\n    local upper=$((${#list} - 1))\n    local mid\n    local mid_value\n    while [ $lower -lt $upper ]; do\n        mid=$((($lower + $upper) / 2))\n        mid_value=${list:$mid:1}\n        if [ $mid_value -lt $value ]; then\n            lower=$((mid + 1))\n        else\n            upper=$mid\n        fi\n    done\n    echo $lower",
    "  local list=\"$1\"\n  local value=\"$2\"\n  local index=0\n  for i in $list; do\n    if [ \"$i\" -gt \"$value\" ]; then\n      break\n    fi\n    index=$((index+1))\n  done\n  echo $index",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local low=0\n    local high=$((${#list} - 1))\n    local mid=0\n    local mid_value=0\n    while [ $low -le $high ]; do\n        mid=$((($low + $high) / 2))\n        mid_value=$(echo \"$list\" | cut -d' ' -f$((mid + 1)))\n        if [ $mid_value -lt $value ]; then\n            low=$((mid + 1))\n        else\n            high=$((mid - 1))\n        fi\n    done\n    echo $low",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    local -i left=0\n    local -i right=${#array[@]}\n    local -i mid\n    local -i value=$2\n    while ((left < right)); do\n        mid=$((left + (right - left) / 2))\n        if ((array[mid] < value)); then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local -a arr=($1)\n    local -i n=${#arr[@]}\n    local -i i=0\n    local -i v=$2\n    local -i m=0\n    local -i l=0\n    local -i r=$((n-1))\n    while l<=r; do\n        m=$(((l+r)/2))\n        if [[ ${arr[m]} -lt $v ]]; then\n            l=$((m+1))\n        else\n            r=$((m-1))\n        fi\n    done\n    echo $l",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( list[mid] < value )); then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    local result=0\n\n    while [ $left -le $right ]; do\n        mid=$((($left + $right) / 2))\n        if [ ${list[$mid]} -lt $value ]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    result=$left\n    echo $result",
    "    local -a list=($1)\n    local value=$2\n    local low=0\n    local high=${#list[@]}\n    local mid\n    while (( low < high )); do\n        mid=$(( (low + high) / 2 ))\n        if (( value <= list[mid] )); then\n            high=$mid\n        else\n            low=$(( mid + 1 ))\n        fi\n    done\n    echo $low",
    "    local -a list=($1)\n    local value=$2\n    local len=${#list[@]}\n    local i=0\n    local mid=0\n    local left=0\n    local right=$len\n    while [ $left -lt $right ]; do\n        mid=$(( (left + right) / 2 ))\n        if [ ${list[$mid]} -lt $value ]; then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "  local list=$1\n  local value=$2\n  local i=0\n  local list_len=${#list[@]}\n  while [ $i -lt $list_len ]; do\n    if [ $value -lt ${list[$i]} ]; then\n      echo $i\n      return\n    fi\n    i=$((i+1))\n  done\n  echo $list_len",
    "    local -a arr=(\"$@\")\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n    local k=0\n    local num=$2\n    local -a arr2\n    local -a arr3\n    local -a arr4\n    local -a arr5\n    local -a arr6\n    local -a arr7\n    local -a arr8\n    local -a arr9\n    local -a arr10\n    local -a arr11\n    local -a arr12\n    local -a arr13\n    local -a arr14\n    local -a arr15\n    local -a arr16\n    local -a arr17\n    local -a arr18\n    local -a arr19\n    local -a arr20\n    local -a arr21\n    local -a arr22\n    local -a arr23\n    local -a arr24\n    local -a arr25\n    local -a arr26\n    local -a arr27\n    local -a arr28\n    local -a arr29\n    local -a arr30\n    local -a arr31\n    local -a arr32\n    local -a arr33\n    local -a arr34\n    local -a arr35\n    local -a arr36\n    local -a arr37\n    local -a arr38\n    local -a arr39\n    local -a arr40\n    local -a arr41\n    local -a arr42\n    local -a arr43\n    local -a arr44\n    local -a arr45\n    local -a arr46\n    local -a arr47\n    local -a arr48\n    local -a arr49\n    local -a arr50\n    local -a arr51\n    local -a arr52\n    local -a arr53\n    local -a arr54\n    local -a arr55\n    local -a arr56\n    local -a arr57\n    local -a arr58\n    local -a arr59\n    local -a arr60\n    local -a arr61\n    local -a arr62\n    local -a arr63\n    local -a arr64\n    local -a arr65\n    local -a arr66\n    local -a arr67\n    local -",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local list_len=$(echo \"$list\" | wc -w)\n    local left=0\n    local right=$((list_len - 1))\n    local mid=0\n    local mid_value=0\n\n    while [[ $left -le $right ]]; do\n        mid=$(((left + right) / 2))\n        mid_value=$(echo \"$list\" | cut -d ' ' -f $((mid + 1)))\n        if [[ $mid_value -eq $value ]]; then\n            break\n        elif [[ $mid_value -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n\n    if [[ $mid_value -lt $value ]]; then\n        mid=$((mid + 1))\n    fi\n\n    echo \"$mid\"",
    "    local list=$1\n    local value=$2\n    local index=0\n    for i in $list; do\n        if [[ $i -ge $value ]]; then\n            break\n        fi\n        index=$((index + 1))\n    done\n    echo $index",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    local mid=$((len / 2))\n    local left=0\n    local right=$len\n\n    while [[ $left -lt $right ]]; do\n        if [[ $value -lt ${list[$mid]} ]]; then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n        mid=$(((left + right) / 2))\n    done\n    echo $mid",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local left=0\n    local right=$(( $(echo \"$list\" | wc -w) - 1 ))\n    local mid=0\n    local mid_value=0\n    while [[ $left -le $right ]]; do\n        mid=$(( (left + right) / 2 ))\n        mid_value=$(echo \"$list\" | cut -d ' ' -f $(( mid + 1 )))\n        if [[ $mid_value -eq $value ]]; then\n            while [[ $mid -gt 0 ]] && [[ $(echo \"$list\" | cut -d ' ' -f $(( mid ))) -eq $value ]]; do\n                ((mid--))\n            done\n            echo $mid\n            return\n        elif [[ $mid_value -gt $value ]]; then\n            right=$(( mid - 1 ))\n        else\n            left=$(( mid + 1 ))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    while [[ $left -le $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while [ $left -lt $right ]; do\n        mid=$(( (left + right) / 2 ))\n        if [ ${list[$mid]} -lt $value ]; then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=${#arr[@]}\n    local -i k=0\n    local -i n=$2\n    while (( i < j )); do\n        k=$(( (i+j)/2 ))\n        if (( arr[k] < n )); then\n            i=$(( k+1 ))\n        else\n            j=$k\n        fi\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    local mid_value=0\n    while [ $left -le $right ]; do\n        mid=$((($left + $right) / 2))\n        mid_value=${list:$mid:1}\n        if [ $mid_value -lt $value ]; then\n            left=$((mid + 1))\n        elif [ $mid_value -gt $value ]; then\n            right=$((mid - 1))\n        else\n            echo $mid\n            return\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local -i i=0\n    for n in $list; do\n        if (( n >= value )); then\n            break\n        fi\n        (( i++ ))\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -ge $value ]]; then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n    if [[ ${list:$left:1} -lt $value ]]; then\n        left=$((left + 1))\n    fi\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$(($(echo \"$list\" | wc -w) - 1))\n    local middle\n    while [ $left -lt $right ]; do\n        middle=$((($left + $right) / 2))\n        if [ $value -lt $(echo \"$list\" | cut -d ' ' -f $((middle + 1))) ]; then\n            right=$((middle - 1))\n        else\n            left=$((middle + 1))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local index=0\n    local found=0\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    while [ $left -le $right ] && [ $found -eq 0 ]; do\n        mid=$((($left + $right) / 2))\n        if [ ${list:$mid:1} -eq $value ]; then\n            found=1\n            index=$mid\n        elif [ ${list:$mid:1} -gt $value ]; then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n    if [ $found -eq 0 ]; then\n        index=$left\n    fi\n    echo $index",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [ $left -lt $right ]; do\n        mid=$((($left + $right) / 2))\n        if [ \"${list:$mid:1}\" -lt \"$value\" ]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    if [ \"${list:$left:1}\" -lt \"$value\" ]; then\n        left=$((left + 1))\n    fi\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    local mid_value=0\n    while [ $left -le $right ]; do\n        mid=$((($left + $right) / 2))\n        mid_value=$(echo \"$list\" | cut -d' ' -f$((mid + 1)))\n        if [ $mid_value -eq $value ]; then\n            echo $mid\n            return\n        elif [ $mid_value -gt $value ]; then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "    local -a array\n    local -i i\n    local -i len\n    local -i mid\n    local -i left\n    local -i right\n    local -i value\n    IFS=' ' read -r -a array <<< \"$1\"\n    value=$2\n    len=${#array[@]}\n    left=0\n    right=$len-1\n    while (( left <= right )); do\n        mid=$(( (left+right)/2 ))\n        if (( array[mid] < value )); then\n            left=$(( mid+1 ))\n        else\n            right=$(( mid-1 ))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [ $left -le $right ]; do\n        mid=$((($left + $right) / 2))\n        if [ $value -lt ${list:$mid:1} ]; then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [ $left -le $right ]; do\n        mid=$((($left + $right) / 2))\n        if [ \"${list:$mid:1}\" -eq \"$value\" ]; then\n            while [ \"${list:$mid:1}\" -eq \"$value\" ]; do\n                mid=$((mid - 1))\n            done\n            echo $((mid + 1))\n            return 0\n        elif [ \"${list:$mid:1}\" -lt \"$value\" ]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local -a arr=($1)\n    local val=$2\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    local pos=0\n\n    # sort array\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len; j++))\n        do\n            if [[ ${arr[i]} -gt ${arr[j]} ]]\n            then\n                tmp=${arr[i]}\n                arr[i]=${arr[j]}\n                arr[j]=$tmp\n            fi\n        done\n    done\n\n    # find insertion point\n    for ((k=0; k<len; k++))\n    do\n        if [[ ${arr[k]} -ge $val ]]\n        then\n            pos=$k\n            break\n        fi\n    done\n\n    echo $pos",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=0\n    local -i mid=0\n    local -i len=0\n    local -i i=0\n\n    len=${#list}\n    right=$len-1\n\n    while [ $left -le $right ]; do\n        mid=$(((left+right)/2))\n        if [ \"${list[$mid]}\" -lt \"$value\" ]; then\n            left=$((mid+1))\n        else\n            right=$((mid-1))\n        fi\n    done\n\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$(($(echo \"$list\" | wc -w) - 1))\n    local middle\n    while [ \"$left\" -le \"$right\" ]; do\n        middle=$((($left + $right) / 2))\n        if [ \"$value\" -lt \"$(echo \"$list\" | cut -d ' ' -f $((middle + 1)))\" ]; then\n            right=$((middle - 1))\n        else\n            left=$((middle + 1))\n        fi\n    done\n    echo \"$left\"",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        if [ $value -le ${list:$i:1} ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local -a list\n    IFS=' ' read -r -a list <<< \"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=\"${#list[@]}\"\n    local mid\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( list[mid] < value )); then\n            left=$(( mid + 1 ))\n        else\n            right=$(( mid ))\n        fi\n    done\n    echo \"$left\"",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    if [[ ${list:$left:1} -lt $value ]]; then\n        echo $((left + 1))\n    else\n        echo $left\n    fi",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=$((${#list} - 1))\n    local -i mid=0\n    local -i mid_value=0\n    local -i value_index=0\n\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        mid_value=${list[$mid]}\n        if [[ $mid_value -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n\n    if [[ $left -eq $right ]]; then\n        value_index=$left\n    else\n        value_index=$left\n    fi\n\n    echo $value_index",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i mid\n    while ((left < right)); do\n        mid=$(((left + right) / 2))\n        if ((list[mid] < value)); then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local val=\"$2\"\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        if [ \"${list:$i:1}\" -ge \"$val\" ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local len=${#list}\n    local mid=0\n    local left=0\n    local right=$len\n    while [ $left -lt $right ]; do\n        mid=$(( (left + right) / 2 ))\n        if [ \"${list:$mid:1}\" -lt \"$value\" ]; then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local -i i=0\n    local -i left=0\n    local -i right=$((${#list} - 1))\n    local -i mid\n    while ((left <= right)); do\n        mid=$(((left + right) / 2))\n        if ((value < ${list:mid:1})); then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ $value -lt ${list:$mid:1} ]]; then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "    local -a list=($1)\n    local value=$2\n    local -i left=0\n    local -i right=${#list[@]}\n    local -i mid=0\n    while ((left < right)); do\n        mid=$((left + (right - left) / 2))\n        if ((value <= list[mid])); then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ ${list[$i]} -ge $value ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $len",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        if [ $value -lt ${list:$i:1} ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local -a arr=(\"$@\")\n    local -i n=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i x=$2\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i o=0",
    "    # The list is sorted, so we can use binary search.\n    #\n    # We need to find the leftmost insertion point for $2.\n    #\n    # If $2 is in the list, then we want the index of the first occurrence.\n    #\n    # If $2 is not in the list, then we want the index of the first element that is greater than $2.\n    #\n    # If $2 is greater than all elements in the list, then we want the index of the last element plus 1.\n    #\n    # If the list is empty, then we want the index of the first element, which is 0.\n    #\n    # We can use binary search to find the leftmost insertion point.\n    #\n    # If we find $2, then we want to search the left half of the list.\n    #\n    # If we don't find $2, then we want to search the right half of the list.\n    #\n    # If we find an element that is greater than $2, then we want to search the left half of the list.\n    #\n    # If we don't find an element that is greater than $2, then we want to search the right half of the list.\n    #\n    # If we find an element that is greater than $2, then we want to search the left half of the list.\n    #\n    # If we don't find an element that is greater than $2, then we want to search the right half of the list.\n    #\n    # If we find an element that is greater than $2, then we want to search the left half of the list.\n    #\n    # If we don't find an element that is greater than $2, then we want to search the right half of the list.\n    #\n    # If we find an element that is greater than $2, then we want to search the left half of the list.\n    #\n    # If we don't find an element that is greater than $2, then we want to search the right half of the list.\n    #\n    # If we find an element that is greater than $2, then we want to search the left half of the list.\n    #\n    # If we don't find an element that is greater than $2,",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while [[ $left -lt $right ]]; do\n        mid=$(( (left + right) / 2 ))\n        if [[ $value -le ${list[$mid]} ]]; then\n            right=$mid\n        else\n            left=$(( mid + 1 ))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [ $left -lt $right ]; do\n        mid=$((($left + $right) / 2))\n        if [ ${list:$mid:1} -lt $value ]; then\n            left=$((mid + 1))\n        else\n            right=$((mid))\n        fi\n    done\n    echo $left",
    "    local -a array=($1)\n    local value=$2\n    local low=0\n    local high=${#array[@]}\n    local mid=0\n    local found=0\n    while [[ $low -lt $high ]]; do\n        mid=$(((low + high) / 2))\n        if [[ ${array[$mid]} -eq $value ]]; then\n            found=1\n            break\n        elif [[ ${array[$mid]} -lt $value ]]; then\n            low=$((mid + 1))\n        else\n            high=$((mid - 1))\n        fi\n    done\n    if [[ $found -eq 1 ]]; then\n        while [[ $mid -gt 0 ]]; do\n            if [[ ${array[$mid]} -eq $value ]]; then\n                mid=$((mid - 1))\n            else\n                break\n            fi\n        done\n        echo $mid\n    else\n        echo $low\n    fi",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local len=${#list}\n    while [[ $i -lt $len ]]; do\n        if [[ $value -le ${list:$i:1} ]]; then\n            echo $i\n            return\n        fi\n        ((i++))\n    done\n    echo $i",
    "    local -a list\n    local -i i\n    local -i len\n    local -i mid\n    local -i left\n    local -i right\n    local -i target\n    list=($1)\n    len=${#list[@]}\n    target=$2\n    left=0\n    right=$((len-1))\n    while ((left <= right)); do\n        mid=$(((left+right)/2))\n        if ((list[mid] < target)); then\n            left=$((mid+1))\n        else\n            right=$((mid-1))\n        fi\n    done\n    echo $left",
    "    local -a list=($1)\n    local value=$2\n    local len=${#list[@]}\n    local i=0\n    local j=$((len - 1))\n    local mid=0\n    while [[ $i -lt $j ]]; do\n        mid=$(((i + j) / 2))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            i=$((mid + 1))\n        else\n            j=$((mid - 1))\n        fi\n    done\n    if [[ ${list[$i]} -lt $value ]]; then\n        echo $((i + 1))\n    else\n        echo $i\n    fi",
    "    local -a arr=(\"$@\")\n    local i=0\n    local len=${#arr[@]}\n    local val=$2\n    local mid=0\n    local left=0\n    local right=$len\n    while [ $left -lt $right ]\n    do\n        mid=$(( (left + right) / 2 ))\n        if [ ${arr[$mid]} -lt $val ]\n        then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list} - 1))\n    local middle\n    while [[ $left -le $right ]]; do\n        middle=$((($left + $right) / 2))\n        if [[ ${list:$middle:1} -lt $value ]]; then\n            left=$((middle + 1))\n        else\n            right=$((middle - 1))\n        fi\n    done\n    echo $left",
    "    local -a list=($1)\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ] && [ ${list[$i]} -lt $value ]; do\n        let i++\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i mid\n    local -i result\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( value <= list[mid] )); then\n            right=$mid\n        else\n            left=$(( mid + 1 ))\n        fi\n    done\n    result=$left\n    echo $result",
    "    local -a list=(\"$@\")\n    local value=\"${list[-1]}\"\n    unset list[-1]\n    local -i left=0\n    local -i right=${#list[@]}\n    local -i mid\n    while ((left < right)); do\n        mid=$(((left + right) / 2))\n        if ((list[mid] < value)); then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local -n arr=$1\n    local val=$2\n    local i=0\n    local j=${#arr[@]}\n    while (( i < j )); do\n        local mid=$(( (i+j)/2 ))\n        if (( arr[mid] < val )); then\n            i=$(( mid+1 ))\n        else\n            j=$mid\n        fi\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=$((${#list} - 1))\n    local -i mid\n    local -i result=-1\n    while [[ $left -le $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        elif [[ ${list:$mid:1} -gt $value ]]; then\n            right=$((mid - 1))\n        else\n            result=$mid\n            right=$((mid - 1))\n        fi\n    done\n    echo $result",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list}\n    local left=0\n    local right=$len\n    local mid=0\n    while [ $left -lt $right ]; do\n        mid=$(((left + right) / 2))\n        if [ $value -lt ${list:$mid:1} ]; then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local index=0\n    for i in $list; do\n        if [ $i -lt $value ]; then\n            index=$((index+1))\n        else\n            break\n        fi\n    done\n    echo $index",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    local mid_value=0\n    local result=0\n    while [ $left -le $right ]; do\n        mid=$((($left + $right) / 2))\n        mid_value=${list:$mid:1}\n        if [ $mid_value -lt $value ]; then\n            left=$((mid + 1))\n        elif [ $mid_value -gt $value ]; then\n            right=$((mid - 1))\n        else\n            result=$mid\n            right=$((mid - 1))\n        fi\n    done\n    echo $result",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        local item=${list:$i:1}\n        if [ $item -ge $value ]; then\n            echo $i\n            return\n        fi\n        ((i++))\n    done\n    echo $len",
    "\tlocal -a arr=(\"$@\")\n\tlocal -i len=${#arr[@]}\n\tlocal -i mid=0\n\tlocal -i left=0\n\tlocal -i right=$((len-1))\n\tlocal -i val=$2\n\twhile ((left<=right)); do\n\t\tmid=$((left+((right-left)>>1)))\n\t\tif ((val<arr[mid])); then\n\t\t\tright=$((mid-1))\n\t\telif ((val>arr[mid])); then\n\t\t\tleft=$((mid+1))\n\t\telse\n\t\t\twhile ((mid>=0 && arr[mid]==val)); do\n\t\t\t\t((mid--))\n\t\t\tdone\n\t\t\treturn $((mid+1))\n\t\tfi\n\tdone\n\treturn $left",
    "    local -a array\n    local -i i\n    local -i len\n    local -i mid\n    local -i left\n    local -i right\n    local -i value\n    local -i result\n\n    IFS=' ' read -r -a array <<< \"$1\"\n    value=$2\n    len=${#array[@]}\n    left=0\n    right=$len-1\n    result=-1\n\n    while [[ $left -le $right ]]; do\n        mid=$(( (left+right)/2 ))\n        if [[ ${array[$mid]} -eq $value ]]; then\n            result=$mid\n            right=$mid-1\n        elif [[ ${array[$mid]} -gt $value ]]; then\n            right=$mid-1\n        else\n            left=$mid+1\n        fi\n    done\n\n    echo $result",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list[@]}\n    while (( left < right )); do\n        local -i mid=$(( (left + right) / 2 ))\n        if (( list[mid] < value )); then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list[@]} - 1))\n    local mid\n    while [[ $left -le $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local middle\n    while [[ $left -le $right ]]; do\n        middle=$((($left + $right) / 2))\n        if [[ ${list:$middle:1} -lt $value ]]; then\n            left=$((middle + 1))\n        else\n            right=$((middle - 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [ $left -lt $right ]; do\n        mid=$((($left + $right) / 2))\n        if [ \"${list:$mid:1}\" -lt \"$value\" ]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    if [ \"${list:$left:1}\" -lt \"$value\" ]; then\n        left=$((left + 1))\n    fi\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local len=${#list}\n    local left=0\n    local right=$len\n    local mid=0\n    local found=0\n    while [ $left -lt $right ]; do\n        mid=$(( (left + right) / 2 ))\n        if [ ${list:mid:1} -eq $value ]; then\n            found=1\n            break\n        elif [ ${list:mid:1} -lt $value ]; then\n            left=$(( mid + 1 ))\n        else\n            right=$(( mid - 1 ))\n        fi\n    done\n    if [ $found -eq 1 ]; then\n        while [ $mid -gt 0 ]; do\n            if [ ${list:mid:1} -eq $value ]; then\n                mid=$(( mid - 1 ))\n            else\n                break\n            fi\n        done\n        echo $mid\n    else\n        echo $left\n    fi",
    "  local list=$1\n  local value=$2\n  local i=0\n  local len=${#list[@]}\n  local mid=$((len/2))\n  local left=0\n  local right=$((len-1))\n\n  while [ $left -lt $right ]; do\n    if [ $value -lt ${list[$mid]} ]; then\n      right=$((mid-1))\n    else\n      left=$((mid+1))\n    fi\n    mid=$(((left+right)/2))\n  done\n\n  if [ $value -lt ${list[$mid]} ]; then\n    echo $mid\n  else\n    echo $((mid+1))\n  fi",
    "    local -a arr=(\"${@:2}\")\n    local -i len=${#arr[@]}\n    local -i mid=0\n    local -i left=0\n    local -i right=$((len-1))\n    local -i val=$1\n    while [[ $left -lt $right ]]; do\n        mid=$(((left+right)/2))\n        if [[ ${arr[mid]} -lt $val ]]; then\n            left=$((mid+1))\n        else\n            right=$((mid))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    while ((left < right)); do\n        local mid=$((left + (right - left) / 2))\n        if ((value <= list[mid])); then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local middle\n    while ((left <= right)); do\n        middle=$(((left + right) / 2))\n        if ((value <= ${list:middle:1})); then\n            right=$((middle - 1))\n        else\n            left=$((middle + 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ $left -le $right ]]; do\n        mid=$(((left + right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list}\n    local found=0\n    local result=0\n\n    while [ $i -lt $len ] && [ $found -eq 0 ]; do\n        if [ ${list:$i:1} -ge $value ]; then\n            found=1\n            result=$i\n        fi\n        i=$((i+1))\n    done\n\n    if [ $found -eq 0 ]; then\n        result=$len\n    fi\n\n    echo $result",
    "    local -a array=(\"$@\")\n    local value=\"${array[-1]}\"\n    unset array[-1]\n    local -i left=0\n    local -i right=${#array[@]}\n    while ((left < right)); do\n        local -i mid=$((left + (right - left) / 2))\n        if ((array[mid] < value)); then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i mid=0\n    local -i mid_value=0\n    local -i value_found=0\n    local -i left_insertion=0\n\n    while [[ $left -lt $right ]]; do\n        mid=$(( (left + right) / 2 ))\n        mid_value=${list[$mid]}\n        if [[ $mid_value -eq $value ]]; then\n            value_found=1\n            break\n        elif [[ $mid_value -gt $value ]]; then\n            right=$mid\n        else\n            left=$(( mid + 1 ))\n        fi\n    done\n\n    if [[ $value_found -eq 1 ]]; then\n        left_insertion=$mid\n    else\n        left_insertion=$left\n    fi\n\n    echo $left_insertion",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local j=0\n    local l=0\n    local r=0\n    local m=0\n    local n=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local k=0\n    local p=0\n    local q=0\n    local x=0\n    local y=0\n    local z=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local s=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local o",
    "    local -a array\n    local i\n    local value\n    array=($1)\n    value=$2\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ ${array[i]} -ge $value ]]; then\n            echo $i\n            return\n        fi\n    done\n    echo ${#array[@]}",
    "    local list=$1\n    local value=$2\n    local index=0\n    local left=0\n    local right=$(($(echo \"$list\" | wc -w) - 1))\n    while [ $left -le $right ]; do\n        index=$((($left + $right) / 2))\n        local mid=$(echo \"$list\" | cut -d ' ' -f $((index + 1)))\n        if [ $mid -eq $value ]; then\n            echo $index\n            return\n        elif [ $mid -gt $value ]; then\n            right=$((index - 1))\n        else\n            left=$((index + 1))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    local left=0\n    local right=$len\n    local mid=0\n    local found=0\n    while [ $left -lt $right ]; do\n        mid=$(((left + right) / 2))\n        if [ $value -eq ${list[$mid]} ]; then\n            found=1\n            break\n        elif [ $value -lt ${list[$mid]} ]; then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n    if [ $found -eq 1 ]; then\n        while [ $mid -gt 0 ]; do\n            if [ $value -eq ${list[$((mid - 1))]} ]; then\n                mid=$((mid - 1))\n            else\n                break\n            fi\n        done\n    fi\n    echo $mid",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    local mid_value=0\n    while [ $left -lt $right ]; do\n        mid=$((($left + $right) / 2))\n        mid_value=${list[$mid]}\n        if [ $mid_value -lt $value ]; then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local -a list=($1)\n    local value=$2\n    local i=0\n    local j=${#list[@]}\n    while ((i < j)); do\n        local mid=$(((i + j) / 2))\n        if ((value <= list[mid])); then\n            j=$mid\n        else\n            i=$((mid + 1))\n        fi\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=\"$(echo \"$list\" | wc -w)\"\n    local mid\n    local mid_value\n    while [ $left -lt $right ]; do\n        mid=$((($left + $right) / 2))\n        mid_value=\"$(echo \"$list\" | cut -d' ' -f$((mid + 1)))\"\n        if [ $mid_value -lt $value ]; then\n            left=$((mid + 1))\n        else\n            right=$((mid))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid))\n        fi\n    done\n    echo $left",
    "    local -a arr=(\"$@\")\n    local val=$2\n    local i=0\n    local len=${#arr[@]}\n    while [ $i -lt $len ]; do\n        if [ $val -le ${arr[$i]} ]; then\n            echo $i\n            return\n        fi\n        let i++\n    done\n    echo $len",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [ $left -lt $right ]; do\n        mid=$((($left + $right) / 2))\n        if [ \"${list[$mid]}\" -lt \"$value\" ]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local j=$(( ${#list} - 1 ))\n    local k=0\n    local m=0\n    local n=0\n    local mid=0\n    local found=0\n    local left_insertion=0\n    local list_array=( $list )\n\n    while [ $i -le $j ]\n    do\n        k=$(( (i + j) / 2 ))\n        m=$(( k - 1 ))\n        n=$(( k + 1 ))\n        mid=${list_array[$k]}\n        if [ $mid -eq $value ]\n        then\n            found=1\n            break\n        elif [ $mid -lt $value ]\n        then\n            i=$(( k + 1 ))\n        else\n            j=$(( k - 1 ))\n        fi\n    done\n\n    if [ $found -eq 1 ]\n    then\n        if [ $k -eq 0 ]\n        then\n            left_insertion=0\n        elif [ $mid -eq $value ]\n        then\n            left_insertion=$k\n        else\n            left_insertion=$(( k + 1 ))\n        fi\n    else\n        left_insertion=$k\n    fi\n\n    echo $left_insertion",
    "    local -a array=($1)\n    local value=$2\n    local i=0\n    local j=${#array[@]}\n    while ((i < j)); do\n        local mid=$((i + (j - i) / 2))\n        if ((array[mid] < value)); then\n            i=$((mid + 1))\n        else\n            j=$mid\n        fi\n    done\n    echo $i",
    "    local -a array=($1)\n    local value=$2\n    local left=0\n    local right=${#array[@]}\n    while [ $left -lt $right ]; do\n        local mid=$(( (left + right) / 2 ))\n        if [ ${array[$mid]} -lt $value ]; then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local -a array=($1)\n    local value=$2\n    local index=0\n    local length=${#array[@]}\n    local middle=$((length / 2))\n    local left=0\n    local right=$((length - 1))\n    while [[ $left -lt $right ]]; do\n        if [[ ${array[$middle]} -eq $value ]]; then\n            index=$middle\n            break\n        elif [[ ${array[$middle]} -lt $value ]]; then\n            left=$((middle + 1))\n        else\n            right=$((middle - 1))\n        fi\n        middle=$(((left + right) / 2))\n    done\n    echo $index",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ \"$left\" -le \"$right\" ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ \"${list[$mid]}\" -eq \"$value\" ]]; then\n            while [[ \"$mid\" -gt 0 ]] && [[ \"${list[$((mid - 1))]}\" -eq \"$value\" ]]; do\n                mid=$((mid - 1))\n            done\n            echo \"$mid\"\n            return\n        elif [[ \"${list[$mid]}\" -lt \"$value\" ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo \"$left\"",
    "    local -a array=(\"$@\")\n    local -i n=${#array[@]}\n    local -i left=0\n    local -i right=$((n-1))\n    local -i mid\n    local -i target=$2\n    while ((left <= right)); do\n        mid=$(((left+right)/2))\n        if ((array[mid] < target)); then\n            left=$((mid+1))\n        else\n            right=$((mid-1))\n        fi\n    done\n    echo $left",
    "    local -a arr=(\"$@\")\n    local val=$2\n    local i=0\n    local len=${#arr[@]}\n    while (( i < len )) && (( arr[i] < val )); do\n        (( i++ ))\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [ $left -le $right ]; do\n        mid=$((($left + $right) / 2))\n        if [ \"${list[$mid]}\" -lt \"$value\" ]; then\n            left=$((mid + 1))\n        elif [ \"${list[$mid]}\" -gt \"$value\" ]; then\n            right=$((mid - 1))\n        else\n            return $mid\n        fi\n    done\n    return $left",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( list[mid] < value )); then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while ((left < right)); do\n        mid=$(((left + right) / 2))\n        if ((value <= list[mid])); then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "    local -n arr=$1\n    local val=$2\n    local len=${#arr[@]}\n    local i=0\n\n    while (( i < len )) && (( arr[i] < val )); do\n        (( i++ ))\n    done\n\n    echo $i",
    "    local -a array=($1)\n    local value=$2\n    local length=${#array[@]}\n    local left=0\n    local right=$((length - 1))\n    local mid=0\n    local mid_value=0\n\n    while [[ $left -lt $right ]]; do\n        mid=$(((left + right) / 2))\n        mid_value=${array[$mid]}\n\n        if [[ $mid_value -eq $value ]]; then\n            while [[ $mid -gt 0 && ${array[$mid - 1]} -eq $value ]]; do\n                ((mid--))\n            done\n            echo $mid\n            return\n        elif [[ $mid_value -gt $value ]]; then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n\n    if [[ $left -eq $right ]]; then\n        if [[ ${array[$left]} -ge $value ]]; then\n            echo $left\n        else\n            echo $((left + 1))\n        fi\n    else\n        echo $left\n    fi",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local index=0\n    local found=0\n    local left=0\n    local right=0\n    local mid=0\n    local mid_value=0\n    local list_length=0\n\n    list_length=$(echo \"$list\" | wc -w)\n    right=$((list_length - 1))\n\n    while [ $left -le $right ]\n    do\n        mid=$(((left + right) / 2))\n        mid_value=$(echo \"$list\" | cut -d' ' -f$((mid + 1)))\n        if [ $mid_value -eq $value ]\n        then\n            found=1\n            break\n        elif [ $mid_value -lt $value ]\n        then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n\n    if [ $found -eq 1 ]\n    then\n        index=$mid\n    else\n        index=$left\n    fi\n\n    echo $index",
    "    local -a arr\n    local -i i\n    local -i len\n    local -i mid\n    local -i left\n    local -i right\n    local -i val\n    arr=($1)\n    len=${#arr[@]}\n    val=$2\n    left=0\n    right=$len-1\n    while [ $left -lt $right ]; do\n        mid=$((($left+$right)/2))\n        if [ $val -le ${arr[$mid]} ]; then\n            right=$mid\n        else\n            left=$((mid+1))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local l=0\n    local r=$((${#list} - 1))\n    local m\n    while ((l <= r)); do\n        m=$(((l + r) / 2))\n        if ((value <= ${list:m:1})); then\n            r=$((m - 1))\n        else\n            l=$((m + 1))\n        fi\n    done\n    echo $l",
    "    local -a list=($1)\n    local value=$2\n    local length=${#list[@]}\n    local i=0\n    local j=$((length-1))\n    local mid=0\n    while [[ $i -lt $j ]]; do\n        mid=$(((i+j)/2))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            i=$((mid+1))\n        else\n            j=$((mid-1))\n        fi\n    done\n    if [[ ${list[$i]} -lt $value ]]; then\n        echo $((i+1))\n    else\n        echo $i\n    fi",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=$((${#list} - 1))\n    local -i mid\n    while left <= right; do\n        mid=$(((left + right) / 2))\n        if [[ \"${list[mid]}\" -lt \"$value\" ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo \"$left\"",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i mid=0\n    local -i val=$2\n    local -i left=0\n    local -i right=0\n    local -i found=0\n    local -i first=0\n    local -i last=0\n    local -i mid=0\n    local -i mid_val=0\n    local -i left_val=0\n    local -i right_val=0\n    local -i left_insertion=0\n\n    #echo \"left_insertion: arr=(${arr[@]}), len=$len, val=$val\"\n\n    if [ $len -eq 0 ]; then\n        echo \"left_insertion: empty array\"\n        return 1\n    fi\n\n    if [ $len -eq 1 ]; then\n        if [ $val -le ${arr[0]} ]; then\n            echo \"left_insertion: ${arr[0]}\"\n            return 0\n        else\n            echo \"left_insertion: ${arr[0]}\"\n            return 1\n        fi\n    fi\n\n    # Find the first value that is greater than or equal to val\n    first=0\n    last=$((len-1))\n    while [ $first -le $last ]; do\n        mid=$(((first+last)/2))\n        mid_val=${arr[$mid]}\n        if [ $mid_val -lt $val ]; then\n            first=$((mid+1))\n        else\n            last=$((mid-1))\n        fi\n    done\n\n    #echo \"left_insertion: first=$first, last=$last, mid=$mid, mid_val=$mid_val\"\n\n    if [ $first -eq $len ]; then\n        echo \"left_insertion: ${arr[$((len-1))]}\"\n        return 1\n    fi\n\n    if [ $mid_val -eq $val ]; then\n        echo \"left_insertion: ${arr[$mid]}\"\n        return 0\n    fi\n\n    if [ $mid_val -lt $val ]; then\n        echo \"left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        local item=${list:$i:1}\n        if [ $item -gt $value ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i mid\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( list[mid] < value )); then\n            left=$(( mid + 1 ))\n        else\n            right=$(( mid ))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local j=0\n    local len=0\n    local mid=0\n    local result=0\n    local -a arr\n    # Convert list to array\n    IFS=' ' read -r -a arr <<< \"$list\"\n    len=${#arr[@]}\n    # Binary search\n    while (( i < len )) && (( j < len )); do\n        mid=$(( (i + j) / 2 ))\n        if (( arr[mid] < value )); then\n            i=$(( mid + 1 ))\n        elif (( arr[mid] > value )); then\n            j=$(( mid - 1 ))\n        else\n            # Found the value\n            result=$mid\n            break\n        fi\n    done\n    # If the value is not found, return the left insertion point\n    if (( result == 0 )); then\n        if (( arr[mid] < value )); then\n            result=$(( mid + 1 ))\n        else\n            result=$(( mid ))\n        fi\n    fi\n    echo \"$result\"",
    "    local list=$1\n    local value=$2\n    local index=0\n    local found=0\n    for i in $list; do\n        if [[ $i -eq $value ]]; then\n            found=1\n            break\n        elif [[ $i -gt $value ]]; then\n            break\n        fi\n        index=$((index+1))\n    done\n    if [[ $found -eq 0 ]]; then\n        echo \"The value $value is not in the list\"\n    else\n        echo \"The value $value is at index $index\"\n    fi",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$(($(echo \"$list\" | wc -w) - 1))\n    local mid\n    while ((left <= right)); do\n        mid=$(((left + right) / 2))\n        if ((value <= $(echo \"$list\" | cut -d ' ' -f $((mid + 1)))))\n        then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo \"$left\"",
    "    local -a array=($1)\n    local value=$2\n    local low=0\n    local high=${#array[@]}\n    local mid\n    while ((low < high)); do\n        mid=$(((low + high) / 2))\n        if ((array[mid] < value)); then\n            low=$((mid + 1))\n        else\n            high=$mid\n        fi\n    done\n    echo $low",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i mid=0\n    local -i mid_value=0\n    local -i list_value=0\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        mid_value=${list[mid]}\n        if (( mid_value == value )); then\n            while (( mid > 0 )); do\n                (( --mid ))\n                list_value=${list[mid]}\n                if (( list_value != value )); then\n                    (( ++mid ))\n                    break\n                fi\n            done\n            break\n        elif (( mid_value > value )); then\n            right=$mid\n        else\n            left=$(( mid + 1 ))\n        fi\n    done\n    echo $mid",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i mid\n    local -i result\n\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( list[mid] < value )); then\n            left=$(( mid + 1 ))\n        else\n            right=$(( mid ))\n        fi\n    done\n\n    result=$left\n    echo $result",
    "    local -n arr=$1\n    local val=$2\n    local len=${#arr[@]}\n    local i=0\n    local mid=0\n    local left=0\n    local right=$((len - 1))\n    while [[ $left -lt $right ]]; do\n        mid=$(((left + right) / 2))\n        if [[ ${arr[mid]} -lt $val ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    if [[ ${arr[left]} -lt $val ]]; then\n        echo $((left + 1))\n    else\n        echo $left\n    fi",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i mid=0\n    local -i mid_value=0\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        mid_value=${list[mid]}\n        if (( mid_value < value )); then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i mid\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( list[mid] < value )); then\n            left=$(( mid + 1 ))\n        else\n            right=$(( mid ))\n        fi\n    done\n    echo \"$left\"",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$(( $(echo \"$list\" | wc -w) - 1 ))\n    local mid\n    while (( left <= right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( value < $(echo \"$list\" | cut -d ' ' -f $(( mid + 1 ))) )); then\n            right=$(( mid - 1 ))\n        else\n            left=$(( mid + 1 ))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=$((${#list} - 1))\n    local -i mid\n    while ((left <= right)); do\n        mid=$(((left + right) / 2))\n        if [[ ${list:mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    while (( left < right )); do\n        local -i mid=$(( (left + right) / 2 ))\n        if (( list[mid] < value )); then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local index=0\n    local left=0\n    local right=${#list}\n\n    while [[ $left -lt $right ]]; do\n        index=$(( (left + right) / 2 ))\n        if [[ ${list[$index]} -lt $value ]]; then\n            left=$(( index + 1 ))\n        else\n            right=$index\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local e",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    local mid_value=0\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        mid_value=$(echo \"$list\" | cut -d ' ' -f $((mid + 1)))\n        if [[ $mid_value -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local list_length=${#list[@]}\n    while [ $i -lt $list_length ]; do\n        if [ ${list[$i]} -ge $value ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local -a array=($1)\n    local target=$2\n    local low=0\n    local high=${#array[@]}\n    local mid=0\n    while (( low < high )); do\n        mid=$(( (low + high) / 2 ))\n        if (( target <= array[mid] )); then\n            high=$mid\n        else\n            low=$(( mid + 1 ))\n        fi\n    done\n    echo $low",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ $left -le $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        if [ $value -le ${list:$i:1} ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $len",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    local mid=0\n    local left=0\n    local right=$len\n    while [ $left -lt $right ]\n    do\n        mid=$(( (left + right) / 2 ))\n        if [ ${list[$mid]} -lt $value ]\n        then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i j=${#arr[@]}\n    local -i k\n    local -i target=$2\n    while (( i < j )); do\n        k=$(( (i + j) / 2 ))\n        if (( arr[k] < target )); then\n            i=$(( k + 1 ))\n        else\n            j=$k\n        fi\n    done\n    echo $i",
    "    local -a list=($1)\n    local value=$2\n    local i=0\n    local j=${#list[@]}\n    while ((i < j)); do\n        local k=$((i + (j - i) / 2))\n        if ((value <= list[k])); then\n            j=$k\n        else\n            i=$((k + 1))\n        fi\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local len=${#list}\n    local mid=0\n    local left=0\n    local right=$len\n    local found=0\n\n    while [ $left -lt $right ]; do\n        mid=$(((left + right) / 2))\n        if [ \"${list:$mid:1}\" -lt \"$value\" ]; then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=0\n    local -i m=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i t",
    "    local -a array=($1)\n    local value=$2\n    local left=0\n    local right=${#array[@]}\n    while ((left < right)); do\n        local mid=$(((left + right) / 2))\n        if ((array[mid] < value)); then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i m=0\n    local -i n=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n    local -",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ $value -lt ${list[$i]} ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $len",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local -n arr=$1\n    local val=$2\n    local -i i=0\n    local -i j=${#arr[*]}\n    while (( i < j )); do\n        local -i mid=$(( (i + j) / 2 ))\n        if (( val <= arr[mid] )); then\n            j=$mid\n        else\n            i=$(( mid + 1 ))\n        fi\n    done\n    echo $i",
    "    local -a list\n    local -i i\n    local -i n\n    local -i left\n    local -i right\n    local -i mid\n    local -i value\n    list=($1)\n    n=${#list[@]}\n    value=$2\n    left=0\n    right=$((n-1))\n    while ((left <= right))\n    do\n        mid=$(((left+right)/2))\n        if ((value > list[mid]))\n        then\n            left=$((mid+1))\n        else\n            right=$((mid-1))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local l=0\n    local r=0\n    local m=0\n    local v=0\n    local result=0\n\n    l=$(echo \"$list\" | wc -w)\n    r=$((l - 1))\n    while [ $l -le $r ]; do\n        m=$(((l + r) / 2))\n        v=$(echo \"$list\" | cut -d' ' -f$((m + 1)))\n        if [ $v -eq $value ]; then\n            result=$m\n            break\n        elif [ $v -lt $value ]; then\n            l=$((m + 1))\n        else\n            r=$((m - 1))\n        fi\n    done\n    if [ $result -eq 0 ]; then\n        result=$l\n    fi\n    echo $result",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local len=${#list}\n    local mid=0\n    local left=0\n    local right=$len\n    while [ $left -lt $right ]; do\n        mid=$((left + (right - left) / 2))\n        if [ \"${list:$mid:1}\" -lt \"$value\" ]; then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=$(echo \"$list\" | wc -w)\n    local -i mid=0\n    local -i mid_value=0\n    while [ $left -lt $right ]; do\n        mid=$(( (left + right) / 2 ))\n        mid_value=$(echo \"$list\" | cut -d ' ' -f $(( mid + 1 )))\n        if [ $mid_value -lt $value ]; then\n            left=$(( mid + 1 ))\n        else\n            right=$(( mid ))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while [ $left -lt $right ]\n    do\n        mid=$(( (left + right) / 2 ))\n        if [ ${list[$mid]} -lt $value ]\n        then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local -a array=(\"$@\")\n    local value=$2\n    local length=${#array[@]}\n    local i=0\n    local j=$((length - 1))\n    local mid=0\n    while ((i <= j)); do\n        mid=$(((i + j) / 2))\n        if ((value > array[mid])); then\n            i=$((mid + 1))\n        elif ((value < array[mid])); then\n            j=$((mid - 1))\n        else\n            echo $mid\n            return\n        fi\n    done\n    echo $i",
    "    local -a array=($1)\n    local value=$2\n    local index=0\n    local len=${#array[@]}\n    while [ $index -lt $len ]; do\n        if [ ${array[$index]} -ge $value ]; then\n            echo $index\n            return\n        fi\n        let index++\n    done\n    echo $len",
    "    local -a array=($1)\n    local value=$2\n    local -i left=0\n    local -i right=${#array[@]}\n    local -i middle\n    while ((left < right))\n    do\n        middle=$(((left + right) / 2))\n        if ((array[middle] < value))\n        then\n            left=$((middle + 1))\n        else\n            right=$middle\n        fi\n    done\n    echo $left",
    "    local -a arr\n    local -i i\n    local -i n\n    local -i m\n    local -i l\n    local -i r\n    local -i mid\n    local -i val\n    arr=($1)\n    n=${#arr[@]}\n    val=$2\n    l=0\n    r=$((n-1))\n    while ((l<=r)); do\n        mid=$(((l+r)/2))\n        if ((val<arr[mid])); then\n            r=$((mid-1))\n        else\n            l=$((mid+1))\n        fi\n    done\n    echo $l",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=${#list}\n    while [[ $left -lt $right ]]; do\n        local mid=$(( (left + right) / 2 ))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local len=${#list}\n    local mid=0\n    local left=0\n    local right=$len\n    while [ $left -lt $right ]; do\n        mid=$(( (left + right) / 2 ))\n        if [ \"${list:$mid:1}\" -lt \"$value\" ]; then\n            left=$(( mid + 1 ))\n        else\n            right=$(( mid ))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        if [ $value -le ${list:$i:1} ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]; do\n        if [ ${list[$i]} -ge $value ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $len",
    "    local -a array\n    local -i i=0\n    local -i n=0\n    local -i m=0\n    local -i mid=0\n    local -i left=0\n    local -i right=0\n    local -i target=$2\n    local -i result=0\n    array=($1)\n    n=${#array[@]}\n    left=0\n    right=n-1\n    while [ $left -le $right ]; do\n        mid=$(( (left+right)/2 ))\n        if [ ${array[$mid]} -lt $target ]; then\n            left=$(( mid+1 ))\n        else\n            right=$(( mid-1 ))\n        fi\n    done\n    result=$left\n    echo $result",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local j=0\n    local k=0\n    local m=0\n    local n=0\n    local left=0\n    local right=0\n    local mid=0\n    local found=0\n    local result=0\n\n    # Convert the list to an array\n    IFS=' ' read -r -a array <<< \"$list\"\n\n    # Get the length of the array\n    n=${#array[@]}\n\n    # Set the left and right bounds\n    left=0\n    right=$((n-1))\n\n    # Binary search\n    while [[ $left -le $right ]]; do\n        # Get the midpoint\n        mid=$(((left+right)/2))\n\n        # Get the midpoint value\n        m=${array[$mid]}\n\n        # Check if the value is found\n        if [[ $m -eq $value ]]; then\n            # Set the result to the midpoint\n            result=$mid\n\n            # Set the found flag\n            found=1\n\n            # Break out of the loop\n            break\n        fi\n\n        # Check if the value is less than the midpoint value\n        if [[ $value -lt $m ]]; then\n            # Set the right bound to the midpoint\n            right=$((mid-1))\n        else\n            # Set the left bound to the midpoint\n            left=$((mid+1))\n        fi\n    done\n\n    # Check if the value was found\n    if [[ $found -eq 0 ]]; then\n        # Set the result to the left bound\n        result=$left\n    fi\n\n    # Return the result\n    echo $result",
    "    local -a arr=($1)\n    local -i i=0\n    local -i j=${#arr[@]}\n    local -i k\n    local -i val=$2\n    while (( i < j )); do\n        k=$(( (i+j)/2 ))\n        if (( val <= arr[k] )); then\n            j=$k\n        else\n            i=$(( k+1 ))\n        fi\n    done\n    echo $i",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        if [ $value -le ${list:$i:1} ]; then\n            echo $i\n            return 0\n        fi\n        ((i++))\n    done\n    echo $len\n    return 0",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list}\n    local mid=0\n    local mid_value=0\n    local left=0\n    local right=$len\n    while [ $left -lt $right ]; do\n        mid=$(( (left + right) / 2 ))\n        mid_value=${list[$mid]}\n        if [ $mid_value -lt $value ]; then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local -a array\n    local -i i\n    local -i j\n    local -i k\n    local -i n\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i A\n    local -i B\n    local -i C\n    local -i D\n    local -i E\n    local -i F\n    local -i G\n    local -i H\n    local -i I\n    local -i J\n    local -i K\n    local -i L\n    local -i M\n    local -i N\n    local -i O\n    local -i P\n    local -i Q\n    local -i R\n    local -i S\n    local -i T\n    local -i U\n    local -i V\n    local -i W\n    local -i X\n    local -i Y\n    local -i Z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i A\n    local -i B\n    local -i C\n    local -i D\n    local -i E\n    local -i F\n    local -i G\n    local -i H\n    local -i I\n    local -i J\n    local -i K\n    local -i L\n    local -i M\n    local -i N\n    local -i O\n    local -i P\n    local -i Q\n   ",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local e",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i low=0\n    local -i high=$(echo \"$list\" | wc -w)\n    local -i mid\n    local -i result\n    while [[ $low -lt $high ]]; do\n        mid=$(((low + high) / 2))\n        if [[ $value -le $(echo \"$list\" | cut -d' ' -f$((mid + 1))) ]]; then\n            high=$mid\n        else\n            low=$((mid + 1))\n        fi\n    done\n    result=$low\n    echo $result",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i middle=0\n    local -i result=0\n    while (( left < right )); do\n        middle=$(( (left + right) / 2 ))\n        if (( list[middle] < value )); then\n            left=$(( middle + 1 ))\n        else\n            right=$(( middle ))\n        fi\n    done\n    if (( list[left] < value )); then\n        result=$(( left + 1 ))\n    else\n        result=$(( left ))\n    fi\n    echo $result",
    "\tlocal -a list=($1)\n\tlocal value=$2\n\tlocal i=0\n\tlocal len=${#list[@]}\n\twhile [ $i -lt $len ]; do\n\t\tif [ ${list[$i]} -ge $value ]; then\n\t\t\techo $i\n\t\t\treturn\n\t\tfi\n\t\t((i++))\n\tdone\n\techo $i",
    "    local -a arr=(\"$@\")\n    local -i n=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i mid=0\n    local -i key=0\n    local -i low=0\n    local -i high=0\n    local -i result=0\n\n    key=$2\n\n    low=0\n    high=$((n-1))\n\n    while ((low <= high))\n    do\n        mid=$(((low+high)/2))\n\n        if ((key < arr[mid]))\n        then\n            high=$((mid-1))\n        elif ((key > arr[mid]))\n        then\n            low=$((mid+1))\n        else\n            result=$mid\n            break\n        fi\n    done\n\n    if ((result == 0))\n    then\n        result=$low\n    fi\n\n    echo $result",
    "    local -n arr=$1\n    local val=$2\n    local i=0\n    local len=${#arr[@]}\n    while [ $i -lt $len ]; do\n        if [ ${arr[$i]} -gt $val ]; then\n            break\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [ $left -le $right ]; do\n        mid=$((($left + $right) / 2))\n        if [ \"${list[$mid]}\" -lt \"$value\" ]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "  local list=$1\n  local value=$2\n  local i=0\n  local list_length=$(echo $list | wc -w)\n  while [ $i -lt $list_length ]; do\n    if [ $value -le $(echo $list | cut -d ' ' -f $((i+1))) ]; then\n      echo $i\n      return\n    fi\n    i=$((i+1))\n  done\n  echo $list_length",
    "    local -a array\n    local -i i\n    local -i n\n    local -i mid\n    local -i low\n    local -i high\n    local -i found\n    local -i value\n    IFS=' ' read -r -a array <<< \"$1\"\n    n=${#array[@]}\n    value=\"$2\"\n    low=0\n    high=$((n-1))\n    found=0\n    while ((low<=high)) && ((found==0)); do\n        mid=$(((low+high)/2))\n        if ((value>array[mid]))\n        then\n            low=$((mid+1))\n        elif ((value<array[mid]))\n        then\n            high=$((mid-1))\n        else\n            found=1\n        fi\n    done\n    if ((found==1))\n    then\n        echo \"$mid\"\n    else\n        echo \"$low\"\n    fi",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=$(echo \"$list\" | wc -w)\n    local -i mid\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( value <= $(echo \"$list\" | cut -d' ' -f$(( mid + 1 ))) )); then\n            right=$mid\n        else\n            left=$(( mid + 1 ))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local list_len=${#list[@]}\n    while [ $i -lt $list_len ]; do\n        if [ ${list[$i]} -ge $value ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $list_len",
    "    local -a list=($1)\n    local value=$2\n    local left=0\n    local right=${#list[@]}\n    local mid=0\n    while ((left < right)); do\n        mid=$((left + (right - left) / 2))\n        if ((value <= list[mid])); then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "    local -a list\n    local -i i\n    local -i len\n    local -i mid\n    local -i left\n    local -i right\n    local -i target\n\n    IFS=' ' read -r -a list <<< \"$1\"\n    len=${#list[@]}\n    target=$2\n\n    left=0\n    right=$len-1\n\n    while (( left <= right )); do\n        mid=$(( (left+right)/2 ))\n        if (( list[mid] < target )); then\n            left=$(( mid+1 ))\n        else\n            right=$(( mid-1 ))\n        fi\n    done\n\n    echo $left",
    "    local -a list=($1)\n    local target=$2\n    local -i left=0\n    local -i right=${#list[@]}\n    local -i mid=0\n    while ((left < right)); do\n        mid=$((left + (right - left) / 2))\n        if ((list[mid] < target)); then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local -a arr\n    local i\n    local -i low=0\n    local -i high=${#1}\n    local -i mid\n    local -i val=$2\n    local -i found=0\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n\n    while [ $low -lt $high ]\n    do\n        mid=$(( (low + high) / 2 ))\n        if [ ${arr[mid]} -lt $val ]\n        then\n            low=$(( mid + 1 ))\n        else\n            high=$(( mid ))\n        fi\n    done\n\n    if [ ${arr[low]} -eq $val ]\n    then\n        found=1\n    fi\n\n    echo $low\n    return $found",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=${#list}\n    local -i mid=0\n    while (( left < right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( value <= list[mid] )); then\n            right=$mid\n        else\n            left=$(( mid + 1 ))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    while [[ $left -lt $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$(( $(echo \"$list\" | wc -w) - 1 ))\n    local middle\n    local middle_value\n    while [ $left -lt $right ]; do\n        middle=$(( (left + right) / 2 ))\n        middle_value=$(echo \"$list\" | cut -d' ' -f$(( middle + 1 )))\n        if [ $middle_value -lt $value ]; then\n            left=$(( middle + 1 ))\n        else\n            right=$(( middle - 1 ))\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$(($(echo \"$list\" | wc -w) - 1))\n    local mid\n    while [ $left -le $right ]; do\n        mid=$((($left + $right) / 2))\n        if [ $value -lt $(echo \"$list\" | cut -d ' ' -f $((mid + 1))) ]; then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo $left",
    "  local list=\"$1\"\n  local value=\"$2\"\n  local i=0\n  local n=0\n  for item in $list; do\n    if [ $item -lt $value ]; then\n      i=$((i+1))\n    fi\n    n=$((n+1))\n  done\n  echo $i",
    "    local -a list=($1)\n    local val=$2\n    local left=0\n    local right=${#list[@]}\n    while (( left < right )); do\n        local mid=$(( (left+right)/2 ))\n        if (( val <= list[mid] )); then\n            right=$mid\n        else\n            left=$(( mid+1 ))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list}\n    while [[ $i -lt $len ]]; do\n        local item=${list:$i:1}\n        if [[ $item -gt $value ]]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $i",
    "    local -a list=($1)\n    local value=$2\n    local i=0\n    local j=${#list[@]}\n    while [[ $i -lt $j ]]; do\n        local mid=$((i + j))\n        mid=$((mid / 2))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            i=$((mid + 1))\n        else\n            j=$((mid))\n        fi\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid=0\n    local mid_value=0\n    while [ $left -lt $right ]; do\n        mid=$((($left + $right) / 2))\n        mid_value=$(echo \"$list\" | cut -d ' ' -f $((mid + 1)))\n        if [ $mid_value -lt $value ]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left",
    "    local -n arr=$1\n    local val=$2\n    local i=0\n    local j=${#arr[@]}\n    while (( i < j )); do\n        local mid=$(( (i+j)/2 ))\n        if (( val <= arr[mid] )); then\n            j=$mid\n        else\n            i=$(( mid+1 ))\n        fi\n    done\n    echo $i",
    "    local list=$1\n    local value=$2\n    local i=0\n    local len=${#list}\n    local mid=0\n    local left=0\n    local right=$len\n    while [ $left -lt $right ]; do\n        mid=$(( (left + right) / 2 ))\n        if [ $value -le ${list:$mid:1} ]; then\n            right=$mid\n        else\n            left=$(( mid + 1 ))\n        fi\n    done\n    echo $left",
    "    local list=$1\n    local value=$2\n    local i=0\n    local found=0\n    for item in $list; do\n        if [ $item -lt $value ]; then\n            i=$((i+1))\n        else\n            found=1\n            break\n        fi\n    done\n    echo $i",
    "    local -a list=($1)\n    local value=$2\n    local low=0\n    local high=${#list[@]}\n    local mid=0\n    local found=0\n\n    while [ $low -lt $high ]\n    do\n        mid=$((low + (high - low) / 2))\n        if [ ${list[$mid]} -lt $value ]\n        then\n            low=$((mid + 1))\n        else\n            high=$mid\n        fi\n    done\n    echo $low",
    "    local -a list=($1)\n    local value=$2\n    local i=0\n    local j=${#list[@]}\n    while [[ $i -lt $j ]]; do\n        local mid=$((i + (j - i) / 2))\n        if [[ ${list[$mid]} -lt $value ]]; then\n            i=$((mid + 1))\n        else\n            j=$mid\n        fi\n    done\n    echo $i",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local -i left=0\n    local -i right=$((${#list} - 1))\n    local -i mid\n    while ((left <= right)); do\n        mid=$(((left + right) / 2))\n        if ((value <= ${list:mid:1})); then\n            right=$((mid - 1))\n        else\n            left=$((mid + 1))\n        fi\n    done\n    echo \"$left\"",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local n=0\n    local left=0\n    local right=0\n    local mid=0\n    local found=0\n    local result=0\n    n=$(echo \"$list\" | wc -w)\n    right=$((n-1))\n    while [ $left -le $right ] && [ $found -eq 0 ]; do\n        mid=$(((left+right)/2))\n        if [ $value -eq $(echo \"$list\" | cut -d ' ' -f $((mid+1))) ]; then\n            found=1\n        elif [ $value -lt $(echo \"$list\" | cut -d ' ' -f $((mid+1))) ]; then\n            right=$((mid-1))\n        else\n            left=$((mid+1))\n        fi\n    done\n    if [ $found -eq 1 ]; then\n        result=$mid\n    else\n        result=$left\n    fi\n    echo $result",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [ $left -lt $right ]; do\n        mid=$((($left + $right) / 2))\n        if [ \"${list[$mid]}\" -lt \"$value\" ]; then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        if [ $value -le ${list:$i:1} ]; then\n            echo $i\n            return\n        fi\n        i=$((i+1))\n    done\n    echo $len",
    "    local -a array=($1)\n    local value=$2\n    local left=0\n    local right=${#array[@]}\n    local mid=0\n    while [[ $left -lt $right ]]; do\n        mid=$(( (left + right) / 2 ))\n        if [[ ${array[$mid]} -lt $value ]]; then\n            left=$(( mid + 1 ))\n        else\n            right=$mid\n        fi\n    done\n    echo $left",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local left=0\n    local right=$((${#list} - 1))\n    local mid\n    while [[ $left -le $right ]]; do\n        mid=$((($left + $right) / 2))\n        if [[ ${list:$mid:1} -lt $value ]]; then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n    echo $left"
  ]
}
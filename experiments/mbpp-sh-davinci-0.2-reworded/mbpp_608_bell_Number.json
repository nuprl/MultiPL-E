{
  "name": "mbpp_608_bell_Number",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find nth bell number.\n#\n# $1 is an integer\nbell_Number() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_608_bell_Number.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    bell_Number \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"15\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if [ $1 -eq 0 ]\n    then\n        echo 1\n    else\n        local i=0\n        local j=0\n        local sum=0\n        while [ $i -lt $1 ]\n        do\n            j=0\n            while [ $j -le $i ]\n            do\n                sum=$((sum+$(bell_Number $j)*$(bell_Number $((i-j)))))\n                j=$((j+1))\n            done\n            i=$((i+1))\n        done\n        echo $sum\n    fi",
    "    local n=$1\n    local i=0\n    local j=0\n    local k=0\n    local bell=()\n    bell[0]=1\n    for ((i=1; i<=n; i++))\n    do\n        bell[i]=0\n        for ((j=0; j<i; j++))\n        do\n            bell[i]=$((bell[i] + $((bell[j] * bell[i-j-1]))))\n        done\n    done\n    echo ${bell[$n]}",
    "    if [[ $1 -eq 0 ]]; then\n        echo 1\n    else\n        local sum=0\n        for (( i=0; i<=$1-1; i++ )); do\n            sum=$(( sum + $(bell_Number $i) * $(bell_Number $(( $1-1-$i ))) ))\n        done\n        echo $sum\n    fi",
    "    if [ $1 -eq 0 ]\n    then\n        echo 1\n    else\n        local i=0\n        local j=0\n        local sum=0\n        while [ $i -lt $1 ]\n        do\n            j=0\n            while [ $j -le $i ]\n            do\n                sum=$((sum+$(bell_Number $j)*$(bell_Number $((i-j)))))\n                j=$((j+1))\n            done\n            i=$((i+1))\n        done\n        echo $sum\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 1\n    else\n        local sum=0\n        for (( i=0; i<=$1-1; i++ )); do\n            sum=$(( $sum + $(bell_Number $i) * $(bell_Number $(( $1-1-$i ))) ))\n        done\n        echo $sum\n    fi",
    "    local n=$1\n    local i=0\n    local j=0\n    local k=0\n    local sum=0\n    local bell=()\n    bell[0]=1\n    for ((i=1; i<=n; i++))\n    do\n        sum=0\n        for ((j=0; j<i; j++))\n        do\n            sum=$((sum+bell[j]*bell[i-j-1]))\n        done\n        bell[i]=sum\n    done\n    echo ${bell[n]}",
    "  local n=$1\n  local i=0\n  local j=0\n  local k=0\n  local bell=()\n  bell[0]=1\n  for ((i=1; i<=n; i++))\n  do\n    bell[i]=0\n    for ((j=0; j<i; j++))\n    do\n      bell[i]=$((bell[i] + bell[j] * bell[i-j-1]))\n    done\n  done\n  echo ${bell[n]}",
    "    if [ $1 -eq 0 ]\n    then\n        echo 1\n    else\n        local i=0\n        local j=0\n        local sum=0\n        while [ $i -lt $1 ]\n        do\n            j=0\n            while [ $j -lt $i ]\n            do\n                sum=$((sum+$(bell_Number $j)*$(bell_Number $((i-$j-1)))))\n                j=$((j+1))\n            done\n            i=$((i+1))\n        done\n        echo $((sum+1))\n    fi",
    "    if [ $1 -eq 0 ]; then\n        echo 1\n    else\n        local sum=0\n        for ((i=0; i<$1; i++)); do\n            sum=$((sum + $(bell_Number $i) * $(bell_Number $(( $1 - 1 - $i ))) ))\n        done\n        echo $sum\n    fi",
    "    local n=$1\n    local i=0\n    local j=0\n    local k=0\n    local bell=()\n    bell[0]=1\n    for ((i=1; i<=n; i++))\n    do\n        local temp=0\n        for ((j=0; j<i; j++))\n        do\n            temp=$((temp+$((bell[j]*$((i-1))/$j))))\n        done\n        bell[i]=$temp\n    done\n    echo ${bell[n]}",
    "    if [[ $1 -eq 0 ]]; then\n        echo 1\n        return\n    fi\n    if [[ $1 -eq 1 ]]; then\n        echo 1\n        return\n    fi\n    local sum=0\n    for (( i=0; i<=$1-1; i++ )); do\n        sum=$(( $sum + $(bell_Number $i) * $(bell_Number $(( $1 - 1 - $i ))) ))\n    done\n    echo $sum",
    "    local n=$1\n    local i=0\n    local j=0\n    local k=0\n    local b=0\n    local bell=()\n    bell[0]=1\n    for ((i=1; i<=n; i++)); do\n        b=0\n        for ((j=0; j<i; j++)); do\n            for ((k=j; k>0; k--)); do\n                bell[k]=$((bell[k] + bell[k-1]))\n            done\n            bell[0]=$((bell[0] + 1))\n            b=$((b + bell[j]))\n        done\n        echo -n \"$b \"\n    done\n    echo",
    "    local n=$1\n    local i=0\n    local j=0\n    local k=0\n    local bell=()\n    bell[0]=1\n    for (( i=1; i<=n; i++ ))\n    do\n        bell[i]=0\n        for (( j=0; j<i; j++ ))\n        do\n            bell[i]=$(( ${bell[i]} + ${bell[j]} * ${bell[i-j-1]} ))\n        done\n    done\n    echo ${bell[n]}",
    "    local n=$1\n    local i=0\n    local j=0\n    local k=0\n    local bell=()\n    bell[0]=1\n    for ((i=1; i<=n; i++))\n    do\n        bell[i]=0\n        for ((j=0; j<i; j++))\n        do\n            bell[i]=$((bell[i]+$((bell[j]*bell[i-j-1]))))\n        done\n    done\n    echo ${bell[n]}",
    "    local n=$1\n    local i=0\n    local j=0\n    local k=0\n    local bell=()\n    bell[0]=1\n    for ((i=1; i<=n; i++))\n    do\n        bell[i]=0\n        for ((j=0; j<i; j++))\n        do\n            bell[i]=$((${bell[i]}+$((${bell[j]}*$((${i}-${j}))))))\n        done\n    done\n    echo ${bell[n]}",
    "    if [ $1 -eq 0 ]\n    then\n        echo 1\n    else\n        local sum=0\n        for (( i=0; i<=$1-1; i++ ))\n        do\n            sum=$(( $sum + $(bell_Number $i) * $(bell_Number $(( $1-$i-1 ))) ))\n        done\n        echo $sum\n    fi",
    "    if [[ $1 -eq 0 ]]; then\n        echo 1\n    else\n        local sum=0\n        for (( i=0; i<$1; i++ )); do\n            sum=$(( sum + $(bell_Number $i) * $(bell_Number $(( $1 - 1 - $i ))) ))\n        done\n        echo $sum\n    fi",
    "  local n=$1\n  local i\n  local j\n  local bell=()\n  bell[0]=1\n  for (( i=1; i<=n; i++ ))\n  do\n    bell[i]=0\n    for (( j=0; j<i; j++ ))\n    do\n      bell[i]=$(( ${bell[i]} + ${bell[j]} * ${bell[i-j-1]} ))\n    done\n  done\n  echo ${bell[n]}",
    "    local n=$1\n    local i=0\n    local j=0\n    local k=0\n    local bell=0\n    local bell_prev=0\n    local bell_prev_prev=0\n    local bell_prev_prev_prev=0\n    local bell_prev_prev_prev_prev=0\n    local bell_prev_prev_prev_prev_prev=0\n    local bell_prev_prev_prev_prev_prev_prev=0\n    local bell_prev_prev_prev_prev_prev_prev_prev=0\n    local bell_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local bell_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local bell_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local bell_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local bell_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local bell_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local bell_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local bell_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local bell_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local bell_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local bell_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local bell_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev",
    "    local n=$1\n    local i=0\n    local j=0\n    local k=0\n    local bell=()\n    bell[0]=1\n    for ((i=1; i<=n; i++))\n    do\n        bell[i]=0\n        for ((j=0; j<i; j++))\n        do\n            bell[i]=$((bell[i] + $((bell[j] * bell[i-j-1]))))\n        done\n    done\n    echo ${bell[@]}"
  ]
}
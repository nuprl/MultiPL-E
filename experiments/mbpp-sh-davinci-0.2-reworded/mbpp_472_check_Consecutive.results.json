{
  "name": "mbpp_472_check_Consecutive",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_472_check_Consecutive.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local isConsecutive=1\n    local prev=0\n    for i in $list; do\n        if [ $i -eq $prev ]; then\n            isConsecutive=0\n            break\n        fi\n        prev=$i\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=\"$1\"\n  local prev=0\n  for num in $list; do\n    if [ $num -eq $prev ]; then\n      echo \"Duplicate number: $num\"\n      return 1\n    fi\n    if [ $num -ne $((prev+1)) ]; then\n      echo \"Not consecutive: $num\"\n      return 1\n    fi\n    prev=$num\n  done\n  echo \"Consecutive numbers\"\n  return 0\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local i=0\n    local prev=0\n    local curr=0\n    local count=0\n    for i in $list; do\n        curr=$i\n        if [ $prev -eq 0 ]; then\n            prev=$curr\n        else\n            if [ $curr -eq $((prev+1)) ]; then\n                count=$((count+1))\n            fi\n        fi\n        prev=$curr\n    done\n    if [ $count -eq $((i-1)) ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local count=0\n    for i in $list; do\n        curr=$i\n        if [ $count -eq 0 ]; then\n            prev=$curr\n        else\n            if [ $((curr-prev)) -ne 1 ]; then\n                echo \"Not consecutive\"\n                return\n            fi\n            prev=$curr\n        fi\n        count=$((count+1))\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $curr -ne $((prev+1)) ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=$(echo $list | wc -w)\n    local i=1\n    local prev=0\n    local curr=0\n    for i in $(seq 1 $list_len); do\n        curr=$(echo $list | cut -d' ' -f$i)\n        if [ $i -eq 1 ]; then\n            prev=$curr\n            continue\n        fi\n        if [ $curr -ne $((prev+1)) ]; then\n            echo \"Not consecutive\"\n            return\n        fi\n        prev=$curr\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local -a arr=($1)\n    local i=0\n    local j=0\n    local k=0\n    local flag=0\n    local len=${#arr[@]}\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len; j++))\n        do\n            if [[ ${arr[i]} -gt ${arr[j]} ]]\n            then\n                k=${arr[i]}\n                arr[i]=${arr[j]}\n                arr[j]=$k\n            fi\n        done\n    done\n    for ((i=0; i<len-1; i++))\n    do\n        if [[ $((arr[i]+1)) -eq ${arr[i+1]} ]]\n        then\n            flag=1\n        else\n            flag=0\n            break\n        fi\n    done\n    if [[ $flag -eq 1 ]]\n    then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=$(echo $list | wc -w)\n    local list_sorted=$(echo $list | tr ' ' '\\n' | sort -n)\n    local list_sorted_len=$(echo $list_sorted | wc -w)\n    local list_min=$(echo $list_sorted | cut -d ' ' -f 1)\n    local list_max=$(echo $list_sorted | cut -d ' ' -f $list_sorted_len)\n    local list_diff=$(($list_max - $list_min + 1))\n    if [ $list_len -eq $list_sorted_len -a $list_len -eq $list_diff ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local isConsecutive=true\n    local prev=0\n    for i in $list; do\n        if [ $prev -ne 0 ]; then\n            if [ $((i-prev)) -ne 1 ]; then\n                isConsecutive=false\n                break\n            fi\n        fi\n        prev=$i\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local last=0\n    local current=0\n    local consecutive=1\n    for i in $list; do\n        current=$i\n        if [ $last -ne 0 ] && [ $((current-last)) -ne 1 ]; then\n            consecutive=0\n            break\n        fi\n        last=$current\n    done\n    echo $consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local isConsecutive=1\n    local prev=0\n    for i in $list; do\n        if [[ $prev -ne 0 ]]; then\n            if [[ $prev -ne $((i-1)) ]]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$i\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local is_consecutive=1\n    for num in $list; do\n        curr=$num\n        if [ $curr -ne $((prev+1)) ]; then\n            is_consecutive=0\n            break\n        fi\n        prev=$curr\n    done\n    echo $is_consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    # convert the input string to an array\n    arr=($1)\n    # sort the array\n    arr=($(for i in \"${arr[@]}\"; do echo $i; done | sort))\n    # get the length of the array\n    len=${#arr[@]}\n    # check if the array is consecutive\n    for (( i=0; i<$len-1; i++ )); do\n        if [ ${arr[$i]} -ne $(( ${arr[$i+1]}-1 )) ]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local arr=($1)\n    local i=0\n    local j=0\n    local count=0\n    local flag=0\n    for ((i=0; i<${#arr[@]}; i++))\n    do\n        for ((j=i+1; j<${#arr[@]}; j++))\n        do\n            if [ ${arr[$i]} -eq ${arr[$j]} ]\n            then\n                flag=1\n                break\n            fi\n        done\n        if [ $flag -eq 1 ]\n        then\n            break\n        fi\n    done\n    if [ $flag -eq 1 ]\n    then\n        echo \"No\"\n    else\n        for ((i=0; i<${#arr[@]}; i++))\n        do\n            for ((j=i+1; j<${#arr[@]}; j++))\n            do\n                if [ ${arr[$i]} -eq $(( ${arr[$j]} + 1 )) ]\n                then\n                    count=$(( $count + 1 ))\n                fi\n            done\n        done\n        if [ $count -eq $(( ${#arr[@]} - 1 )) ]\n        then\n            echo \"Yes\"\n        else\n            echo \"No\"\n        fi\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_array=($list)\n    local list_length=${#list_array[@]}\n    local i=0\n    local j=0\n    local k=0\n    local is_consecutive=0\n    local consecutive_count=0\n    local consecutive_array=()\n    local consecutive_array_length=0\n    local consecutive_array_index=0\n    local consecutive_array_index_max=0\n    local consecutive_array_index_min=0\n    local consecutive_array_index_diff=0\n    local consecutive_array_index_diff_max=0\n    local consecutive_array_index_diff_min=0\n    local consecutive_array_index_diff_max_index=0\n    local consecutive_array_index_diff_min_index=0\n    local consecutive_array_index_diff_max_index_diff=0\n    local consecutive_array_index_diff_min_index_diff=0\n    local consecutive_array_index_diff_max_index_diff_max=0\n    local consecutive_array_index_diff_min_index_diff_min=0\n    local consecutive_array_index_diff_max_index_diff_max_index=0\n    local consecutive_array_index_diff_min_index_diff_min_index=0\n    local consecutive_array_index_diff_max_index_diff_max_index_diff=0\n    local consecutive_array_index_diff_min_index_diff_min_index_diff=0\n    local consecutive_array_index_diff_max_index_diff_max_index_diff_max=0\n    local consecutive_array_index_diff_min_index_diff_min_index_diff_min=0\n    local consecutive_array_index_diff_max_index_diff_max_index_diff_max_index=0\n    local consecutive_array_index_diff_min_index_diff_min_index_diff_min_index=0\n    local consecutive_array_index_diff_max_index_diff_max_index_diff_max_index_diff=0\n    local consecutive_array_index_diff_min_index_\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local prev=0\n    for num in $list; do\n        if [ $prev -gt 0 ]; then\n            if [ $prev -ne $((num - 1)) ]; then\n                echo \"Not consecutive\"\n                return 1\n            fi\n        fi\n        prev=$num\n    done\n    echo \"Consecutive\"\n    return 0\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    # Convert the list to an array\n    arr=($1)\n    # Sort the array\n    arr=($(for i in \"${arr[@]}\"; do echo $i; done | sort -n))\n    # Check if the array is consecutive\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        if [ ${arr[$i]} -ne $(( ${arr[$i+1]}-1 )) ]; then\n            echo \"The list is not consecutive\"\n            return\n        fi\n    done\n    echo \"The list is consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=$(echo $list | wc -w)\n    local list_sorted=$(echo $list | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n    local list_sorted_len=$(echo $list_sorted | wc -w)\n    local list_sorted_first=$(echo $list_sorted | cut -d ' ' -f1)\n    local list_sorted_last=$(echo $list_sorted | cut -d ' ' -f$list_sorted_len)\n    local list_sorted_diff=$(($list_sorted_last - $list_sorted_first))\n    if [ $list_len -eq $list_sorted_len ] && [ $list_sorted_diff -eq $(($list_sorted_len - 1)) ]; then\n        echo \"Yes\"\n    else\n        echo \"No\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local list_len=$(echo $list | wc -w)\n  local min=$(echo $list | tr ' ' '\\n' | sort -n | head -n 1)\n  local max=$(echo $list | tr ' ' '\\n' | sort -n | tail -n 1)\n  local expected_sum=$(( (min + max) * list_len / 2 ))\n  local actual_sum=$(echo $list | tr ' ' '+' | bc)\n  if [[ $expected_sum -eq $actual_sum ]]; then\n    echo \"Consecutive\"\n  else\n    echo \"Not Consecutive\"\n  fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpssumx_tq.sh: line 11: bc: command not found\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local list_array=($list)\n    local length=${#list_array[@]}\n    local i=0\n    local is_consecutive=1\n    for ((i=0; i<length-1; i++)); do\n        if [[ ${list_array[i]} -ne $(( ${list_array[i+1]} - 1 )) ]]; then\n            is_consecutive=0\n            break\n        fi\n    done\n    echo $is_consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local count=0\n    local prev=0\n    for i in $list; do\n        if [ $count -eq 0 ]; then\n            prev=$i\n            count=1\n            continue\n        fi\n        if [ $((prev+1)) -eq $i ]; then\n            prev=$i\n            count=$((count+1))\n        else\n            break\n        fi\n    done\n    if [ $count -eq $(echo $list | wc -w) ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $i -ne $prev ]; then\n            echo \"Not consecutive\"\n            return\n        fi\n        prev=$((prev+1))\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local isConsecutive=1\n    local prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $((curr-prev)) -ne 1 ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local last=0\n    for i in $list; do\n        if [[ $i -ne $((last+1)) ]]; then\n            echo \"Not consecutive\"\n            return\n        fi\n        last=$i\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=${#list}\n    local list_arr=($list)\n    local i=0\n    local j=0\n    local k=0\n    local is_consecutive=1\n    local is_duplicate=0\n    local is_sorted=1\n    local is_ascending=1\n    local is_descending=1\n    local is_equal=1\n\n    # Check if the list is sorted\n    for ((i=0; i<list_len-1; i++)); do\n        if [[ ${list_arr[$i]} -gt ${list_arr[$i+1]} ]]; then\n            is_sorted=0\n            break\n        fi\n    done\n\n    # Check if the list is ascending\n    for ((i=0; i<list_len-1; i++)); do\n        if [[ ${list_arr[$i]} -ne ${list_arr[$i+1]}-1 ]]; then\n            is_ascending=0\n            break\n        fi\n    done\n\n    # Check if the list is descending\n    for ((i=0; i<list_len-1; i++)); do\n        if [[ ${list_arr[$i]} -ne ${list_arr[$i+1]}+1 ]]; then\n            is_descending=0\n            break\n        fi\n    done\n\n    # Check if the list is equal\n    for ((i=0; i<list_len-1; i++)); do\n        if [[ ${list_arr[$i]} -ne ${list_arr[$i+1]} ]]; then\n            is_equal=0\n            break\n        fi\n    done\n\n    # Check if the list is consecutive\n    if [[ $is_sorted -eq 1 ]]; then\n        if [[ $is_ascending -eq 1 || $is_descending -eq 1 || $is_equal -eq 1 ]]; then\n            is_consecutive=1\n        else\n            is_consecutive=0\n        fi\n    else\n        is_consecutive=0\n    fi\n\n    # Check if the list has duplicate elements\n    for ((i=0; i<list_\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpfi14x0uo.sh: line 63: unexpected EOF while looking for matching `)'\\n/tmp/tmpfi14x0uo.sh: line 78: syntax error: unexpected end of file\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=($1)\n    local i=0\n    local j=0\n    local flag=0\n    local len=${#list[@]}\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len; j++))\n        do\n            if [ ${list[i]} -eq ${list[j]} ]\n            then\n                flag=1\n            fi\n        done\n    done\n    if [ $flag -eq 1 ]\n    then\n        echo \"Not Consecutive\"\n    else\n        echo \"Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=${#list}\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n   \n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local i=0\n    local j=0\n    local k=0\n    local flag=0\n    local len=${#list}\n    local arr=()\n    local tmp=()\n    local tmp2=()\n    for i in $list; do\n        arr[$j]=$i\n        j=$((j+1))\n    done\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if [[ ${arr[$i]} -gt ${arr[$j]} ]]; then\n                tmp=${arr[$i]}\n                arr[$i]=${arr[$j]}\n                arr[$j]=$tmp\n            fi\n        done\n    done\n    for ((i=0; i<len; i++)); do\n        tmp2[$i]=$((arr[$i]+1))\n    done\n    for ((i=0; i<len; i++)); do\n        if [[ ${arr[$i]} -eq ${tmp2[$i]} ]]; then\n            flag=1\n        else\n            flag=0\n            break\n        fi\n    done\n    if [[ $flag -eq 1 ]]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    # Check if the list is empty\n    if [ -z \"$1\" ]; then\n        echo \"The list is empty.\"\n        return\n    fi\n\n    # Check if the list contains only one element\n    if [ $(echo \"$1\" | wc -w) -eq 1 ]; then\n        echo \"The list contains only one element.\"\n        return\n    fi\n\n    # Check if the list contains only two elements\n    if [ $(echo \"$1\" | wc -w) -eq 2 ]; then\n        if [ $(echo \"$1\" | cut -d ' ' -f 1) -eq $(echo \"$1\" | cut -d ' ' -f 2) ]; then\n            echo \"The list contains only two equal elements.\"\n            return\n        fi\n    fi\n\n    # Check if the list contains only two elements\n    if [ $(echo \"$1\" | wc -w) -eq 2 ]; then\n        if [ $(echo \"$1\" | cut -d ' ' -f 1) -eq $(echo \"$1\" | cut -d ' ' -f 2) ]; then\n            echo \"The list contains only two equal elements.\"\n            return\n        fi\n    fi\n\n    # Check if the list contains only two elements\n    if [ $(echo \"$1\" | wc -w) -eq 2 ]; then\n        if [ $(echo \"$1\" | cut -d ' ' -f 1) -eq $(echo \"$1\" | cut -d ' ' -f 2) ]; then\n            echo \"The list contains only two equal elements.\"\n            return\n        fi\n    fi\n\n    # Check if the list contains only two elements\n    if [ $(echo \"$1\" | wc -w) -eq 2 ]; then\n        if [ $(echo \"$1\" | cut -d ' ' -f 1) -eq $(echo \"$1\" | cut -d ' ' -f 2) ]; then\n            echo \"The list contains only two equal elements.\"\n            return\n        fi\n    fi\n\n    # Check if the list contains only two elements\n    if [ $(echo \"$1\" | wc -w) -eq 2 ]; then\n        if [ $(echo \"$1\" | cut -d ' ' -f 1) -eq $(echo \"$1\" | cut -d ' ' -f 2) ]; then\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp92kg42l6.sh: line 53: syntax error near unexpected token `}'\\n/tmp/tmp92kg42l6.sh: line 53: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local i=0\n    local j=0\n    local k=0\n    local flag=0\n    for i in $list; do\n        for j in $list; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $i -gt $j ]; then\n                k=$((i-j))\n            else\n                k=$((j-i))\n            fi\n            if [ $k -ne 1 ]; then\n                flag=1\n                break\n            fi\n        done\n        if [ $flag -eq 1 ]; then\n            break\n        fi\n    done\n    if [ $flag -eq 1 ]; then\n        echo \"The list is not consecutive\"\n    else\n        echo \"The list is consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local flag=0\n    local prev=0\n    for i in $list; do\n        if [ $flag -eq 0 ]; then\n            prev=$i\n            flag=1\n        else\n            if [ $i -ne $(($prev+1)) ]; then\n                echo \"Not Consecutive\"\n                return\n            fi\n            prev=$i\n        fi\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $i -eq $prev ]; then\n            echo \"False\"\n            return\n        fi\n        prev=$i\n    done\n    echo \"True\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $((curr - prev)) -ne 1 ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $i -eq $prev ]; then\n            echo \"Duplicate number: $i\"\n            return 1\n        fi\n        if [ $i -ne $((prev + 1)) ]; then\n            echo \"Not consecutive: $i\"\n            return 1\n        fi\n        prev=$i\n    done\n    return 0\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $i -eq $prev ]; then\n            echo \"False\"\n            return\n        fi\n        prev=$i\n    done\n    echo \"True\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_length=$(echo $list | wc -w)\n    local list_sorted=$(echo $list | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n    local list_sorted_length=$(echo $list_sorted | wc -w)\n    local list_sorted_first=$(echo $list_sorted | cut -d ' ' -f 1)\n    local list_sorted_last=$(echo $list_sorted | cut -d ' ' -f $list_sorted_length)\n    local list_sorted_diff=$(($list_sorted_last - $list_sorted_first))\n    if [ $list_length -eq $list_sorted_length ] && [ $list_sorted_diff -eq $((list_sorted_length - 1)) ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local count=0\n    for i in $list; do\n        if [ $count -eq 0 ]; then\n            prev=$i\n            count=1\n            continue\n        fi\n        curr=$i\n        if [ $((curr-prev)) -ne 1 ]; then\n            echo \"Not consecutive\"\n            return\n        fi\n        prev=$curr\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=$(echo $list | wc -w)\n    local list_sorted=$(echo $list | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n    local list_sorted_len=$(echo $list_sorted | wc -w)\n    local list_sorted_min=$(echo $list_sorted | cut -d ' ' -f 1)\n    local list_sorted_max=$(echo $list_sorted | cut -d ' ' -f $list_sorted_len)\n    local list_sorted_diff=$(($list_sorted_max - $list_sorted_min + 1))\n    if [ $list_sorted_diff -eq $list_sorted_len ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Non-consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  for i in $1; do\n    if [ $i -ne $((i-1)) ]; then\n      echo \"Not consecutive\"\n      return\n    fi\n  done\n  echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $i -eq $prev ]; then\n            echo \"false\"\n            return\n        fi\n        prev=$i\n    done\n    echo \"true\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $prev -eq 0 ]; then\n            prev=$i\n        else\n            if [ $prev -ne $((i-1)) ]; then\n                echo \"False\"\n                return\n            fi\n            prev=$i\n        fi\n    done\n    echo \"True\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=\"$1\"\n  local list_len=$(echo \"$list\" | wc -w)\n  local min=$(echo \"$list\" | tr ' ' '\\n' | sort -n | head -n 1)\n  local max=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n  local expected_sum=$(( (min + max) * list_len / 2 ))\n  local actual_sum=$(echo \"$list\" | tr ' ' '+' | bc)\n  if [ \"$expected_sum\" -eq \"$actual_sum\" ]; then\n    echo \"Consecutive\"\n  else\n    echo \"Not Consecutive\"\n  fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b'/tmp/tmptpvedfs_.sh: line 11: bc: command not found\\n/tmp/tmptpvedfs_.sh: line 12: [: : integer expression expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local is_consecutive=true\n    local prev=0\n    for num in $list; do\n        if [[ $prev -ne 0 ]]; then\n            if [[ $num -ne $((prev+1)) ]]; then\n                is_consecutive=false\n                break\n            fi\n        fi\n        prev=$num\n    done\n    echo $is_consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpi16klvz9.sh: line 176: syntax error near unexpected token `}'\\n/tmp/tmpi16klvz9.sh: line 176: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local length=${#list}\n    local i=0\n    local j=0\n    local k=0\n    local flag=0\n\n    for ((i=0; i<length; i++))\n    do\n        for ((j=i+1; j<length; j++))\n        do\n            if [ ${list:$i:1} -gt ${list:$j:1} ]\n            then\n                temp=${list:$i:1}\n                list=${list:0:$i}${list:$j:1}${list:$i+1:$j-$i-1}${temp}${list:$j+1:$length-$j-1}\n            fi\n        done\n    done\n\n    for ((k=0; k<length-1; k++))\n    do\n        if [ ${list:$k:1} -ne $(( ${list:$k+1:1} - 1 )) ]\n        then\n            flag=1\n            break\n        fi\n    done\n\n    if [ $flag -eq 0 ]\n    then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpj0a11qvr.sh: line 17: [: 1: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: 1: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: 1: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: 1: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: -gt: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: -gt: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: -gt: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: -gt: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: 2: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: 2: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: 2: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: -gt: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: -gt: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: -gt: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: 3: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: 3: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: -gt: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: -gt: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: 4: unary operator expected\\n/tmp/tmpj0a11qvr.sh: line 17: [: -gt: unary operator expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $prev -ne $((curr-1)) ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n\tlocal list=$1\n\tlocal count=0\n\tlocal prev=0\n\tlocal curr=0\n\tfor i in $list; do\n\t\tcurr=$i\n\t\tif [ $prev -eq $((curr - 1)) ]; then\n\t\t\tcount=$((count + 1))\n\t\tfi\n\t\tprev=$curr\n\tdone\n\tif [ $count -eq $(echo $list | wc -w) ]; then\n\t\techo \"Consecutive\"\n\telse\n\t\techo \"Not Consecutive\"\n\tfi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local result=0\n  local i=0\n  local j=0\n  local tmp=0\n  local arr=()\n  local arr_len=0\n\n  arr=($list)\n  arr_len=${#arr[@]}\n\n  for ((i=0; i<arr_len; i++)); do\n    for ((j=i+1; j<arr_len; j++)); do\n      if [ ${arr[i]} -gt ${arr[j]} ]; then\n        tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$tmp\n      fi\n    done\n  done\n\n  for ((i=0; i<arr_len-1; i++)); do\n    if [ $((arr[i+1] - arr[i])) -ne 1 ]; then\n      result=1\n      break\n    fi\n  done\n\n  echo $result\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n    for curr in $list; do\n        if [ $prev -ne 0 ]; then\n            if [ $((curr - prev)) -ne 1 ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for num in $list; do\n        if [[ $num -ne $prev + 1 ]]; then\n            echo \"The list is not consecutive\"\n            return 1\n        fi\n        prev=$num\n    done\n    echo \"The list is consecutive\"\n    return 0\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpk1i_edh4.sh: line 9: syntax error in conditional expression\\n/tmp/tmpk1i_edh4.sh: line 9: syntax error near `+'\\n/tmp/tmpk1i_edh4.sh: line 9: `        if [[ $num -ne $prev + 1 ]]; then'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local eeee=0\n    local ffff=\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=${#list}\n    local list_arr=($list)\n    local list_arr_len=${#list_arr[@]}\n    local list_arr_last_index=$((list_arr_len - 1))\n    local list_arr_last_element=${list_arr[$list_arr_last_index]}\n    local list_arr_first_element=${list_arr[0]}\n    local list_arr_diff=$((list_arr_last_element - list_arr_first_element))\n    local list_arr_diff_abs=${list_arr_diff#-}\n    local list_arr_diff_abs_plus_one=$((list_arr_diff_abs + 1))\n    if [ $list_arr_diff_abs_plus_one -eq $list_arr_len ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    # convert the list to an array\n    local -a list=($1)\n    # sort the array\n    local -a sorted=($(printf \"%s\\n\" \"${list[@]}\" | sort -n))\n    # check if the array is consecutive\n    local -i i=0\n    local -i consecutive=1\n    while [ $i -lt $((${#sorted[@]} - 1)) ]; do\n        if [ $((sorted[$i] + 1)) -ne ${sorted[$((i + 1))]} ]; then\n            consecutive=0\n            break\n        fi\n        i=$((i + 1))\n    done\n    echo $consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    # Check if the list is empty\n    if [ -z \"$1\" ]; then\n        echo \"The list is empty.\"\n        exit 1\n    fi\n\n    # Check if the list contains only one element\n    if [ $(echo \"$1\" | wc -w) -eq 1 ]; then\n        echo \"The list contains only one element.\"\n        exit 1\n    fi\n\n    # Check if the list contains only numbers\n    if [ $(echo \"$1\" | grep -E '^[0-9 ]+$' | wc -l) -eq 0 ]; then\n        echo \"The list contains non-numeric elements.\"\n        exit 1\n    fi\n\n    # Check if the list contains consecutive numbers\n    local list=($1)\n    local i=0\n    local j=1\n    while [ $j -lt ${#list[@]} ]; do\n        if [ ${list[$i]} -ne $(( ${list[$j]} - 1 )) ]; then\n            echo \"The list does not contain consecutive numbers.\"\n            exit 1\n        fi\n        i=$((i+1))\n        j=$((j+1))\n    done\n    echo \"The list contains consecutive numbers.\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $i -eq $prev ]; then\n            echo \"The list contains consecutive numbers\"\n            return 0\n        fi\n        prev=$i\n    done\n    echo \"The list does not contain consecutive numbers\"\n    return 1\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $prev -ne 0 ]; then\n            if [ $i -ne $((prev+1)) ]; then\n                echo \"Not consecutive\"\n                return\n            fi\n        fi\n        prev=$i\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    # Check if the list is empty\n    if [ -z \"$1\" ]; then\n        echo \"List is empty\"\n        return\n    fi\n\n    # Check if the list contains only one element\n    if [ $(echo \"$1\" | wc -w) -eq 1 ]; then\n        echo \"List contains only one element\"\n        return\n    fi\n\n    # Check if the list contains only two elements\n    if [ $(echo \"$1\" | wc -w) -eq 2 ]; then\n        # Check if the two elements are consecutive\n        if [ $(echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ') == \"$1\" ]; then\n            echo \"List contains consecutive numbers\"\n        else\n            echo \"List does not contain consecutive numbers\"\n        fi\n        return\n    fi\n\n    # Check if the list contains more than two elements\n    if [ $(echo \"$1\" | wc -w) -gt 2 ]; then\n        # Check if the list contains consecutive numbers\n        if [ $(echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ') == \"$1\" ]; then\n            echo \"List contains consecutive numbers\"\n        else\n            echo \"List does not contain consecutive numbers\"\n        fi\n        return\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp346fmvo2.sh: line 32: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=$(echo $list | wc -w)\n    local list_sorted=$(echo $list | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n    local list_sorted_len=$(echo $list_sorted | wc -w)\n    local list_sorted_first=$(echo $list_sorted | cut -d ' ' -f 1)\n    local list_sorted_last=$(echo $list_sorted | cut -d ' ' -f $list_sorted_len)\n    local list_sorted_diff=$(( $list_sorted_last - $list_sorted_first ))\n\n    if [[ $list_sorted_diff -eq $(( $list_sorted_len - 1 )) ]]; then\n        echo \"1\"\n    else\n        echo \"0\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local max=$(echo $list | tr \" \" \"\\n\" | sort -n | tail -n 1)\n    local min=$(echo $list | tr \" \" \"\\n\" | sort -n | head -n 1)\n    local diff=$((max-min))\n    local len=$(echo $list | wc -w)\n    if [ $diff -eq $((len-1)) ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=$(echo $list | cut -d' ' -f1)\n    local curr\n    local next\n    for curr in $list; do\n        next=$(echo $list | cut -d' ' -f$(( $curr + 1 )))\n        if [ $(( $curr - $prev )) -ne 1 ]; then\n            echo \"Not consecutive\"\n            return 1\n        fi\n        prev=$curr\n    done\n    echo \"Consecutive\"\n    return 0\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [[ $i -eq $prev ]]; then\n            echo \"Duplicate number $i\"\n            return 1\n        fi\n        if [[ $i -ne $((prev+1)) ]]; then\n            echo \"Non-consecutive number $i\"\n            return 1\n        fi\n        prev=$i\n    done\n    return 0\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $i -eq $prev ]; then\n            echo \"Duplicate number $i\"\n            return 1\n        fi\n        if [ $i -ne $((prev+1)) ]; then\n            echo \"Not consecutive\"\n            return 1\n        fi\n        prev=$i\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local i=0\n    local j=1\n    local count=0\n    local len=${#list[@]}\n    while [ $i -lt $len ]\n    do\n        if [ $j -lt $len ]\n        then\n            if [ ${list[$i]} -eq $(( ${list[$j]} - 1 )) ]\n            then\n                count=$(( $count + 1 ))\n            fi\n        fi\n        i=$(( $i + 1 ))\n        j=$(( $j + 1 ))\n    done\n    if [ $count -eq $(( $len - 1 )) ]\n    then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  for (( i=1; i<$#; i++ )); do\n    if [[ $(( $i + 1 )) -ne ${!i+1} ]]; then\n      echo \"Not consecutive\"\n      return\n    fi\n  done\n  echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local count=0\n    for i in $list; do\n        curr=$i\n        if [ $prev -gt 0 ]; then\n            if [ $curr -eq $((prev + 1)) ]; then\n                count=$((count + 1))\n            fi\n        fi\n        prev=$curr\n    done\n    if [ $count -eq $((curr - 1)) ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local nums=($list)\n  local len=${#nums[@]}\n  local i=0\n  local prev=${nums[0]}\n  local next=0\n  local diff=0\n  local flag=0\n  for ((i=1; i<len; i++)); do\n    next=${nums[$i]}\n    diff=$((next-prev))\n    if [ $diff -ne 1 ]; then\n      flag=1\n      break\n    fi\n    prev=$next\n  done\n  if [ $flag -eq 0 ]; then\n    echo \"Consecutive\"\n  else\n    echo \"Not Consecutive\"\n  fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $i -ne $prev ]; then\n            return 1\n        fi\n        prev=$((i+1))\n    done\n    return 0\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local count=0\n    local flag=0\n    for i in $list; do\n        if [ $flag -eq 0 ]; then\n            prev=$i\n            flag=1\n        else\n            curr=$i\n            if [ $curr -eq $((prev+1)) ]; then\n                count=$((count+1))\n            fi\n            prev=$curr\n        fi\n    done\n    if [ $count -eq $(( $(echo $list | wc -w) - 1 )) ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n\tlocal list=$1\n\tlocal is_consecutive=1\n\tlocal prev=0\n\tfor i in $list; do\n\t\tif [ $i -lt $prev ]; then\n\t\t\tis_consecutive=0\n\t\t\tbreak\n\t\tfi\n\t\tprev=$i\n\tdone\n\techo $is_consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n    for num in $list; do\n        curr=$num\n        if [ $prev -ne 0 ]; then\n            if [ $((curr-prev)) -ne 1 ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=${#list}\n    local list_len_1=$((list_len - 1))\n    local list_len_2=$((list_len - 2))\n    local list_len_3=$((list_len - 3))\n    local list_len_4=$((list_len - 4))\n    local list_len_5=$((list_len - 5))\n    local list_len_6=$((list_len - 6))\n    local list_len_7=$((list_len - 7))\n    local list_len_8=$((list_len - 8))\n    local list_len_9=$((list_len - 9))\n    local list_len_10=$((list_len - 10))\n    local list_len_11=$((list_len - 11))\n    local list_len_12=$((list_len - 12))\n    local list_len_13=$((list_len - 13))\n    local list_len_14=$((list_len - 14))\n    local list_len_15=$((list_len - 15))\n    local list_len_16=$((list_len - 16))\n    local list_len_17=$((list_len - 17))\n    local list_len_18=$((list_len - 18))\n    local list_len_19=$((list_len - 19))\n    local list_len_20=$((list_len - 20))\n    local list_len_21=$((list_len - 21))\n    local list_len_22=$((list_len - 22))\n    local list_len_23=$((list_len - 23))\n    local list_len_24=$((list_len - 24))\n    local list_len_25=$((list_len - 25))\n    local list_len_26=$((list_len - 26))\n    local list_len_27=$((list_len - 27))\n    local list_len_28=$((list_len - 28))\n    local list_len_29=$((list_len - 29))\n    local list_len_30=$((list_len - 30))\n    local list_len_31=$((list_len - 31\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmp599pv9o1.sh: line 38: unexpected EOF while looking for matching `)'\\n/tmp/tmp599pv9o1.sh: line 53: syntax error: unexpected end of file\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $prev -ne 0 ]; then\n            if [ $((i-prev)) -ne 1 ]; then\n                echo \"Not consecutive\"\n                return 1\n            fi\n        fi\n        prev=$i\n    done\n    echo \"Consecutive\"\n    return 0\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local prev=0\n    for i in $list; do\n        if [[ $i -ne $prev+1 ]]; then\n            echo \"Not consecutive\"\n            return\n        fi\n        prev=$i\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local i=0\n    local j=0\n    local len=0\n    local flag=0\n    local arr=()\n    local temp=0\n\n    arr=($list)\n    len=${#arr[@]}\n\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len; j++))\n        do\n            if [[ ${arr[i]} -gt ${arr[j]} ]]\n            then\n                temp=${arr[i]}\n                arr[i]=${arr[j]}\n                arr[j]=$temp\n            fi\n        done\n    done\n\n    for ((i=0; i<len-1; i++))\n    do\n        if [[ ${arr[i]} -ne $(( ${arr[i+1]} - 1 )) ]]\n        then\n            flag=1\n            break\n        fi\n    done\n\n    if [[ $flag -eq 0 ]]\n    then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local i=0\n    local j=0\n    local count=0\n    local flag=0\n    local arr=()\n    for i in $list; do\n        arr[$j]=$i\n        ((j++))\n    done\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((j=i+1; j<${#arr[@]}; j++)); do\n            if [[ ${arr[$i]} -eq $((arr[$j] + 1)) ]]; then\n                ((count++))\n            fi\n        done\n    done\n    if [[ $count -eq $((j-1)) ]]; then\n        flag=1\n    fi\n    echo $flag\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local is_consecutive=1\n    local prev=0\n    for i in $list\n    do\n        if [ $i -eq $prev ]\n        then\n            is_consecutive=0\n            break\n        fi\n        prev=$i\n    done\n    echo $is_consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local consecutive=true\n  for i in $list; do\n    if [[ $i -ne $((i-1)) ]]; then\n      consecutive=false\n      break\n    fi\n  done\n  echo $consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=${#list}\n    local i=0\n    local j=0\n    local k=0\n    local is_consecutive=0\n    local is_sorted=0\n    local is_duplicate=0\n    local is_valid=0\n\n    # Check if the list is valid\n    if [[ $list_len -gt 0 ]]; then\n        is_valid=1\n    else\n        echo \"Invalid list\"\n        return\n    fi\n\n    # Check if the list contains duplicate elements\n    for (( i=0; i<$list_len; i++ )); do\n        for (( j=$i+1; j<$list_len; j++ )); do\n            if [[ ${list:$i:1} == ${list:$j:1} ]]; then\n                is_duplicate=1\n            fi\n        done\n    done\n\n    # Check if the list is sorted\n    for (( i=0; i<$list_len-1; i++ )); do\n        if [[ ${list:$i:1} -gt ${list:$i+1:1} ]]; then\n            is_sorted=1\n        fi\n    done\n\n    # Check if the list is consecutive\n    if [[ $is_sorted -eq 0 ]]; then\n        for (( i=0; i<$list_len-1; i++ )); do\n            if [[ ${list:$i:1} -eq ${list:$i+1:1}-1 ]]; then\n                is_consecutive=1\n            else\n                is_consecutive=0\n                break\n            fi\n        done\n    fi\n\n    # Print the result\n    if [[ $is_valid -eq 1 && $is_duplicate -eq 0 && $is_sorted -eq 0 && $is_consecutive -eq 1 ]]; then\n        echo \"The list is consecutive\"\n    else\n        echo \"The list is not consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for num in $list; do\n        if [ $num -eq $prev ]; then\n            echo \"Duplicate number $num\"\n            return 1\n        fi\n        if [ $num -ne $((prev+1)) ]; then\n            echo \"Not consecutive\"\n            return 1\n        fi\n        prev=$num\n    done\n    echo \"Consecutive\"\n    return 0\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local is_consecutive=1\n    local prev=0\n    for num in $list; do\n        if [ $prev -eq 0 ]; then\n            prev=$num\n        elif [ $prev -ne $((num - 1)) ]; then\n            is_consecutive=0\n            break\n        else\n            prev=$num\n        fi\n    done\n    echo $is_consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local i=0\n    local j=0\n    local k=0\n    local count=0\n    local flag=0\n    local arr=()\n    local arr1=()\n    local arr2=()\n    local arr3=()\n    local arr4=()\n    local arr5=()\n    local arr6=()\n    local arr7=()\n    local arr8=()\n    local arr9=()\n    local arr10=()\n    local arr11=()\n    local arr12=()\n    local arr13=()\n    local arr14=()\n    local arr15=()\n    local arr16=()\n    local arr17=()\n    local arr18=()\n    local arr19=()\n    local arr20=()\n    local arr21=()\n    local arr22=()\n    local arr23=()\n    local arr24=()\n    local arr25=()\n    local arr26=()\n    local arr27=()\n    local arr28=()\n    local arr29=()\n    local arr30=()\n    local arr31=()\n    local arr32=()\n    local arr33=()\n    local arr34=()\n    local arr35=()\n    local arr36=()\n    local arr37=()\n    local arr38=()\n    local arr39=()\n    local arr40=()\n    local arr41=()\n    local arr42=()\n    local arr43=()\n    local arr44=()\n    local arr45=()\n    local arr46=()\n    local arr47=()\n    local arr48=()\n    local arr49=()\n    local arr50=()\n    local arr51=()\n    local arr52=()\n    local arr53=()\n    local arr54=()\n    local arr55=()\n    local arr56=()\n    local arr57=()\n    local arr58=()\n    local arr59=()\n    local arr60=()\n    local arr61=()\n    local arr62=()\n    local arr63=()\n    local arr64=()\n    local arr65=()\n    local arr66=()\n    local arr67=()\n\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local prev=0\n  for i in $list; do\n    if [ $i -ne $prev ]; then\n      echo \"Not consecutive\"\n      return\n    fi\n    prev=$((i+1))\n  done\n  echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local sorted=$(echo $list | tr ' ' '\\n' | sort -n)\n    local min=$(echo $sorted | awk '{print $1}')\n    local max=$(echo $sorted | awk '{print $NF}')\n    local diff=$((max - min))\n    local len=$(echo $sorted | wc -w)\n    if [[ $diff -eq $((len - 1)) ]]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    # Check if the list is empty\n    if [ -z \"$1\" ]; then\n        echo \"The list is empty\"\n        return\n    fi\n\n    # Check if the list has only one element\n    if [ $(echo \"$1\" | wc -w) -eq 1 ]; then\n        echo \"The list has only one element\"\n        return\n    fi\n\n    # Check if the list has only two elements\n    if [ $(echo \"$1\" | wc -w) -eq 2 ]; then\n        # Check if the two elements are consecutive\n        if [ $(echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ') = \"$1\" ]; then\n            echo \"The list has only two consecutive elements\"\n            return\n        else\n            echo \"The list has only two non-consecutive elements\"\n            return\n        fi\n    fi\n\n    # Check if the list has more than two elements\n    if [ $(echo \"$1\" | wc -w) -gt 2 ]; then\n        # Check if the list is sorted\n        if [ $(echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ') = \"$1\" ]; then\n            # Check if the list is consecutive\n            if [ $(echo \"$1\" | tr ' ' '\\n' | sort -n | uniq -d | wc -l) -eq 0 ]; then\n                echo \"The list is consecutive\"\n                return\n            else\n                echo \"The list is not consecutive\"\n                return\n            fi\n        else\n            echo \"The list is not sorted\"\n            return\n        fi\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpionqmd3j.sh: line 33: [: too many arguments\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    #echo \"Checking $1\"\n    local list=($1)\n    local i=0\n    local j=1\n    local k=2\n    local len=${#list[@]}\n    while [ $i -lt $len ]\n    do\n        if [ $j -lt $len ] && [ $k -lt $len ]\n        then\n            if [ ${list[$i]} -eq $(( ${list[$j]} - 1 )) ] && [ ${list[$j]} -eq $(( ${list[$k]} - 1 )) ]\n            then\n                echo \"Consecutive\"\n                return\n            fi\n        fi\n        i=$(( i + 1 ))\n        j=$(( j + 1 ))\n        k=$(( k + 1 ))\n    done\n    echo \"Not Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local list_len=${#list}\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local consecutive=true\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $((curr-prev)) -ne 1 ]; then\n                consecutive=false\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local last=0\n    for i in $list; do\n        if [ $i -ne $((last+1)) ]; then\n            echo \"The list is not consecutive\"\n            return\n        fi\n        last=$i\n    done\n    echo \"The list is consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local flag=0\n    for i in $list; do\n        if [ $flag -eq 0 ]; then\n            prev=$i\n            flag=1\n        else\n            curr=$i\n            if [ $((curr-prev)) -ne 1 ]; then\n                echo \"Not Consecutive\"\n                return\n            fi\n            prev=$curr\n        fi\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $((curr-prev)) -ne 1 ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=$(echo $list | wc -w)\n    local min=$(echo $list | tr ' ' '\\n' | sort -n | head -1)\n    local max=$(echo $list | tr ' ' '\\n' | sort -n | tail -1)\n    local expected_sum=$(($min + $max))\n    local actual_sum=$(echo $list | tr ' ' '+' | bc)\n    local expected_product=$(($min * $max))\n    local actual_product=$(echo $list | tr ' ' '*' | bc)\n    if (($expected_sum == $actual_sum)) && (($expected_product == $actual_product)); then\n        echo \"Yes\"\n    else\n        echo \"No\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpt_i9hfmb.sh: line 11: bc: command not found\\n/tmp/tmpt_i9hfmb.sh: line 13: bc: command not found\\n/tmp/tmpt_i9hfmb.sh: line 14: ((: 6 == : syntax error: operand expected (error token is \"== \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $prev -ne 0 ]; then\n            if [ $((i - prev)) -ne 1 ]; then\n                echo \"Not consecutive\"\n                return\n            fi\n        fi\n        prev=$i\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local flag=0\n  local prev=0\n  for i in $list; do\n    if [ $flag -eq 0 ]; then\n      flag=1\n      prev=$i\n      continue\n    fi\n    if [ $prev -ne $((i-1)) ]; then\n      echo \"false\"\n      return\n    fi\n    prev=$i\n  done\n  echo \"true\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local min=$(echo \"$list\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local diff=$((max - min))\n    local count=$(echo \"$list\" | tr ' ' '\\n' | wc -l)\n    if [ $diff -eq $(($count - 1)) ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $i -eq $prev ]; then\n            echo \"False\"\n            return\n        fi\n        prev=$i\n    done\n    echo \"True\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $prev -ne 0 ]; then\n            if [ $i -ne $((prev+1)) ]; then\n                echo \"Not consecutive\"\n                return\n            fi\n        fi\n        prev=$i\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $((curr - prev)) -ne 1 ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local prev=0\n    local curr=0\n    local next=0\n    local count=0\n    for i in $list; do\n        if [ $count -eq 0 ]; then\n            prev=$i\n            count=1\n        elif [ $count -eq 1 ]; then\n            curr=$i\n            count=2\n        else\n            next=$i\n            if [ $((curr - prev)) -ne 1 ] || [ $((next - curr)) -ne 1 ]; then\n                echo \"Not consecutive\"\n                return\n            fi\n            prev=$curr\n            curr=$next\n        fi\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local n=$(echo $list | wc -w)\n    local min=$(echo $list | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo $list | tr ' ' '\\n' | sort -n | tail -n 1)\n    if [ $((max - min + 1)) -eq $n ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n\tlocal list=$1\n\tlocal i=0\n\tlocal j=0\n\tlocal count=0\n\tlocal flag=0\n\tlocal arr=($list)\n\tfor ((i=0; i<${#arr[@]}; i++))\n\tdo\n\t\tfor ((j=0; j<${#arr[@]}; j++))\n\t\tdo\n\t\t\tif [ $((arr[$i])) -eq $((arr[$j])) ]\n\t\t\tthen\n\t\t\t\tcount=$((count+1))\n\t\t\tfi\n\t\tdone\n\t\tif [ $count -gt 1 ]\n\t\tthen\n\t\t\tflag=1\n\t\t\tbreak\n\t\tfi\n\t\tcount=0\n\tdone\n\tif [ $flag -eq 1 ]\n\tthen\n\t\techo \"Not consecutive\"\n\telse\n\t\techo \"Consecutive\"\n\tfi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for num in $list; do\n        if [ $prev -ne 0 ]; then\n            if [ $((num-prev)) -ne 1 ]; then\n                echo \"Not consecutive\"\n                return\n            fi\n        fi\n        prev=$num\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpi16klvz9.sh: line 176: syntax error near unexpected token `}'\\n/tmp/tmpi16klvz9.sh: line 176: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local last=\n    local current=\n    local result=1\n    for i in $list; do\n        current=$i\n        if [[ -n $last ]]; then\n            if [[ $((current - last)) -ne 1 ]]; then\n                result=0\n                break\n            fi\n        fi\n        last=$current\n    done\n    echo $result\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local flag=0\n    local prev=0\n    for i in $list\n    do\n        if [ $flag -eq 0 ]\n        then\n            prev=$i\n            flag=1\n        else\n            if [ $i -ne $((prev+1)) ]\n            then\n                echo \"Not consecutive\"\n                return\n            fi\n            prev=$i\n        fi\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $((curr-prev)) -ne 1 ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $prev -ne 0 ]; then\n            if [ $(( $i - $prev )) -ne 1 ]; then\n                echo \"Not consecutive\"\n                return\n            fi\n        fi\n        prev=$i\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local prev=0\n  for i in $list; do\n    if [ $i -eq $prev ]; then\n      echo \"The list contains consecutive numbers\"\n      return 0\n    fi\n    prev=$i\n  done\n  echo \"The list does not contain consecutive numbers\"\n  return 1\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n\tlocal list=$1\n\tlocal prev=0\n\tfor num in $list; do\n\t\tif [ $prev -ne 0 ]; then\n\t\t\tif [ $num -ne $((prev + 1)) ]; then\n\t\t\t\techo \"Not consecutive\"\n\t\t\t\treturn\n\t\t\tfi\n\t\tfi\n\t\tprev=$num\n\tdone\n\techo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $((curr - prev)) -ne 1 ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n\n    if [ $isConsecutive -eq 1 ]; then\n        echo \"The list is consecutive\"\n    else\n        echo \"The list is not consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local eeee=0\n    local ffff=\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $i -ne $prev ]; then\n            echo \"Not consecutive\"\n            return\n        fi\n        prev=$((i+1))\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local list_len=${#list}\n  local list_len_minus_one=$((list_len - 1))\n  local list_len_minus_two=$((list_len - 2))\n  local list_len_minus_three=$((list_len - 3))\n  local list_len_minus_four=$((list_len - 4))\n  local list_len_minus_five=$((list_len - 5))\n  local list_len_minus_six=$((list_len - 6))\n  local list_len_minus_seven=$((list_len - 7))\n  local list_len_minus_eight=$((list_len - 8))\n  local list_len_minus_nine=$((list_len - 9))\n  local list_len_minus_ten=$((list_len - 10))\n  local list_len_minus_eleven=$((list_len - 11))\n  local list_len_minus_twelve=$((list_len - 12))\n  local list_len_minus_thirteen=$((list_len - 13))\n  local list_len_minus_fourteen=$((list_len - 14))\n  local list_len_minus_fifteen=$((list_len - 15))\n  local list_len_minus_sixteen=$((list_len - 16))\n  local list_len_minus_seventeen=$((list_len - 17))\n  local list_len_minus_eighteen=$((list_len - 18))\n  local list_len_minus_nineteen=$((list_len - 19))\n  local list_len_minus_twenty=$((list_len - 20))\n  local list_len_minus_twentyone=$((list_len - 21))\n  local list_len_minus_twentytwo=$((list_len - 22))\n  local list_len_minus_twentythree=$((list_len - 23))\n  local list_len_minus_twentyfour=$((list_len - 24))\n  local list_len_minus_twentyfive=$((list_len - 25))\n  local list_len_minus_twentysix=$((list_len - 26))\n  local\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $i -eq $prev ]; then\n            echo \"The list contains consecutive numbers\"\n            return\n        fi\n        prev=$i\n    done\n    echo \"The list does not contain consecutive numbers\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=$(echo $list | wc -w)\n    local list_sorted=$(echo $list | tr \" \" \"\\n\" | sort -n | tr \"\\n\" \" \")\n    local list_sorted_len=$(echo $list_sorted | wc -w)\n    local list_sorted_first=$(echo $list_sorted | cut -d \" \" -f 1)\n    local list_sorted_last=$(echo $list_sorted | cut -d \" \" -f $list_sorted_len)\n    local list_sorted_diff=$(($list_sorted_last - $list_sorted_first + 1))\n\n    if [ $list_len -eq $list_sorted_len ] && [ $list_len -eq $list_sorted_diff ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_length=$(echo $list | wc -w)\n    local min=$(echo $list | tr ' ' '\\n' | sort -n | head -1)\n    local max=$(echo $list | tr ' ' '\\n' | sort -n | tail -1)\n    local diff=$((max - min))\n    if [ $diff -eq $((list_length - 1)) ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local prev=0\n  local curr=0\n  local isConsecutive=1\n  for i in $list; do\n    curr=$i\n    if [ $prev -ne 0 ]; then\n      if [ $((curr-prev)) -ne 1 ]; then\n        isConsecutive=0\n        break\n      fi\n    fi\n    prev=$curr\n  done\n  echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $((curr-prev)) -ne 1 ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local count=0\n    local prev=0\n    for i in $list; do\n        if [[ $i -eq $prev ]]; then\n            continue\n        fi\n        if [[ $i -eq $((prev+1)) ]]; then\n            count=$((count+1))\n        fi\n        prev=$i\n    done\n    if [[ $count -eq $(echo $list | wc -w) ]]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local next=0\n    local isConsecutive=1\n    for i in $list; do\n        if [ $prev -eq 0 ]; then\n            prev=$i\n            continue\n        fi\n        if [ $curr -eq 0 ]; then\n            curr=$i\n            continue\n        fi\n        next=$i\n        if [ $((curr - prev)) -ne 1 ]; then\n            isConsecutive=0\n            break\n        fi\n        prev=$curr\n        curr=$next\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local arr=($list)\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n    local k=0\n    local flag=0\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len; j++))\n        do\n            if [ ${arr[i]} -eq ${arr[j]} ]\n            then\n                flag=1\n                break\n            fi\n        done\n        if [ $flag -eq 1 ]\n        then\n            break\n        fi\n    done\n    if [ $flag -eq 1 ]\n    then\n        echo \"Not consecutive\"\n    else\n        for ((k=0; k<len-1; k++))\n        do\n            if [ ${arr[k]} -ne $(( ${arr[k+1]} - 1 )) ]\n            then\n                flag=1\n                break\n            fi\n        done\n        if [ $flag -eq 1 ]\n        then\n            echo \"Not consecutive\"\n        else\n            echo \"Consecutive\"\n        fi\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local is_consecutive=1\n    local prev=0\n    for i in $list; do\n        if [ $prev -ne 0 ]; then\n            if [ $((i - prev)) -ne 1 ]; then\n                is_consecutive=0\n                break\n            fi\n        fi\n        prev=$i\n    done\n    echo $is_consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local is_consecutive=1\n    local prev=0\n    for i in $list; do\n        if [ $prev -ne 0 ] && [ $i -ne $((prev+1)) ]; then\n            is_consecutive=0\n            break\n        fi\n        prev=$i\n    done\n    echo $is_consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local i=0\n  local j=0\n  local len=0\n  local flag=0\n\n  len=${#list}\n  for ((i=0; i<len; i++))\n  do\n    for ((j=i+1; j<len; j++))\n    do\n      if [ ${list:i:1} -eq ${list:j:1} ]\n      then\n        flag=1\n        break\n      fi\n    done\n    if [ $flag -eq 1 ]\n    then\n      break\n    fi\n  done\n\n  if [ $flag -eq 0 ]\n  then\n    echo \"Consecutive\"\n  else\n    echo \"Not Consecutive\"\n  fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpi3o26k_a.sh: line 17: [: 1: unary operator expected\\n/tmp/tmpi3o26k_a.sh: line 17: [: 1: unary operator expected\\n/tmp/tmpi3o26k_a.sh: line 17: [: 1: unary operator expected\\n/tmp/tmpi3o26k_a.sh: line 17: [: 1: unary operator expected\\n/tmp/tmpi3o26k_a.sh: line 17: [: -eq: unary operator expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local count=0\n    local prev=0\n    local curr=0\n    local next=0\n    for i in $list; do\n        if [ $count -eq 0 ]; then\n            prev=$i\n            count=$((count+1))\n        elif [ $count -eq 1 ]; then\n            curr=$i\n            count=$((count+1))\n        elif [ $count -eq 2 ]; then\n            next=$i\n            count=0\n            if [ $((curr-prev)) -ne 1 ] || [ $((next-curr)) -ne 1 ]; then\n                echo \"The list is not consecutive\"\n                return\n            fi\n        fi\n    done\n    echo \"The list is consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local length=${#list}\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n    local c\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local nums=($list)\n    local len=${#nums[@]}\n    local i=0\n    local j=0\n    local tmp=0\n    local flag=0\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len; j++))\n        do\n            if [ ${nums[$i]} -gt ${nums[$j]} ]\n            then\n                tmp=${nums[$i]}\n                nums[$i]=${nums[$j]}\n                nums[$j]=$tmp\n            fi\n        done\n    done\n    for ((i=0; i<len-1; i++))\n    do\n        if [ ${nums[$i]} -eq $(( ${nums[$i+1]}-1 )) ]\n        then\n            flag=1\n        else\n            flag=0\n            break\n        fi\n    done\n    if [ $flag -eq 1 ]\n    then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $prev -ne $((curr-1)) ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n\tlocal list=$1\n\tlocal prev=0\n\tlocal curr=0\n\tlocal isConsecutive=1\n\tfor i in $list; do\n\t\tcurr=$i\n\t\tif [ $curr -ne $((prev+1)) ]; then\n\t\t\tisConsecutive=0\n\t\t\tbreak\n\t\tfi\n\t\tprev=$curr\n\tdone\n\techo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local first=`echo \"$list\" | awk '{print $1}'`\n    local last=`echo \"$list\" | awk '{print $NF}'`\n    local count=`echo \"$list\" | wc -w`\n    local sum=`echo \"$list\" | tr ' ' '+' | bc`\n    local expected_sum=$(( (first + last) * count / 2 ))\n    if [ $sum -eq $expected_sum ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp8onjyzpl.sh: line 10: bc: command not found\\n/tmp/tmp8onjyzpl.sh: line 12: [: -eq: unary operator expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    list=$1\n    for i in $list; do\n        if [ $i -ne $((i+1)) ]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local count=0\n    for i in $list; do\n        curr=$i\n        if [ $prev -eq 0 ]; then\n            prev=$curr\n        else\n            if [ $prev -eq $((curr-1)) ]; then\n                count=$((count+1))\n            fi\n            prev=$curr\n        fi\n    done\n    if [ $count -eq $((curr-1)) ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local last=0\n    for i in $list; do\n        if [ $i -eq $last ]; then\n            echo \"The list contains consecutive numbers\"\n            return 0\n        fi\n        last=$i\n    done\n    echo \"The list does not contain consecutive numbers\"\n    return 1\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local prev=0\n    for num in $list; do\n        if [ $num -eq $prev ]; then\n            echo \"Duplicate number $num\"\n            return 1\n        fi\n        if [ $num -ne $((prev+1)) ]; then\n            echo \"Not consecutive\"\n            return 1\n        fi\n        prev=$num\n    done\n    echo \"Consecutive\"\n    return 0\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local list_len=${#list}\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local result=1\n    local prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $prev -ne $((curr-1)) ]; then\n                result=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $result\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local n=$(echo $list | wc -w)\n    local min=$(echo $list | tr ' ' '\\n' | sort -n | head -1)\n    local max=$(echo $list | tr ' ' '\\n' | sort -n | tail -1)\n    local sum=$(echo $list | tr ' ' '\\n' | paste -sd+ - | bc)\n    local expected_sum=$(( (min + max) * n / 2 ))\n    if [ $sum -eq $expected_sum ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpbka5ubgt.sh: line 10: bc: command not found\\n/tmp/tmpbka5ubgt.sh: line 12: [: -eq: unary operator expected\\n'",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local last=0\n    for i in $list; do\n        if [ $i -eq $last ]; then\n            echo \"False\"\n            return\n        fi\n        last=$i\n    done\n    echo \"True\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $i -ne $prev ]; then\n            if [ $i -ne $((prev+1)) ]; then\n                echo \"Not consecutive\"\n                return\n            fi\n        fi\n        prev=$i\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local prev=0\n  for i in $list; do\n    if [ $prev -eq 0 ]; then\n      prev=$i\n      continue\n    fi\n    if [ $prev -ne $((i-1)) ]; then\n      echo \"Not consecutive\"\n      return\n    fi\n    prev=$i\n  done\n  echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_length=$(echo $list | wc -w)\n    local list_sorted=$(echo $list | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n    local list_sorted_length=$(echo $list_sorted | wc -w)\n    local list_sorted_first=$(echo $list_sorted | cut -d ' ' -f 1)\n    local list_sorted_last=$(echo $list_sorted | cut -d ' ' -f $list_sorted_length)\n    local list_sorted_diff=$(($list_sorted_last - $list_sorted_first))\n    if [ $list_length -eq $list_sorted_length ] && [ $list_sorted_diff -eq $((list_length - 1)) ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=${#list}\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local is_consecutive=1\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $prev -ne $((curr-1)) ]; then\n                is_consecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $is_consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local consecutive=1\n    local prev=0\n    for i in $list; do\n        if [ $prev -ne 0 ]; then\n            if [ $prev -ne $((i-1)) ]; then\n                consecutive=0\n                break\n            fi\n        fi\n        prev=$i\n    done\n    echo $consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n\tlocal list=$1\n\tlocal prev=0\n\tlocal curr=0\n\tlocal isConsecutive=1\n\tfor i in $list; do\n\t\tcurr=$i\n\t\tif [ $prev -ne 0 ]; then\n\t\t\tif [ $prev -ne $((curr-1)) ]; then\n\t\t\t\tisConsecutive=0\n\t\t\t\tbreak\n\t\t\tfi\n\t\tfi\n\t\tprev=$curr\n\tdone\n\techo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local max=0\n    local min=0\n    local i=0\n    local j=0\n    local len=0\n    local flag=0\n    local arr=()\n    local arr_len=0\n    local arr_sum=0\n    local arr_sum_expected=0\n    local arr_sum_actual=0\n\n    # split the list into array\n    IFS=' ' read -r -a arr <<< \"$list\"\n    arr_len=${#arr[@]}\n\n    # find the max and min value\n    for i in \"${arr[@]}\"\n    do\n        if [ $i -gt $max ]\n        then\n            max=$i\n        fi\n        if [ $i -lt $min ]\n        then\n            min=$i\n        fi\n    done\n\n    # check if the array contains consecutive numbers\n    for (( i=min; i<=max; i++ ))\n    do\n        flag=0\n        for (( j=0; j<arr_len; j++ ))\n        do\n            if [ $i -eq ${arr[$j]} ]\n            then\n                flag=1\n                break\n            fi\n        done\n        if [ $flag -eq 0 ]\n        then\n            echo \"The given list does not contain consecutive numbers.\"\n            return\n        fi\n    done\n\n    # check if the array contains duplicate numbers\n    for (( i=0; i<arr_len; i++ ))\n    do\n        for (( j=i+1; j<arr_len; j++ ))\n        do\n            if [ ${arr[$i]} -eq ${arr[$j]} ]\n            then\n                echo \"The given list contains duplicate numbers.\"\n                return\n            fi\n        done\n    done\n\n    # check if the array contains consecutive numbers\n    arr_sum_expected=$(( (min + max) * (max - min + 1) / 2 ))\n    for (( i=0; i<arr_len; i++ ))\n    do\n        arr_sum=$(( arr_sum + ${arr[$i]} ))\n    done\n    if [ $arr_sum -eq $arr_sum_expected ]\n    then\n        echo \"The given\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpx4gsd957.sh: line 87: unexpected EOF while looking for matching `\"\\'\\n/tmp/tmpx4gsd957.sh: line 91: syntax error: unexpected end of file\\n'",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    # Convert the list to an array\n    local -a list=($1)\n    # Sort the array\n    local -a sorted=($(echo ${list[*]} | tr ' ' '\\n' | sort -n))\n    # Check if the array is consecutive\n    local -a diffs=($(echo ${sorted[*]} | tr ' ' '\\n' | awk '{print $2 - $1}'))\n    local -a uniq=($(echo ${diffs[*]} | tr ' ' '\\n' | sort -u))\n    if [[ ${#uniq[*]} -eq 1 ]]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $i -eq $prev ]; then\n            echo \"Duplicate number $i\"\n            return 1\n        fi\n        if [ $i -ne $((prev+1)) ]; then\n            echo \"Non-consecutive number $i\"\n            return 1\n        fi\n        prev=$i\n    done\n    return 0\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local prev=0\n  local curr=0\n  local isConsecutive=1\n  for i in $list; do\n    curr=$i\n    if [ $prev -ne 0 ]; then\n      if [ $((curr - prev)) -ne 1 ]; then\n        isConsecutive=0\n        break\n      fi\n    fi\n    prev=$curr\n  done\n  echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n\tlocal list=$1\n\tlocal list_len=$(echo $list | wc -w)\n\tlocal list_min=$(echo $list | tr ' ' '\\n' | sort -n | head -n 1)\n\tlocal list_max=$(echo $list | tr ' ' '\\n' | sort -n | tail -n 1)\n\tlocal list_diff=$(($list_max - $list_min))\n\tif [ $list_diff -eq $((list_len - 1)) ]; then\n\t\techo \"Consecutive\"\n\telse\n\t\techo \"Not Consecutive\"\n\tfi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=${#list}\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n   \n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local prev=0\n  local curr=0\n  local flag=0\n  for i in $list; do\n    curr=$i\n    if [ $prev -ne 0 ]; then\n      if [ $curr -ne $((prev+1)) ]; then\n        flag=1\n        break\n      fi\n    fi\n    prev=$curr\n  done\n  if [ $flag -eq 1 ]; then\n    echo \"The list is not consecutive\"\n  else\n    echo \"The list is consecutive\"\n  fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local list_len=$(echo $list | wc -w)\n  local list_sorted=$(echo $list | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n  local list_sorted_len=$(echo $list_sorted | wc -w)\n  local list_sorted_first=$(echo $list_sorted | cut -d ' ' -f 1)\n  local list_sorted_last=$(echo $list_sorted | cut -d ' ' -f $list_sorted_len)\n  local list_sorted_diff=$((list_sorted_last - list_sorted_first))\n  if [ $list_len -eq $list_sorted_len ] && [ $list_sorted_diff -eq $((list_sorted_len - 1)) ]; then\n    echo \"Consecutive\"\n  else\n    echo \"Not Consecutive\"\n  fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $((curr - prev)) -ne 1 ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=${#list}\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n    local cg=0\n    local ch=0\n   \n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local last=0\n    for i in $list; do\n        if [ $i -eq $last ]; then\n            echo \"The list contains consecutive numbers\"\n            return 1\n        fi\n        last=$i\n    done\n    echo \"The list does not contain consecutive numbers\"\n    return 0\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local prev=0\n    local curr=0\n    local is_consecutive=1\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $((curr - prev)) -ne 1 ]; then\n                is_consecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $is_consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n    for i in $list; do\n        curr=$i\n        if [ $curr -ne $((prev+1)) ]; then\n            isConsecutive=0\n            break\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local prev=0\n    local curr=0\n    local next=0\n    local is_consecutive=1\n    for i in $list; do\n        prev=$curr\n        curr=$next\n        next=$i\n        if [ $prev -ne 0 ] && [ $curr -ne 0 ] && [ $next -ne 0 ]; then\n            if [ $((prev + 1)) -ne $curr ] || [ $((curr + 1)) -ne $next ]; then\n                is_consecutive=0\n                break\n            fi\n        fi\n    done\n    echo $is_consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $((curr-prev)) -ne 1 ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n\tlocal list=$1\n\tlocal i=0\n\tlocal j=0\n\tlocal k=0\n\tlocal l=0\n\tlocal m=0\n\tlocal n=0\n\tlocal o=0\n\tlocal p=0\n\tlocal q=0\n\tlocal r=0\n\tlocal s=0\n\tlocal t=0\n\tlocal u=0\n\tlocal v=0\n\tlocal w=0\n\tlocal x=0\n\tlocal y=0\n\tlocal z=0\n\tlocal aa=0\n\tlocal bb=0\n\tlocal cc=0\n\tlocal dd=0\n\tlocal ee=0\n\tlocal ff=0\n\tlocal gg=0\n\tlocal hh=0\n\tlocal ii=0\n\tlocal jj=0\n\tlocal kk=0\n\tlocal ll=0\n\tlocal mm=0\n\tlocal nn=0\n\tlocal oo=0\n\tlocal pp=0\n\tlocal qq=0\n\tlocal rr=0\n\tlocal ss=0\n\tlocal tt=0\n\tlocal uu=0\n\tlocal vv=0\n\tlocal ww=0\n\tlocal xx=0\n\tlocal yy=0\n\tlocal zz=0\n\tlocal aaa=0\n\tlocal bbb=0\n\tlocal ccc=0\n\tlocal ddd=0\n\tlocal eee=0\n\tlocal fff=0\n\tlocal ggg=0\n\tlocal hhh=0\n\tlocal iii=0\n\tlocal jjj=0\n\tlocal kkk=0\n\tlocal lll=0\n\tlocal mmm=0\n\tlocal nnn=0\n\tlocal ooo=0\n\tlocal ppp=0\n\tlocal qqq=0\n\tlocal rrr=0\n\tlocal sss=0\n\tlocal ttt=0\n\tlocal uuu=0\n\tlocal vvv=0\n\tlocal www=0\n\tlocal xxx=0\n\tlocal yyy=0\n\tlocal zzz=0\n\tlocal aaaa=0\n\tlocal bbbb=0\n\tlocal cccc=0\n\tlocal dddd=0\n\tlocal eeee=0\n\tlocal ffff=\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local result=0\n    local prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $prev -ne $((curr-1)) ]; then\n                result=1\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    return $result\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ] && [ $((curr - prev)) -ne 1 ]; then\n            isConsecutive=0\n            break\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for i in $list; do\n        if [ $i -ne $prev ]; then\n            echo \"Not consecutive\"\n            return\n        fi\n        prev=$(( $i + 1 ))\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    list=$1\n    for i in $list; do\n        if [ $i -eq $((i+1)) ]; then\n            echo \"Consecutive\"\n            return\n        fi\n    done\n    echo \"Not Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n    for i in $list; do\n        curr=$i\n        if [ $curr -ne $((prev+1)) ]; then\n            isConsecutive=0\n            break\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local first=`echo \"$list\" | cut -d ' ' -f 1`\n    local last=`echo \"$list\" | cut -d ' ' -f $#`\n    local diff=`expr $last - $first`\n    local size=`expr $# - 1`\n    if [ $diff -eq $size ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local count=0\n    local prev=0\n    for i in $list; do\n        if [ $prev -eq 0 ]; then\n            prev=$i\n        else\n            if [ $prev -eq $((i-1)) ]; then\n                count=$((count+1))\n            else\n                count=0\n            fi\n            prev=$i\n        fi\n    done\n    if [ $count -eq 0 ]; then\n        echo \"False\"\n    else\n        echo \"True\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  # convert to array\n  arr=($1)\n  # sort the array\n  arr=($(for i in \"${arr[@]}\"; do echo $i; done | sort))\n  # check if consecutive\n  for i in $(seq 0 $((${#arr[@]}-2))); do\n    if [[ ${arr[$i]} -ne $(( ${arr[$i+1]} - 1 )) ]]; then\n      echo \"Not consecutive\"\n      return\n    fi\n  done\n  echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    for num in $list; do\n        if [ $num -eq $prev ]; then\n            echo \"Not consecutive\"\n            return\n        fi\n        prev=$num\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    # Create an array from the input\n    local array=($1)\n    # Check if the array is empty\n    if [ ${#array[@]} -eq 0 ]; then\n        echo \"Empty array\"\n        return 1\n    fi\n    # Check if the array has only one element\n    if [ ${#array[@]} -eq 1 ]; then\n        echo \"Array has only one element\"\n        return 1\n    fi\n    # Check if the array has only two elements\n    if [ ${#array[@]} -eq 2 ]; then\n        # Check if the two elements are consecutive\n        if [ $((array[1] - array[0])) -eq 1 ]; then\n            echo \"Array has consecutive numbers\"\n            return 0\n        else\n            echo \"Array has non-consecutive numbers\"\n            return 1\n        fi\n    fi\n    # Check if the array has more than two elements\n    if [ ${#array[@]} -gt 2 ]; then\n        # Check if the first two elements are consecutive\n        if [ $((array[1] - array[0])) -eq 1 ]; then\n            # Check if the remaining elements are consecutive\n            for ((i=1; i<${#array[@]}; i++)); do\n                if [ $((array[i] - array[i-1])) -ne 1 ]; then\n                    echo \"Array has non-consecutive numbers\"\n                    return 1\n                fi\n            done\n            echo \"Array has consecutive numbers\"\n            return 0\n        else\n            echo \"Array has non-consecutive numbers\"\n            return 1\n        fi\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local prev=0\n    for num in $list; do\n        if [ $num -ne $prev ]; then\n            echo \"Not consecutive\"\n            return 1\n        fi\n        prev=$((num+1))\n    done\n    echo \"Consecutive\"\n    return 0\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local flag=0\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $((curr-prev)) -ne 1 ]; then\n                flag=1\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    if [ $flag -eq 0 ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local max=0\n    local min=0\n    local i=0\n    local j=0\n    local k=0\n    local flag=0\n    local arr=()\n    local arr_len=0\n    local diff=0\n    local sum=0\n    local sum_expected=0\n    local sum_actual=0\n\n    # Convert the string to array\n    for i in $list; do\n        arr[$j]=$i\n        ((j++))\n    done\n    arr_len=${#arr[@]}\n\n    # Find the max and min values\n    max=${arr[0]}\n    min=${arr[0]}\n    for ((i=1; i<arr_len; i++)); do\n        if [ ${arr[$i]} -gt $max ]; then\n            max=${arr[$i]}\n        fi\n        if [ ${arr[$i]} -lt $min ]; then\n            min=${arr[$i]}\n        fi\n    done\n\n    # Check if the difference between max and min is equal to the length of the array\n    diff=$((max-min))\n    if [ $diff -eq $((arr_len-1)) ]; then\n        flag=1\n    fi\n\n    # Check if the sum of the elements is equal to the expected sum\n    sum_expected=$((arr_len*(arr_len+1)/2))\n    for ((i=0; i<arr_len; i++)); do\n        sum_actual=$((sum_actual+arr[$i]))\n    done\n    if [ $sum_actual -eq $sum_expected ]; then\n        flag=1\n    fi\n\n    # Check if the array contains only unique elements\n    for ((i=0; i<arr_len; i++)); do\n        for ((j=i+1; j<arr_len; j++)); do\n            if [ ${arr[$i]} -eq ${arr[$j]} ]; then\n                flag=0\n            fi\n        done\n    done\n\n    # Print the result\n    if [ $flag -eq 1 ]; then\n        echo \"The list contains consecutive numbers\"\n    else\n        echo \"The list does not contain consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpd0sqq_l9.sh: line 78: unexpected EOF while looking for matching `\"\\'\\n/tmp/tmpd0sqq_l9.sh: line 82: syntax error: unexpected end of file\\n'",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local flag=0\n    local prev=0\n    for i in $list; do\n        if [[ $flag -eq 0 ]]; then\n            prev=$i\n            flag=1\n        else\n            if [[ $i -ne $((prev+1)) ]]; then\n                echo \"Not Consecutive\"\n                return\n            fi\n            prev=$i\n        fi\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $((curr - prev)) -ne 1 ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local last=0\n    for i in $list; do\n        if [ $i -ne $last ]; then\n            if [ $i -ne $((last + 1)) ]; then\n                echo \"Not consecutive\"\n                return\n            fi\n        fi\n        last=$i\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=$(echo $list | wc -w)\n    local list_sorted=$(echo $list | tr ' ' '\\n' | sort -n)\n    local list_sorted_len=$(echo $list_sorted | wc -w)\n    local list_sorted_min=$(echo $list_sorted | cut -d ' ' -f 1)\n    local list_sorted_max=$(echo $list_sorted | cut -d ' ' -f $list_sorted_len)\n    local list_sorted_diff=$(($list_sorted_max - $list_sorted_min))\n    if [ $list_len -eq $list_sorted_len -a $list_sorted_diff -eq $((list_len - 1)) ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    for i in $1; do\n        if [ $i -ne $((i+1)) ]; then\n            echo \"False\"\n            return\n        fi\n    done\n    echo \"True\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local list_len=$(echo $list | wc -w)\n    local list_sorted=$(echo $list | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n    local list_sorted_len=$(echo $list_sorted | wc -w)\n    local list_sorted_min=$(echo $list_sorted | cut -d ' ' -f 1)\n    local list_sorted_max=$(echo $list_sorted | cut -d ' ' -f $list_sorted_len)\n    local list_sorted_diff=$(($list_sorted_max - $list_sorted_min + 1))\n    if [ $list_len -eq $list_sorted_len ] && [ $list_len -eq $list_sorted_diff ]; then\n        echo \"True\"\n    else\n        echo \"False\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local first=${list%% *}\n    local rest=${list#* }\n    local second=${rest%% *}\n    local rest=${rest#* }\n    local third=${rest%% *}\n    local rest=${rest#* }\n    local fourth=${rest%% *}\n    local rest=${rest#* }\n    local fifth=${rest%% *}\n    local rest=${rest#* }\n    local sixth=${rest%% *}\n    local rest=${rest#* }\n    local seventh=${rest%% *}\n    local rest=${rest#* }\n    local eighth=${rest%% *}\n    local rest=${rest#* }\n    local ninth=${rest%% *}\n    local rest=${rest#* }\n    local tenth=${rest%% *}\n    local rest=${rest#* }\n    local eleventh=${rest%% *}\n    local rest=${rest#* }\n    local twelfth=${rest%% *}\n    local rest=${rest#* }\n    local thirteenth=${rest%% *}\n    local rest=${rest#* }\n    local fourteenth=${rest%% *}\n    local rest=${rest#* }\n    local fifteenth=${rest%% *}\n    local rest=${rest#* }\n    local sixteenth=${rest%% *}\n    local rest=${rest#* }\n    local seventeenth=${rest%% *}\n    local rest=${rest#* }\n    local eighteenth=${rest%% *}\n    local rest=${rest#* }\n    local nineteenth=${rest%% *}\n    local rest=${rest#* }\n    local twentieth=${rest%% *}\n    local rest=${rest#* }\n    local twentyfirst=${rest%% *}\n    local rest=${rest#* }\n    local twentysecond=${rest%% *}\n    local rest=${rest#* }\n    local twentythird=${rest%% *}\n    local rest=${rest#* }\n    local twentyfourth=${rest%% *}\n    local rest=${rest#* }\n    local twentyfifth=${rest%% *}\n    local\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local i=0\n    local len=${#list}\n    local flag=0\n    local prev=0\n    local curr=0\n    local next=0\n    local diff=0\n\n    if [ $len -eq 0 ]; then\n        echo \"Empty list\"\n        return\n    fi\n\n    if [ $len -eq 1 ]; then\n        echo \"Only one element\"\n        return\n    fi\n\n    prev=${list:0:1}\n    curr=${list:1:1}\n    next=${list:2:1}\n    diff=$((curr - prev))\n\n    if [ $diff -eq 1 ]; then\n        flag=1\n    fi\n\n    for ((i=2; i<len-1; i++)); do\n        prev=$curr\n        curr=$next\n        next=${list:$((i+1)):1}\n        diff=$((curr - prev))\n\n        if [ $diff -ne 1 ]; then\n            flag=0\n            break\n        fi\n    done\n\n    if [ $flag -eq 1 ]; then\n        echo \"Consecutive numbers\"\n    else\n        echo \"Not consecutive numbers\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local count=0\n    for i in $list; do\n        curr=$i\n        if [ $prev -eq 0 ]; then\n            prev=$curr\n        else\n            if [ $prev -eq $((curr-1)) ]; then\n                count=$((count+1))\n            fi\n            prev=$curr\n        fi\n    done\n    if [ $count -eq $(echo $list | wc -w) ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local -a list=($1)\n    local -i len=${#list[@]}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n    local -i bo=0\n   \n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    # Convert the list to an array\n    arr=($1)\n    # Get the length of the array\n    len=${#arr[@]}\n    # Check if the list is empty\n    if [ $len -eq 0 ]; then\n        echo \"Empty list\"\n        return\n    fi\n    # Check if the list contains only one element\n    if [ $len -eq 1 ]; then\n        echo \"List contains only one element\"\n        return\n    fi\n    # Sort the array\n    arr=($(for i in ${arr[@]}; do echo $i; done | sort -n))\n    # Check if the list is consecutive\n    for (( i=0; i<$len-1; i++ )); do\n        if [ ${arr[$i]} -ne $(( ${arr[$i+1]}-1 )) ]; then\n            echo \"List is not consecutive\"\n            return\n        fi\n    done\n    echo \"List is consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    list=$1\n    for i in $list; do\n        if [ $i -eq $((i+1)) ]; then\n            echo \"Consecutive numbers\"\n            return\n        fi\n    done\n    echo \"Not consecutive numbers\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local nums=($list)\n    local len=${#nums[@]}\n    local i=0\n    local j=0\n    local k=0\n    local flag=0\n    for ((i=0; i<len; i++))\n    do\n        for ((j=i+1; j<len; j++))\n        do\n            if [ ${nums[i]} -gt ${nums[j]} ]\n            then\n                k=${nums[i]}\n                nums[i]=${nums[j]}\n                nums[j]=$k\n            fi\n        done\n    done\n    for ((i=0; i<len-1; i++))\n    do\n        if [ $((nums[i]+1)) -ne ${nums[i+1]} ]\n        then\n            flag=1\n            break\n        fi\n    done\n    if [ $flag -eq 1 ]\n    then\n        echo \"The list is not consecutive.\"\n    else\n        echo \"The list is consecutive.\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local flag=0\n    local prev=0\n    for i in $list\n    do\n        if [ $flag -eq 0 ]\n        then\n            prev=$i\n            flag=1\n        else\n            if [ $prev -eq $((i-1)) ]\n            then\n                prev=$i\n            else\n                echo \"Not consecutive\"\n                return\n            fi\n        fi\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local i=0\n    local j=0\n    local k=0\n    local len=0\n    local flag=0\n    local temp=0\n\n    len=`echo $list | wc -w`\n    for i in $list; do\n        for j in $list; do\n            if [ $i -eq $j ]; then\n                continue\n            fi\n            if [ $i -gt $j ]; then\n                temp=$i\n                i=$j\n                j=$temp\n            fi\n            k=`expr $i + 1`\n            if [ $k -ne $j ]; then\n                flag=1\n            fi\n        done\n    done\n\n    if [ $flag -eq 0 ]; then\n        echo \"Consecutive\"\n    else\n        echo \"Not Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n\tlocal list=$1\n\tlocal prev=0\n\tlocal curr=0\n\tlocal flag=0\n\tfor i in $list; do\n\t\tcurr=$i\n\t\tif [ $prev -ne 0 ]; then\n\t\t\tif [ $((curr-prev)) -ne 1 ]; then\n\t\t\t\tflag=1\n\t\t\t\tbreak\n\t\t\tfi\n\t\tfi\n\t\tprev=$curr\n\tdone\n\tif [ $flag -eq 0 ]; then\n\t\techo \"Consecutive\"\n\telse\n\t\techo \"Not Consecutive\"\n\tfi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee=0\n  local ffff=\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local is_consecutive=1\n    local prev=0\n    for i in $list; do\n        if [ $prev -ne 0 ]; then\n            if [ $((prev + 1)) -ne $i ]; then\n                is_consecutive=0\n                break\n            fi\n        fi\n        prev=$i\n    done\n    echo $is_consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local last=0\n  local current=0\n  local consecutive=0\n  for i in $list\n  do\n    current=$i\n    if [ $current -eq $((last+1)) ]\n    then\n      consecutive=$((consecutive+1))\n    fi\n    last=$current\n  done\n  if [ $consecutive -eq $((last-1)) ]\n  then\n    echo \"Consecutive\"\n  else\n    echo \"Not Consecutive\"\n  fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=\"$1\"\n  local max=0\n  local min=0\n  local i=0\n  local j=0\n  local flag=0\n  local arr=()\n  local len=0\n\n  # Split the list into an array\n  IFS=' ' read -r -a arr <<< \"$list\"\n\n  # Get the length of the array\n  len=${#arr[@]}\n\n  # Find the maximum and minimum values\n  for (( i=0; i<len; i++ )); do\n    if [[ ${arr[i]} -gt $max ]]; then\n      max=${arr[i]}\n    fi\n    if [[ ${arr[i]} -lt $min ]]; then\n      min=${arr[i]}\n    fi\n  done\n\n  # Check if the difference between maximum and minimum is equal to the length of the array\n  if [[ $((max - min)) -eq $((len - 1)) ]]; then\n    flag=1\n  fi\n\n  # Check if the array contains consecutive numbers\n  for (( i=0; i<len; i++ )); do\n    for (( j=i+1; j<len; j++ )); do\n      if [[ ${arr[i]} -eq ${arr[j]} ]]; then\n        flag=0\n      fi\n    done\n  done\n\n  # Print the result\n  if [[ $flag -eq 1 ]]; then\n    echo \"Yes\"\n  else\n    echo \"No\"\n  fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=true\n    for num in $list; do\n        curr=$num\n        if [ $prev -ne 0 ] && [ $((curr - prev)) -ne 1 ]; then\n            isConsecutive=false\n            break\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=\"$1\"\n    local prev=0\n    local curr=0\n    local count=0\n    for i in $list; do\n        curr=$i\n        if [ $count -eq 0 ]; then\n            prev=$curr\n            count=1\n        else\n            if [ $curr -eq $((prev+1)) ]; then\n                prev=$curr\n            else\n                echo \"Not consecutive\"\n                return\n            fi\n        fi\n    done\n    echo \"Consecutive\"\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n\tlocal list=$1\n\tlocal list_len=$(echo $list | wc -w)\n\tlocal i=1\n\tlocal j=2\n\tlocal k=3\n\tlocal flag=0\n\twhile [ $i -lt $list_len -a $j -lt $list_len -a $k -lt $list_len ]\n\tdo\n\t\tif [ $(( $list[$i] + 1 )) -eq $list[$j] -a $(( $list[$j] + 1 )) -eq $list[$k] ]\n\t\tthen\n\t\t\tflag=1\n\t\t\tbreak\n\t\tfi\n\t\ti=$(( $i + 1 ))\n\t\tj=$(( $j + 1 ))\n\t\tk=$(( $k + 1 ))\n\tdone\n\tif [ $flag -eq 1 ]\n\tthen\n\t\techo \"Consecutive numbers found\"\n\telse\n\t\techo \"No consecutive numbers found\"\n\tfi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b'/tmp/tmprmkzy919.sh: line 14: 1 2 3 4 5[1] + 1 : syntax error in expression (error token is \"2 3 4 5[1] + 1 \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local isConsecutive=1\n    for i in $list; do\n        curr=$i\n        if [ $prev -ne 0 ]; then\n            if [ $((curr-prev)) -ne 1 ]; then\n                isConsecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $isConsecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n  local list=$1\n  local i=0\n  local j=0\n  local prev=0\n  local curr=0\n  local next=0\n  local isConsecutive=true\n  for i in $list; do\n    if [ $i -eq $prev ]; then\n      isConsecutive=false\n      break\n    fi\n    prev=$i\n  done\n  if [ $isConsecutive = true ]; then\n    for i in $list; do\n      if [ $i -eq $prev ]; then\n        isConsecutive=false\n        break\n      fi\n      prev=$i\n    done\n  fi\n  if [ $isConsecutive = true ]; then\n    for i in $list; do\n      if [ $i -eq $prev ]; then\n        isConsecutive=false\n        break\n      fi\n      prev=$i\n    done\n  fi\n  if [ $isConsecutive = true ]; then\n    for i in $list; do\n      if [ $i -eq $prev ]; then\n        isConsecutive=false\n        break\n      fi\n      prev=$i\n    done\n  fi\n  if [ $isConsecutive = true ]; then\n    for i in $list; do\n      if [ $i -eq $prev ]; then\n        isConsecutive=false\n        break\n      fi\n      prev=$i\n    done\n  fi\n  if [ $isConsecutive = true ]; then\n    for i in $list; do\n      if [ $i -eq $prev ]; then\n        isConsecutive=false\n        break\n      fi\n      prev=$i\n    done\n  fi\n  if [ $isConsecutive = true ]; then\n    for i in $list; do\n      if [ $i -eq $prev ]; then\n        isConsecutive=false\n        break\n      fi\n      prev=$i\n    done\n  fi\n  if [ $isConsecutive = true ]; then\n    for i in $list; do\n      if [ $i -eq $prev ]; then\n        isConsecutive=false\n        break\n      fi\n      prev=$i\n    done\n  fi\n  if [ $isConsecutive =\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpe66_5u3f.sh: line 84: syntax error near unexpected token `}'\\n/tmp/tmpe66_5u3f.sh: line 84: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local i=0\n    local j=0\n    local k=0\n    local flag=0\n    local arr=()\n    for i in $list; do\n        arr[$j]=$i\n        j=$((j+1))\n    done\n    for ((i=0; i<${#arr[@]}; i++)); do\n        for ((k=i+1; k<${#arr[@]}; k++)); do\n            if [[ ${arr[$i]} -eq ${arr[$k]} ]]; then\n                flag=1\n                break\n            fi\n        done\n    done\n    if [[ $flag -eq 1 ]]; then\n        echo \"Not consecutive\"\n    else\n        echo \"Consecutive\"\n    fi\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to check whether the given list contains consecutive numbers or not.\n#\n# $1 is a space-separated list\ncheck_Consecutive() {\n    local list=$1\n    local prev=0\n    local curr=0\n    local is_consecutive=1\n    for num in $list; do\n        curr=$num\n        if [ $prev -ne 0 ]; then\n            if [ $((curr - prev)) -ne 1 ]; then\n                is_consecutive=0\n                break\n            fi\n        fi\n        prev=$curr\n    done\n    echo $is_consecutive\n}\n\ncandidate() {\n    check_Consecutive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4 5\") = \"true\" ]]\n    [[ $(candidate \"1 2 3 5 6\") = \"false\" ]]\n    [[ $(candidate \"1 2 1\") = \"false\" ]]\n}\n\nrun_test",
      "timestamp": 1667190976,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
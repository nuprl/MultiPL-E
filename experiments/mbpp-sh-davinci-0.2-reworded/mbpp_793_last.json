{
  "name": "mbpp_793_last",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find the last position of an element in a sorted array.\n#\n# $1 is a space-separated list\n# $2 is an integer\nlast() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_793_last.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    last \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3\" \"1\") = \"0\" ]]\n    [[ $(candidate \"1 1 1 2 3 4\" \"1\") = \"2\" ]]\n    [[ $(candidate \"2 3 2 3 6 8 9\" \"3\") = \"3\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -a array=($1)\n    local -i target=$2\n    local -i low=0\n    local -i high=${#array[@]}-1\n    local -i mid=0\n    local -i result=-1\n    while [ $low -le $high ]; do\n        mid=$(((low+high)/2))\n        if [ ${array[$mid]} -eq $target ]; then\n            result=$mid\n            low=$((mid+1))\n        elif [ ${array[$mid]} -lt $target ]; then\n            low=$((mid+1))\n        else\n            high=$((mid-1))\n        fi\n    done\n    echo $result",
    "    local list=\"$1\"\n    local element=\"$2\"\n    local i=0\n    local last_index=-1\n    for item in $list; do\n        if [ \"$item\" -eq \"$element\" ]; then\n            last_index=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_index",
    "    local list=\"$1\"\n    local item=\"$2\"\n    local pos=0\n    local found=0\n    for i in $list; do\n        if [[ $i -eq $item ]]; then\n            pos=$((pos+1))\n            found=1\n        elif [[ $found -eq 1 ]]; then\n            break\n        fi\n    done\n    echo $pos",
    "    local -a array\n    local -i i\n    local -i len\n    local -i last_pos\n    local -i target\n\n    array=($1)\n    target=$2\n\n    len=${#array[@]}\n    last_pos=-1\n\n    for ((i=0; i<len; i++)); do\n        if [[ ${array[$i]} -eq $target ]]; then\n            last_pos=$i\n        fi\n    done\n\n    echo $last_pos",
    "    local -a array=(\"$@\")\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i last_pos=-1\n    while (( i < len )); do\n        if (( array[i] == $2 )); then\n            last_pos=$i\n        fi\n        (( i++ ))\n    done\n    echo $last_pos",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=$((len-1))\n    local -i k\n    local -i target=$2\n    while ((i<=j)); do\n        k=$(((i+j)/2))\n        if ((arr[k]==target)); then\n            if ((k==len-1 || arr[k+1]!=target)); then\n                echo $k\n                return\n            fi\n            i=$((k+1))\n        elif ((arr[k]<target)); then\n            i=$((k+1))\n        else\n            j=$((k-1))\n        fi\n    done\n    echo -1",
    "    local -a array=(\"$@\")\n    local -i target=${array[-1]}\n    unset array[-1]\n    local -i left=0\n    local -i right=${#array[@]}-1\n    local -i mid\n    while [[ $left -lt $right ]]; do\n        mid=$(( (left+right)/2 ))\n        if [[ ${array[mid]} -le $target ]]; then\n            left=$(( mid+1 ))\n        else\n            right=$(( mid-1 ))\n        fi\n    done\n    if [[ ${array[left]} -eq $target ]]; then\n        echo $left\n    else\n        echo -1\n    fi",
    "    local list=\"$1\"\n    local element=\"$2\"\n    local i=0\n    local last_pos=-1\n    for item in $list; do\n        if [ \"$item\" -eq \"$element\" ]; then\n            last_pos=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_pos",
    "  local -a arr=(\"$@\")\n  local -i n=${#arr[@]}\n  local -i i=0\n  local -i j=n-1\n  local -i m=0\n  local -i res=-1\n  while i <= j; do\n    m=$(((i+j)/2))\n    if [[ ${arr[m]} -eq $2 ]]; then\n      res=$m\n      i=$((m+1))\n    elif [[ ${arr[m]} -lt $2 ]]; then\n      i=$((m+1))\n    else\n      j=$((m-1))\n    fi\n  done\n  echo $res",
    "    local -a array=($1)\n    local -i n=${#array[@]}\n    local -i i=0\n    local -i j=$((n-1))\n    local -i k\n    local -i x=$2\n\n    while ((i <= j)); do\n        k=$(((i+j)/2))\n        if ((array[k] == x)); then\n            while ((k < n && array[k] == x)); do\n                ((k++))\n            done\n            echo $((k-1))\n            return\n        elif ((array[k] < x)); then\n            ((i = k+1))\n        else\n            ((j = k-1))\n        fi\n    done\n    echo -1",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    local target=$2\n    local low=0\n    local high=${#array[@]}\n    local mid=0\n    local result=-1\n    while [[ $low -lt $high ]]; do\n        mid=$(( (low + high) / 2 ))\n        if [[ ${array[$mid]} -eq $target ]]; then\n            result=$mid\n            low=$(( mid + 1 ))\n        elif [[ ${array[$mid]} -lt $target ]]; then\n            low=$(( mid + 1 ))\n        else\n            high=$(( mid - 1 ))\n        fi\n    done\n    echo $result",
    "    local -a array=(\"$@\")\n    local -i i=0\n    local -i last=0\n    local -i len=${#array[@]}\n    local -i target=${array[-1]}\n    while (( i < len )); do\n        if (( array[i] == target )); then\n            last=$i\n        fi\n        (( i++ ))\n    done\n    echo $last",
    "    local list=\"$1\"\n    local target=\"$2\"\n    local index=0\n    local last_index=0\n    for i in $list; do\n        if [[ $i -eq $target ]]; then\n            last_index=$index\n        fi\n        index=$((index + 1))\n    done\n    echo $last_index",
    "    local array=($1)\n    local target=$2\n    local length=${#array[@]}\n    local start=0\n    local end=$((length - 1))\n    local mid=0\n    local result=-1\n\n    while [ $start -le $end ]; do\n        mid=$(((start + end) / 2))\n        if [ ${array[$mid]} -eq $target ]; then\n            result=$mid\n            start=$((mid + 1))\n        elif [ ${array[$mid]} -lt $target ]; then\n            start=$((mid + 1))\n        else\n            end=$((mid - 1))\n        fi\n    done\n\n    echo $result",
    "    local list=$1\n    local x=$2\n    local i=0\n    local last=0\n    for i in $list; do\n        if [[ $i -eq $x ]]; then\n            last=$i\n        fi\n    done\n    echo $last",
    "    local -a arr=($1)\n    local target=$2\n    local len=${#arr[@]}\n    local i=0\n    local j=$((len - 1))\n    local mid=0\n    local found=0\n    while ((i <= j)); do\n        mid=$(((i + j) / 2))\n        if ((arr[mid] == target)); then\n            found=1\n            i=$((mid + 1))\n        elif ((arr[mid] < target)); then\n            i=$((mid + 1))\n        else\n            j=$((mid - 1))\n        fi\n    done\n    if ((found)); then\n        echo $((i - 1))\n    else\n        echo -1\n    fi",
    "    local -a array=($1)\n    local -i n=${#array[@]}\n    local -i i=0\n    local -i j=n-1\n    local -i m=0\n    local -i result=-1\n    while i <= j; do\n        m=$(((i+j)/2))\n        if [[ ${array[m]} -eq $2 ]]; then\n            result=$m\n            i=$m+1\n        elif [[ ${array[m]} -lt $2 ]]; then\n            i=$m+1\n        else\n            j=$m-1\n        fi\n    done\n    echo $result",
    "    local -a array=($1)\n    local target=$2\n    local -i left=0\n    local -i right=${#array[@]}\n    local -i mid\n    while ((left < right))\n    do\n        mid=$(((left + right) / 2))\n        if ((array[mid] > target))\n        then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n    if ((array[left - 1] == target))\n    then\n        echo $((left - 1))\n    else\n        echo -1\n    fi",
    "    local list=\"$1\"\n    local item=\"$2\"\n    local i=0\n    local last_pos=-1\n    for x in $list; do\n        if [ \"$x\" -eq \"$item\" ]; then\n            last_pos=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_pos",
    "    local -a array=($1)\n    local target=$2\n    local length=${#array[@]}\n    local low=0\n    local high=$((length - 1))\n    local mid\n    local result=-1\n\n    while [ $low -le $high ]; do\n        mid=$(((low + high) / 2))\n        if [ ${array[$mid]} -eq $target ]; then\n            result=$mid\n            low=$((mid + 1))\n        elif [ ${array[$mid]} -lt $target ]; then\n            low=$((mid + 1))\n        else\n            high=$((mid - 1))\n        fi\n    done\n\n    echo $result",
    "    local -a list=($1)\n    local n=$2\n    local i=0\n    local j=${#list[@]}\n    local m=0\n    while ((i < j)); do\n        m=$(((i + j) / 2))\n        if ((n < list[m])); then\n            j=$m\n        else\n            i=$((m + 1))\n        fi\n    done\n    if ((i > 0 && list[i - 1] == n)); then\n        echo $((i - 1))\n    else\n        echo -1\n    fi",
    "    local list=$1\n    local element=$2\n    local last_position=0\n    local position=0\n    for i in $list; do\n        if [ $i -eq $element ]; then\n            last_position=$position\n        fi\n        position=$((position+1))\n    done\n    echo $last_position",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    local -i i\n    for ((i=${#array[@]}-1; i>=0; i--)); do\n        if [[ ${array[i]} -eq $2 ]]; then\n            echo $i\n            return\n        fi\n    done\n    echo -1",
    "    local list=$1\n    local item=$2\n    local pos=0\n    for i in $list; do\n        if [[ $i -eq $item ]]; then\n            pos=$i\n        fi\n    done\n    echo $pos",
    "    local -a array\n    local -i i\n    local -i len\n    local -i last_pos\n\n    array=($1)\n    len=${#array[@]}\n    last_pos=-1\n\n    for ((i=0; i<len; i++)); do\n        if [[ ${array[i]} -eq $2 ]]; then\n            last_pos=$i\n        fi\n    done\n\n    echo $last_pos",
    "    local list=$1\n    local element=$2\n    local count=0\n    for i in $list; do\n        if [ $i -eq $element ]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count",
    "    local -a array=($1)\n    local -i x=$2\n    local -i i=0\n    local -i j=${#array[@]}\n    local -i k=0\n    while ((i < j)); do\n        k=$(((i+j)/2))\n        if ((x < array[k])); then\n            j=$k\n        else\n            i=$((k+1))\n        fi\n    done\n    echo $((i-1))",
    "    local -a array\n    local -i i=0\n    local -i last_pos=-1\n    local -i last_pos_found=0\n    local -i num_elements=0\n    local -i search_element=$2\n\n    array=($1)\n    num_elements=${#array[@]}\n\n    for ((i=0; i<num_elements; i++)); do\n        if [[ ${array[i]} -eq $search_element ]]; then\n            last_pos=$i\n            last_pos_found=1\n        fi\n    done\n\n    if [[ $last_pos_found -eq 0 ]]; then\n        echo \"Element not found\"\n    else\n        echo $last_pos\n    fi",
    "    local list=\"$1\"\n    local item=\"$2\"\n    local first=0\n    local last=$(( ${#list[@]} - 1 ))\n    local middle\n    local middle_item\n\n    while [[ $first -lt $last ]]; do\n        middle=$(( (first + last) / 2 ))\n        middle_item=${list[middle]}\n\n        if [[ $middle_item -eq $item ]]; then\n            first=$(( middle + 1 ))\n        elif [[ $middle_item -lt $item ]]; then\n            first=$(( middle + 1 ))\n        else\n            last=$(( middle - 1 ))\n        fi\n    done\n\n    echo $last",
    "    local -a array\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i A\n    local -i B\n    local -i C\n    local -i D\n    local -i E\n    local -i F\n    local -i G\n    local -i H\n    local -i I\n    local -i J\n    local -i K\n    local -i L\n    local -i M\n    local -i N\n    local -i O\n    local -i P\n    local -i Q\n    local -i R\n    local -i S\n    local -i T\n    local -i U\n    local -i V\n    local -i W\n    local -i X\n    local -i Y\n    local -i Z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i A\n    local -i B\n    local -i C\n    local -i D\n    local -i E\n    local -i F\n    local -i G\n    local -i H\n    local -i I\n    local -i J\n    local -i K\n    local -i L\n    local -i M\n    local -i N\n    local -i O\n   ",
    "    local list=\"$1\"\n    local target=\"$2\"\n    local i=0\n    local last_pos=-1\n    for item in $list; do\n        if [[ \"$item\" -eq \"$target\" ]]; then\n            last_pos=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_pos",
    "    local -a array=($1)\n    local target=$2\n    local length=${#array[@]}\n    local first=0\n    local last=$((length - 1))\n    local middle=$(((first + last) / 2))\n    local found=false\n\n    while ((first <= last)) && ! $found; do\n        if ((array[middle] < target)); then\n            first=$((middle + 1))\n        elif ((array[middle] > target)); then\n            last=$((middle - 1))\n        else\n            found=true\n        fi\n        middle=$(((first + last) / 2))\n    done\n\n    if $found; then\n        echo $middle\n    else\n        echo -1\n    fi",
    "    local -a array\n    local i\n    local n\n    local x\n    array=($1)\n    n=${#array[@]}\n    x=$2\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[$i]} -eq $x ]]; then\n            echo $i\n        fi\n    done",
    "    local list=$1\n    local item=$2\n    local count=0\n    local pos=0\n    for i in $list; do\n        if [ $i -eq $item ]; then\n            pos=$count\n        fi\n        count=$((count+1))\n    done\n    echo $pos",
    "    local -a array\n    local -i i\n    local -i n\n    local -i result\n\n    IFS=' ' read -a array <<< \"$1\"\n    n=${#array[@]}\n    result=-1\n\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -eq $2 ]]; then\n            result=$i\n        fi\n    done\n\n    echo $result",
    "    local -a array=($1)\n    local target=$2\n    local length=${#array[@]}\n    local start=0\n    local end=$((length - 1))\n    local mid\n    while [[ $start -le $end ]]; do\n        mid=$(((start + end) / 2))\n        if [[ ${array[$mid]} -eq $target ]]; then\n            while [[ $mid -lt $((length - 1)) ]] && [[ ${array[$((mid + 1))]} -eq $target ]]; do\n                mid=$((mid + 1))\n            done\n            echo $mid\n            return\n        elif [[ ${array[$mid]} -lt $target ]]; then\n            start=$((mid + 1))\n        else\n            end=$((mid - 1))\n        fi\n    done\n    echo -1",
    "    local -a list=($1)\n    local -i len=${#list[@]}\n    local -i i=0\n    local -i j=$((len - 1))\n    local -i k\n    local -i target=$2\n    while ((i <= j)); do\n        k=$(((i + j) / 2))\n        if ((target < list[k])); then\n            j=$((k - 1))\n        elif ((target > list[k])); then\n            i=$((k + 1))\n        else\n            while ((k < len - 1)) && ((list[k + 1] == target)); do\n                ((k++))\n            done\n            echo $k\n            return\n        fi\n    done\n    echo -1",
    "    local -a array=($1)\n    local -i i=0\n    local -i j=${#array[@]}\n    local -i k=0\n    local -i target=$2\n    while ((i <= j)); do\n        k=$(((i + j) / 2))\n        if ((array[k] == target)); then\n            ((i = k + 1))\n        elif ((array[k] < target)); then\n            ((i = k + 1))\n        else\n            ((j = k - 1))\n        fi\n    done\n    echo $j",
    "    local -a list=($1)\n    local -i n=${#list[@]}\n    local -i i=0\n    local -i j=$((n-1))\n    local -i k=0\n    local -i x=$2\n    while ((i<=j))\n    do\n        k=$(((i+j)/2))\n        if ((x<list[k]))\n        then\n            j=$((k-1))\n        elif ((x>list[k]))\n        then\n            i=$((k+1))\n        else\n            while ((k<n && list[k]==x))\n            do\n                k=$((k+1))\n            done\n            echo $((k-1))\n            return\n        fi\n    done\n    echo -1",
    "    local list=$1\n    local element=$2\n    local i=0\n    local last_pos=-1\n    for e in $list; do\n        if [ $e -eq $element ]; then\n            last_pos=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_pos",
    "    local -a arr=($1)\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i mid=0\n    local -i start=0\n    local -i end=$(($len - 1))\n    local -i target=$2\n\n    while [ $start -le $end ]; do\n        mid=$((($start + $end) / 2))\n        if [ ${arr[$mid]} -eq $target ]; then\n            i=$mid\n        fi\n        if [ ${arr[$mid]} -lt $target ]; then\n            start=$(($mid + 1))\n        else\n            end=$(($mid - 1))\n        fi\n    done\n    echo $i",
    "    local -a array\n    local -i i\n    local -i last_pos\n    local -i len\n    local -i search_val\n\n    array=($1)\n    search_val=$2\n    len=${#array[@]}\n    last_pos=-1\n\n    for ((i=0; i<len; i++)); do\n        if [[ ${array[i]} -eq $search_val ]]; then\n            last_pos=$i\n        fi\n    done\n\n    echo $last_pos",
    "    local list=\"$1\"\n    local x=\"$2\"\n    local index=0\n    local last_index=0\n    for i in $list; do\n        if [ \"$i\" -eq \"$x\" ]; then\n            last_index=$index\n        fi\n        index=$((index + 1))\n    done\n    echo $last_index",
    "    local list=$1\n    local element=$2\n    local index=0\n    for i in $list; do\n        if [[ $i -eq $element ]]; then\n            index=$(($index + 1))\n        fi\n    done\n    echo $index",
    "    local -a array\n    local -i i\n    local -i last_pos\n    local -i len\n    local -i mid\n    local -i start\n    local -i end\n\n    array=($1)\n    len=${#array[@]}\n    start=0\n    end=$((len - 1))\n    last_pos=-1\n\n    while [[ $start -le $end ]]; do\n        mid=$(((start + end) / 2))\n        if [[ ${array[$mid]} -eq $2 ]]; then\n            last_pos=$mid\n            start=$((mid + 1))\n        elif [[ ${array[$mid]} -lt $2 ]]; then\n            start=$((mid + 1))\n        else\n            end=$((mid - 1))\n        fi\n    done\n\n    echo $last_pos",
    "    local list=$1\n    local item=$2\n    local pos=0\n    for i in $list; do\n        if [[ $i -eq $item ]]; then\n            pos=$((pos+1))\n        fi\n    done\n    echo $pos",
    "    local -a array=($1)\n    local target=$2\n    local length=${#array[@]}\n    local first=0\n    local last=$((length - 1))\n    local middle\n    local middle_value\n\n    while [ $first -le $last ]; do\n        middle=$(((first + last) / 2))\n        middle_value=${array[$middle]}\n\n        if [ $middle_value -eq $target ]; then\n            while [ $middle -lt $length ]; do\n                if [ ${array[$middle]} -eq $target ]; then\n                    middle=$((middle + 1))\n                else\n                    break\n                fi\n            done\n            echo $((middle - 1))\n            return\n        elif [ $middle_value -lt $target ]; then\n            first=$((middle + 1))\n        else\n            last=$((middle - 1))\n        fi\n    done\n\n    echo -1",
    "    local list=\"$1\"\n    local n=\"$2\"\n    local i=0\n    local last_pos=-1\n    for x in $list; do\n        if [ \"$x\" -eq \"$n\" ]; then\n            last_pos=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_pos",
    "    local -a arr=(\"$@\")\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i target=${arr[-1]}\n    while (( i < len )); do\n        if (( arr[i] == target )); then\n            echo $i\n            return\n        fi\n        (( i++ ))\n    done\n    echo -1",
    "    local -a array=($1)\n    local -i n=${#array[@]}\n    local -i i=0\n    local -i j=$((n-1))\n    local -i k\n    local -i target=$2\n    while ((i<=j)); do\n        k=$(((i+j)/2))\n        if ((array[k]<target)); then\n            i=$((k+1))\n        elif ((array[k]>target)); then\n            j=$((k-1))\n        else\n            i=$((k+1))\n        fi\n    done\n    echo $j",
    "    local list=\"$1\"\n    local element=\"$2\"\n    local i=0\n    local last_pos=-1\n    for x in $list; do\n        if [ \"$x\" -eq \"$element\" ]; then\n            last_pos=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_pos",
    "    local -a array=($1)\n    local target=$2\n    local -i left=0\n    local -i right=${#array[@]}\n    local -i mid=0\n    local -i last_pos=-1\n\n    while ((left < right)); do\n        mid=$(((left + right) / 2))\n        if ((array[mid] == target)); then\n            last_pos=$mid\n            left=$((mid + 1))\n        elif ((array[mid] > target)); then\n            right=$mid\n        else\n            left=$((mid + 1))\n        fi\n    done\n\n    echo $last_pos",
    "    local -a array=(\"$@\")\n    local -i n=${#array[@]}\n    local -i l=0\n    local -i r=$((n - 1))\n    local -i m\n    local -i v=$2\n    local -i i=-1\n\n    while l <= r; do\n        m=$(((l + r) / 2))\n        if ((array[m] == v)); then\n            i=$m\n            l=$((m + 1))\n        elif ((array[m] < v)); then\n            l=$((m + 1))\n        else\n            r=$((m - 1))\n        fi\n    done\n\n    echo $i",
    "    local -a array=($1)\n    local -i target=$2\n    local -i left=0\n    local -i right=${#array[@]}-1\n    local -i mid=0\n    local -i result=-1\n\n    while [ $left -le $right ]; do\n        mid=$(( (left+right)/2 ))\n        if [ ${array[$mid]} -eq $target ]; then\n            result=$mid\n            left=$(( mid+1 ))\n        elif [ ${array[$mid]} -lt $target ]; then\n            left=$(( mid+1 ))\n        else\n            right=$(( mid-1 ))\n        fi\n    done\n\n    echo $result",
    "    local list=\"$1\"\n    local value=\"$2\"\n    local i=0\n    local last=0\n    for item in $list; do\n        if [ $item -eq $value ]; then\n            last=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last",
    "    local -a array\n    local -i i\n    local -i n\n    local -i m\n    local -i l\n    local -i r\n    local -i mid\n    local -i result\n\n    array=($1)\n    n=${#array[@]}\n    m=$2\n\n    l=0\n    r=$((n-1))\n\n    while ((l <= r)); do\n        mid=$(((l+r)/2))\n        if ((array[mid] == m)); then\n            result=$mid\n            l=$((mid+1))\n        elif ((array[mid] < m)); then\n            l=$((mid+1))\n        else\n            r=$((mid-1))\n        fi\n    done\n\n    echo $result",
    "    local -a array\n    local -i i\n    local -i last_pos\n\n    array=($1)\n    last_pos=${#array[@]}\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ ${array[$i]} -gt $2 ]]; then\n            last_pos=$i\n            break\n        fi\n    done\n    echo $last_pos",
    "    local array=($1)\n    local target=$2\n    local i=0\n    local len=${#array[@]}\n    local last_pos=-1\n    while [ $i -lt $len ]; do\n        if [ ${array[$i]} -eq $target ]; then\n            last_pos=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_pos",
    "    local list=$1\n    local target=$2\n    local index=0\n    local last_index=0\n    for i in $list; do\n        if [ $i -eq $target ]; then\n            last_index=$index\n        fi\n        index=$((index + 1))\n    done\n    echo $last_index",
    "    local -a array=($1)\n    local target=$2\n    local start=0\n    local end=${#array[@]}\n    local mid=0\n    local last_pos=-1\n    while [ $start -lt $end ]; do\n        mid=$(((start+end)/2))\n        if [ ${array[$mid]} -eq $target ]; then\n            last_pos=$mid\n            start=$((mid+1))\n        elif [ ${array[$mid]} -lt $target ]; then\n            start=$((mid+1))\n        else\n            end=$((mid-1))\n        fi\n    done\n    echo $last_pos",
    "    local list=$1\n    local n=$2\n    local i=0\n    local pos=0\n    for x in $list; do\n        if [ $x -eq $n ]; then\n            pos=$i\n        fi\n        i=$((i+1))\n    done\n    echo $pos",
    "    local -a array=($1)\n    local -i n=${#array[@]}\n    local -i i=0\n    local -i j=$((n-1))\n    local -i k\n    local -i x=$2\n    while ((i <= j)); do\n        k=$(((i+j)/2))\n        if ((array[k] == x)); then\n            while ((k < n && array[k] == x)); do\n                ((k++))\n            done\n            echo $((k-1))\n            return\n        elif ((array[k] < x)); then\n            ((i = k+1))\n        else\n            ((j = k-1))\n        fi\n    done\n    echo -1",
    "    local -a arr=(\"$@\")\n    local n=\"${#arr[@]}\"\n    local i=0\n    local j=$((n-1))\n    local k=0\n    local v=\"${arr[$j]}\"\n    while ((i <= j)); do\n        k=$(((i+j)/2))\n        v=\"${arr[$k]}\"\n        if ((v > $2)); then\n            j=$((k-1))\n        elif ((v < $2)); then\n            i=$((k+1))\n        else\n            while ((k < n-1 && arr[k+1] == $2)); do\n                k=$((k+1))\n            done\n            echo $k\n            return\n        fi\n    done\n    echo -1",
    "    local list=\"$1\"\n    local target=\"$2\"\n    local first=0\n    local last=$((${#list[@]} - 1))\n    local mid\n    local mid_value\n\n    while [ $first -lt $last ]; do\n        mid=$((($first + $last) / 2))\n        mid_value=${list[$mid]}\n\n        if [ $mid_value -lt $target ]; then\n            first=$((mid + 1))\n        else\n            last=$((mid - 1))\n        fi\n    done\n\n    if [ ${list[$first]} -eq $target ]; then\n        echo $first\n    else\n        echo -1\n    fi",
    "    local list=\"$1\"\n    local element=\"$2\"\n    local first=0\n    local last=$((${#list[@]} - 1))\n    local middle\n\n    while [ $first -lt $last ]; do\n        middle=$((($first + $last) / 2))\n        if [ \"${list[$middle]}\" -lt \"$element\" ]; then\n            first=$(( $middle + 1 ))\n        else\n            last=$(( $middle - 1 ))\n        fi\n    done\n\n    if [ \"${list[$first]}\" -eq \"$element\" ]; then\n        echo $first\n    else\n        echo -1\n    fi",
    "    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i start=0\n    local -i end=$((len-1))\n    local -i mid=0\n    local -i pos=-1\n\n    while [ $start -le $end ]; do\n        mid=$(((start+end)/2))\n        if [ ${arr[$mid]} -eq $2 ]; then\n            pos=$mid\n            start=$((mid+1))\n        elif [ ${arr[$mid]} -lt $2 ]; then\n            start=$((mid+1))\n        else\n            end=$((mid-1))\n        fi\n    done\n\n    echo $pos",
    "    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i last=0\n    local -i mid=0\n    local -i low=0\n    local -i high=$((len-1))\n    while [[ $low -le $high ]]; do\n        mid=$(((low+high)/2))\n        if [[ ${arr[mid]} -eq $2 ]]; then\n            last=$mid\n            low=$((mid+1))\n        elif [[ ${arr[mid]} -lt $2 ]]; then\n            low=$((mid+1))\n        else\n            high=$((mid-1))\n        fi\n    done\n    echo $last",
    "    local list=$1\n    local target=$2\n    local pos=0\n    local i=0\n    local found=0\n    for i in $list; do\n        if [ $i -eq $target ]; then\n            pos=$i\n            found=1\n        fi\n    done\n    if [ $found -eq 0 ]; then\n        echo \"Not found\"\n    else\n        echo $pos\n    fi",
    "    local -a array\n    local -i i\n    local -i n\n    local -i result\n    array=($1)\n    n=${#array[@]}\n    result=-1\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -eq $2 ]]; then\n            result=$i\n        fi\n    done\n    echo $result",
    "    local array=($1)\n    local value=$2\n    local index=0\n    local last_index=0\n\n    for i in ${array[@]}; do\n        if [ $i -eq $value ]; then\n            last_index=$index\n        fi\n        index=$((index + 1))\n    done\n\n    echo $last_index",
    "    local list=\"$1\"\n    local num=$2\n    local pos=0\n    for i in $list; do\n        if [[ $i -eq $num ]]; then\n            pos=$i\n        fi\n    done\n    echo $pos",
    "\tlocal list=$1\n\tlocal n=$2\n\tlocal last=0\n\tlocal i=0\n\tfor i in $list; do\n\t\tif [ $i -eq $n ]; then\n\t\t\tlast=$i\n\t\tfi\n\tdone\n\techo $last",
    "    local list=$1\n    local element=$2\n    local last_position=-1\n    local position=0\n    for item in $list; do\n        if [ $item -eq $element ]; then\n            last_position=$position\n        fi\n        position=$((position + 1))\n    done\n    echo $last_position",
    "    local -a array\n    local -i i\n    local -i last_pos\n    local -i num\n\n    array=($1)\n    num=$2\n\n    last_pos=${#array[@]}\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ ${array[$i]} -gt $num ]]; then\n            last_pos=$i\n            break\n        fi\n    done\n\n    echo $last_pos",
    "  local -a array\n  local -i i\n  local -i n\n  local -i x\n  array=($1)\n  x=$2\n  n=${#array[@]}\n  for (( i=0; i<n; i++ )); do\n    if (( x < array[i] )); then\n      echo $(( i-1 ))\n      return 0\n    fi\n  done\n  echo $(( n-1 ))",
    "    local -a array=(\"$@\")\n    local -i last=0\n    local -i i=0\n\n    while [[ ${array[i]} -le $2 ]]; do\n        last=$i\n        ((i++))\n    done\n\n    echo $last",
    "    local list=$1\n    local element=$2\n    local pos=0\n    for i in $list; do\n        if [[ $i -eq $element ]]; then\n            pos=$((pos+1))\n        fi\n    done\n    echo $pos",
    "    local list=$1\n    local element=$2\n    local i=0\n    local last_index=0\n    for item in $list; do\n        if [ $item -eq $element ]; then\n            last_index=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_index",
    "    local array=($1)\n    local target=$2\n    local low=0\n    local high=${#array[@]}\n    local mid\n    while [ $low -lt $high ]; do\n        mid=$(( (low + high) / 2 ))\n        if [ ${array[$mid]} -gt $target ]; then\n            high=$(( mid - 1 ))\n        else\n            low=$(( mid + 1 ))\n        fi\n    done\n    if [ ${array[$(( low - 1 ))]} -eq $target ]; then\n        echo $(( low - 1 ))\n    else\n        echo -1\n    fi",
    "    local list=\"$1\"\n    local item=\"$2\"\n    local pos=0\n    local last_pos=0\n    for i in $list; do\n        if [ \"$i\" -eq \"$item\" ]; then\n            last_pos=$pos\n        fi\n        pos=$((pos+1))\n    done\n    echo $last_pos",
    "    local -a array\n    local i\n    IFS=' ' read -r -a array <<< \"$1\"\n    for ((i=${#array[@]}-1; i>=0; i--)); do\n        if [[ \"${array[i]}\" -eq \"$2\" ]]; then\n            echo \"$i\"\n            return\n        fi\n    done\n    echo \"-1\"",
    "  local list=\"$1\"\n  local item=\"$2\"\n  local pos=0\n  local last=0\n  for i in $list; do\n    if [ $i -eq $item ]; then\n      last=$pos\n    fi\n    pos=$((pos + 1))\n  done\n  echo $last",
    "    local list=\"$1\"\n    local item=\"$2\"\n    local pos=0\n    local last_pos=0\n    for i in $list; do\n        if [ \"$i\" -eq \"$item\" ]; then\n            last_pos=$pos\n        fi\n        pos=$((pos + 1))\n    done\n    echo $last_pos",
    "    local -a array=(\"$@\")\n    local -i last=0\n    local -i i=0\n    local -i n=${#array[@]}\n    local -i target=${array[-1]}\n    while (( i < n )); do\n        if (( array[i] == target )); then\n            last=i\n        fi\n        (( i++ ))\n    done\n    echo $last",
    "    local list=\"$1\"\n    local element=\"$2\"\n    local -i first=0\n    local -i last=$((${#list} - 1))\n    local -i middle\n    local -i position=-1\n\n    while [ $first -le $last ]\n    do\n        middle=$((($first + $last) / 2))\n        if [ ${list:$middle:1} -lt $element ]\n        then\n            first=$((middle + 1))\n        else\n            last=$((middle - 1))\n        fi\n        if [ ${list:$middle:1} -eq $element ]\n        then\n            position=$middle\n        fi\n    done\n    echo $position",
    "  local list=$1\n  local item=$2\n  local pos=0\n  local i=0\n  for i in $list; do\n    if [ $i -eq $item ]; then\n      pos=$i\n    fi\n  done\n  echo $pos",
    "    local -a list=($1)\n    local target=$2\n    local -i i=0\n    local -i j=${#list[@]}\n    local -i mid=0\n    while ((i < j)); do\n        mid=$(((i + j) / 2))\n        if ((list[mid] <= target)); then\n            i=$((mid + 1))\n        else\n            j=$((mid))\n        fi\n    done\n    echo $((i - 1))",
    "    local array=($1)\n    local target=$2\n    local low=0\n    local high=${#array[@]}\n    local mid=0\n    local last_pos=-1\n\n    while [[ $low -lt $high ]]; do\n        mid=$(( ($low + $high) / 2 ))\n        if [[ ${array[$mid]} -eq $target ]]; then\n            last_pos=$mid\n            low=$(( $mid + 1 ))\n        elif [[ ${array[$mid]} -lt $target ]]; then\n            low=$(( $mid + 1 ))\n        else\n            high=$(( $mid - 1 ))\n        fi\n    done\n\n    echo $last_pos",
    "    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i last_pos=-1\n    while (( i < len )); do\n        if (( arr[i] == 2 )); then\n            last_pos=$i\n        fi\n        (( i++ ))\n    done\n    echo $last_pos",
    "    local list=\"$1\"\n    local item=\"$2\"\n    local count=0\n    local last_pos=-1\n    for i in $list; do\n        if [ \"$i\" -eq \"$item\" ]; then\n            last_pos=$count\n        fi\n        count=$((count+1))\n    done\n    echo $last_pos",
    "    local -a list=($1)\n    local target=$2\n    local len=${#list[@]}\n    local low=0\n    local high=$((len - 1))\n    local mid=0\n    local last_pos=-1\n\n    while [ $low -le $high ]\n    do\n        mid=$(((low + high) / 2))\n        if [ ${list[$mid]} -eq $target ]\n        then\n            last_pos=$mid\n            low=$((mid + 1))\n        elif [ ${list[$mid]} -lt $target ]\n        then\n            low=$((mid + 1))\n        else\n            high=$((mid - 1))\n        fi\n    done\n\n    echo $last_pos",
    "    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=0\n    local -i mid=0\n    local -i last=-1\n    while ((i < len)) && ((arr[i] <= $2)); do\n        mid=$((i + (len - i) / 2))\n        if ((arr[mid] <= $2)); then\n            i=$((mid + 1))\n        else\n            len=$mid\n        fi\n    done\n    if ((i > 0)) && ((arr[i - 1] == $2)); then\n        last=$((i - 1))\n    fi\n    echo $last",
    "  local array=($1)\n  local target=$2\n  local i=0\n  local last=0\n  while [ $i -lt ${#array[@]} ]; do\n    if [ ${array[$i]} -eq $target ]; then\n      last=$i\n    fi\n    i=$((i+1))\n  done\n  echo $last",
    "    local -a array\n    local -i i\n    local -i last\n    local -i target\n\n    array=($1)\n    target=$2\n\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ ${array[$i]} -eq $target ]]; then\n            last=$i\n        fi\n    done\n\n    echo $last",
    "  local -a array=($1)\n  local n=$2\n  local i=0\n  local j=${#array[@]}\n  local m=0\n\n  while [ $i -lt $j ]; do\n    m=$(((i+j)/2))\n    if [ ${array[$m]} -lt $n ]; then\n      i=$((m+1))\n    else\n      j=$m\n    fi\n  done\n  echo $i",
    "    local array=($1)\n    local len=${#array[@]}\n    local target=$2\n    local low=0\n    local high=$((len - 1))\n    local mid=0\n    local last_pos=-1\n\n    while [ $low -le $high ]; do\n        mid=$(((low + high) / 2))\n        if [ ${array[$mid]} -eq $target ]; then\n            last_pos=$mid\n            low=$((mid + 1))\n        elif [ ${array[$mid]} -lt $target ]; then\n            low=$((mid + 1))\n        else\n            high=$((mid - 1))\n        fi\n    done\n\n    echo $last_pos",
    "  local list=$1\n  local element=$2\n  local index=0\n  for i in $list; do\n    if [ $i -eq $element ]; then\n      index=$((index + 1))\n    fi\n  done\n  echo $index",
    "    local -a array=($1)\n    local target=$2\n    local i=0\n    local j=${#array[@]}\n    local k=0\n    local m=0\n    while [ $i -lt $j ]; do\n        k=$((i + (j - i) / 2))\n        if [ ${array[$k]} -eq $target ]; then\n            m=$k\n            i=$((k + 1))\n        elif [ ${array[$k]} -lt $target ]; then\n            i=$((k + 1))\n        else\n            j=$k\n        fi\n    done\n    echo $m",
    "    local list=$1\n    local element=$2\n    local -i i=0\n    local -i last_pos=-1\n\n    for item in $list; do\n        if [[ $item -eq $element ]]; then\n            last_pos=$i\n        fi\n        ((i++))\n    done\n\n    echo $last_pos",
    "    local -a array=($1)\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i j=$((len-1))\n    local -i k=0\n    local -i target=$2\n    while [ $i -le $j ]; do\n        k=$(((i+j)/2))\n        if [ ${array[$k]} -eq $target ]; then\n            i=$k\n            j=$((j+1))\n        elif [ ${array[$k]} -lt $target ]; then\n            i=$((k+1))\n        else\n            j=$((k-1))\n        fi\n    done\n    echo $j",
    "    local list=$1\n    local element=$2\n    local pos=0\n    local i=0\n    local found=0\n\n    for i in $list; do\n        if [ $i -eq $element ]; then\n            pos=$i\n            found=1\n        fi\n    done\n\n    if [ $found -eq 1 ]; then\n        echo $pos\n    else\n        echo -1\n    fi",
    "    local -a array=($1)\n    local -i target=$2\n\n    local -i low=0\n    local -i high=${#array[@]}-1\n    local -i mid=0\n\n    while [ $low -le $high ]; do\n        mid=$(((low+high)/2))\n\n        if [ ${array[$mid]} -lt $target ]; then\n            low=$((mid+1))\n        elif [ ${array[$mid]} -gt $target ]; then\n            high=$((mid-1))\n        else\n            if [ $mid -eq $high ]; then\n                echo $mid\n                return\n            fi\n\n            if [ ${array[$((mid+1))]} -ne $target ]; then\n                echo $mid\n                return\n            fi\n\n            low=$((mid+1))\n        fi\n    done\n\n    echo -1",
    "  local array=($1)\n  local target=$2\n  local length=${#array[@]}\n  local first=0\n  local last=$((length - 1))\n  local middle\n  local middle_value\n\n  while [[ $first -le $last ]]; do\n    middle=$(((first + last) / 2))\n    middle_value=${array[$middle]}\n\n    if [[ $middle_value -eq $target ]]; then\n      while [[ $middle -lt $length ]]; do\n        if [[ ${array[$middle]} -eq $target ]]; then\n          middle=$((middle + 1))\n        else\n          break\n        fi\n      done\n      echo $((middle - 1))\n      return\n    elif [[ $middle_value -lt $target ]]; then\n      first=$((middle + 1))\n    else\n      last=$((middle - 1))\n    fi\n  done\n\n  echo -1",
    "    local -a array=(\"$@\")\n    local -i n=${#array[@]}\n    local -i i=0\n    local -i j=$((n-1))\n    local -i k=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0\n    local -",
    "    local -a arr=($1)\n    local -i n=$2\n    local -i i=0\n    local -i j=${#arr[@]}\n    local -i m=0\n    while ((i < j)); do\n        m=$((i + (j - i) / 2))\n        if ((n < arr[m])); then\n            j=$m\n        else\n            i=$((m + 1))\n        fi\n    done\n    echo $((i - 1))",
    "    local list=$1\n    local needle=$2\n    local pos=0\n    for i in $list; do\n        if [[ $i -eq $needle ]]; then\n            pos=$((pos+1))\n        fi\n    done\n    echo $pos",
    "\tlocal -a array\n\tlocal -i i\n\tIFS=' ' read -r -a array <<< \"$1\"\n\tfor ((i=${#array[@]}-1; i>=0; i--)); do\n\t\tif [[ ${array[i]} -eq $2 ]]; then\n\t\t\techo $i\n\t\t\treturn\n\t\tfi\n\tdone",
    "    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=len-1\n    local -i mid=0\n    local -i last_pos=-1\n\n    while [ $i -le $j ]; do\n        mid=$(((i+j)/2))\n        if [ ${arr[$mid]} -eq $2 ]; then\n            last_pos=$mid\n            i=$((mid+1))\n        elif [ ${arr[$mid]} -lt $2 ]; then\n            i=$((mid+1))\n        else\n            j=$((mid-1))\n        fi\n    done\n\n    echo $last_pos",
    "    local -a array=(\"${@:1:$#-1}\")\n    local target=$(echo \"${@: -1}\")\n    local left=0\n    local right=$(( ${#array[@]} - 1 ))\n    local mid\n    while (( left <= right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( array[mid] == target )); then\n            if (( mid == ${#array[@]} - 1 )); then\n                echo $mid\n                return\n            elif (( array[mid+1] != target )); then\n                echo $mid\n                return\n            else\n                left=$(( mid + 1 ))\n            fi\n        elif (( array[mid] < target )); then\n            left=$(( mid + 1 ))\n        else\n            right=$(( mid - 1 ))\n        fi\n    done\n    echo -1",
    "    local list=$1\n    local num=$2\n    local count=0\n    local last_pos=0\n    for i in $list; do\n        if [ $i -eq $num ]; then\n            last_pos=$count\n        fi\n        count=$((count + 1))\n    done\n    echo $last_pos",
    "    local list=\"$1\"\n    local element=\"$2\"\n    local i=0\n    local last_pos=0\n    for item in $list; do\n        if [ \"$item\" -eq \"$element\" ]; then\n            last_pos=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_pos",
    "    local list=\"$1\"\n    local target=\"$2\"\n    local index=0\n    local last_index=-1\n    for i in $list; do\n        if [ $i -eq $target ]; then\n            last_index=$index\n        fi\n        index=$((index+1))\n    done\n    echo $last_index",
    "    local -a arr=($1)\n    local target=$2\n    local len=${#arr[@]}\n    local i=0\n    local j=$((len - 1))\n    local mid=0\n    while [[ $i -le $j ]]; do\n        mid=$(((i + j) / 2))\n        if [[ ${arr[$mid]} -eq $target ]]; then\n            if [[ $mid -eq $((len - 1)) ]]; then\n                echo $mid\n                return\n            elif [[ ${arr[$((mid + 1))]} -ne $target ]]; then\n                echo $mid\n                return\n            else\n                i=$((mid + 1))\n            fi\n        elif [[ ${arr[$mid]} -lt $target ]]; then\n            i=$((mid + 1))\n        else\n            j=$((mid - 1))\n        fi\n    done\n    echo -1",
    "    local list=$1\n    local item=$2\n    local i=0\n    local -a array\n    local -i len=0\n    local -i last_pos=-1\n\n    # Convert the list to an array\n    IFS=' ' read -r -a array <<< \"$list\"\n\n    # Get the length of the array\n    len=${#array[@]}\n\n    # Loop through the array\n    while [ $i -lt $len ]; do\n        if [ ${array[$i]} -eq $item ]; then\n            last_pos=$i\n        fi\n        ((i++))\n    done\n\n    echo $last_pos",
    "    local list=\"$1\"\n    local item=\"$2\"\n    local index=0\n    local last_index=-1\n    for i in $list; do\n        if [ \"$i\" -eq \"$item\" ]; then\n            last_index=$index\n        fi\n        index=$((index + 1))\n    done\n    echo $last_index",
    "    local list=\"$1\"\n    local element=\"$2\"\n    local i=0\n    local last_index=-1\n    for item in $list; do\n        if [ \"$item\" -eq \"$element\" ]; then\n            last_index=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_index",
    "    local -a array=($1)\n    local -i n=$2\n    local -i i=0\n    local -i j=${#array[@]}\n    local -i m=0\n    while ((i < j)); do\n        m=$(((i + j) / 2))\n        if ((array[m] <= n)); then\n            i=$((m + 1))\n        else\n            j=$m\n        fi\n    done\n    echo $((i - 1))",
    "    local -a array\n    local -i i\n    local -i len\n    local -i last_pos\n    local -i target\n    array=($1)\n    len=${#array[@]}\n    target=$2\n    last_pos=-1\n    for ((i=0; i<len; i++)); do\n        if [[ ${array[i]} -eq $target ]]; then\n            last_pos=$i\n        fi\n    done\n    echo $last_pos",
    "    local list=\"$1\"\n    local target=\"$2\"\n    local -i low=0\n    local -i high=$((${#list} - 1))\n    local -i mid\n    while ((low <= high)); do\n        mid=$(((low + high) / 2))\n        if ((list[mid] > target)); then\n            high=$((mid - 1))\n        elif ((list[mid] < target)); then\n            low=$((mid + 1))\n        else\n            while ((list[mid] == target)); do\n                mid=$((mid + 1))\n            done\n            echo $((mid - 1))\n            return\n        fi\n    done\n    echo -1",
    "    local -a array=($1)\n    local -i n=${#array[@]}\n    local -i i=0\n    local -i j=$((n-1))\n    local -i k\n    local -i x=$2\n    while ((i<=j)); do\n        k=$(((i+j)/2))\n        if ((x<array[k])); then\n            j=$((k-1))\n        elif ((x>array[k])); then\n            i=$((k+1))\n        else\n            while ((k<n-1 && array[k+1]==x)); do\n                ((k++))\n            done\n            echo $k\n            return\n        fi\n    done\n    echo -1",
    "    local -a array=($1)\n    local -i n=${#array[@]}\n    local -i i=0\n    local -i j=$((n-1))\n    local -i k\n    local -i x=$2\n    while ((i <= j)); do\n        k=$(((i+j)/2))\n        if ((array[k] == x)); then\n            while ((array[k] == x)); do\n                ((k--))\n            done\n            echo $((k+1))\n            return\n        elif ((array[k] < x)); then\n            i=$((k+1))\n        else\n            j=$((k-1))\n        fi\n    done\n    echo -1",
    "    local -a array=($1)\n    local value=$2\n    local length=${#array[@]}\n    local position=0\n    local found=0\n    while (( position < length )); do\n        if [[ ${array[position]} -eq $value ]]; then\n            found=1\n        fi\n        (( position++ ))\n    done\n    if (( found )); then\n        echo $position\n    else\n        echo -1\n    fi",
    "\tlocal -a array\n\tlocal -i i\n\tlocal -i last\n\tlocal -i len\n\tlocal -i middle\n\tlocal -i start\n\tlocal -i stop\n\tlocal -i value\n\n\tarray=($1)\n\tvalue=$2\n\tlen=${#array[@]}\n\tstart=0\n\tstop=$((len - 1))\n\tlast=-1\n\twhile ((start <= stop)); do\n\t\tmiddle=$(((start + stop) / 2))\n\t\tif ((array[middle] == value)); then\n\t\t\tlast=$middle\n\t\t\tstart=$((middle + 1))\n\t\telif ((array[middle] < value)); then\n\t\t\tstart=$((middle + 1))\n\t\telse\n\t\t\tstop=$((middle - 1))\n\t\tfi\n\tdone\n\techo $last",
    "    local -a array=($1)\n    local target=$2\n    local -i left=0\n    local -i right=${#array[@]}\n    local -i mid=0\n    local -i result=-1\n\n    while ((left <= right)); do\n        mid=$(((left + right) / 2))\n        if ((array[mid] == target)); then\n            result=$mid\n            left=$((mid + 1))\n        elif ((array[mid] < target)); then\n            left=$((mid + 1))\n        else\n            right=$((mid - 1))\n        fi\n    done\n\n    echo $result",
    "    local -a array=($1)\n    local target=$2\n    local -i low=0\n    local -i high=${#array[@]}\n    local -i mid\n    while ((low < high)); do\n        mid=$(((low + high) / 2))\n        if ((array[mid] <= target)); then\n            low=$((mid + 1))\n        else\n            high=$mid\n        fi\n    done\n    if ((array[low - 1] == target)); then\n        echo $((low - 1))\n    else\n        echo -1\n    fi",
    "    local -a array=($1)\n    local target=$2\n    local low=0\n    local high=${#array[@]}\n    local mid=0\n    while [ $low -lt $high ]; do\n        mid=$(( (low + high) / 2 ))\n        if [ ${array[$mid]} -lt $target ]; then\n            low=$(( mid + 1 ))\n        else\n            high=$mid\n        fi\n    done\n    echo $low",
    "    local -a arr\n    local i\n    local len\n    local -i last_pos\n    local -i pos\n    local -i val\n\n    arr=($1)\n    len=${#arr[@]}\n    val=$2\n    last_pos=-1\n    for ((i=0; i<len; i++)); do\n        if [[ ${arr[i]} -eq $val ]]; then\n            last_pos=$i\n        fi\n    done\n    echo $last_pos",
    "  local list=\"$1\"\n  local target=\"$2\"\n  local i=0\n  local last_pos=0\n  for item in $list; do\n    if [[ $item -eq $target ]]; then\n      last_pos=$i\n    fi\n    ((i++))\n  done\n  echo $last_pos",
    "    local list=\"$1\"\n    local item=\"$2\"\n    local pos=0\n    for i in $list; do\n        if [ \"$i\" -eq \"$item\" ]; then\n            pos=$(( $pos + 1 ))\n        fi\n    done\n    echo $pos",
    "    local -a arr=(\"$@\")\n    local -i len=${#arr[@]}\n    local -i i=0\n    local -i j=len-1\n    local -i mid=0\n    local -i found=0\n    local -i last_pos=0\n\n    while [ $i -le $j ]\n    do\n        mid=$(( (i+j)/2 ))\n        if [ ${arr[$mid]} -eq $2 ]\n        then\n            found=1\n            last_pos=$mid\n            i=$(( mid+1 ))\n        elif [ ${arr[$mid]} -lt $2 ]\n        then\n            i=$(( mid+1 ))\n        else\n            j=$(( mid-1 ))\n        fi\n    done\n\n    if [ $found -eq 1 ]\n    then\n        echo $last_pos\n    else\n        echo -1\n    fi",
    "    local list=\"$1\"\n    local item=\"$2\"\n    local pos=0\n    local found=0\n    for i in $list; do\n        if [ \"$i\" -eq \"$item\" ]; then\n            pos=$((pos+1))\n            found=1\n        fi\n    done\n    if [ \"$found\" -eq 1 ]; then\n        echo $pos\n    else\n        echo -1\n    fi",
    "    local -a array\n    local -i i\n    local -i j\n    local -i k\n    local -i n\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n\n    array=($1)\n    n=${#array[@]}\n    i=0\n    j=$((n - 1))\n    k=$2\n    while ((i <= j)); do\n        p=$(((i + j) / 2))\n        if ((array[p] < k)); then\n            i=$((p + 1))\n        elif ((array[p] > k)); then\n            j=$((p - 1))\n        else\n            q=$p\n            r=$p\n            while ((q > 0)); do\n                q=$((q - 1))\n                if ((array[q] != k)); then\n                    break\n                fi\n                r=$q\n            done\n            s=$p\n            t=$p\n            while ((s < n)); do\n                s=$((s + 1))\n                if ((array[s] != k)); then\n                    break\n                fi\n                t=$s\n            done\n            echo $t\n            return\n        fi\n    done\n    echo -1",
    "    local -a array\n    local -i i\n    local -i n\n    local -i last\n    array=($1)\n    n=${#array[@]}\n    last=-1\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -eq $2 ]]; then\n            last=$i\n        fi\n    done\n    echo $last",
    "    local -a array\n    local -i i\n    local -i last=0\n    local -i n\n    local -i target\n    IFS=' ' read -r -a array <<< \"$1\"\n    target=$2\n    n=${#array[@]}\n    for (( i=0; i<n; i++ )); do\n        if [[ ${array[i]} -le $target ]]; then\n            last=$i\n        fi\n    done\n    echo $last",
    "    local -a array=($1)\n    local -i n=$2\n    local -i i=0\n    local -i j=${#array[@]}\n    local -i k=0\n    while ((i < j)); do\n        k=$(((i + j) / 2))\n        if ((n < array[k])); then\n            j=$k\n        else\n            i=$((k + 1))\n        fi\n    done\n    echo $((i - 1))",
    "    local -a array\n    local -i i\n    local -i n\n    local -i m\n    local -i l\n    local -i r\n    local -i mid\n    local -i result\n\n    array=($1)\n    n=${#array[@]}\n    l=0\n    r=$((n - 1))\n    m=$2\n\n    while ((l <= r)); do\n        mid=$(((l + r) / 2))\n        if ((array[mid] > m)); then\n            r=$((mid - 1))\n        elif ((array[mid] < m)); then\n            l=$((mid + 1))\n        else\n            result=$mid\n            l=$((mid + 1))\n        fi\n    done\n\n    echo $result",
    "    local list=$1\n    local target=$2\n    local -i i=0\n    local -i j=$((${#list} - 1))\n    local -i m\n    local -i result=-1\n    while ((i <= j)); do\n        m=$(((i + j) / 2))\n        if ((list[m] > target)); then\n            j=$((m - 1))\n        elif ((list[m] < target)); then\n            i=$((m + 1))\n        else\n            result=$m\n            i=$((m + 1))\n        fi\n    done\n    echo $result",
    "    local list=$1\n    local n=$2\n    local pos=0\n    local i=0\n    local len=${#list}\n    while [ $i -lt $len ]; do\n        if [ \"${list:$i:1}\" -eq \"$n\" ]; then\n            pos=$i\n        fi\n        i=$((i+1))\n    done\n    echo $pos",
    "    local -a array\n    local -i i\n    local -i len\n    local -i last_pos\n    local -i middle\n    local -i start\n    local -i end\n\n    array=($1)\n    len=${#array[@]}\n    last_pos=-1\n    start=0\n    end=$((len - 1))\n    while ((start <= end)); do\n        middle=$(((start + end) / 2))\n        if ((array[middle] == $2)); then\n            last_pos=$middle\n            start=$((middle + 1))\n        elif ((array[middle] < $2)); then\n            start=$((middle + 1))\n        else\n            end=$((middle - 1))\n        fi\n    done\n    echo $last_pos",
    "    local -a list=($1)\n    local x=$2\n    local i=0\n    local j=${#list[@]}\n    while ((i < j)); do\n        local k=$(((i + j) / 2))\n        if ((x < list[k])); then\n            j=$k\n        else\n            i=$((k + 1))\n        fi\n    done\n    echo $((i - 1))",
    "    local list=$1\n    local target=$2\n    local pos=0\n    for i in $list; do\n        if [[ $i -eq $target ]]; then\n            pos=$(($pos + 1))\n        fi\n    done\n    echo $pos",
    "    local list=\"$1\"\n    local target=\"$2\"\n    local -i left=0\n    local -i right=$(( ${#list} - 1 ))\n    local -i mid\n    local -i last_pos=-1\n    while (( left <= right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( list[mid] == target )); then\n            last_pos=$mid\n            left=$(( mid + 1 ))\n        elif (( list[mid] < target )); then\n            left=$(( mid + 1 ))\n        else\n            right=$(( mid - 1 ))\n        fi\n    done\n    echo $last_pos",
    "    local -a array\n    local -i i=0\n    local -i len=0\n    local -i num=$2\n    local -i last_pos=-1\n\n    IFS=' ' read -r -a array <<< \"$1\"\n    len=${#array[@]}\n\n    for ((i=0; i<len; i++)); do\n        if [[ ${array[i]} -eq $num ]]; then\n            last_pos=$i\n        fi\n    done\n\n    echo $last_pos",
    "    local list=($1)\n    local n=$2\n    local i=0\n    local last=0\n    for i in ${list[@]}; do\n        if [[ $i -eq $n ]]; then\n            last=$i\n        fi\n    done\n    echo $last",
    "    local -i i=0\n    local -a a=($1)\n    local -i n=${#a[@]}\n    local -i x=$2\n    local -i l=0\n    local -i r=$((n-1))\n    local -i m=0\n    while ((l<=r)); do\n        m=$(((l+r)/2))\n        if ((a[m]==x)); then\n            i=$m\n            l=$((m+1))\n        elif ((a[m]<x)); then\n            l=$((m+1))\n        else\n            r=$((m-1))\n        fi\n    done\n    echo $i",
    "    local list=$1\n    local element=$2\n    local i=0\n    for e in $list; do\n        if [ $e -eq $element ]; then\n            i=$(($i + 1))\n        fi\n    done\n    echo $i",
    "    local -a array=($1)\n    local target=$2\n    local left=0\n    local right=${#array[@]}\n    local mid=0\n\n    while [ $left -lt $right ]; do\n        mid=$(((left + right) / 2))\n        if [ ${array[$mid]} -lt $target ]; then\n            left=$((mid + 1))\n        else\n            right=$mid\n        fi\n    done\n\n    if [ ${array[$left]} -eq $target ]; then\n        echo $left\n    else\n        echo -1\n    fi",
    "    local list=$1\n    local target=$2\n    local i=0\n    local last_pos=-1\n    for item in $list; do\n        if [[ $item -eq $target ]]; then\n            last_pos=$i\n        fi\n        ((i++))\n    done\n    echo $last_pos",
    "    local -a array\n    local -i i\n    local -i len\n    local -i target\n    array=(${1// / })\n    len=${#array[@]}\n    target=$2\n    for ((i=0; i<len; i++)); do\n        if [[ ${array[i]} -eq $target ]]; then\n            echo $i\n        fi\n    done",
    "    local list=$1\n    local element=$2\n    local i=0\n    local last_position=-1\n    for e in $list; do\n        if [ $e -eq $element ]; then\n            last_position=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_position",
    "    local -a list=($1)\n    local target=$2\n    local min=0\n    local max=${#list[@]}\n    local mid=0\n    local result=-1\n\n    while (( min <= max )); do\n        mid=$(( (min + max) / 2 ))\n        if (( list[mid] == target )); then\n            result=$mid\n            min=$(( mid + 1 ))\n        elif (( list[mid] < target )); then\n            min=$(( mid + 1 ))\n        else\n            max=$(( mid - 1 ))\n        fi\n    done\n\n    echo $result",
    "    local list=\"$1\"\n    local target=\"$2\"\n    local index=0\n    local last_index=0\n    for item in $list; do\n        if [[ $item -eq $target ]]; then\n            last_index=$index\n        fi\n        ((index++))\n    done\n    echo $last_index",
    "    local list=\"$1\"\n    local target=\"$2\"\n    local low=0\n    local high=$((${#list} - 1))\n    local mid=0\n\n    while [ $low -le $high ]; do\n        mid=$((($low + $high) / 2))\n        if [ ${list:$mid:1} -lt $target ]; then\n            low=$((mid + 1))\n        elif [ ${list:$mid:1} -gt $target ]; then\n            high=$((mid - 1))\n        else\n            if [ $mid -eq $high ] || [ ${list:$((mid + 1)):1} -ne $target ]; then\n                echo $mid\n                return\n            fi\n            low=$((mid + 1))\n        fi\n    done\n    echo -1",
    "    local list=\"$1\"\n    local item=\"$2\"\n    local i=0\n    local last_index=-1\n    for x in $list; do\n        if [ \"$x\" -eq \"$item\" ]; then\n            last_index=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_index",
    "  local -a list=($1)\n  local target=$2\n  local -i i=0\n  local -i j=${#list[@]}\n  local -i mid\n  while (( i <= j )); do\n    mid=$(( (i + j) / 2 ))\n    if (( list[mid] > target )); then\n      j=$(( mid - 1 ))\n    elif (( list[mid] < target )); then\n      i=$(( mid + 1 ))\n    else\n      while (( list[mid] == target )); do\n        (( mid-- ))\n      done\n      echo $(( mid + 1 ))\n      return\n    fi\n  done\n  echo -1",
    "    local -a a=($1)\n    local n=$2\n    local i=0\n    local j=${#a[@]}\n    local k\n    while ((i < j)); do\n        k=$((i + (j - i) / 2))\n        if ((n < a[k])); then\n            j=$k\n        else\n            i=$((k + 1))\n        fi\n    done\n    echo $((i - 1))",
    "    local list=\"$1\"\n    local target=\"$2\"\n    local first=0\n    local last=$((${#list} - 1))\n    local middle\n    local middle_value\n\n    while [ $first -le $last ]; do\n        middle=$((($first + $last) / 2))\n        middle_value=${list[$middle]}\n        if [ $middle_value -eq $target ]; then\n            while [ $middle -lt ${#list} ] && [ ${list[$middle]} -eq $target ]; do\n                middle=$((middle + 1))\n            done\n            echo $((middle - 1))\n            return\n        elif [ $middle_value -lt $target ]; then\n            first=$((middle + 1))\n        else\n            last=$((middle - 1))\n        fi\n    done\n    echo -1",
    "    local list=$1\n    local element=$2\n    local last_position=0\n    local position=0\n    for i in $list; do\n        if [[ $i -eq $element ]]; then\n            last_position=$position\n        fi\n        position=$((position+1))\n    done\n    echo $last_position",
    "  local -a array\n  local -i i\n  local -i n\n  local -i result\n  array=($1)\n  n=${#array[@]}\n  result=-1\n  for ((i=0; i<n; i++)); do\n    if [[ ${array[$i]} -eq $2 ]]; then\n      result=$i\n    fi\n  done\n  echo $result",
    "    local array=($1)\n    local target=$2\n    local low=0\n    local high=${#array[@]}\n    local mid=0\n    while [ $low -lt $high ]\n    do\n        mid=$((($low + $high) / 2))\n        if [ ${array[$mid]} -eq $target ]\n        then\n            while [ $mid -lt $high ] && [ ${array[$mid]} -eq $target ]\n            do\n                mid=$((mid + 1))\n            done\n            echo $((mid - 1))\n            return\n        elif [ ${array[$mid]} -lt $target ]\n        then\n            low=$((mid + 1))\n        else\n            high=$((mid - 1))\n        fi\n    done\n    echo -1",
    "    local -a array=($1)\n    local -i last=${#array[@]}\n    local -i first=0\n    local -i mid\n    local -i target=$2\n    while (( first < last )); do\n        mid=$(( (first + last) / 2 ))\n        if (( array[mid] > target )); then\n            last=$mid\n        else\n            first=$(( mid + 1 ))\n        fi\n    done\n    if (( array[first - 1] == target )); then\n        echo $(( first - 1 ))\n    else\n        echo -1\n    fi",
    "    local list=$1\n    local element=$2\n    local last_position=0\n    local i=0\n    for item in $list; do\n        if [ $item -eq $element ]; then\n            last_position=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_position",
    "    local array=\"$1\"\n    local i=\"$2\"\n    local last=0\n    for x in $array; do\n        if [[ $x -eq $i ]]; then\n            last=$x\n        fi\n    done\n    echo $last",
    "    local -a array=($1)\n    local value=$2\n    local -i i=0\n    local -i j=${#array[@]}\n    local -i k=0\n    while ((i < j)); do\n        k=$(((i + j) / 2))\n        if ((array[k] == value)); then\n            ((i = k + 1))\n        elif ((array[k] < value)); then\n            ((i = k + 1))\n        else\n            ((j = k))\n        fi\n    done\n    echo $((i - 1))",
    "    local list=$1\n    local target=$2\n\n    local i=0\n    for item in $list; do\n        if [[ $item -eq $target ]]; then\n            i=$((i+1))\n        fi\n    done\n\n    echo $i",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    local -i i=0\n    local -i j=${#array[@]}\n    local -i k\n    while (( i < j )); do\n        k=$(( (i+j)/2 ))\n        if (( array[k] > $2 )); then\n            j=$k\n        else\n            i=$(( k+1 ))\n        fi\n    done\n    echo $(( i-1 ))",
    "    local -a array=($1)\n    local -i n=$2\n    local -i i=0\n    local -i last=-1\n\n    while (( i < ${#array[@]} )); do\n        if (( array[i] == n )); then\n            last=$i\n        fi\n        (( i++ ))\n    done\n\n    echo $last",
    "    local list=$1\n    local target=$2\n    local i=0\n    local last_pos=-1\n    for item in $list; do\n        if [[ $item -eq $target ]]; then\n            last_pos=$i\n        fi\n        ((i++))\n    done\n    echo $last_pos",
    "    local -a array=($1)\n    local target=$2\n    local low=0\n    local high=${#array[@]}-1\n    local mid=0\n    while ((low <= high)); do\n        mid=$(((low+high)/2))\n        if ((array[mid] == target)); then\n            if ((mid == high || array[mid+1] != target)); then\n                echo $mid\n                return\n            fi\n            low=$((mid+1))\n        elif ((array[mid] > target)); then\n            high=$((mid-1))\n        else\n            low=$((mid+1))\n        fi\n    done\n    echo -1",
    "    local -a array\n    local -i i\n    local -i last_pos\n    local -i n\n    local -i target\n\n    array=($1)\n    target=$2\n\n    n=${#array[@]}\n    last_pos=-1\n\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -eq $target ]]; then\n            last_pos=$i\n        fi\n    done\n\n    echo $last_pos",
    "    local list=\"$1\"\n    local element=\"$2\"\n    local index=0\n    local last_index=0\n    for i in $list; do\n        if [ \"$i\" -eq \"$element\" ]; then\n            last_index=$index\n        fi\n        index=$((index+1))\n    done\n    echo $last_index",
    "    local -a array=($1)\n    local target=$2\n    local low=0\n    local high=${#array[@]}\n    local mid=0\n    while [[ $low -lt $high ]]; do\n        mid=$(( (low + high) / 2 ))\n        if [[ ${array[$mid]} -gt $target ]]; then\n            high=$mid\n        else\n            low=$(( mid + 1 ))\n        fi\n    done\n    echo $(( low - 1 ))",
    "    local -a array=($1)\n    local -i target=$2\n    local -i low=0\n    local -i high=${#array[@]}\n    local -i mid=0\n\n    while [ $low -lt $high ]; do\n        mid=$(( (low + high) / 2 ))\n        if [ ${array[$mid]} -eq $target ]; then\n            while [ $mid -lt ${#array[@]} -a ${array[$mid]} -eq $target ]; do\n                (( mid++ ))\n            done\n            echo $(( mid - 1 ))\n            return\n        elif [ ${array[$mid]} -lt $target ]; then\n            low=$(( mid + 1 ))\n        else\n            high=$(( mid - 1 ))\n        fi\n    done\n    echo -1",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    local -i i=0\n    local -i last_pos=-1\n    local -i len=${#array[@]}\n    while (( i < len )); do\n        if (( array[i] == $2 )); then\n            last_pos=$i\n        fi\n        (( i++ ))\n    done\n    echo $last_pos",
    "    local list=\"$1\"\n    local element=\"$2\"\n    local -i first=0\n    local -i last=$((${#list} - 1))\n    local -i middle\n    local -i found=0\n    local -i index=-1\n    while [ $first -le $last ] && [ $found -eq 0 ]; do\n        middle=$((($first + $last) / 2))\n        if [ \"${list:$middle:1}\" -eq \"$element\" ]; then\n            found=1\n            index=$middle\n        elif [ \"${list:$middle:1}\" -lt \"$element\" ]; then\n            first=$((middle + 1))\n        else\n            last=$((middle - 1))\n        fi\n    done\n    echo $index",
    "    local -a array\n    local -i i\n    local -i len\n    local -i target\n    local -i last_pos\n\n    IFS=' ' read -r -a array <<< \"$1\"\n    len=${#array[@]}\n    target=$2\n\n    for ((i=0; i<len; i++)); do\n        if [[ ${array[i]} -eq $target ]]; then\n            last_pos=$i\n        fi\n    done\n\n    echo $last_pos",
    "    local -a array\n    local i\n    local n\n    local -i result\n\n    IFS=' ' read -r -a array <<< \"$1\"\n    n=\"${#array[@]}\"\n    result=-1\n    for ((i=0; i<n; i++)); do\n        if [[ \"${array[i]}\" -eq \"$2\" ]]; then\n            result=$i\n        fi\n    done\n    echo \"$result\"",
    "    local -a array\n    local i\n    local n\n    local -i last_pos\n    array=($1)\n    n=${#array[@]}\n    last_pos=-1\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -eq $2 ]]; then\n            last_pos=$i\n        fi\n    done\n    echo $last_pos",
    "    local -a array=($1)\n    local target=$2\n    local -i low=0\n    local -i high=${#array[@]}-1\n    local -i mid\n    local -i result=-1\n    while (( low <= high )); do\n        mid=$(( (low+high)/2 ))\n        if (( array[mid] == target )); then\n            result=$mid\n            low=$(( mid+1 ))\n        elif (( array[mid] < target )); then\n            low=$(( mid+1 ))\n        else\n            high=$(( mid-1 ))\n        fi\n    done\n    echo $result",
    "    local -a array=($1)\n    local n=$2\n    local i=0\n    local j=${#array[@]}\n    local k=0\n    while (( i < j )); do\n        k=$(( (i + j) / 2 ))\n        if (( n < array[k] )); then\n            j=$k\n        else\n            i=$(( k + 1 ))\n        fi\n    done\n    echo $(( i - 1 ))",
    "    local list=\"$1\"\n    local target=\"$2\"\n    local first=0\n    local last=$((${#list[@]} - 1))\n    local middle\n    local middle_value\n\n    while [ $first -le $last ]; do\n        middle=$((($first + $last) / 2))\n        middle_value=${list[$middle]}\n\n        if [ $middle_value -eq $target ]; then\n            while [ $middle -lt ${#list[@]} ] && [ ${list[$middle]} -eq $target ]; do\n                middle=$((middle + 1))\n            done\n            echo $((middle - 1))\n            return\n        elif [ $middle_value -gt $target ]; then\n            last=$((middle - 1))\n        else\n            first=$((middle + 1))\n        fi\n    done\n\n    echo -1",
    "    local list=$1\n    local element=$2\n    local i\n    for i in $list; do\n        if [[ $i -eq $element ]]; then\n            echo $i\n        fi\n    done",
    "    local list=\"$1\"\n    local target=\"$2\"\n    local i=0\n    local last_pos=-1\n    for item in $list; do\n        if [[ $item -eq $target ]]; then\n            last_pos=$i\n        fi\n        i=$((i+1))\n    done\n    echo $last_pos",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    local -i i=0\n    local -i last_pos=-1\n    while (( i < ${#array[@]} )); do\n        if (( array[i] == $2 )); then\n            last_pos=$i\n        fi\n        (( i++ ))\n    done\n    echo $last_pos",
    "    local list=$1\n    local element=$2\n    local index=0\n    local last_index=0\n    for i in $list; do\n        if [ $i -eq $element ]; then\n            last_index=$index\n        fi\n        index=$(( $index + 1 ))\n    done\n    echo $last_index",
    "    local list=\"$1\"\n    local target=\"$2\"\n    local -i left=0\n    local -i right=$(( ${#list} - 1 ))\n    local -i mid\n    local -i result=-1\n    while (( left <= right )); do\n        mid=$(( (left + right) / 2 ))\n        if (( list[mid] == target )); then\n            result=$mid\n            left=$(( mid + 1 ))\n        elif (( list[mid] < target )); then\n            left=$(( mid + 1 ))\n        else\n            right=$(( mid - 1 ))\n        fi\n    done\n    echo $result",
    "  local list=\"$1\"\n  local item=\"$2\"\n  local i=0\n  local last=0\n  for i in $list; do\n    if [[ $i -eq $item ]]; then\n      last=$i\n    fi\n  done\n  echo $last",
    "    local -a array=(\"$@\")\n    local -i n=${#array[@]}\n    local -i i=0\n    local -i j=n-1\n    local -i m=0\n    local -i result=-1\n\n    while [ $i -le $j ]; do\n        m=$(( (i+j)/2 ))\n        if [ ${array[$m]} -eq $2 ]; then\n            result=$m\n            i=$(( m+1 ))\n        elif [ ${array[$m]} -lt $2 ]; then\n            i=$(( m+1 ))\n        else\n            j=$(( m-1 ))\n        fi\n    done\n\n    echo $result",
    "    local list=$1\n    local element=$2\n    local index=0\n    local last_index=0\n    for i in $list; do\n        if [ $i -eq $element ]; then\n            last_index=$index\n        fi\n        index=$((index + 1))\n    done\n    echo $last_index",
    "    local -a array\n    local i\n    local n\n    local len\n    local -i result=-1\n\n    array=($1)\n    n=$2\n\n    len=${#array[@]}\n    for ((i=0; i < len; i++)); do\n        if [[ ${array[i]} -eq $n ]]; then\n            result=$i\n        fi\n    done\n\n    echo $result",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i j=$((len-1))\n    local -i mid\n    while ((i<=j)); do\n        mid=$(((i+j)/2))\n        if ((array[mid]==$2)); then\n            while ((mid<len && array[mid]==$2)); do\n                ((mid++))\n            done\n            echo $((mid-1))\n            return\n        elif ((array[mid]<$2)); then\n            i=$((mid+1))\n        else\n            j=$((mid-1))\n        fi\n    done\n    echo -1",
    "  local -a array\n  local -i i\n  local -i n\n  local -i last_pos\n  local -i mid\n  local -i low\n  local -i high\n  array=($1)\n  n=${#array[@]}\n  low=0\n  high=$((n-1))\n  last_pos=-1\n  while low <= high; do\n    mid=$(((low+high)/2))\n    if [[ ${array[mid]} -eq $2 ]]; then\n      last_pos=$mid\n      low=$((mid+1))\n    elif [[ ${array[mid]} -lt $2 ]]; then\n      low=$((mid+1))\n    else\n      high=$((mid-1))\n    fi\n  done\n  echo $last_pos",
    "    local list=$1\n    local element=$2\n    local last_pos=-1\n    local pos=0\n    for i in $list; do\n        if [[ $i -eq $element ]]; then\n            last_pos=$pos\n        fi\n        pos=$((pos+1))\n    done\n    echo $last_pos",
    "    local -a array\n    local i\n    local n\n    local -i pos=0\n    IFS=' ' read -r -a array <<< \"$1\"\n    n=${#array[@]}\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -eq $2 ]]; then\n            pos=$i\n        fi\n    done\n    echo $pos",
    "    local list=$1\n    local element=$2\n\n    local i=0\n    for item in $list; do\n        if [[ $item -eq $element ]]; then\n            i=$((i+1))\n        fi\n    done\n\n    echo $i",
    "    local -a array=($1)\n    local target=$2\n    local -i left=0\n    local -i right=${#array[@]}\n    local -i mid=0\n    while ((left < right))\n    do\n        mid=$(((left + right) / 2))\n        if ((array[mid] <= target))\n        then\n            left=$((mid + 1))\n        else\n            right=$((mid))\n        fi\n    done\n    if ((array[left - 1] == target))\n    then\n        echo $((left - 1))\n    else\n        echo -1\n    fi",
    "    local -a array\n    local -i i\n    local -i n\n    local -i last\n    array=($1)\n    n=${#array[@]}\n    last=-1\n    for ((i=0; i<n; i++)); do\n        if [[ ${array[i]} -eq $2 ]]; then\n            last=$i\n        fi\n    done\n    echo $last",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    local -i i=${#array[@]}\n    while (( i-- > 0 )); do\n        if (( array[i] == $2 )); then\n            echo $i\n            return\n        fi\n    done\n    echo -1",
    "    local -a array\n    IFS=' ' read -r -a array <<< \"$1\"\n    local -i n=${#array[@]}\n    local -i i=0\n    local -i j=$((n-1))\n    local -i m\n    while ((i <= j)); do\n        m=$(((i+j)/2))\n        if ((array[m] < $2)); then\n            i=$((m+1))\n        elif ((array[m] > $2)); then\n            j=$((m-1))\n        else\n            while ((m < n && array[m] == $2)); do\n                ((m++))\n            done\n            echo $((m-1))\n            return\n        fi\n    done\n    echo -1",
    "    local -a array=($1)\n    local target=$2\n    local -i left=0\n    local -i right=${#array[@]}-1\n    local -i mid\n    while [ $left -le $right ]; do\n        mid=$(((left+right)/2))\n        if [ ${array[$mid]} -eq $target ]; then\n            if [ $mid -eq $right ] || [ ${array[$((mid+1))]} -ne $target ]; then\n                echo $mid\n                return\n            else\n                left=$((mid+1))\n            fi\n        elif [ ${array[$mid]} -lt $target ]; then\n            left=$((mid+1))\n        else\n            right=$((mid-1))\n        fi\n    done\n    echo -1"
  ]
}
{
  "name": "mbpp_772_remove_length",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to remove all the words with k length in the given string.\n#\n# $1 is a string\n# $2 is an integer\nremove_length() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_772_remove_length.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    remove_length \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"The person is most value tet\" \"3\") = \"person is most value\" ]]\n    [[ $(candidate \"If you told me about this ok\" \"4\") = \"If you me about ok\" ]]\n    [[ $(candidate \"Forces of darkeness is come into the play\" \"4\") = \"Forces of darkeness is the\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  echo \"$1\" | tr ' ' '\\n' | grep -v \"^.\\{$2\\}$\" | tr '\\n' ' '",
    "  echo \"$1\" | tr ' ' '\\n' | grep -v \"^.\\{$2\\}$\" | tr '\\n' ' '",
    "  local string=\"$1\"\n  local length=\"$2\"\n  local words=($string)\n  local new_string=\"\"\n\n  for word in \"${words[@]}\"; do\n    if [ ${#word} -ne $length ]; then\n      new_string=\"$new_string $word\"\n    fi\n  done\n\n  echo \"$new_string\"",
    "    local str=\"$1\"\n    local len=\"$2\"\n    local words\n    local word\n    local i\n    words=($str)\n    for i in \"${!words[@]}\"; do\n        word=\"${words[$i]}\"\n        if [ ${#word} -eq $len ]; then\n            unset words[$i]\n        fi\n    done\n    echo \"${words[@]}\"",
    "    echo \"$1\" | tr ' ' '\\n' | grep -v \"^.\\{$2\\}$\" | tr '\\n' ' '",
    "  echo \"$1\" | tr ' ' '\\n' | grep -v \"^.\\{$2\\}$\" | tr '\\n' ' '",
    "  local str=\"$1\"\n  local len=\"$2\"\n  local words=\"$(echo \"$str\" | tr ' ' '\\n')\"\n  for word in $words; do\n    if [ ${#word} -eq \"$len\" ]; then\n      str=\"$(echo \"$str\" | sed \"s/$word//g\")\"\n    fi\n  done\n  echo \"$str\"",
    "    echo \"$1\" | tr ' ' '\\n' | grep -v \"^.\\{$2\\}$\" | tr '\\n' ' '",
    "  local str=\"$1\"\n  local len=\"$2\"\n  local new_str=\"\"\n  local word=\"\"\n  for word in $str; do\n    if [ ${#word} -ne $len ]; then\n      new_str=\"$new_str $word\"\n    fi\n  done\n  echo $new_str",
    "    echo \"$1\" | tr ' ' '\\n' | grep -v \"^.\\{$2\\}$\" | tr '\\n' ' '",
    "  local string=$1\n  local length=$2\n  local words=()\n  local word\n  for word in $string; do\n    if [[ ${#word} -ne $length ]]; then\n      words+=(\"$word\")\n    fi\n  done\n  echo \"${words[@]}\"",
    "  local string=\"$1\"\n  local length=\"$2\"\n  local new_string=\"\"\n\n  for word in $string; do\n    if [[ ${#word} -ne $length ]]; then\n      new_string+=\"$word \"\n    fi\n  done\n\n  echo \"$new_string\"",
    "  local string=$1\n  local length=$2\n  local word\n  for word in $string; do\n    if [ ${#word} -ne $length ]; then\n      echo -n \"$word \"\n    fi\n  done\n  echo",
    "    echo \"$1\" | tr -s ' ' '\\n' | grep -v \"^.\\{$2\\}$\" | tr -s '\\n' ' '",
    "    local string=\"$1\"\n    local length=\"$2\"\n    local new_string=\"\"\n\n    for word in $string; do\n        if [ ${#word} -ne $length ]; then\n            new_string=\"$new_string $word\"\n        fi\n    done\n\n    echo \"$new_string\"",
    "    echo $1 | tr \" \" \"\\n\" | grep -v \"^.\\{$2\\}$\" | tr \"\\n\" \" \"",
    "  echo \"$1\" | tr ' ' '\\n' | grep -v \"^.\\{$2\\}$\" | tr '\\n' ' '",
    "  echo \"$1\" | tr ' ' '\\n' | grep -v \"^.\\{$2\\}$\" | tr '\\n' ' '",
    "  echo \"$1\" | tr ' ' '\\n' | grep -v \"^.\\{$2\\}$\" | tr '\\n' ' '",
    "  echo \"$1\" | tr ' ' '\\n' | grep -v \"^.\\{$2\\}$\" | tr '\\n' ' '"
  ]
}
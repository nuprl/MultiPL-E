{
  "name": "mbpp_619_move_num",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to move all the numbers to the end of the given string.\n#\n# $1 is a string\nmove_num() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    move_num \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"I1love143you55three3000thousand\") = \"Iloveyouthreethousand1143553000\" ]]\n    [[ $(candidate \"Avengers124Assemble\") = \"AvengersAssemble124\" ]]\n    [[ $(candidate \"Its11our12path13to14see15things16do17things\") = \"Itsourpathtoseethingsdothings11121314151617\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "  local str=$1\n  local nums=$(echo $str | sed -r 's/[^0-9]//g')\n  local chars=$(echo $str | sed -r 's/[0-9]//g')\n  echo $chars$nums",
    "  local str=\"$1\"\n  local nums=\"$(echo \"$str\" | grep -o '[0-9]')\"\n  local chars=\"$(echo \"$str\" | grep -o '[^0-9]')\"\n  echo \"$chars$nums\"",
    "  echo \"$1\" | sed -e 's/[0-9]*//g' -e 's/\\(.*\\)/\\1/' -e 's/\\(.*\\)/\\1/'",
    "  echo \"$1\" | sed 's/[0-9]*//g' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-zA-Z]*\\)/\\1/' | sed 's/\\([a-",
    "  local str=\"$1\"\n  local nums=''\n  local chars=''\n  for ((i=0; i<${#str}; i++)); do\n    if [[ ${str:$i:1} =~ [0-9] ]]; then\n      nums+=\"${str:$i:1}\"\n    else\n      chars+=\"${str:$i:1}\"\n    fi\n  done\n  echo \"$chars$nums\"",
    "    local str=$1\n    local nums=$(echo $str | sed 's/[^0-9]//g')\n    local chars=$(echo $str | sed 's/[0-9]//g')\n    echo $chars$nums",
    "  local str=$1\n  local nums=$(echo \"$str\" | grep -o '[0-9]')\n  local chars=$(echo \"$str\" | grep -o '[^0-9]')\n  echo \"$chars$nums\"",
    "    local str=$1\n    local str_len=${#str}\n    local num_str=\"\"\n    local char_str=\"\"\n    local i=0\n    local ch=''\n    while [ $i -lt $str_len ]; do\n        ch=${str:$i:1}\n        if [[ $ch =~ [0-9] ]]; then\n            num_str=\"$num_str$ch\"\n        else\n            char_str=\"$char_str$ch\"\n        fi\n        let i++\n    done\n    echo \"$char_str$num_str\"",
    "  local str=$1\n  local nums=''\n  local chars=''\n  for (( i=0; i<${#str}; i++ )); do\n    if [[ ${str:$i:1} =~ [0-9] ]]; then\n      nums+=${str:$i:1}\n    else\n      chars+=${str:$i:1}\n    fi\n  done\n  echo \"$chars$nums\"",
    "  echo $1 | sed -e 's/[0-9]*//g' -e 's/\\([^0-9]*\\)/\\1/'",
    "    echo \"$1\" | sed -r 's/[0-9]+//g' | sed -r 's/[^0-9]+//g'",
    "  echo \"$1\" | sed -e 's/[0-9]*//g' -e 's/\\([^0-9]*\\)\\([0-9]*\\)/\\2\\1/'",
    "  echo \"$1\" | sed -r 's/[0-9]+//g' | sed -r 's/^[^a-zA-Z]+//g' | sed -r 's/[^a-zA-Z]+$//g' | sed -r 's/[^a-zA-Z]+/ /g' | sed -r 's/^ //g' | sed -r 's/ $//g' | sed -r 's/ /,/g' | sed -r 's/^/\\[/g' | sed -r 's/$/\\]/g'",
    "  echo \"$1\" | sed -e 's/[0-9]*//g' -e 's/\\([^0-9]*\\)/\\1/'",
    "    local str=\"$1\"\n    local nums=''\n    local chars=''\n    for ((i=0; i<${#str}; i++)); do\n        if [[ \"${str:$i:1}\" =~ [0-9] ]]; then\n            nums=\"$nums${str:$i:1}\"\n        else\n            chars=\"$chars${str:$i:1}\"\n        fi\n    done\n    echo \"$chars$nums\"",
    "  local str=$1\n  local nums=$(echo $str | sed 's/[^0-9]//g')\n  local chars=$(echo $str | sed 's/[0-9]//g')\n  echo $chars$nums",
    "    local str=$1\n    local nums=$(echo $str | sed -r 's/[^0-9]//g')\n    local chars=$(echo $str | sed -r 's/[0-9]//g')\n    echo $chars$nums",
    "  local str=$1\n  local nums=$(echo $str | sed 's/[^0-9]//g')\n  local chars=$(echo $str | sed 's/[0-9]//g')\n  echo $chars$nums",
    "    echo \"$1\" | sed 's/[^0-9]*//g' | sed 's/\\([0-9]*\\)/\\1 /g' | sed 's/\\([^0-9]*\\)/\\1/g'",
    "    local str=$1\n    local nums=$(echo \"$str\" | sed -r 's/[^0-9]//g')\n    local chars=$(echo \"$str\" | sed -r 's/[0-9]//g')\n    echo \"$chars$nums\""
  ]
}
{
  "name": "mbpp_558_digit_distance_nums",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while (( num1 > 0 || num2 > 0 )); do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        local -i diff=$(( digit1 - digit2 ))\n        if (( diff < 0 )); then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while (( num1 > 0 || num2 > 0 )); do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        local -i diff=$(( digit1 - digit2 ))\n        if (( diff < 0 )); then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i sum=0\n  local -i num1=$1\n  local -i num2=$2\n  local -i digit1\n  local -i digit2\n  local -i diff\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    digit1=$(( num1 % 10 ))\n    digit2=$(( num2 % 10 ))\n    diff=$(( digit1 - digit2 ))\n    if [ $diff -lt 0 ]; then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i sum=0\n  local -i num1=$1\n  local -i num2=$2\n  local -i digit1\n  local -i digit2\n  local -i diff\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    digit1=$((num1 % 10))\n    digit2=$((num2 % 10))\n    diff=$((digit1 - digit2))\n    if [ $diff -lt 0 ]; then\n      diff=$((-diff))\n    fi\n    sum=$((sum + diff))\n    num1=$((num1 / 10))\n    num2=$((num2 / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while (( num1 > 0 || num2 > 0 )); do\n        (( sum += (num1 % 10) - (num2 % 10) ))\n        (( num1 /= 10 ))\n        (( num2 /= 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo $(($1-$2))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1=0\n    local -i digit2=0\n    local -i diff=0\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$((num1 % 10))\n        digit2=$((num2 % 10))\n        diff=$((digit1 - digit2))\n        sum=$((sum + diff))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i num1=${1}\n  local -i num2=${2}\n  local -i sum=0\n  local -i digit1\n  local -i digit2\n  local -i distance\n  while [ ${num1} -gt 0 ] || [ ${num2} -gt 0 ]; do\n    digit1=$(( num1 % 10 ))\n    digit2=$(( num2 % 10 ))\n    distance=$(( digit1 - digit2 ))\n    if [ ${distance} -lt 0 ]; then\n      distance=$(( -distance ))\n    fi\n    sum=$(( sum + distance ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n  echo ${sum}\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1=0\n    local digit2=0\n    local distance=0\n    local num1_len=${#num1}\n    local num2_len=${#num2}\n    local num_len=0\n    local i=0\n\n    if [ $num1_len -gt $num2_len ]; then\n        num_len=$num1_len\n    else\n        num_len=$num2_len\n    fi\n\n    for ((i=0; i<num_len; i++)); do\n        digit1=${num1:$i:1}\n        digit2=${num2:$i:1}\n        if [ -z \"$digit1\" ]; then\n            digit1=0\n        fi\n        if [ -z \"$digit2\" ]; then\n            digit2=0\n        fi\n        distance=$((digit1 - digit2))\n        if [ $distance -lt 0 ]; then\n            distance=$((-distance))\n        fi\n        sum=$((sum + distance))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i sum=0\n  local -i num1=$1\n  local -i num2=$2\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    local -i digit1=$(( num1 % 10 ))\n    local -i digit2=$(( num2 % 10 ))\n    sum=$(( sum + abs(digit1 - digit2) ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp5_6sn_mg.sh: line 13: sum + abs(digit1 - digit2) : syntax error in expression (error token is \"(digit1 - digit2) \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i diff\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1 num2=$2\n    local -i sum=0\n    local -i digit1 digit2\n    while (( num1 > 0 || num2 > 0 )); do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        (( sum += abs(digit1 - digit2) ))\n        (( num1 /= 10 ))\n        (( num2 /= 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpbc55k16t.sh: line 13: ((: sum += abs(digit1 - digit2) : syntax error in expression (error token is \"(digit1 - digit2) \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"42\"\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i num1_digit\n    local -i num2_digit\n    local -i distance\n    while [ $num1 -gt 0 ]; do\n        num1_digit=$((num1 % 10))\n        num2_digit=$((num2 % 10))\n        distance=$((num1_digit - num2_digit))\n        sum=$((sum + distance))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1\n    local digit2\n    local distance\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n        distance=$(( digit1 - digit2 ))\n        if [ $distance -lt 0 ]; then\n            distance=$(( -distance ))\n        fi\n        sum=$(( sum + distance ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo $1 $2\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo $(($1-$2))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local n1=$1\n    local n2=$2\n    local sum=0\n    local i=0\n    local d1=0\n    local d2=0\n    local d=0\n    local len1=${#n1}\n    local len2=${#n2}\n    local len=$((len1>len2?len1:len2))\n    for ((i=0; i<len; i++))\n    do\n        d1=${n1:i:1}\n        d2=${n2:i:1}\n        d=$((d1>d2?d1-d2:d2-d1))\n        sum=$((sum+d))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i num1=$1\n  local -i num2=$2\n  local -i sum=0\n  local -i digit1\n  local -i digit2\n  local -i diff\n\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    digit1=$(( num1 % 10 ))\n    digit2=$(( num2 % 10 ))\n    diff=$(( digit1 - digit2 ))\n    if [ $diff -lt 0 ]; then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i diff\n\n    while (( num1 > 0 || num2 > 0 )); do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        if (( diff < 0 )); then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i num1=${1}\n  local -i num2=${2}\n  local -i sum=0\n  local -i num1_digit=0\n  local -i num2_digit=0\n  local -i diff=0\n\n  while [[ ${num1} -gt 0 ]]; do\n    num1_digit=$(( num1 % 10 ))\n    num2_digit=$(( num2 % 10 ))\n    diff=$(( num1_digit - num2_digit ))\n    if [[ ${diff} -lt 0 ]]; then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n\n  echo ${sum}\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i num1=$1\n  local -i num2=$2\n  local -i sum=0\n  local -i digit1\n  local -i digit2\n  local -i distance\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    digit1=$(( num1 % 10 ))\n    digit2=$(( num2 % 10 ))\n    distance=$(( digit1 - digit2 ))\n    if [ $distance -lt 0 ]; then\n      distance=$(( -distance ))\n    fi\n    sum=$(( sum + distance ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local diff=0\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        local digit1=$(( num1 % 10 ))\n        local digit2=$(( num2 % 10 ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n        diff=$(( digit1 - digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local i=0\n  local len1=${#num1}\n  local len2=${#num2}\n  local max_len=$len1\n  if [[ $len2 -gt $len1 ]]; then\n    max_len=$len2\n  fi\n  while [[ $i -lt $max_len ]]; do\n    local digit1=0\n    local digit2=0\n    if [[ $i -lt $len1 ]]; then\n      digit1=${num1:$i:1}\n    fi\n    if [[ $i -lt $len2 ]]; then\n      digit2=${num2:$i:1}\n    fi\n    sum=$((sum + (digit1 - digit2)))\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1\n    local digit2\n    local diff\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local max_len=$num1_len\n  if [[ $num2_len -gt $num1_len ]]; then\n    max_len=$num2_len\n  fi\n  for ((i=0; i<max_len; i++)); do\n    local digit1=0\n    local digit2=0\n    if [[ $i -lt $num1_len ]]; then\n      digit1=${num1:$((num1_len-i-1)):1}\n    fi\n    if [[ $i -lt $num2_len ]]; then\n      digit2=${num2:$((num2_len-i-1)):1}\n    fi\n    sum=$((sum+abs(digit1-digit2)))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpjx1dxlez.sh: line 25: sum+abs(digit1-digit2): syntax error in expression (error token is \"(digit1-digit2)\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i distance\n\n    while [ $num1 -gt 0 -o $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n        distance=$(( digit1 - digit2 ))\n        if [ $distance -lt 0 ]; then\n            distance=$(( -distance ))\n        fi\n        sum=$(( sum + distance ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]]; then\n    local -i sum=0\n    local -i i=0\n    while [[ $i -lt ${#1} ]]; do\n      local -i diff=$(( ${1:$i:1} - ${2:$i:1} ))\n      (( sum += diff * diff ))\n      (( i++ ))\n    done\n    echo $sum\n  else\n    echo \"Usage: digit_distance_nums <int> <int>\"\n  fi\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # Write your code here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpqhdanw2f.sh: line 177: syntax error near unexpected token `}'\\n/tmp/tmpqhdanw2f.sh: line 177: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i num1=$1\n  local -i num2=$2\n  local -i sum=0\n  local -i num1_digit\n  local -i num2_digit\n  local -i diff\n\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    num1_digit=$(( num1 % 10 ))\n    num2_digit=$(( num2 % 10 ))\n    diff=$(( num1_digit - num2_digit ))\n    if [ $diff -lt 0 ]; then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    if [[ $# -ne 2 ]]; then\n        echo \"Usage: $0 <int1> <int2>\"\n        return 1\n    fi\n\n    local -i sum=0\n    local -i i=0\n    local -i len1=${#1}\n    local -i len2=${#2}\n    local -i len=0\n\n    if [[ $len1 -gt $len2 ]]; then\n        len=$len1\n    else\n        len=$len2\n    fi\n\n    while [[ $i -lt $len ]]; do\n        local -i d1=${1:$i:1}\n        local -i d2=${2:$i:1}\n        if [[ -z $d1 ]]; then\n            d1=0\n        fi\n        if [[ -z $d2 ]]; then\n            d2=0\n        fi\n        sum=$((sum + (d1 - d2)))\n        i=$((i + 1))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo $(( $1 - $2 ))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo $(( $1 - $2 ))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while (( num1 > 0 )); do\n        (( sum += (num1 % 10) - (num2 % 10) ))\n        (( num1 /= 10 ))\n        (( num2 /= 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # Write your code here\n  # To print results to the standard output you can use echo\n  # Example: echo \"Hello world\"\n  echo $(( ($1 + $2) * ($1 - $2) ))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while [ $num1 -gt 0 ] && [ $num2 -gt 0 ]; do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        local -i diff=$(( digit1 - digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        sum=$(( sum + (digit1 - digit2) ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        local -i diff=$(( digit1 - digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    if [ $# -ne 2 ]; then\n        echo \"Usage: $0 <int1> <int2>\"\n        exit 1\n    fi\n    if [[ ! $1 =~ ^[0-9]+$ ]] || [[ ! $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: Arguments must be integers\"\n        exit 1\n    fi\n    if [ ${#1} -ne ${#2} ]; then\n        echo \"Error: Arguments must be the same length\"\n        exit 1\n    fi\n    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local digit1=${1:$i:1}\n        local digit2=${2:$i:1}\n        local diff=$(( digit1 - digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local num1_digit\n  local num2_digit\n  local i\n\n  for ((i=0; i<num1_len; i++)); do\n    num1_digit=${num1:i:1}\n    num2_digit=${num2:i:1}\n    sum=$((sum + abs($num1_digit - $num2_digit)))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpfg6iwf3c.sh: line 19: sum + abs(1 - 2): syntax error in expression (error token is \"(1 - 2)\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while [ $num1 -gt 0 ] && [ $num2 -gt 0 ]; do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        sum=$(( sum + abs(digit1 - digit2) ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpkmwhqkw0.sh: line 13: sum + abs(digit1 - digit2) : syntax error in expression (error token is \"(digit1 - digit2) \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i distance\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        distance=$(( digit1 - digit2 ))\n        if [ $distance -lt 0 ]; then\n            distance=$(( -distance ))\n        fi\n        sum=$(( sum + distance ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i diff\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while (( num1 > 0 )); do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        local -i diff=$(( digit1 - digit2 ))\n        if (( diff < 0 )); then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    while [[ $num1 -gt 0 || $num2 -gt 0 ]]; do\n        local digit1=$(( num1 % 10 ))\n        local digit2=$(( num2 % 10 ))\n        local diff=$(( digit1 - digit2 ))\n        if [[ $diff -lt 0 ]]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    if [ $# -ne 2 ]; then\n        echo \"Usage: digit_distance_nums <int1> <int2>\"\n        return 1\n    fi\n\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    local -i digit1\n    local -i digit2\n    local -i distance\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$((num1 % 10))\n        digit2=$((num2 % 10))\n        distance=$((digit1 - digit2))\n        sum=$((sum + distance))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local sum=0\n    local num1=$1\n    local num2=$2\n    while [[ $num1 -gt 0 ]] && [[ $num2 -gt 0 ]]; do\n        local digit1=$(( num1 % 10 ))\n        local digit2=$(( num2 % 10 ))\n        local diff=$(( digit1 - digit2 ))\n        if [[ $diff -lt 0 ]]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i num1=$1\n  local -i num2=$2\n  local -i sum=0\n  local -i digit1\n  local -i digit2\n  local -i distance\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    digit1=$(( num1 % 10 ))\n    digit2=$(( num2 % 10 ))\n    distance=$(( digit1 - digit2 ))\n    if [ $distance -lt 0 ]; then\n      distance=$(( -distance ))\n    fi\n    sum=$(( sum + distance ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    if [[ $# -ne 2 ]]; then\n        echo \"Usage: $0 <int1> <int2>\"\n        return 1\n    fi\n\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n\n    while [[ $num1 -gt 0 || $num2 -gt 0 ]]; do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        local -i diff=$(( digit1 - digit2 ))\n        if [[ $diff -lt 0 ]]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=${1}\n    local -i num2=${2}\n    local -i sum=0\n    local -i num1_digit\n    local -i num2_digit\n    local -i distance\n\n    while (( num1 > 0 || num2 > 0 )); do\n        num1_digit=$(( num1 % 10 ))\n        num2_digit=$(( num2 % 10 ))\n        distance=$(( num1_digit - num2_digit ))\n        if (( distance < 0 )); then\n            distance=$(( -distance ))\n        fi\n        sum=$(( sum + distance ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo ${sum}\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1\n    local digit2\n    local diff\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(($num1 % 10))\n        digit2=$(($num2 % 10))\n        num1=$(($num1 / 10))\n        num2=$(($num2 / 10))\n        diff=$(($digit1 - $digit2))\n        if [ $diff -lt 0 ]; then\n            diff=$((-$diff))\n        fi\n        sum=$(($sum + $diff))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i sum=0\n  local -i num1=$1\n  local -i num2=$2\n  local -i digit1\n  local -i digit2\n  local -i diff\n\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    digit1=$(( num1 % 10 ))\n    digit2=$(( num2 % 10 ))\n    diff=$(( digit1 - digit2 ))\n    if [ $diff -lt 0 ]; then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while (( num1 > 0 || num2 > 0 )); do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        sum=$(( sum + abs(digit1 - digit2) ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmphxwoyht6.sh: line 13: sum + abs(digit1 - digit2) : syntax error in expression (error token is \"(digit1 - digit2) \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    if [[ $1 -lt $2 ]]; then\n        echo $(( $2 - $1 ))\n    else\n        echo $(( $1 - $2 ))\n    fi\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local n1=$1\n  local n2=$2\n  local sum=0\n  local d1=0\n  local d2=0\n  local diff=0\n  while [ $n1 -gt 0 -o $n2 -gt 0 ]; do\n    d1=$((n1 % 10))\n    d2=$((n2 % 10))\n    diff=$((d1 - d2))\n    if [ $diff -lt 0 ]; then\n      diff=$((-diff))\n    fi\n    sum=$((sum + diff))\n    n1=$((n1 / 10))\n    n2=$((n2 / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    if [[ ! $1 =~ ^[0-9]+$ ]] || [[ ! $2 =~ ^[0-9]+$ ]]; then\n        echo \"error: both arguments must be integers\"\n        return 1\n    fi\n\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    local -i num1_digit\n    local -i num2_digit\n    local -i diff\n\n    while (( num1 > 0 || num2 > 0 )); do\n        num1_digit=$(( num1 % 10 ))\n        num2_digit=$(( num2 % 10 ))\n        diff=$(( num1_digit - num2_digit ))\n        if (( diff < 0 )); then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    while [ $num1 -gt 0 ] && [ $num2 -gt 0 ]; do\n        local digit1=$(( num1 % 10 ))\n        local digit2=$(( num2 % 10 ))\n        local diff=$(( digit1 - digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    if [[ ! $1 =~ ^[0-9]+$ ]] || [[ ! $2 =~ ^[0-9]+$ ]]; then\n        echo \"Usage: digit_distance_nums <int> <int>\"\n        return 1\n    fi\n\n    local -i sum=0\n    local -i i=0\n    local -i len1=${#1}\n    local -i len2=${#2}\n    local -i len=$((len1 > len2 ? len1 : len2))\n\n    while ((i < len)); do\n        local -i a=${1:i:1}\n        local -i b=${2:i:1}\n        ((a == 0)) && a=10\n        ((b == 0)) && b=10\n        ((sum += (a > b ? a - b : b - a)))\n        ((i++))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # Write your code here\n  # Use echo to print to stdout\n  # Use $1 and $2 to access the arguments passed to the function\n  # Use return to return a value\n  num1=$1\n  num2=$2\n  sum=0\n  while [ $num1 -gt 0 ] && [ $num2 -gt 0 ]; do\n      sum=$((sum + (num1 % 10 - num2 % 10) ** 2))\n      num1=$((num1 / 10))\n      num2=$((num2 / 10))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local num1_len=${#num1}\n    local num2_len=${#num2}\n    local max_len=$(( num1_len > num2_len ? num1_len : num2_len ))\n    for (( i=0; i<max_len; i++ )); do\n        local digit1=${num1:$(( num1_len - i - 1 )):1}\n        local digit2=${num2:$(( num2_len - i - 1 )):1}\n        if [ -z \"$digit1\" ]; then\n            digit1=0\n        fi\n        if [ -z \"$digit2\" ]; then\n            digit2=0\n        fi\n        sum=$(( sum + ( digit1 - digit2 ) ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1=0\n    local -i digit2=0\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        sum=$(( sum + abs(digit1 - digit2) ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpssgvunph.sh: line 16: sum + abs(digit1 - digit2) : syntax error in expression (error token is \"(digit1 - digit2) \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local i=0\n  local len1=${#num1}\n  local len2=${#num2}\n  local max_len=$len1\n  if [ $len2 -gt $len1 ]; then\n    max_len=$len2\n  fi\n  while [ $i -lt $max_len ]; do\n    local digit1=0\n    local digit2=0\n    if [ $i -lt $len1 ]; then\n      digit1=${num1:$i:1}\n    fi\n    if [ $i -lt $len2 ]; then\n      digit2=${num2:$i:1}\n    fi\n    sum=$((sum + (digit1 - digit2)))\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local num1_len=${#num1}\n    local num2_len=${#num2}\n    local num1_digit\n    local num2_digit\n    local i\n\n    if [[ $num1_len -gt $num2_len ]]; then\n        for ((i=0; i<$num2_len; i++)); do\n            num1_digit=${num1:$((num1_len-i-1)):1}\n            num2_digit=${num2:$((num2_len-i-1)):1}\n            sum=$((sum + (num1_digit - num2_digit)))\n        done\n        for ((i=num2_len; i<num1_len; i++)); do\n            num1_digit=${num1:$((num1_len-i-1)):1}\n            sum=$((sum + num1_digit))\n        done\n    elif [[ $num1_len -lt $num2_len ]]; then\n        for ((i=0; i<$num1_len; i++)); do\n            num1_digit=${num1:$((num1_len-i-1)):1}\n            num2_digit=${num2:$((num2_len-i-1)):1}\n            sum=$((sum + (num2_digit - num1_digit)))\n        done\n        for ((i=num1_len; i<num2_len; i++)); do\n            num2_digit=${num2:$((num2_len-i-1)):1}\n            sum=$((sum + num2_digit))\n        done\n    else\n        for ((i=0; i<$num1_len; i++)); do\n            num1_digit=${num1:$((num1_len-i-1)):1}\n            num2_digit=${num2:$((num2_len-i-1)):1}\n            sum=$((sum + (num2_digit - num1_digit)))\n        done\n    fi\n\n    echo $sum\n\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i num1=$1 num2=$2\n  local -i sum=0\n  local -i num1_digit num2_digit\n  local -i num1_len=${#num1} num2_len=${#num2}\n  local -i num1_idx=0 num2_idx=0\n  local -i num1_idx_max=$((num1_len-1)) num2_idx_max=$((num2_len-1))\n\n  while [ $num1_idx -le $num1_idx_max ] || [ $num2_idx -le $num2_idx_max ]; do\n    num1_digit=${num1:$num1_idx:1}\n    num2_digit=${num2:$num2_idx:1}\n    sum=$((sum + abs(num1_digit - num2_digit)))\n    num1_idx=$((num1_idx+1))\n    num2_idx=$((num2_idx+1))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmputzngx5a.sh: line 17: sum + abs(num1_digit - num2_digit): syntax error in expression (error token is \"(num1_digit - num2_digit)\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]]; then\n        local -i sum=0\n        local -i num1=$1\n        local -i num2=$2\n        while [[ $num1 -gt 0 ]] || [[ $num2 -gt 0 ]]; do\n            local -i digit1=0\n            local -i digit2=0\n            if [[ $num1 -gt 0 ]]; then\n                digit1=$(( num1 % 10 ))\n                num1=$(( num1 / 10 ))\n            fi\n            if [[ $num2 -gt 0 ]]; then\n                digit2=$(( num2 % 10 ))\n                num2=$(( num2 / 10 ))\n            fi\n            sum=$(( sum + abs(digit1 - digit2) ))\n        done\n        echo $sum\n    else\n        echo \"Invalid input\"\n    fi\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpm69gkyhz.sh: line 22: sum + abs(digit1 - digit2) : syntax error in expression (error token is \"(digit1 - digit2) \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1 num2=$2\n    local -i sum=0\n    local -i num1_digit num2_digit\n    while [ $num1 -gt 0 ] && [ $num2 -gt 0 ]; do\n        num1_digit=$((num1 % 10))\n        num2_digit=$((num2 % 10))\n        sum=$((sum + abs(num1_digit - num2_digit)))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp5igbm0hd.sh: line 13: sum + abs(num1_digit - num2_digit): syntax error in expression (error token is \"(num1_digit - num2_digit)\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # convert to string\n  local num1=$1\n  local num2=$2\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local num1_arr=()\n  local num2_arr=()\n  local i=0\n  local sum=0\n\n  # convert to array\n  for ((i=0; i<num1_len; i++)); do\n    num1_arr[$i]=${num1:$i:1}\n  done\n\n  for ((i=0; i<num2_len; i++)); do\n    num2_arr[$i]=${num2:$i:1}\n  done\n\n  # compare\n  for ((i=0; i<num1_len; i++)); do\n    sum=$((sum + ${num1_arr[$i]} - ${num2_arr[$i]}))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local diff=0\n  local num1_digit=0\n  local num2_digit=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local i=0\n\n  if [ $num1_len -gt $num2_len ]; then\n    num1_len=$num2_len\n  fi\n\n  for ((i=0; i<$num1_len; i++)); do\n    num1_digit=${num1:$i:1}\n    num2_digit=${num2:$i:1}\n    diff=$((num1_digit - num2_digit))\n    if [ $diff -lt 0 ]; then\n      diff=$((-1 * diff))\n    fi\n    sum=$((sum + diff))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1=0\n    local digit2=0\n    local distance=0\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        distance=$(( digit1 - digit2 ))\n        if [ $distance -lt 0 ]; then\n            distance=$(( -distance ))\n        fi\n        sum=$(( sum + distance ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i sum=0\n  local -i num1=$1\n  local -i num2=$2\n  local -i num1_digit\n  local -i num2_digit\n  local -i distance\n  while (( num1 > 0 || num2 > 0 )); do\n    num1_digit=$(( num1 % 10 ))\n    num2_digit=$(( num2 % 10 ))\n    distance=$(( num1_digit - num2_digit ))\n    if (( distance < 0 )); then\n      distance=$(( -distance ))\n    fi\n    sum=$(( sum + distance ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i distance\n\n    while (( num1 > 0 || num2 > 0 )); do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n        distance=$(( digit1 - digit2 ))\n        if (( distance < 0 )); then\n            distance=$(( -distance ))\n        fi\n        sum=$(( sum + distance ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local num1_digit\n    local num2_digit\n    local diff\n    local i=0\n\n    while [ $i -lt ${#num1} ]; do\n        num1_digit=${num1:$i:1}\n        num2_digit=${num2:$i:1}\n        diff=$((num1_digit - num2_digit))\n        sum=$((sum + diff))\n        i=$((i + 1))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while [ $num1 -gt 0 ] && [ $num2 -gt 0 ]; do\n        sum=$((sum + (num1 % 10) - (num2 % 10)))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n\n  for (( i=0; i<${#num1}; i++ )); do\n    local digit1=${num1:$i:1}\n    local digit2=${num2:$i:1}\n    local diff=$(( digit1 - digit2 ))\n    sum=$(( sum + diff ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        sum=$(( sum + (digit1 > digit2 ? digit1 - digit2 : digit2 - digit1) ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n\n    while [ $num1 -gt 0 -o $num2 -gt 0 ]; do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        local -i diff=$(( digit1 - digit2 ))\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local i=0\n    local digit1=0\n    local digit2=0\n\n    while [ $i -lt ${#num1} ]; do\n        digit1=${num1:$i:1}\n        digit2=${num2:$i:1}\n        sum=$((sum + (digit1 - digit2)))\n        i=$((i + 1))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local i=0\n  local len1=${#num1}\n  local len2=${#num2}\n  local max_len=$len1\n  if [ $len2 -gt $len1 ]; then\n    max_len=$len2\n  fi\n  while [ $i -lt $max_len ]; do\n    local digit1=0\n    local digit2=0\n    if [ $i -lt $len1 ]; then\n      digit1=${num1:$i:1}\n    fi\n    if [ $i -lt $len2 ]; then\n      digit2=${num2:$i:1}\n    fi\n    sum=$((sum + digit1 - digit2))\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # Write your code here\n  # To print results to the standard output you can use echo\n  # Example: echo \"Hello world\"\n  echo $(( $(echo $1 | sed 's/./&\\n/g' | paste -sd+ | bc) - $(echo $2 | sed 's/./&\\n/g' | paste -sd+ | bc) ))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpazm2m_8w.sh: line 10: bc: command not found\\n/tmp/tmpazm2m_8w.sh: line 10: bc: command not found\\n/tmp/tmpazm2m_8w.sh: line 10: -  : syntax error: operand expected (error token is \"-  \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your solution here\n    #\n    # Hint:\n    #   - Use the `tr` command to replace characters\n    #   - Use the `expr` command to do math\n    #   - Use the `echo` command to print\n    #   - Use the `bc` command to do math\n    #   - Use the `seq` command to generate a sequence of numbers\n    #   - Use the `wc` command to count lines, words, or characters\n    #   - Use the `cut` command to get characters from a string\n    #   - Use the `head` command to get the first N lines of output\n    #   - Use the `tail` command to get the last N lines of output\n    #   - Use the `sort` command to sort lines of output\n    #   - Use the `uniq` command to remove duplicate lines from output\n    #   - Use the `grep` command to find lines that match a pattern\n    #   - Use the `sed` command to transform text\n    #   - Use the `xargs` command to build and execute command lines from standard input\n    #   - Use the `tee` command to redirect output to multiple places\n    #   - Use the `find` command to find files\n    #   - Use the `xargs` command to pass items from `find` as arguments to another command\n    #   - Use the `-execdir` option with `find` to execute a command in the directory where\n    #     the matching file was found\n    #   - Use the `-delete` option with `find` to delete files\n    #   - Use the `-print0` option with `find` to separate filenames with a null character\n    #     instead of newlines, which allows filenames that contain newlines to be correctly\n    #     interpreted by `xargs -0`\n    #   - Use the `-type` option with `find` to limit the results to only files or only\n    #     directories\n    #   - Use the `-name` option with `find` to limit the results to files with a certain\n    #     name\n    #   - Use the `-perm` option with `find` to limit the results to files with certain\n    #     permissions\n    #  \n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpmejkes8m.sh: line 40: syntax error near unexpected token `}'\\n/tmp/tmpmejkes8m.sh: line 40: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    local -i digit1\n    local -i digit2\n    local -i diff\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i diff\n\n    while [ $num1 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n        diff=$(( digit1 - digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1\n    local digit2\n    local distance\n    local i\n    for ((i=0; i<${#num1}; i++)); do\n        digit1=${num1:$i:1}\n        digit2=${num2:$i:1}\n        distance=$((digit1-digit2))\n        if ((distance < 0)); then\n            distance=$((-distance))\n        fi\n        sum=$((sum+distance))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local diff=0\n\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    diff=$(( ($num1 % 10) - ($num2 % 10) ))\n    if [ $diff -lt 0 ]; then\n      diff=$(( -$diff ))\n    fi\n    sum=$(( $sum + $diff ))\n    num1=$(( $num1 / 10 ))\n    num2=$(( $num2 / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local digit1\n  local digit2\n  local diff\n\n  while [ $num1 -gt 0 ]; do\n    digit1=$(( num1 % 10 ))\n    digit2=$(( num2 % 10 ))\n    diff=$(( digit1 - digit2 ))\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1\n    local digit2\n    local distance\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        distance=$(( digit1 - digit2 ))\n        if [ $distance -lt 0 ]; then\n            distance=$(( -distance ))\n        fi\n        sum=$(( sum + distance ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1 num2=$2\n    local -i sum=0\n    local -i digit1 digit2\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$((num1 % 10))\n        digit2=$((num2 % 10))\n        sum=$((sum + (digit1 - digit2) > 0 ? (digit1 - digit2) : (digit2 - digit1)))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    if [[ ! $1 =~ ^-?[0-9]+$ ]] || [[ ! $2 =~ ^-?[0-9]+$ ]]; then\n        echo \"Usage: digit_distance_nums <integer> <integer>\"\n        return 1\n    fi\n    local n1=$1\n    local n2=$2\n    local sum=0\n    while [[ $n1 -gt 0 || $n2 -gt 0 ]]; do\n        local d1=$(( n1 % 10 ))\n        local d2=$(( n2 % 10 ))\n        local diff=$(( d1 > d2 ? d1 - d2 : d2 - d1 ))\n        sum=$(( sum + diff ))\n        n1=$(( n1 / 10 ))\n        n2=$(( n2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i sum=0\n  local -i i=0\n  local -i j=0\n  local -i num1=$1\n  local -i num2=$2\n  local -i len1=${#num1}\n  local -i len2=${#num2}\n  local -i diff=0\n  local -i maxlen=0\n  local -i minlen=0\n  local -i maxnum=0\n  local -i minnum=0\n  local -i maxnumlen=0\n  local -i minnumlen=0\n  local -i maxnumdigit=0\n  local -i minnumdigit=0\n  local -i maxnumdigitlen=0\n  local -i minnumdigitlen=0\n  local -i maxnumdigitdiff=0\n  local -i minnumdigitdiff=0\n  local -i maxnumdigitdifflen=0\n  local -i minnumdigitdifflen=0\n  local -i maxnumdigitdiffsum=0\n  local -i minnumdigitdiffsum=0\n  local -i maxnumdigitdiffsumlen=0\n  local -i minnumdigitdiffsumlen=0\n  local -i maxnumdigitdiffsumdigit=0\n  local -i minnumdigitdiffsumdigit=0\n  local -i maxnumdigitdiffsumdigitlen=0\n  local -i minnumdigitdiffsumdigitlen=0\n  local -i maxnumdigitdiffsumdigitdiff=0\n  local -i minnumdigitdiffsumdigitdiff=0\n  local -i maxnumdigitdiffsumdigitdifflen=0\n  local -i minnumdigitdiffsumdigitdifflen=0\n  local -i maxnumdigitdiffsumdigitdiffsum=0\n  local -i minnumdigitdiffsumdigitdiffsum=0\n  local -i maxnumdigitdiffsumdigitdiffsumlen=0\n  local -i minnumdigitdiffsumdigitdiffsumlen=0\n  local -i maxnumdigitdiffsumdigitdiffsumdigit=0\n  local -i minnumdigitdiffsumdigitdiffsumdigit=0\n  local -i maxnumdigitdiffsumdigitdiffsumdigitlen=0\n  local -i minnumdigitdiffsumdigitdiffsumdigitlen=0\n \n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local diff=0\n    local i=0\n    local len1=${#num1}\n    local len2=${#num2}\n    local maxlen=$len1\n    if [ $len2 -gt $len1 ]; then\n        maxlen=$len2\n    fi\n    for ((i=0; i<$maxlen; i++)); do\n        local digit1=0\n        local digit2=0\n        if [ $i -lt $len1 ]; then\n            digit1=${num1:$i:1}\n        fi\n        if [ $i -lt $len2 ]; then\n            digit2=${num2:$i:1}\n        fi\n        diff=$((digit1 - digit2))\n        if [ $diff -lt 0 ]; then\n            diff=$((-diff))\n        fi\n        sum=$((sum + diff))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    if [[ $1 =~ ^[0-9]+$ ]] && [[ $2 =~ ^[0-9]+$ ]]; then\n        local -i sum=0\n        local -i i=0\n        local -i len1=${#1}\n        local -i len2=${#2}\n        local -i maxlen=$((len1 > len2 ? len1 : len2))\n        local -i minlen=$((len1 < len2 ? len1 : len2))\n        local -i diff=0\n        local -i num1=0\n        local -i num2=0\n        for ((i=0; i<maxlen; i++)); do\n            if ((i < minlen)); then\n                num1=${1:i:1}\n                num2=${2:i:1}\n                diff=$((num1 - num2))\n            elif ((len1 > len2)); then\n                num1=${1:i:1}\n                num2=0\n                diff=$((num1 - num2))\n            else\n                num1=0\n                num2=${2:i:1}\n                diff=$((num1 - num2))\n            fi\n            sum=$((sum + diff))\n        done\n        echo $sum\n    else\n        echo \"digit_distance_nums: invalid arguments\"\n        return 1\n    fi\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        local digit1=$(( num1 % 10 ))\n        local digit2=$(( num2 % 10 ))\n        local diff=$(( digit1 - digit2 ))\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while (( num1 > 0 )); do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        sum=$(( sum + (digit1 - digit2) ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo $(( $1 - $2 ))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    if [ $# -ne 2 ]; then\n        echo \"Usage: digit_distance_nums <int1> <int2>\"\n        return 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$ ]]; then\n        echo \"Argument 1 must be an integer.\"\n        return 1\n    fi\n    if ! [[ $2 =~ ^[0-9]+$ ]]; then\n        echo \"Argument 2 must be an integer.\"\n        return 1\n    fi\n    local num1=$1\n    local num2=$2\n    local sum=0\n    while [ $num1 -gt 0 ] && [ $num2 -gt 0 ]; do\n        local digit1=$((num1 % 10))\n        local digit2=$((num2 % 10))\n        local diff=$((digit1 - digit2))\n        if [ $diff -lt 0 ]; then\n            diff=$((-diff))\n        fi\n        sum=$((sum + diff))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    while [ $num1 -gt 0 ]; do\n        local digit1=$((num1 % 10))\n        sum=$((sum + digit1))\n        num1=$((num1 / 10))\n    done\n    while [ $num2 -gt 0 ]; do\n        local digit2=$((num2 % 10))\n        sum=$((sum + digit2))\n        num2=$((num2 / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1\n    local digit2\n    local diff\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i distance\n    while (( num1 > 0 || num2 > 0 )); do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n        distance=$(( digit1 - digit2 ))\n        if (( distance < 0 )); then\n            distance=$(( -distance ))\n        fi\n        sum=$(( sum + distance ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local num1_len=${#num1}\n    local num2_len=${#num2}\n    local num1_digits\n    local num2_digits\n    local num1_digit\n    local num2_digit\n    local num1_digit_index\n    local num2_digit_index\n    local sum=0\n\n    if [ $num1_len -gt $num2_len ]; then\n        num1_digits=$num1\n        num2_digits=$(printf \"%0${num1_len}d\" $num2)\n    else\n        num1_digits=$(printf \"%0${num2_len}d\" $num1)\n        num2_digits=$num2\n    fi\n\n    for ((i=0; i<${#num1_digits}; i++)); do\n        num1_digit=${num1_digits:$i:1}\n        num2_digit=${num2_digits:$i:1}\n        sum=$((sum + (num1_digit - num2_digit)))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # Write your code here\n  if [[ $# -ne 2 ]]; then\n    echo \"Usage: digit_distance_nums <int1> <int2>\"\n    return 1\n  fi\n  local int1=$1\n  local int2=$2\n  local sum=0\n  local int1_len=${#int1}\n  local int2_len=${#int2}\n  local int1_digit\n  local int2_digit\n  local i\n  local j\n  for (( i=0; i<int1_len; i++ )); do\n    int1_digit=${int1:i:1}\n    if (( int2_len > i )); then\n      int2_digit=${int2:i:1}\n    else\n      int2_digit=0\n    fi\n    sum=$(( sum + (int1_digit - int2_digit) ))\n  done\n  for (( j=int1_len; j<int2_len; j++ )); do\n    int2_digit=${int2:j:1}\n    sum=$(( sum + int2_digit ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=${1}\n    local -i num2=${2}\n    local -i sum=0\n    local -i digit1=0\n    local -i digit2=0\n    local -i diff=0\n    while [ ${num1} -gt 0 ] || [ ${num2} -gt 0 ]; do\n        digit1=${num1}%10\n        digit2=${num2}%10\n        diff=$(( digit1 - digit2 ))\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo ${sum}\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i num1=\"$1\"\n  local -i num2=\"$2\"\n  local -i sum=0\n  local -i num1_digit\n  local -i num2_digit\n  local -i diff\n\n  while [ \"$num1\" -gt 0 ] || [ \"$num2\" -gt 0 ]; do\n    num1_digit=$(( num1 % 10 ))\n    num2_digit=$(( num2 % 10 ))\n    diff=$(( num1_digit - num2_digit ))\n    if [ \"$diff\" -lt 0 ]; then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n\n  echo \"$sum\"\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1\n    local digit2\n    local diff\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local num1_digit\n  local num2_digit\n  local i=0\n  local diff\n\n  while [ $i -lt $num1_len ] || [ $i -lt $num2_len ]; do\n    num1_digit=${num1:$i:1}\n    num2_digit=${num2:$i:1}\n    diff=$((num1_digit - num2_digit))\n    if [ $diff -lt 0 ]; then\n      diff=$((-diff))\n    fi\n    sum=$((sum + diff))\n    i=$((i + 1))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i num1=$1\n  local -i num2=$2\n  local -i sum=0\n  local -i digit1\n  local -i digit2\n  local -i diff\n\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    digit1=$(( num1 % 10 ))\n    digit2=$(( num2 % 10 ))\n    diff=$(( digit1 - digit2 ))\n    if [ $diff -lt 0 ]; then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local i=0\n  local len1=${#num1}\n  local len2=${#num2}\n  local maxlen=$((len1 > len2 ? len1 : len2))\n  local num1_arr=()\n  local num2_arr=()\n\n  for ((i=0; i<maxlen; i++)); do\n    num1_arr[i]=${num1:i:1}\n    num2_arr[i]=${num2:i:1}\n  done\n\n  for ((i=0; i<maxlen; i++)); do\n    sum=$((sum + abs(${num1_arr[i]} - ${num2_arr[i]})))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpqo8i3otc.sh: line 23: sum + abs(1 - 2): syntax error in expression (error token is \"(1 - 2)\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i diff\n\n    while (( num1 > 0 || num2 > 0 )); do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        if (( diff < 0 )); then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i num1=$1\n  local -i num2=$2\n  local -i sum=0\n  local -i num1_digit\n  local -i num2_digit\n  local -i distance\n\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    num1_digit=$(( num1 % 10 ))\n    num2_digit=$(( num2 % 10 ))\n    distance=$(( num1_digit - num2_digit ))\n    sum=$(( sum + distance ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i sum=0\n  local -i num1=$1\n  local -i num2=$2\n  while (( num1 > 0 )); do\n    local -i digit1=$(( num1 % 10 ))\n    local -i digit2=$(( num2 % 10 ))\n    sum=$(( sum + (digit1 - digit2) ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo $(($1-$2))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        local -i digit1=$((num1 % 10))\n        local -i digit2=$((num2 % 10))\n        local -i diff=$((digit1 - digit2))\n        if [ $diff -lt 0 ]; then\n            diff=$((-diff))\n        fi\n        sum=$((sum + diff))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    local -i digit1\n    local -i digit2\n    local -i diff\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$((num1 % 10))\n        digit2=$((num2 % 10))\n        diff=$((digit1 - digit2))\n        if [ $diff -lt 0 ]; then\n            diff=$((-diff))\n        fi\n        sum=$((sum + diff))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1=0\n    local -i digit2=0\n    local -i diff=0\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  if [[ $1 -lt 0 || $2 -lt 0 ]]; then\n    echo \"Error: Numbers must be positive\"\n    return 1\n  fi\n\n  if [[ $1 -gt $2 ]]; then\n    echo \"Error: First number must be less than second number\"\n    return 1\n  fi\n\n  local sum=0\n  local num1=$1\n  local num2=$2\n\n  while [[ $num1 -gt 0 ]]; do\n    local digit1=$(( num1 % 10 ))\n    local digit2=$(( num2 % 10 ))\n    local diff=$(( digit2 - digit1 ))\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # Write your code here\n  # To print results to the standard output you can use echo\n  # Example: echo \"Hello world!\"\n  echo $1 $2\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local num1_len=${#num1}\n    local num2_len=${#num2}\n    local num1_digit\n    local num2_digit\n    local i\n    for (( i=0; i<${num1_len}; i++ )); do\n        num1_digit=${num1:i:1}\n        num2_digit=${num2:i:1}\n        sum=$(( sum + (num1_digit - num2_digit) ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local num1_digit\n  local num2_digit\n\n  if [ $num1_len -gt $num2_len ]; then\n    num2=$(printf \"%0${num1_len}d\" $num2)\n  else\n    num1=$(printf \"%0${num2_len}d\" $num1)\n  fi\n\n  for (( i=0; i<${#num1}; i++ )); do\n    num1_digit=${num1:$i:1}\n    num2_digit=${num2:$i:1}\n    sum=$(( $sum + $(( $num1_digit - $num2_digit )) ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local digit1\n  local digit2\n  local diff\n\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    digit1=$(( num1 % 10 ))\n    digit2=$(( num2 % 10 ))\n    diff=$(( digit1 - digit2 ))\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo $(( $(echo $1 | sed 's/./& /g') - $(echo $2 | sed 's/./& /g') ))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while (( num1 > 0 || num2 > 0 )); do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        sum=$(( sum + abs(digit1 - digit2) ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmphxwoyht6.sh: line 13: sum + abs(digit1 - digit2) : syntax error in expression (error token is \"(digit1 - digit2) \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"42\"\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local distance=0\n\n    for (( i=0; i<${#num1}; i++ )); do\n        distance=$(( ${num1:$i:1} - ${num2:$i:1} ))\n        (( distance < 0 )) && distance=$(( -distance ))\n        (( sum += distance ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    local -i digit1\n    local -i digit2\n    local -i diff\n    while [ $num1 -gt 0 ]; do\n        digit1=$((num1 % 10))\n        digit2=$((num2 % 10))\n        diff=$((digit1 - digit2))\n        sum=$((sum + diff))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=${1}\n    local -i num2=${2}\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i diff\n\n    while [ ${num1} -gt 0 ] || [ ${num2} -gt 0 ]; do\n        digit1=${num1}%10\n        digit2=${num2}%10\n        diff=${digit1}-${digit2}\n        if [ ${diff} -lt 0 ]; then\n            diff=${diff}*-1\n        fi\n        sum=${sum}+${diff}\n        num1=${num1}/10\n        num2=${num2}/10\n    done\n\n    echo ${sum}\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1\n    local digit2\n    local diff\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        num1=$(( num1 / 10 ))\n        digit2=$(( num2 % 10 ))\n        num2=$(( num2 / 10 ))\n        diff=$(( digit1 - digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local diff=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local num1_digit=0\n  local num2_digit=0\n  local i=0\n\n  if [ $num1_len -gt $num2_len ]; then\n    num1_len=$num2_len\n  fi\n\n  for ((i=0; i<$num1_len; i++)); do\n    num1_digit=${num1:$i:1}\n    num2_digit=${num2:$i:1}\n    diff=$((num1_digit - num2_digit))\n    if [ $diff -lt 0 ]; then\n      diff=$((-diff))\n    fi\n    sum=$((sum + diff))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i sum=0\n  local -i num1=$1\n  local -i num2=$2\n  while [[ $num1 -gt 0 || $num2 -gt 0 ]]; do\n    local -i digit1=$(( num1 % 10 ))\n    local -i digit2=$(( num2 % 10 ))\n    sum=$(( sum + abs(digit1 - digit2) ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp64l9wtiu.sh: line 13: sum + abs(digit1 - digit2) : syntax error in expression (error token is \"(digit1 - digit2) \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local i=0\n    local len1=${#num1}\n    local len2=${#num2}\n    local max_len=$len1\n    if [ $len2 -gt $len1 ]; then\n        max_len=$len2\n    fi\n    while [ $i -lt $max_len ]; do\n        local digit1=0\n        local digit2=0\n        if [ $i -lt $len1 ]; then\n            digit1=${num1:$i:1}\n        fi\n        if [ $i -lt $len2 ]; then\n            digit2=${num2:$i:1}\n        fi\n        local diff=$((digit1 - digit2))\n        if [ $diff -lt 0 ]; then\n            diff=$((diff * -1))\n        fi\n        sum=$((sum + diff))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local diff=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local num1_digit=0\n  local num2_digit=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1=0\n    local -i digit2=0\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        sum=$(( sum + abs(digit1 - digit2) ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpypp2hf6_.sh: line 15: sum + abs(digit1 - digit2) : syntax error in expression (error token is \"(digit1 - digit2) \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local diff=0\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        diff=$(( ($num1 % 10) - ($num2 % 10) ))\n        sum=$(( $sum + $diff ))\n        num1=$(( $num1 / 10 ))\n        num2=$(( $num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i diff\n    while (( num1 > 0 || num2 > 0 )); do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        if (( diff < 0 )); then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local digit1\n  local digit2\n  local distance\n  while [[ $num1 -gt 0 || $num2 -gt 0 ]]; do\n    digit1=$((num1 % 10))\n    digit2=$((num2 % 10))\n    num1=$((num1 / 10))\n    num2=$((num2 / 10))\n    distance=$((digit1 - digit2))\n    if [[ $distance -lt 0 ]]; then\n      distance=$((-distance))\n    fi\n    sum=$((sum + distance))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        local -i digit1=$((num1 % 10))\n        local -i digit2=$((num2 % 10))\n        local -i diff=$((digit1 - digit2))\n        sum=$((sum + diff))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while [ $num1 -gt 0 -o $num2 -gt 0 ]; do\n        local -i digit1=$((num1 % 10))\n        local -i digit2=$((num2 % 10))\n        sum=$((sum + abs(digit1 - digit2)))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpnp0o54gj.sh: line 13: sum + abs(digit1 - digit2): syntax error in expression (error token is \"(digit1 - digit2)\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    local -i digit1\n    local -i digit2\n    local -i diff\n    while [ $num1 -gt 0 -o $num2 -gt 0 ]; do\n        digit1=$((num1 % 10))\n        digit2=$((num2 % 10))\n        diff=$((digit1 - digit2))\n        if [ $diff -lt 0 ]; then\n            diff=$((-diff))\n        fi\n        sum=$((sum + diff))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i num1=$1 num2=$2\n  local -i sum=0\n  local -i num1_len=${#num1} num2_len=${#num2}\n  local -i i=0\n  local -i num1_digit num2_digit\n  local -i num1_digit_distance num2_digit_distance\n  local -i num1_digit_distance_sum=0 num2_digit_distance_sum=0\n\n  if [ $num1_len -gt $num2_len ]; then\n    for ((i=0; i<num1_len; i++)); do\n      num1_digit=${num1:$i:1}\n      num1_digit_distance=$((num1_digit - i))\n      num1_digit_distance_sum=$((num1_digit_distance_sum + num1_digit_distance))\n    done\n    for ((i=0; i<num2_len; i++)); do\n      num2_digit=${num2:$i:1}\n      num2_digit_distance=$((num2_digit - i))\n      num2_digit_distance_sum=$((num2_digit_distance_sum + num2_digit_distance))\n    done\n  else\n    for ((i=0; i<num2_len; i++)); do\n      num2_digit=${num2:$i:1}\n      num2_digit_distance=$((num2_digit - i))\n      num2_digit_distance_sum=$((num2_digit_distance_sum + num2_digit_distance))\n    done\n    for ((i=0; i<num1_len; i++)); do\n      num1_digit=${num1:$i:1}\n      num1_digit_distance=$((num1_digit - i))\n      num1_digit_distance_sum=$((num1_digit_distance_sum + num1_digit_distance))\n    done\n  fi\n\n  sum=$((num1_digit_distance_sum - num2_digit_distance_sum))\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i diff\n    while [ $num1 -gt 0 -o $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local num1_digit\n  local num2_digit\n  local i\n  local j\n  local diff\n\n  for ((i=0; i<num1_len; i++)); do\n    num1_digit=${num1:i:1}\n    num2_digit=${num2:i:1}\n    if [[ -z $num2_digit ]]; then\n      num2_digit=0\n    fi\n    diff=$((num1_digit - num2_digit))\n    sum=$((sum + diff))\n  done\n  for ((j=num1_len; j<num2_len; j++)); do\n    num2_digit=${num2:j:1}\n    diff=$((num2_digit - 0))\n    sum=$((sum + diff))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local i=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local max_len=$((num1_len > num2_len ? num1_len : num2_len))\n  for ((i=0; i<max_len; i++)); do\n    local digit1=${num1:$((num1_len-i-1)):1}\n    local digit2=${num2:$((num2_len-i-1)):1}\n    if [[ -z $digit1 ]]; then\n      digit1=0\n    fi\n    if [[ -z $digit2 ]]; then\n      digit2=0\n    fi\n    sum=$((sum + digit1 - digit2))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # Write your code here\n  # To print results to the standard output you can use echo\n  # Example: echo \"Hello world\"\n  echo $(($1-$2))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local i=0\n    local num1_len=${#num1}\n    local num2_len=${#num2}\n\n    if [[ $num1_len -gt $num2_len ]]; then\n        local diff=$((num1_len - num2_len))\n        num2=$(printf \"%0${diff}d%s\" 0 \"$num2\")\n    elif [[ $num2_len -gt $num1_len ]]; then\n        local diff=$((num2_len - num1_len))\n        num1=$(printf \"%0${diff}d%s\" 0 \"$num1\")\n    fi\n\n    while [[ $i -lt ${#num1} ]]; do\n        local digit1=${num1:$i:1}\n        local digit2=${num2:$i:1}\n        local diff=$((digit1 - digit2))\n        if [[ $diff -lt 0 ]]; then\n            diff=$((-diff))\n        fi\n        sum=$((sum + diff))\n        i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # Write your code here\n  #\n  # You can print to standard output for debugging purposes, e.g.\n  # printf \"Debug messages...\\n\"\n  #\n  # To provide your answer, store the sum in the variable ANSWER and uncomment the\n  # following line:\n  #\n  # ANSWER=\"${SUM}\"\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpwd_38sdu.sh: line 160: syntax error near unexpected token `}'\\n/tmp/tmpwd_38sdu.sh: line 160: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i sum=0\n  local -i i=0\n  local -i j=0\n  local -i len1=0\n  local -i len2=0\n  local -i diff=0\n  local -i num1=$1\n  local -i num2=$2\n  local -a arr1\n  local -a arr2\n  local -a arr3\n  local -a arr4\n  local -a arr5\n  local -a arr6\n  local -a arr7\n  local -a arr8\n  local -a arr9\n  local -a arr0\n  local -a arr_all\n  local -a arr_all_sorted\n  local -a arr_all_sorted_uniq\n  local -a arr_all_sorted_uniq_sorted\n  local -a arr_all_sorted_uniq_sorted_uniq\n  local -a arr_all_sorted_uniq_sorted_uniq_sorted\n  local -a arr_all_sorted_uniq_sorted_uniq_sorted_uniq\n  local -a arr_all_sorted_uniq_sorted_uniq_sorted_uniq_sorted\n  local -a arr_all_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq\n  local -a arr_all_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted\n  local -a arr_all_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq\n  local -a arr_all_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted\n  local -a arr_all_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq\n  local -a arr_all_sorted_uniq_sorted_uniq_sorted_uniq_sorted_uniq_sorted_\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local num1_len=${#num1}\n    local num2_len=${#num2}\n    local num1_digit\n    local num2_digit\n    local i\n\n    if [ $num1_len -gt $num2_len ]; then\n        num2=$(printf \"%0${num1_len}d\" $num2)\n    elif [ $num1_len -lt $num2_len ]; then\n        num1=$(printf \"%0${num2_len}d\" $num1)\n    fi\n\n    for ((i=0; i<${#num1}; i++)); do\n        num1_digit=${num1:$i:1}\n        num2_digit=${num2:$i:1}\n        sum=$((sum + (num1_digit - num2_digit)))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo $(($1-$2))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # Write your code here\n  #\n  # The following lines read the two input integers\n  #\n  num1=$1\n  num2=$2\n  #\n  # Write your code here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local num1_len=${#num1}\n    local num2_len=${#num2}\n    local num1_digit\n    local num2_digit\n    local i\n\n    if [[ $num1_len -gt $num2_len ]]; then\n        num2=$(printf \"%0${num1_len}d\" $num2)\n    elif [[ $num1_len -lt $num2_len ]]; then\n        num1=$(printf \"%0${num2_len}d\" $num1)\n    fi\n\n    for (( i=0; i<${#num1}; i++ )); do\n        num1_digit=${num1:$i:1}\n        num2_digit=${num2:$i:1}\n        sum=$(( sum + (num1_digit - num2_digit) ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    if [ $# -ne 2 ]; then\n        echo \"Usage: $0 <num1> <num2>\"\n        exit 1\n    fi\n    num1=$1\n    num2=$2\n    sum=0\n    while [ $num1 -gt 0 ] && [ $num2 -gt 0 ]; do\n        sum=$((sum + (num1 % 10) - (num2 % 10)))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1=0\n    local -i digit2=0\n    local -i diff=0\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo $(( $(echo $1 | sed 's/./&\\n/g' | paste -sd+ | bc) - $(echo $2 | sed 's/./&\\n/g' | paste -sd+ | bc) ))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmposev5xca.sh: line 10: bc: command not found\\n/tmp/tmposev5xca.sh: line 10: bc: command not found\\n/tmp/tmposev5xca.sh: line 10: -  : syntax error: operand expected (error token is \"-  \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1\n    local digit2\n    local distance\n\n    while [ $num1 -gt 0 ] && [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        distance=$(( digit1 - digit2 ))\n        sum=$(( sum + distance ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # Write your code here\n  # To print results to the standard output you can use echo\n  # Example: echo \"Hello world\"\n  if [[ $1 -lt 0 ]]; then\n    let \"a = -1 * $1\"\n  else\n    let \"a = $1\"\n  fi\n  if [[ $2 -lt 0 ]]; then\n    let \"b = -1 * $2\"\n  else\n    let \"b = $2\"\n  fi\n  let \"c = $a + $b\"\n  echo $c\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # Write your code here\n  #\n  # Hint:\n  #   1. Use the following command to get the absolute value of a number:\n  #      abs=${1#-}\n  #   2. Use the following command to get the last digit of a number:\n  #      last_digit=${1: -1}\n  #   3. Use the following command to remove the last digit of a number:\n  #      number=${1%?}\n  #   4. Use the following command to get the number of digits of a number:\n  #      num_digits=${#1}\n  #   5. Use the following command to convert a number to a string:\n  #      str=$(printf \"%d\" $1)\n  #   6. Use the following command to convert a string to a number:\n  #      num=$(printf \"%d\" $str)\n  #   7. Use the following command to get the length of a string:\n  #      len=${#str}\n  #   8. Use the following command to get the first character of a string:\n  #      first_char=${str:0:1}\n  #   9. Use the following command to remove the first character of a string:\n  #      str=${str:1}\n  #  10. Use the following command to convert a character to an ASCII code:\n  #      ascii_code=$(printf \"%d\" \"'$char\")\n  #  11. Use the following command to convert an ASCII code to a character:\n  #      char=$(printf \\\\$(printf '%03o' $ascii_code))\n  #  12. Use the following command to convert a character to lowercase:\n  #      lowercase_char=$(printf \"%s\" \"$char\" | tr '[:upper:]' '[:lower:]')\n  #  13. Use the following command to convert a character to uppercase:\n  #      uppercase_char=$(printf \"%s\" \"$char\" | tr '[:lower:]' '[:upper:]')\n  #\n  # Note:\n  #   1. You can use the following command to debug your code:\n  #      echo \"DEBUG: $1 $2\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpab3vss__.sh: line 40: syntax error near unexpected token `}'\\n/tmp/tmpab3vss__.sh: line 40: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        local digit1=$(( num1 % 10 ))\n        local digit2=$(( num2 % 10 ))\n        local diff=$(( digit1 - digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i sum=0\n  local -i num1=$1\n  local -i num2=$2\n  local -i num1_digit\n  local -i num2_digit\n  local -i diff\n\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    num1_digit=$(( num1 % 10 ))\n    num2_digit=$(( num2 % 10 ))\n    diff=$(( num1_digit - num2_digit ))\n    if [ $diff -lt 0 ]; then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1\n    local digit2\n    local distance\n    while [ $num1 -gt 0 ] && [ $num2 -gt 0 ]; do\n        digit1=$((num1 % 10))\n        digit2=$((num2 % 10))\n        distance=$((digit1 - digit2))\n        if [ $distance -lt 0 ]; then\n            distance=$((-distance))\n        fi\n        sum=$((sum + distance))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local num1_digit\n  local num2_digit\n  local i=0\n\n  while [ $i -lt $num1_len ] || [ $i -lt $num2_len ]; do\n    num1_digit=${num1:$i:1}\n    num2_digit=${num2:$i:1}\n\n    if [ -z \"$num1_digit\" ]; then\n      num1_digit=0\n    fi\n\n    if [ -z \"$num2_digit\" ]; then\n      num2_digit=0\n    fi\n\n    sum=$((sum + abs($num1_digit - $num2_digit)))\n\n    i=$((i + 1))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpvdxxi3jd.sh: line 28: sum + abs(1 - 2): syntax error in expression (error token is \"(1 - 2)\")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local diff=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local num1_digit=0\n  local num2_digit=0\n  local i=0\n  local max_len=0\n\n  if [ $num1_len -gt $num2_len ]; then\n    max_len=$num1_len\n  else\n    max_len=$num2_len\n  fi\n\n  for (( i=0; i<$max_len; i++ )); do\n    num1_digit=${num1:$i:1}\n    num2_digit=${num2:$i:1}\n    if [ -z \"$num1_digit\" ]; then\n      num1_digit=0\n    fi\n    if [ -z \"$num2_digit\" ]; then\n      num2_digit=0\n    fi\n    diff=$(( num1_digit - num2_digit ))\n    if [ $diff -lt 0 ]; then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n\n    for (( i=0; i<${#num1}; i++ )); do\n        local digit1=${num1:$i:1}\n        local digit2=${num2:$i:1}\n        sum=$(( sum + (digit1 > digit2 ? digit1 - digit2 : digit2 - digit1) ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local max_len=$((num1_len > num2_len ? num1_len : num2_len))\n  local i=0\n  while [ $i -lt $max_len ]; do\n    local digit1=${num1:$i:1}\n    local digit2=${num2:$i:1}\n    if [ -z \"$digit1\" ]; then\n      digit1=0\n    fi\n    if [ -z \"$digit2\" ]; then\n      digit2=0\n    fi\n    sum=$((sum + (digit1 - digit2) * (digit1 - digit2)))\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i sum=0\n  local -i num1=$1\n  local -i num2=$2\n  while (( num1 > 0 || num2 > 0 )); do\n    (( sum += (num1 % 10) - (num2 % 10) ))\n    (( num1 /= 10 ))\n    (( num2 /= 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo $(( $(echo $1 | sed 's/./&\\n/g' | paste -sd+ | bc) - $(echo $2 | sed 's/./&\\n/g' | paste -sd+ | bc) ))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmposev5xca.sh: line 10: bc: command not found\\n/tmp/tmposev5xca.sh: line 10: bc: command not found\\n/tmp/tmposev5xca.sh: line 10: -  : syntax error: operand expected (error token is \"-  \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local num1_digit\n  local num2_digit\n  local i\n  local j\n\n  if [ $num1_len -gt $num2_len ]; then\n    for ((i=0; i < $num1_len - $num2_len; i++)); do\n      num2=\"0$num2\"\n    done\n  elif [ $num2_len -gt $num1_len ]; then\n    for ((i=0; i < $num2_len - $num1_len; i++)); do\n      num1=\"0$num1\"\n    done\n  fi\n\n  for ((i=0; i < ${#num1}; i++)); do\n    num1_digit=${num1:$i:1}\n    num2_digit=${num2:$i:1}\n    sum=$((sum + ${num1_digit} - ${num2_digit}))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1=0\n    local -i digit2=0\n    while [[ $num1 -gt 0 ]] || [[ $num2 -gt 0 ]]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        sum=$(( sum + abs(digit1 - digit2) ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b'/tmp/tmpmxp9vk_a.sh: line 15: sum + abs(digit1 - digit2) : syntax error in expression (error token is \"(digit1 - digit2) \")\\n'",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        local -i digit1=$((num1 % 10))\n        local -i digit2=$((num2 % 10))\n        local -i diff=$((digit1 - digit2))\n        if [ $diff -lt 0 ]; then\n            diff=$((-diff))\n        fi\n        sum=$((sum + diff))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # your code here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmptquuqhy_.sh: line 177: syntax error near unexpected token `}'\\n/tmp/tmptquuqhy_.sh: line 177: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local diff=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local num1_digit=0\n  local num2_digit=0\n\n  if [ $num1_len -gt $num2_len ]; then\n    num2=$(printf \"%0${num1_len}d\" $num2)\n  elif [ $num1_len -lt $num2_len ]; then\n    num1=$(printf \"%0${num2_len}d\" $num1)\n  fi\n\n  for (( i = 0; i < ${#num1}; i++ )); do\n    num1_digit=${num1:$i:1}\n    num2_digit=${num2:$i:1}\n    diff=$(( num1_digit - num2_digit ))\n    if [ $diff -lt 0 ]; then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1\n    local digit2\n    local distance\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n        distance=$(( digit1 - digit2 ))\n        if [ $distance -lt 0 ]; then\n            distance=$(( -distance ))\n        fi\n        sum=$(( sum + distance ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1\n    local digit2\n    local diff\n\n    while [[ $num1 -gt 0 && $num2 -gt 0 ]]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # Write your code here\n  echo $(( ($1 - $2) % 9 ))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    local -i digit1\n    local -i digit2\n    local -i distance\n\n    while (( num1 > 0 || num2 > 0 )); do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n        distance=$(( digit1 - digit2 ))\n        if (( distance < 0 )); then\n            distance=$(( -distance ))\n        fi\n        sum=$(( sum + distance ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # Write your code here\n  # To print results to the standard output you can use echo\n  # Example: echo \"Hello world!\"\n  echo $1 $2\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        sum=$(( sum + digit1 - digit2 ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i sum=0\n  local -i num1=$1\n  local -i num2=$2\n  local -i digit1\n  local -i digit2\n  local -i diff\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    digit1=$(( num1 % 10 ))\n    digit2=$(( num2 % 10 ))\n    diff=$(( digit1 - digit2 ))\n    if [ $diff -lt 0 ]; then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i diff\n    while [ $num1 -gt 0 -o $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=$1\n    local -i num2=$2\n    local -i sum=0\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        local -i digit1=$(( num1 % 10 ))\n        local -i digit2=$(( num2 % 10 ))\n        local -i diff=$(( digit1 - digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo $(($1-$2))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local diff=0\n    local len1=${#num1}\n    local len2=${#num2}\n    local len=0\n    if [ $len1 -gt $len2 ]; then\n        len=$len1\n    else\n        len=$len2\n    fi\n    for (( i=0; i<$len; i++ )); do\n        local digit1=${num1:$i:1}\n        local digit2=${num2:$i:1}\n        if [ -z $digit1 ]; then\n            digit1=0\n        fi\n        if [ -z $digit2 ]; then\n            digit2=0\n        fi\n        diff=$(( $digit1 - $digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -$diff ))\n        fi\n        sum=$(( $sum + $diff ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local diff=0\n    local digit1=0\n    local digit2=0\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( $num1 % 10 ))\n        digit2=$(( $num2 % 10 ))\n        diff=$(( $digit1 - $digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -$diff ))\n        fi\n        sum=$(( $sum + $diff ))\n        num1=$(( $num1 / 10 ))\n        num2=$(( $num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n\n  if [[ $num1_len -gt $num2_len ]]; then\n    num2=$(printf \"%0${num1_len}d\" $num2)\n  elif [[ $num1_len -lt $num2_len ]]; then\n    num1=$(printf \"%0${num2_len}d\" $num1)\n  fi\n\n  for (( i=0; i<${#num1}; i++ )); do\n    local digit1=${num1:$i:1}\n    local digit2=${num2:$i:1}\n    local diff=$(( digit1 - digit2 ))\n    sum=$(( sum + diff ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  if [ $# -ne 2 ]\n  then\n    echo \"Usage: digit_distance_nums <num1> <num2>\"\n    return 1\n  fi\n  if [[ ! $1 =~ ^[0-9]+$ ]]\n  then\n    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if [[ ! $2 =~ ^[0-9]+$ ]]\n  then\n    echo \"Error: $2 is not an integer\"\n    return 1\n  fi\n  local num1=$1\n  local num2=$2\n  local sum=0\n  while [ $num1 -gt 0 ]\n  do\n    local digit1=$(( num1 % 10 ))\n    local digit2=$(( num2 % 10 ))\n    local diff=$(( digit1 - digit2 ))\n    if [ $diff -lt 0 ]\n    then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  # Write your code here\n  # Use echo to print to stdout\n  # Use return to return a value\n  #\n  # Example:\n  # echo \"Hello World\"\n  # return 0\n  #\n  # Example:\n  # return 1\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n  # Example:\n  # return \"Hello World\"\n  #\n\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpo9uqyjdd.sh: line 103: syntax error near unexpected token `}'\\n/tmp/tmpo9uqyjdd.sh: line 103: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local -i sum=0\n  local -i num1=$1\n  local -i num2=$2\n  local -i digit1=0\n  local -i digit2=0\n  local -i diff=0\n\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    digit1=$(( num1 % 10 ))\n    digit2=$(( num2 % 10 ))\n    diff=$(( digit1 - digit2 ))\n    if [ $diff -lt 0 ]; then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    # Write your code here\n    # To print results to the standard output you can use echo\n    # Example: echo \"Hello world!\"\n    echo $((($1+$2)*($1+$2+1)/2-$1*($1+1)/2-$2*($2+1)/2))\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local diff=0\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        diff=$(( ($num1 % 10) - ($num2 % 10) ))\n        sum=$(( $sum + $diff ))\n        num1=$(( $num1 / 10 ))\n        num2=$(( $num2 / 10 ))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    if [[ ! \"$1\" =~ ^[0-9]+$ ]] || [[ ! \"$2\" =~ ^[0-9]+$ ]]\n    then\n        echo \"Invalid input\"\n        return 1\n    fi\n\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    local -i digit1\n    local -i digit2\n    local -i diff\n\n    while [[ $num1 -gt 0 ]] || [[ $num2 -gt 0 ]]\n    do\n        digit1=$((num1 % 10))\n        digit2=$((num2 % 10))\n        diff=$((digit1 - digit2))\n        sum=$((sum + diff))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=\"$1\"\n    local num2=\"$2\"\n    local sum=0\n    local num1_len=${#num1}\n    local num2_len=${#num2}\n    local i=0\n    local num1_digit=0\n    local num2_digit=0\n    local diff=0\n    while [ $i -lt $num1_len ] || [ $i -lt $num2_len ]; do\n        num1_digit=${num1:$i:1}\n        num2_digit=${num2:$i:1}\n        if [ -z \"$num1_digit\" ]; then\n            num1_digit=0\n        fi\n        if [ -z \"$num2_digit\" ]; then\n            num2_digit=0\n        fi\n        diff=$((num1_digit - num2_digit))\n        if [ $diff -lt 0 ]; then\n            diff=$((-diff))\n        fi\n        sum=$((sum + diff))\n        i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local diff=0\n    local digit1=0\n    local digit2=0\n    local i=0\n    local len1=${#num1}\n    local len2=${#num2}\n    local len=$((len1>len2?len1:len2))\n    for ((i=0; i<len; i++)); do\n        digit1=${num1:i:1}\n        digit2=${num2:i:1}\n        if [[ -z $digit1 ]]; then\n            digit1=0\n        fi\n        if [[ -z $digit2 ]]; then\n            digit2=0\n        fi\n        diff=$((digit1-digit2))\n        sum=$((sum+diff))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=\"$1\"\n    local -i num2=\"$2\"\n    local -i digit1\n    local -i digit2\n    local -i diff\n\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        diff=$(( digit1 - digit2 ))\n        if [ $diff -lt 0 ]; then\n            diff=$(( -diff ))\n        fi\n        sum=$(( sum + diff ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo \"$sum\"\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local num1_digit\n  local num2_digit\n  local i\n  local j\n  local k\n\n  for ((i=0; i<num1_len; i++)); do\n    num1_digit=${num1:i:1}\n    for ((j=0; j<num2_len; j++)); do\n      num2_digit=${num2:j:1}\n      if [[ $num1_digit -gt $num2_digit ]]; then\n        k=$((num1_digit - num2_digit))\n      else\n        k=$((num2_digit - num1_digit))\n      fi\n      sum=$((sum + k))\n    done\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local diff=0\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    local digit1=$(( num1 % 10 ))\n    local digit2=$(( num2 % 10 ))\n    diff=$(( digit1 - digit2 ))\n    if [ $diff -lt 0 ]; then\n      diff=$(( -diff ))\n    fi\n    sum=$(( sum + diff ))\n    num1=$(( num1 / 10 ))\n    num2=$(( num2 / 10 ))\n  done\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n        local -i digit1=$((num1 % 10))\n        local -i digit2=$((num2 % 10))\n        local -i diff=$((digit1 - digit2))\n        if [ $diff -lt 0 ]; then\n            diff=$((-diff))\n        fi\n        sum=$((sum + diff))\n        num1=$((num1 / 10))\n        num2=$((num2 / 10))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local num1=$1\n    local num2=$2\n    local sum=0\n    local digit1=0\n    local digit2=0\n    local diff=0\n    local len1=${#num1}\n    local len2=${#num2}\n    local len=$((len1>len2?len1:len2))\n    for ((i=0; i<len; i++)); do\n        digit1=${num1:$((len1-i-1)):1}\n        digit2=${num2:$((len2-i-1)):1}\n        if [[ -z $digit1 ]]; then\n            digit1=0\n        fi\n        if [[ -z $digit2 ]]; then\n            digit2=0\n        fi\n        diff=$((digit1-digit2))\n        sum=$((sum+diff))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    if [[ $1 -lt 0 ]]; then\n        echo \"Error: first argument must be a positive integer\"\n        return 1\n    fi\n    if [[ $2 -lt 0 ]]; then\n        echo \"Error: second argument must be a positive integer\"\n        return 1\n    fi\n    if [[ $1 -eq 0 ]]; then\n        echo \"Error: first argument must be a positive integer\"\n        return 1\n    fi\n    if [[ $2 -eq 0 ]]; then\n        echo \"Error: second argument must be a positive integer\"\n        return 1\n    fi\n    if [[ $1 -gt $2 ]]; then\n        echo \"Error: first argument must be smaller than second argument\"\n        return 1\n    fi\n    if [[ $2 -gt $1 ]]; then\n        echo \"Error: second argument must be smaller than first argument\"\n        return 1\n    fi\n    if [[ $1 -eq $2 ]]; then\n        echo \"Error: first argument must be smaller than second argument\"\n        return 1\n    fi\n    if [[ $2 -eq $1 ]]; then\n        echo \"Error: second argument must be smaller than first argument\"\n        return 1\n    fi\n    if [[ $1 -lt 0 ]]; then\n        echo \"Error: first argument must be a positive integer\"\n        return 1\n    fi\n    if [[ $2 -lt 0 ]]; then\n        echo \"Error: second argument must be a positive integer\"\n        return 1\n    fi\n    if [[ $1 -eq 0 ]]; then\n        echo \"Error: first argument must be a positive integer\"\n        return 1\n    fi\n    if [[ $2 -eq 0 ]]; then\n        echo \"Error: second argument must be a positive integer\"\n        return 1\n    fi\n    if [[ $1 -gt $2 ]]; then\n        echo \"Error: first argument must be smaller than second argument\"\n        return 1\n    fi\n    if [[ $2 -gt $1 ]]; then\n        echo \"Error: second argument must be smaller than first argument\"\n        return 1\n    fi\n    if [[ $1 -eq $2 ]]; then\n        echo \"Error: first argument must be smaller than second argument\"\n        return 1\n    fi\n    if\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b\"/tmp/tmpdh7jbchm.sh: line 68: syntax error near unexpected token `}'\\n/tmp/tmpdh7jbchm.sh: line 68: `}'\\n\"",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i sum=0\n    local -i num1=$1\n    local -i num2=$2\n    local -i digit1\n    local -i digit2\n    local -i distance\n    while (( num1 > 0 || num2 > 0 )); do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n        distance=$(( digit1 - digit2 ))\n        if (( distance < 0 )); then\n            distance=$(( -distance ))\n        fi\n        sum=$(( sum + distance ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n    local -i num1=${1}\n    local -i num2=${2}\n    local -i sum=0\n    local -i digit1\n    local -i digit2\n    local -i distance\n\n    while [ ${num1} -gt 0 ] || [ ${num2} -gt 0 ]; do\n        digit1=$(( num1 % 10 ))\n        digit2=$(( num2 % 10 ))\n        distance=$(( digit1 - digit2 ))\n        if [ ${distance} -lt 0 ]; then\n            distance=$(( -distance ))\n        fi\n        sum=$(( sum + distance ))\n        num1=$(( num1 / 10 ))\n        num2=$(( num2 / 10 ))\n    done\n\n    echo ${sum}\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local diff=0\n  local num1_digit=0\n  local num2_digit=0\n\n  while [ $num1 -gt 0 ] || [ $num2 -gt 0 ]; do\n    num1_digit=$(($num1 % 10))\n    num2_digit=$(($num2 % 10))\n    diff=$(($num1_digit - $num2_digit))\n    sum=$(($sum + $diff))\n    num1=$(($num1 / 10))\n    num2=$(($num2 / 10))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a shthon function to find the sum of the per-digit difference between two integers.\n#\n# $1 is an integer\n# $2 is an integer\ndigit_distance_nums() {\n  local num1=$1\n  local num2=$2\n  local sum=0\n  local digit1=0\n  local digit2=0\n  local distance=0\n  local num1_len=${#num1}\n  local num2_len=${#num2}\n  local max_len=0\n  local i=0\n\n  if [ $num1_len -gt $num2_len ]; then\n    max_len=$num1_len\n  else\n    max_len=$num2_len\n  fi\n\n  for (( i = 0; i < max_len; i++ )); do\n    digit1=${num1:$i:1}\n    digit2=${num2:$i:1}\n    distance=$(( digit1 - digit2 ))\n    sum=$(( sum + distance ))\n  done\n\n  echo $sum\n}\n\ncandidate() {\n    digit_distance_nums \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\" \"2\") = \"1\" ]]\n    [[ $(candidate \"23\" \"56\") = \"6\" ]]\n    [[ $(candidate \"123\" \"256\") = \"7\" ]]\n}\n\nrun_test",
      "timestamp": 1667191000,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_18_remove_dirty_chars",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_18_remove_dirty_chars.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    local char=${string:i:1}\n    if [[ $dirty_chars != *$char* ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local char=\"\"\n  local dirty_char=\"\"\n\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$char\" == \"$dirty_char\" ]; then\n        char=\"\"\n        break\n      fi\n    done\n    clean_string+=\"$char\"\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local -r str1=\"$1\"\n  local -r str2=\"$2\"\n  local -r str1_len=${#str1}\n  local -r str2_len=${#str2}\n  local -r str1_arr=($(echo \"$str1\" | fold -w1))\n  local -r str2_arr=($(echo \"$str2\" | fold -w1))\n  local -r str1_arr_len=${#str1_arr[@]}\n  local -r str2_arr_len=${#str2_arr[@]}\n  local -r str1_arr_last_index=$((str1_arr_len - 1))\n  local -r str2_arr_last_index=$((str2_arr_len - 1))\n  local -r str1_arr_last_char=${str1_arr[str1_arr_last_index]}\n  local -r str2_arr_last_char=${str2_arr[str2_arr_last_index]}\n  local -r str1_arr_last_char_index=$((str1_len - 1))\n  local -r str2_arr_last_char_index=$((str2_len - 1))\n  local -r str1_arr_last_char_index_plus_one=$((str1_arr_last_char_index + 1))\n  local -r str2_arr_last_char_index_plus_one=$((str2_arr_last_char_index + 1))\n  local -r str1_arr_last_char_index_minus_one=$((str1_arr_last_char_index - 1))\n  local -r str2_arr_last_char_index_minus_one=$((str2_arr_last_char_index - 1))\n  local -r str1_arr_last_char_index_minus_two=$((str1_arr_last_char_index - 2))\n  local -r str2_arr_last_char_index_minus_two=$((str2_arr_last_char_index - 2))\n  local -r str1_arr_last_char_\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local str1=$1\n  local str2=$2\n  local result=\"\"\n  for (( i=0; i<${#str1}; i++ )); do\n    local char=${str1:$i:1}\n    if [[ $str2 != *\"$char\"* ]]; then\n      result+=$char\n    fi\n  done\n  echo $result\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n        if [[ $dirty_chars != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n        if [[ $dirty_chars =~ $char ]]; then\n            continue\n        else\n            clean_string+=$char\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local str1=\"$1\"\n    local str2=\"$2\"\n    local str1_len=${#str1}\n    local str2_len=${#str2}\n    local i=0\n    local j=0\n    local temp=\"\"\n    local result=\"\"\n\n    for ((i=0; i<str1_len; i++)); do\n        temp=${str1:i:1}\n        for ((j=0; j<str2_len; j++)); do\n            if [ \"$temp\" == \"${str2:j:1}\" ]; then\n                break\n            fi\n        done\n        if [ $j -eq $str2_len ]; then\n            result+=\"$temp\"\n        fi\n    done\n\n    echo \"$result\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  local clean_string_len=0\n  local dirty_string_len=0\n  local dirty_chars_len=0\n  local i=0\n  local j=0\n  local k=0\n  local is_dirty_char=0\n\n  dirty_string_len=${#dirty_string}\n  dirty_chars_len=${#dirty_chars}\n\n  for ((i=0; i<dirty_string_len; i++)); do\n    is_dirty_char=0\n    for ((j=0; j<dirty_chars_len; j++)); do\n      if [[ \"${dirty_string:$i:1}\" == \"${dirty_chars:$j:1}\" ]]; then\n        is_dirty_char=1\n        break\n      fi\n    done\n    if [[ $is_dirty_char -eq 0 ]]; then\n      clean_string=\"$clean_string${dirty_string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ \"$dirty_chars\" != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    for ((i=0; i<${#1}; i++)); do\n        local char=${1:$i:1}\n        if [[ $2 != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_string=\"$1\"\n    local dirty_chars=\"$2\"\n    local i=0\n    local j=0\n    local dirty_char=\"\"\n    local clean_char=\"\"\n    local dirty_char_found=0\n\n    for ((i=0; i<${#dirty_string}; i++)); do\n        dirty_char=\"${dirty_string:$i:1}\"\n        dirty_char_found=0\n        for ((j=0; j<${#dirty_chars}; j++)); do\n            clean_char=\"${dirty_chars:$j:1}\"\n            if [[ \"$dirty_char\" == \"$clean_char\" ]]; then\n                dirty_char_found=1\n                break\n            fi\n        done\n        if [[ $dirty_char_found -eq 0 ]]; then\n            clean_string=\"$clean_string$dirty_char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! ${2} =~ ${1:$i:1} ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo $1 | sed \"s/[$2]//g\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    local char=${dirty_string:$i:1}\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ ! $dirty_chars =~ \"$current_char\" ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"\"\n  local i=0\n  local j=0\n  local len1=${#str1}\n  local len2=${#str2}\n  for ((i=0; i<len1; i++)); do\n    for ((j=0; j<len2; j++)); do\n      if [ \"${str1:$i:1}\" != \"${str2:$j:1}\" ]; then\n        str3=\"$str3${str1:$i:1}\"\n      fi\n    done\n  done\n  echo \"$str3\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ ! $dirty_chars =~ ${string:$i:1} ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    char=\"${string:$i:1}\"\n    if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local -r clean_string=\"$1\"\n    local -r dirty_string=\"$2\"\n    local -r dirty_chars=\"${dirty_string//[![:space:]]}\"\n    local -r clean_chars=\"${clean_string//[${dirty_chars}]}\"\n    echo \"${clean_chars}\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local string=\"$1\"\n    local dirty_chars=\"$2\"\n    local clean_string=\"\"\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n        if [[ $dirty_chars != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | sed \"s/[$2]//g\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | sed \"s/[$2]//g\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ $2 != *$char* ]]; then\n            clean_string+=$char\n        fi\n    done\n    echo $clean_string\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    local char=\"\"\n\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:i:1}\"\n        if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    for (( i=0; i<${#string}; i++ )); do\n        local char=\"${string:$i:1}\"\n        if [[ $dirty_chars =~ $char ]]; then\n            continue\n        fi\n        clean_string+=\"$char\"\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_string=$1\n  local dirty_chars=$2\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    local char=${dirty_string:$i:1}\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo $clean_string\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local dirty_string=\"$1\"\n  local i=0\n  local j=0\n  local dirty_char=\"\"\n  local clean_char=\"\"\n  local dirty_char_found=0\n\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    clean_char=\"${dirty_string:$i:1}\"\n    dirty_char_found=0\n    for (( j=0; j<${#dirty_chars}; j++ )); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [[ \"$clean_char\" == \"$dirty_char\" ]]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [[ $dirty_char_found -eq 0 ]]; then\n      clean_string=\"$clean_string$clean_char\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local string=\"$1\"\n  local dirty_chars=\"$2\"\n  local clean_string=\"\"\n  local clean_char=\"\"\n  local dirty_char=\"\"\n  local dirty_char_index=0\n  local string_index=0\n  local string_length=${#string}\n  local dirty_chars_length=${#dirty_chars}\n  local dirty_char_found=false\n  while [ $string_index -lt $string_length ]; do\n    clean_char=\"${string:$string_index:1}\"\n    dirty_char_index=0\n    dirty_char_found=false\n    while [ $dirty_char_index -lt $dirty_chars_length ]; do\n      dirty_char=\"${dirty_chars:$dirty_char_index:1}\"\n      if [ \"$clean_char\" == \"$dirty_char\" ]; then\n        dirty_char_found=true\n        break\n      fi\n      dirty_char_index=$((dirty_char_index + 1))\n    done\n    if [ \"$dirty_char_found\" == false ]; then\n      clean_string=\"$clean_string$clean_char\"\n    fi\n    string_index=$((string_index + 1))\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ $dirty_chars =~ ${string:$i:1} ]]; then\n      continue\n    fi\n    clean_string+=\"${string:$i:1}\"\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ ! \"${dirty_chars}\" =~ \"${string:$i:1}\" ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo $1 | tr -d $2\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    local char=\"${string:$i:1}\"\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    char=\"${string:$i:1}\"\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    local char=${string:$i:1}\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local dirty_string=\"$1\"\n  local i=0\n  local j=0\n  local dirty_char=\"\"\n  local clean_char=\"\"\n  local dirty_char_found=0\n\n  for ((i=0; i<${#dirty_string}; i++)); do\n    dirty_char=\"${dirty_string:$i:1}\"\n    dirty_char_found=0\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      if [ \"$dirty_char\" == \"${dirty_chars:$j:1}\" ]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [ $dirty_char_found -eq 0 ]; then\n      clean_string=\"$clean_string$dirty_char\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    local char=${string:$i:1}\n    if [[ $dirty_chars =~ $char ]]; then\n      continue\n    fi\n    clean_string+=$char\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local char=\"\"\n  local dirty_char=\"\"\n  local dirty_char_found=0\n\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    dirty_char_found=0\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$char\" == \"$dirty_char\" ]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [ $dirty_char_found -eq 0 ]; then\n      clean_string=\"$clean_string$char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=\"${1:$i:1}\"\n    if [[ ! $2 =~ $char ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local char=\"\"\n  local dirty_char=\"\"\n  local clean_char=\"\"\n  local dirty_char_found=0\n\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    clean_char=\"$char\"\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [[ \"$char\" == \"$dirty_char\" ]]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [[ $dirty_char_found -eq 0 ]]; then\n      clean_string=\"$clean_string$clean_char\"\n    fi\n    dirty_char_found=0\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_string=$1\n  local dirty_chars=$2\n\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    local char=${dirty_string:$i:1}\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=$char\n    fi\n  done\n\n  echo $clean_string\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ ! $dirty_chars =~ ${string:$i:1} ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    for (( i=0; i<${#1}; i++ )); do\n        if [[ \"${2}\" != *\"${1:$i:1}\"* ]]; then\n            clean_string+=\"${1:$i:1}\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n        if [[ \"$dirty_chars\" =~ \"$char\" ]]; then\n            continue\n        fi\n        clean_string+=\"$char\"\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n\tlocal str1=$1\n\tlocal str2=$2\n\tlocal new_str=\"\"\n\tfor (( i=0; i<${#str1}; i++ )); do\n\t\tlocal char=${str1:$i:1}\n\t\tif [[ ! $str2 =~ $char ]]; then\n\t\t\tnew_str+=$char\n\t\tfi\n\tdone\n\techo $new_str\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ $dirty_chars =~ ${string:$i:1} ]]; then\n      continue\n    fi\n    clean_string+=\"${string:$i:1}\"\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_string=\"$1\"\n    local dirty_chars=\"$2\"\n    local i=0\n\n    for ((i=0; i<${#dirty_string}; i++)); do\n        local char=\"${dirty_string:$i:1}\"\n        if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n            clean_string=\"$clean_string$char\"\n        fi\n    done\n\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local str1=\"$1\"\n    local str2=\"$2\"\n    local str3=\"\"\n    local i=0\n    local j=0\n    local flag=0\n    local len1=${#str1}\n    local len2=${#str2}\n    for ((i=0; i<len1; i++)); do\n        flag=0\n        for ((j=0; j<len2; j++)); do\n            if [[ ${str1:i:1} == ${str2:j:1} ]]; then\n                flag=1\n                break\n            fi\n        done\n        if [[ $flag -eq 0 ]]; then\n            str3+=\"${str1:i:1}\"\n        fi\n    done\n    echo \"$str3\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ \"${dirty_chars}\" != *\"${string:$i:1}\"* ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local dirty_string=\"$1\"\n    for (( i=0; i<${#dirty_string}; i++ )); do\n        local char=\"${dirty_string:$i:1}\"\n        if [[ $dirty_chars != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ $2 != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo $1 | sed -e \"s/[$2]//g\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local str1=\"$1\"\n  local str2=\"$2\"\n  local str1_len=${#str1}\n  local str2_len=${#str2}\n  local i=0\n  local j=0\n  local k=0\n  local temp=\"\"\n  local result=\"\"\n  while [ $i -lt $str1_len ]\n  do\n    j=0\n    while [ $j -lt $str2_len ]\n    do\n      if [ \"${str1:$i:1}\" = \"${str2:$j:1}\" ]\n      then\n        break\n      fi\n      j=$((j+1))\n    done\n    if [ $j -eq $str2_len ]\n    then\n      temp=\"${str1:$i:1}\"\n      result=\"$result$temp\"\n    fi\n    i=$((i+1))\n  done\n  echo \"$result\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    local i=0\n    local j=0\n    local char=\"\"\n    local dirty_char=\"\"\n    for ((i=0; i<${#string}; i++)); do\n        char=\"${string:$i:1}\"\n        for ((j=0; j<${#dirty_chars}; j++)); do\n            dirty_char=\"${dirty_chars:$j:1}\"\n            if [ \"$char\" = \"$dirty_char\" ]; then\n                char=\"\"\n                break\n            fi\n        done\n        clean_string=\"$clean_string$char\"\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local dirty_chars_length=${#dirty_chars}\n  local string_length=${#string}\n\n  for ((i=0; i<string_length; i++)); do\n    for ((j=0; j<dirty_chars_length; j++)); do\n      if [[ \"${string:$i:1}\" != \"${dirty_chars:$j:1}\" ]]; then\n        clean_string=\"$clean_string${string:$i:1}\"\n      fi\n    done\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local str1=\"$1\"\n  local str2=\"$2\"\n  local str1_len=${#str1}\n  local str2_len=${#str2}\n  local i=0\n  local j=0\n  local k=0\n  local str1_clean=\"\"\n\n  for ((i=0; i<str1_len; i++)); do\n    for ((j=0; j<str2_len; j++)); do\n      if [[ \"${str1:$i:1}\" == \"${str2:$j:1}\" ]]; then\n        break\n      fi\n    done\n    if [[ $j -eq $str2_len ]]; then\n      str1_clean=\"$str1_clean${str1:$i:1}\"\n    fi\n  done\n  echo \"$str1_clean\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    local i=0\n    local j=0\n    local char=\"\"\n    local dirty_char=\"\"\n    local dirty_char_found=0\n\n    for ((i=0; i<${#string}; i++)); do\n        char=\"${string:$i:1}\"\n        dirty_char_found=0\n        for ((j=0; j<${#dirty_chars}; j++)); do\n            dirty_char=\"${dirty_chars:$j:1}\"\n            if [[ \"$char\" == \"$dirty_char\" ]]; then\n                dirty_char_found=1\n                break\n            fi\n        done\n        if [[ \"$dirty_char_found\" == \"0\" ]]; then\n            clean_string=\"$clean_string$char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo $1 | sed \"s/[$2]//g\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ $2 != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ \"${dirty_chars}\" != *\"${string:$i:1}\"* ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local str1=$1\n  local str2=$2\n  local str3=\"\"\n  for (( i=0; i<${#str1}; i++ )); do\n    local char=${str1:$i:1}\n    if [[ $str2 =~ $char ]]; then\n      continue\n    fi\n    str3+=$char\n  done\n  echo $str3\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local char=\"\"\n  local dirty_char=\"\"\n  local dirty_char_found=0\n\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$char\" == \"$dirty_char\" ]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [ \"$dirty_char_found\" == 0 ]; then\n      clean_string+=\"$char\"\n    fi\n    dirty_char_found=0\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    local char=${string:$i:1}\n    if [[ $dirty_chars =~ $char ]]; then\n      continue\n    fi\n    clean_string+=$char\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n\tlocal str1=$1\n\tlocal str2=$2\n\tlocal str3=\"\"\n\tlocal i=0\n\tlocal j=0\n\tlocal flag=0\n\tfor ((i=0; i<${#str1}; i++))\n\tdo\n\t\tfor ((j=0; j<${#str2}; j++))\n\t\tdo\n\t\t\tif [ \"${str1:$i:1}\" == \"${str2:$j:1}\" ]\n\t\t\tthen\n\t\t\t\tflag=1\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\tif [ $flag -eq 0 ]\n\t\tthen\n\t\t\tstr3=$str3${str1:$i:1}\n\t\tfi\n\t\tflag=0\n\tdone\n\techo $str3\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local char=\"\"\n  local dirty_char=\"\"\n  local dirty_char_found=0\n\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [[ \"$char\" == \"$dirty_char\" ]]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [[ $dirty_char_found -eq 0 ]]; then\n      clean_string+=\"$char\"\n    fi\n    dirty_char_found=0\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! ${2} =~ ${1:$i:1} ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local dirty_string=\"$1\"\n  local char=\"\"\n  local i=0\n\n  while [ $i -lt ${#dirty_string} ]; do\n    char=\"${dirty_string:$i:1}\"\n    if [[ ! $dirty_chars =~ $char ]]; then\n      clean_string+=$char\n    fi\n    ((i++))\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local str1=\"$1\"\n  local str2=\"$2\"\n  local clean_str=\"\"\n\n  for (( i=0; i<${#str1}; i++ )); do\n    local char=\"${str1:$i:1}\"\n    if [[ \"$str2\" != *\"$char\"* ]]; then\n      clean_str+=\"$char\"\n    fi\n  done\n\n  echo \"$clean_str\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char\n\n  while [ -n \"$string\" ]; do\n    current_char=${string:0:1}\n    string=${string:1}\n\n    if [[ $dirty_chars =~ $current_char ]]; then\n      continue\n    fi\n\n    clean_string+=\"$current_char\"\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local char=\"\"\n  local dirty_char=\"\"\n\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$char\" == \"$dirty_char\" ]; then\n        char=\"\"\n        break\n      fi\n    done\n    clean_string=\"$clean_string$char\"\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local str1=$1\n    local str2=$2\n    local str3=\"\"\n    local i=0\n    local j=0\n    local len1=${#str1}\n    local len2=${#str2}\n    for ((i=0; i<len1; i++)); do\n        for ((j=0; j<len2; j++)); do\n            if [[ ${str1:$i:1} == ${str2:$j:1} ]]; then\n                break\n            fi\n        done\n        if [[ $j == $len2 ]]; then\n            str3+=\"${str1:$i:1}\"\n        fi\n    done\n    echo $str3\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ $dirty_chars != *\"${string:$i:1}\"* ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    char=${string:$i:1}\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ $2 != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=''\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ $2 != *$char* ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo $clean_string\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  local char=\"\"\n\n  for ((i=0; i<${#dirty_string}; i++)); do\n    char=${dirty_string:$i:1}\n    if [[ ! $dirty_chars =~ $char ]]; then\n      clean_string+=$char\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! $dirty_chars =~ ${1:$i:1} ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local str1=$1\n  local str2=$2\n  local new_str=\"\"\n  for (( i=0; i<${#str1}; i++ )); do\n    local char=${str1:$i:1}\n    if [[ $str2 =~ $char ]]; then\n      continue\n    fi\n    new_str+=$char\n  done\n  echo $new_str\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ $2 != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  # Remove all characters in $2 from $1\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    local char=\"\"\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:$i:1}\"\n        if [[ \"${dirty_chars/$char}\" == \"$dirty_chars\" ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n  local skip=0\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n    for (( j=0; j<${#dirty_chars}; j++ )); do\n      if [ \"$current_char\" == \"${dirty_chars:$j:1}\" ]; then\n        skip=1\n        break\n      fi\n    done\n\n    if [ \"$skip\" -eq 0 ]; then\n      clean_string+=\"$current_char\"\n    else\n      skip=0\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! \"${2}\" =~ \"${1:$i:1}\" ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local dirty_char_found=0\n\n  for ((i=0; i<${#string}; i++)); do\n    dirty_char_found=0\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      if [[ \"${string:$i:1}\" == \"${dirty_chars:$j:1}\" ]]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [[ $dirty_char_found -eq 0 ]]; then\n      clean_string=\"$clean_string${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n\n  for ((i=0; i<${#string}; i++)); do\n    local char=\"${string:$i:1}\"\n    if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n      clean_string=\"$clean_string$char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local str1=\"$1\"\n  local str2=\"$2\"\n  local str1_len=${#str1}\n  local str2_len=${#str2}\n  local i=0\n  local j=0\n  local dirty_chars=\"\"\n  local clean_str=\"\"\n\n  for ((i=0; i<str1_len; i++)); do\n    for ((j=0; j<str2_len; j++)); do\n      if [[ \"${str1:i:1}\" == \"${str2:j:1}\" ]]; then\n        dirty_chars+=\"${str1:i:1}\"\n      fi\n    done\n  done\n\n  for ((i=0; i<str1_len; i++)); do\n    if [[ \"${str1:i:1}\" != \"${dirty_chars:i:1}\" ]]; then\n      clean_str+=\"${str1:i:1}\"\n    fi\n  done\n\n  echo \"$clean_str\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local char=\"\"\n  local dirty_char=\"\"\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$char\" = \"$dirty_char\" ]; then\n        char=\"\"\n        break\n      fi\n    done\n    clean_string=\"$clean_string$char\"\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ \"${dirty_chars}\" =~ \"${string:$i:1}\" ]]; then\n      continue\n    else\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ ! $dirty_chars =~ $current_char ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local str=\"$1\"\n    local dirty_chars=\"$2\"\n    local clean_str=\"\"\n    local i=0\n    local j=0\n    local dirty_char_found=false\n\n    for ((i=0; i<${#str}; i++)); do\n        dirty_char_found=false\n        for ((j=0; j<${#dirty_chars}; j++)); do\n            if [[ \"${str:$i:1}\" == \"${dirty_chars:$j:1}\" ]]; then\n                dirty_char_found=true\n                break\n            fi\n        done\n        if [[ \"$dirty_char_found\" == false ]]; then\n            clean_str=\"$clean_str${str:$i:1}\"\n        fi\n    done\n    echo \"$clean_str\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! \"${2}\" =~ \"${1:$i:1}\" ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local str1=\"$1\"\n  local str2=\"$2\"\n  local clean_str=\"\"\n  for ((i=0; i<${#str1}; i++)); do\n    local char=\"${str1:$i:1}\"\n    if [[ \"$str2\" != *\"$char\"* ]]; then\n      clean_str+=\"$char\"\n    fi\n  done\n  echo \"$clean_str\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  local i=0\n  local j=0\n  local dirty_char=\"\"\n  local clean_char=\"\"\n  local dirty_char_found=0\n\n  for ((i=0; i<${#dirty_string}; i++)); do\n    dirty_char=\"${dirty_string:$i:1}\"\n    dirty_char_found=0\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      clean_char=\"${dirty_chars:$j:1}\"\n      if [[ \"$dirty_char\" == \"$clean_char\" ]]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [[ $dirty_char_found -eq 0 ]]; then\n      clean_string+=\"$dirty_char\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! ${2} =~ ${1:$i:1} ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local string=\"$1\"\n  local dirty_chars=\"$2\"\n\n  for (( i=0; i<${#dirty_chars}; i++ )); do\n    string=\"${string//${dirty_chars:$i:1}/}\"\n  done\n\n  echo \"$string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    local char=\"\"\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:$i:1}\"\n        if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ \"${dirty_chars}\" != *\"${string:$i:1}\"* ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ $dirty_chars =~ ${string:$i:1} ]]; then\n      continue\n    else\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ \"${dirty_chars}\" != *\"${string:$i:1}\"* ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  local i=0\n  local j=0\n  local dirty_char=\"\"\n  local clean_char=\"\"\n  local is_dirty=0\n\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    clean_char=\"${dirty_string:$i:1}\"\n    for (( j=0; j<${#dirty_chars}; j++ )); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [[ \"$clean_char\" == \"$dirty_char\" ]]; then\n        is_dirty=1\n        break\n      fi\n    done\n    if [[ $is_dirty -eq 0 ]]; then\n      clean_string=\"$clean_string$clean_char\"\n    fi\n    is_dirty=0\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    for (( i=0; i<${#1}; i++ )); do\n        if [[ ! \"${2}\" =~ \"${1:$i:1}\" ]]; then\n            clean_string+=\"${1:$i:1}\"\n        fi\n    done\n    echo \"${clean_string}\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo $1 | tr -d $2\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! \"${2}\" =~ \"${1:$i:1}\" ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"${clean_string}\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! ${2} =~ ${1:$i:1} ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local str1=\"$1\"\n  local str2=\"$2\"\n  local str3=\"\"\n  local i=0\n  local j=0\n  local flag=0\n  for ((i=0; i<${#str1}; i++)); do\n    for ((j=0; j<${#str2}; j++)); do\n      if [[ \"${str1:$i:1}\" == \"${str2:$j:1}\" ]]; then\n        flag=1\n        break\n      fi\n    done\n    if [[ $flag -eq 0 ]]; then\n      str3+=\"${str1:$i:1}\"\n    fi\n    flag=0\n  done\n  echo \"$str3\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    char=${1:$i:1}\n    if [[ ! $2 =~ $char ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo $clean_string\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ ! $dirty_chars =~ ${string:$i:1} ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ ! $2 =~ $char ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo $clean_string\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ ! $dirty_chars =~ ${string:$i:1} ]]; then\n      clean_string+=\"${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local str=\"$1\"\n  local dirty_chars=\"$2\"\n  local clean_str=\"\"\n  for (( i=0; i<${#str}; i++ )); do\n    local char=\"${str:$i:1}\"\n    if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n      clean_str+=\"$char\"\n    fi\n  done\n  echo \"$clean_str\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_string=$1\n  local dirty_chars=$2\n\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    local char=${dirty_string:$i:1}\n    if [[ $dirty_chars != *$char* ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  local dirty_char\n  local clean_char\n\n  for dirty_char in $(echo \"$dirty_chars\" | grep -o .); do\n    clean_string=\"$(echo \"$dirty_string\" | sed \"s/$dirty_char//g\")\"\n    dirty_string=\"$clean_string\"\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    echo \"$1\" | sed \"s/[$2]//g\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=$2\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:i:1}\n        if [[ ! $dirty_chars =~ $char ]]; then\n            clean_string+=$char\n        fi\n    done\n    echo $clean_string\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    local char=\"${string:$i:1}\"\n    if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local str1=\"$1\"\n    local str2=\"$2\"\n    local str1_len=${#str1}\n    local str2_len=${#str2}\n    local i=0\n    local j=0\n    local result=\"\"\n    for ((i=0; i<str1_len; i++)); do\n        local found=0\n        for ((j=0; j<str2_len; j++)); do\n            if [[ \"${str1:i:1}\" == \"${str2:j:1}\" ]]; then\n                found=1\n                break\n            fi\n        done\n        if [[ $found -eq 0 ]]; then\n            result=\"$result${str1:i:1}\"\n        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    for ((i=0; i<${#string}; i++)); do\n        local char=${string:$i:1}\n        if [[ $dirty_chars =~ $char ]]; then\n            continue\n        fi\n        clean_string+=$char\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local -r string=\"$1\"\n    local -r dirty_chars=\"$2\"\n    local -r clean_string=$(echo \"$string\" | tr -d \"$dirty_chars\")\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local -r clean_string=\"$1\"\n  local -r dirty_string=\"$2\"\n  local -r dirty_chars=\"${dirty_string//[^[:alnum:]]/}\"\n  local -r clean_chars=\"${clean_string//[^[:alnum:]]/}\"\n  local -r dirty_chars_regex=\"[$dirty_chars]\"\n  local -r clean_chars_regex=\"[$clean_chars]\"\n  local -r dirty_chars_regex_escaped=\"${dirty_chars_regex//\\//\\\\/}\"\n  local -r clean_chars_regex_escaped=\"${clean_chars_regex//\\//\\\\/}\"\n  local -r dirty_chars_regex_escaped_negated=\"[^$dirty_chars_regex_escaped]\"\n  local -r clean_chars_regex_escaped_negated=\"[^$clean_chars_regex_escaped]\"\n  local -r dirty_chars_regex_escaped_negated_escaped=\"${dirty_chars_regex_escaped_negated//\\//\\\\/}\"\n  local -r clean_chars_regex_escaped_negated_escaped=\"${clean_chars_regex_escaped_negated//\\//\\\\/}\"\n  local -r dirty_chars_regex_escaped_negated_escaped_escaped=\"${dirty_chars_regex_escaped_negated_escaped//\\//\\\\/}\"\n  local -r clean_chars_regex_escaped_negated_escaped_escaped=\"${clean_chars_regex_escaped_negated_escaped//\\//\\\\/}\"\n  local -r dirty_chars_regex_escaped_negated_escaped_escaped_escaped=\"${dirty_chars_regex_escaped_negated_escaped_escaped//\\//\\\\/}\"\n  local -r clean_chars_regex_escaped_negated_escaped_escaped_escaped=\"${clean_chars_regex_esc\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b'/tmp/tmp54_ez8lr.sh: line 33: unexpected EOF while looking for matching `\"\\'\\n/tmp/tmp54_ez8lr.sh: line 37: syntax error: unexpected end of file\\n'",
      "exit_code": 2,
      "status": "SyntaxError"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local char=\"\"\n  local dirty_char=\"\"\n\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$char\" == \"$dirty_char\" ]; then\n        char=\"\"\n        break\n      fi\n    done\n    clean_string=\"$clean_string$char\"\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local -i i=0\n    local -i j=0\n    local -i len1=${#1}\n    local -i len2=${#2}\n    local -i flag=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i space=0\n    local -i excl=0\n    local -i quot=0\n    local -i hash=0\n    local -i doll=0\n    local -i perc=0\n    local -i ampr=0\n    local -i apos=0\n    local -i lpar=0\n    local -i rpar=0\n    local -i star=0\n    local -i plus=0\n    local -i comm=0\n    local -i hypn=0\n    local -i stop=0\n\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ ! $dirty_chars =~ \"$current_char\" ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    local char=\"${string:$i:1}\"\n    if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"${1//[$2]/}\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local char=\"\"\n  local dirty_char=\"\"\n\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    dirty_char=\"${dirty_chars//$char/}\"\n    if [[ \"$dirty_char\" == \"$dirty_chars\" ]]; then\n      clean_string=\"$clean_string$char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ ! $2 =~ $char ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo $clean_string\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local -r string=\"$1\"\n    local -r dirty_chars=\"$2\"\n    local -r clean_chars=\"$(echo \"$string\" | sed \"s/[$dirty_chars]//g\")\"\n    echo \"$clean_chars\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! ${2} =~ ${1:$i:1} ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local str=\"$1\"\n  local dirty_chars=\"$2\"\n  local clean_str=\"\"\n  local i=0\n  local j=0\n  local dirty_char=\"\"\n  local clean_char=\"\"\n  local dirty_char_found=0\n\n  for ((i=0; i<${#str}; i++)); do\n    clean_char=\"${str:$i:1}\"\n    dirty_char_found=0\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [[ \"$clean_char\" == \"$dirty_char\" ]]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [[ $dirty_char_found -eq 0 ]]; then\n      clean_str=\"$clean_str$clean_char\"\n    fi\n  done\n  echo \"$clean_str\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n\n  while [ $i -lt ${#string} ]; do\n    local char=${string:$i:1}\n    if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n    i=$((i+1))\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ $2 != *\"$char\"* ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo $clean_string\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    char=\"${string:i:1}\"\n    if [[ ! $dirty_chars =~ $char ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    if [[ ! \"${dirty_chars}\" =~ \"${string:$i:1}\" ]]; then\n      clean_string=\"${clean_string}${string:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n        if [[ $dirty_chars =~ $char ]]; then\n            continue\n        fi\n        clean_string+=$char\n    done\n    echo $clean_string\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n    if [[ \"$dirty_chars\" != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    local char=\"${dirty_string:$i:1}\"\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local -i i=0\n  local -i j=0\n  local -i len1=${#1}\n  local -i len2=${#2}\n  local -a arr1=(${1// / })\n  local -a arr2=(${2// / })\n  local -a arr3=()\n  local -i flag=0\n  for ((i=0; i<len1; i++)); do\n    flag=0\n    for ((j=0; j<len2; j++)); do\n      if [[ ${arr1[$i]} == ${arr2[$j]} ]]; then\n        flag=1\n        break\n      fi\n    done\n    if [[ $flag -eq 0 ]]; then\n      arr3+=(${arr1[$i]})\n    fi\n  done\n  echo ${arr3[@]}\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    for (( i=0; i<${#string}; i++ )); do\n        local char=${string:$i:1}\n        if [[ $dirty_chars != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ ! $dirty_chars =~ \"$current_char\" ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local dirty_string=\"$1\"\n  local i=0\n\n  while [ $i -lt ${#dirty_string} ]; do\n    local char=\"${dirty_string:$i:1}\"\n    if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n    i=$((i+1))\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i\n  local j\n  local char\n\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      if [[ \"$char\" == \"${dirty_chars:$j:1}\" ]]; then\n        char=\"\"\n        break\n      fi\n    done\n    clean_string=\"$clean_string$char\"\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local char=\"\"\n  local dirty_char=\"\"\n\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$char\" == \"$dirty_char\" ]; then\n        char=\"\"\n        break\n      fi\n    done\n    clean_string=\"$clean_string$char\"\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_string=\"$1\"\n    local dirty_chars=\"$2\"\n    local i=0\n    local j=0\n    local dirty_char=\"\"\n    local clean_char=\"\"\n\n    for ((i=0; i<${#dirty_string}; i++)); do\n        dirty_char=\"${dirty_string:$i:1}\"\n        for ((j=0; j<${#dirty_chars}; j++)); do\n            clean_char=\"${dirty_chars:$j:1}\"\n            if [[ \"$dirty_char\" == \"$clean_char\" ]]; then\n                break\n            fi\n        done\n        if [[ \"$dirty_char\" != \"$clean_char\" ]]; then\n            clean_string=\"$clean_string$dirty_char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  for (( i=0; i<${#dirty_string}; i++ )); do\n    local char=\"${dirty_string:$i:1}\"\n    if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_string=\"$1\"\n    local dirty_chars=\"$2\"\n    for (( i=0; i<${#dirty_string}; i++ )); do\n        local char=\"${dirty_string:$i:1}\"\n        if [[ \"$dirty_chars\" != *\"$char\"* ]]; then\n            clean_string+=\"$char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ ! $dirty_chars =~ $current_char ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ $2 != *\"$char\"* ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo $clean_string\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local string=\"$1\"\n  local dirty_chars=\"$2\"\n  local clean_string=\"\"\n  local i=0\n  local j=0\n  local char=\"\"\n  local dirty_char=\"\"\n  local dirty_char_found=0\n\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    dirty_char_found=0\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$char\" == \"$dirty_char\" ]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [ $dirty_char_found -eq 0 ]; then\n      clean_string=\"$clean_string$char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local str1=$1\n  local str2=$2\n  local str3=\"\"\n  for (( i=0; i<${#str1}; i++ )); do\n    local char=${str1:$i:1}\n    if [[ $str2 != *\"$char\"* ]]; then\n      str3+=\"$char\"\n    fi\n  done\n  echo \"$str3\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local char=\"\"\n  local clean=1\n  local j=0\n  local dirty_char=\"\"\n  for ((i=0; i<${#string}; i++)); do\n    char=\"${string:$i:1}\"\n    clean=1\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      dirty_char=\"${dirty_chars:$j:1}\"\n      if [ \"$char\" == \"$dirty_char\" ]; then\n        clean=0\n        break\n      fi\n    done\n    if [ $clean -eq 1 ]; then\n      clean_string=\"$clean_string$char\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    local i=0\n    local j=0\n    local char=\"\"\n    local dirty_char=\"\"\n    local is_dirty=0\n\n    for (( i=0; i<${#string}; i++ )); do\n        char=\"${string:$i:1}\"\n        is_dirty=0\n        for (( j=0; j<${#dirty_chars}; j++ )); do\n            dirty_char=\"${dirty_chars:$j:1}\"\n            if [ \"$char\" == \"$dirty_char\" ]; then\n                is_dirty=1\n                break\n            fi\n        done\n        if [ $is_dirty -eq 0 ]; then\n            clean_string=\"$clean_string$char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  echo \"$1\" | tr -d \"$2\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_string=\"$1\"\n  local dirty_chars=\"$2\"\n  local char=\"\"\n  local i=0\n  local j=0\n  local dirty_char=\"\"\n  local dirty_char_found=0\n  local clean_char=\"\"\n\n  for ((i=0; i<${#dirty_string}; i++)); do\n    dirty_char=\"${dirty_string:$i:1}\"\n    dirty_char_found=0\n    for ((j=0; j<${#dirty_chars}; j++)); do\n      if [[ \"${dirty_char}\" == \"${dirty_chars:$j:1}\" ]]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [[ \"${dirty_char_found}\" == \"0\" ]]; then\n      clean_string=\"${clean_string}${dirty_char}\"\n    fi\n  done\n\n  echo \"${clean_string}\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ $2 != *\"$char\"* ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo $clean_string\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ ! $2 =~ $char ]]; then\n      clean_string+=$char\n    fi\n  done\n  echo $clean_string\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local i\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ \"${dirty_chars}\" != *\"${1:$i:1}\"* ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    local i=0\n    local j=0\n    local char=\"\"\n    local dirty_char=\"\"\n    local dirty_char_count=0\n    local dirty_char_index=0\n\n    for ((i=0; i<${#string}; i++)); do\n        char=\"${string:$i:1}\"\n        dirty_char_count=0\n        for ((j=0; j<${#dirty_chars}; j++)); do\n            dirty_char=\"${dirty_chars:$j:1}\"\n            if [[ \"$char\" == \"$dirty_char\" ]]; then\n                dirty_char_count=$((dirty_char_count+1))\n                dirty_char_index=$j\n            fi\n        done\n        if [[ \"$dirty_char_count\" -eq 0 ]]; then\n            clean_string=\"$clean_string$char\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    for (( i=0; i<${#1}; i++ )); do\n        if [[ ! \"${2}\" =~ \"${1:$i:1}\" ]]; then\n            clean_string+=\"${1:$i:1}\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! $2 =~ ${1:$i:1} ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local dirty_string=\"$1\"\n  local clean_string=\"$2\"\n  local clean_string_length=${#clean_string}\n  local clean_string_index=0\n  local dirty_string_length=${#dirty_string}\n  local dirty_string_index=0\n  local clean_char=\"\"\n  local dirty_char=\"\"\n  local clean_string_index_char=\"\"\n  local dirty_string_index_char=\"\"\n  local clean_string_index_char_ascii=\"\"\n  local dirty_string_index_char_ascii=\"\"\n  local clean_string_index_char_ascii_hex=\"\"\n  local dirty_string_index_char_ascii_hex=\"\"\n  local clean_string_index_char_ascii_hex_dec=\"\"\n  local dirty_string_index_char_ascii_hex_dec=\"\"\n  local clean_string_index_char_ascii_hex_dec_int=\"\"\n  local dirty_string_index_char_ascii_hex_dec_int=\"\"\n  local clean_string_index_char_ascii_hex_dec_int_int=\"\"\n  local dirty_string_index_char_ascii_hex_dec_int_int=\"\"\n  local clean_string_index_char_ascii_hex_dec_int_int_int=\"\"\n  local dirty_string_index_char_ascii_hex_dec_int_int_int=\"\"\n  local clean_string_index_char_ascii_hex_dec_int_int_int_int=\"\"\n  local dirty_string_index_char_ascii_hex_dec_int_int_int_int=\"\"\n  local clean_string_index_char_ascii_hex_dec_int_int_int_int_int=\"\"\n  local dirty_string_index_char_ascii_hex_dec_int_int_int_int_int=\"\"\n  local clean_string_index_char_ascii_hex_dec_int_int_int_int_int_int=\"\"\n  local dirty_string_index_char_ascii_hex_dec_int_int_\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ ! $2 =~ ${1:$i:1} ]]; then\n      clean_string+=\"${1:$i:1}\"\n    fi\n  done\n  echo $clean_string\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local string=\"$1\"\n    local i=0\n\n    while [ $i -lt ${#string} ]; do\n        local char=${string:$i:1}\n        if [[ $dirty_chars != *$char* ]]; then\n            clean_string+=$char\n        fi\n        ((i++))\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  for (( i=0; i<${#string}; i++ )); do\n    local char=${string:$i:1}\n    if [[ $dirty_chars != *\"$char\"* ]]; then\n      clean_string+=\"$char\"\n    fi\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string\n  local dirty_string\n  local dirty_char\n  local clean_char\n  local clean_char_count\n  local dirty_char_count\n  local clean_char_index\n  local dirty_char_index\n\n  clean_string=$1\n  dirty_string=$2\n\n  clean_char_count=${#clean_string}\n  dirty_char_count=${#dirty_string}\n\n  for (( clean_char_index=0; clean_char_index<clean_char_count; clean_char_index++ )); do\n    clean_char=${clean_string:clean_char_index:1}\n    for (( dirty_char_index=0; dirty_char_index<dirty_char_count; dirty_char_index++ )); do\n      dirty_char=${dirty_string:dirty_char_index:1}\n      if [ \"$clean_char\" == \"$dirty_char\" ]; then\n        clean_string=${clean_string/$clean_char/}\n        break\n      fi\n    done\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local -r str1=\"$1\"\n  local -r str2=\"$2\"\n  local -r str1_len=${#str1}\n  local -r str2_len=${#str2}\n  local -r str1_chars=($(echo $str1 | fold -w1))\n  local -r str2_chars=($(echo $str2 | fold -w1))\n  local -r str1_chars_len=${#str1_chars[@]}\n  local -r str2_chars_len=${#str2_chars[@]}\n\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n  local skip_next=0\n\n  for (( i=0; i<${#string}; i++ )); do\n    current_char=\"${string:$i:1}\"\n    if [[ $skip_next -eq 1 ]]; then\n      skip_next=0\n      continue\n    fi\n    if [[ $dirty_chars =~ $current_char ]]; then\n      skip_next=1\n      continue\n    fi\n    clean_string+=\"$current_char\"\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local dirty_string=\"$1\"\n    local dirty_char\n    local clean_char\n\n    for clean_char in ${dirty_string}; do\n        for dirty_char in ${dirty_chars}; do\n            if [[ \"${clean_char}\" == \"${dirty_char}\" ]]; then\n                clean_char=\"\"\n            fi\n        done\n        clean_string=\"${clean_string}${clean_char}\"\n    done\n    echo \"${clean_string}\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  for (( i=0; i<${#1}; i++ )); do\n    if [[ \"$2\" =~ \"${1:$i:1}\" ]]; then\n      echo -n \"${1:$i:1}\"\n    fi\n  done\n  echo\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local str1=$1\n  local str2=$2\n  local new_str=\"\"\n  for (( i=0; i<${#str1}; i++ )); do\n    local char=${str1:$i:1}\n    if [[ $str2 != *\"$char\"* ]]; then\n      new_str+=$char\n    fi\n  done\n  echo $new_str\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local current_char=\"\"\n  local i=0\n\n  while [ $i -lt ${#string} ]; do\n    current_char=\"${string:$i:1}\"\n    if [[ $dirty_chars != *\"$current_char\"* ]]; then\n      clean_string+=\"$current_char\"\n    fi\n    ((i++))\n  done\n\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_chars=\"$2\"\n    local dirty_string=\"$1\"\n    for (( i=0; i<${#dirty_string}; i++ )); do\n        if [[ ! \"${dirty_chars}\" =~ \"${dirty_string:$i:1}\" ]]; then\n            clean_string+=\"${dirty_string:$i:1}\"\n        fi\n    done\n    echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n  local clean_string=\"\"\n  local dirty_chars=\"$2\"\n  local string=\"$1\"\n  local i=0\n  local j=0\n  local dirty_char_count=${#dirty_chars}\n  local string_count=${#string}\n  local dirty_char_found=0\n  for ((i=0; i<string_count; i++)); do\n    for ((j=0; j<dirty_char_count; j++)); do\n      if [ \"${string:$i:1}\" == \"${dirty_chars:$j:1}\" ]; then\n        dirty_char_found=1\n        break\n      fi\n    done\n    if [ $dirty_char_found -eq 0 ]; then\n      clean_string=\"$clean_string${string:$i:1}\"\n    fi\n    dirty_char_found=0\n  done\n  echo \"$clean_string\"\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "#!/bin/bash\n# Write a function to remove characters from the first string which are present in the second string.\n#\n# $1 is a string\n# $2 is a string\nremove_dirty_chars() {\n    local clean_string=\"\"\n    local dirty_string=$1\n    local dirty_chars=$2\n    for (( i=0; i<${#dirty_string}; i++ )); do\n        local char=${dirty_string:$i:1}\n        if [[ $dirty_chars != *\"$char\"* ]]; then\n            clean_string+=$char\n        fi\n    done\n    echo $clean_string\n}\n\ncandidate() {\n    remove_dirty_chars \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"probasscurve\" \"pros\") = \"bacuve\" ]]\n    [[ $(candidate \"digitalindia\" \"talent\") = \"digiidi\" ]]\n    [[ $(candidate \"exoticmiles\" \"toxic\") = \"emles\" ]]\n}\n\nrun_test",
      "timestamp": 1667190657,
      "stdout": "b''",
      "stderr": "b''",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
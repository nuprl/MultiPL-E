{
  "name": "mbpp_280_sequential_search",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function that takes in an array and element and returns a list containing a boolean that indicates if the element is in the array and the index position of the element (or -1 if the element is not found).\n#\n# $1 is a space-separated list\n# $2 is an integer\nsequential_search() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_280_sequential_search.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    sequential_search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"11 23 58 31 56 77 43 12 65 19\" \"31\") = \"true 3\" ]]\n    [[ $(candidate \"12 32 45 62 35 47 44 61\" \"61\") = \"true 7\" ]]\n    [[ $(candidate \"9 10 17 19 22 39 48 56\" \"48\") = \"true 6\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    # TODO: Implement sequential search\n    # return a list containing a boolean and an integer\n    #\n    # Example:\n    #   $1 = \"1 2 3 4 5\"\n    #   $2 = 3\n    #   returns \"true 2\"\n    #\n    #   $1 = \"1 2 3 4 5\"\n    #   $2 = 6\n    #   returns \"false -1\"\n    #\n    #   $1 = \"1 2 3 4 5\"\n    #   $2 = 1\n    #   returns \"true 0\"\n    #\n    #   $1 = \"1 2 3 4 5\"\n    #   $2 = 5\n    #   returns \"true 4\"\n    #\n    #   $1 = \"1 2 3 4 5\"\n    #   $2 = 0\n    #   returns \"false -1\"\n    #\n    #   $1 = \"1 2 3 4 5\"\n    #   $2 = -1\n    #   returns \"false -1\"\n    #\n    #   $1 = \"1 2 3 4 5\"\n    #   $2 = 2\n    #   returns \"true 1\"\n    #\n    #   $1 = \"1 2 3 4 5\"\n    #   $2 = 4\n    #   returns \"true 3\"\n    #\n    #   $1 = \"1 2 3 4 5\"\n    #   $2 = 7\n    #   returns \"false -1\"\n    #\n    #   $1 = \"1 2 3 4 5\"\n    #   $2 = 8\n    #   returns \"false -1\"\n    #\n    #   $1 = \"1 2 3 4 5\"\n    #   $2 = 9\n    #   returns \"false -1\"\n    #\n    #   $1 = \"1 2 3 4 5\"\n    #   $2 = 10\n    #   returns \"false -1\"\n    #\n    #   $1 = \"1 2 3 4 5\"\n    #   $2 = 11\n    #   returns \"false -1\"\n    #\n    #   $1 = \"1 2 3 4 5\"\n    #   $2 = 12\n    #   returns \"false -1\"",
    "    local list=($1)\n    local element=$2\n    local index=-1\n    local found=false\n    for i in ${!list[@]}; do\n        if [[ ${list[$i]} -eq $element ]]; then\n            index=$i\n            found=true\n            break\n        fi\n    done\n    echo \"$found $index\"",
    "  local -a array=(\"$@\")\n  local element=${array[-1]}\n  array=(\"${array[@]:0:$#-1}\")\n  local -i index=-1\n  local -i i=0\n  local -i found=0\n  for item in \"${array[@]}\"; do\n    if [[ $item -eq $element ]]; then\n      found=1\n      index=$i\n      break\n    fi\n    ((i++))\n  done\n  echo \"$found $index\"",
    "    local -a array=(\"$@\")\n    local -i element=$2\n    local -i i\n    local -i index=-1\n    local -i found=0\n\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ ${array[$i]} -eq $element ]]; then\n            index=$i\n            found=1\n            break\n        fi\n    done\n\n    echo \"$found $index\"",
    "  local -a array=(\"${!1}\")\n  local element=$2\n  local -i index=-1\n\n  for ((i=0; i<${#array[@]}; i++)); do\n    if [[ \"${array[$i]}\" -eq \"$element\" ]]; then\n      index=$i\n      break\n    fi\n  done\n\n  echo \"${index}\"",
    "    local -a array=(\"$@\")\n    local element=${array[-1]}\n    array=(\"${array[@]:0:$#-1}\")\n    local -a result\n    local -i index\n    local -i found=0\n\n    for ((index=0; index<${#array[@]}; index++)); do\n        if [[ ${array[index]} -eq $element ]]; then\n            found=1\n            break\n        fi\n    done\n\n    result=($found $index)\n    echo \"${result[@]}\"",
    "  local -a array=(\"$@\")\n  local element=${array[-1]}\n  array=(\"${array[@]:0:${#array[@]}-1}\")\n  local index=-1\n  for ((i=0; i<${#array[@]}; i++)); do\n    if [[ ${array[$i]} -eq $element ]]; then\n      index=$i\n      break\n    fi\n  done\n  echo \"${array[@]}\" $index",
    "    local -a array=(\"${!1}\")\n    local element=$2\n    local -i i=0\n    local -i found=0\n    local -i index=-1\n\n    for i in \"${!array[@]}\"; do\n        if [[ \"${array[$i]}\" -eq \"$element\" ]]; then\n            found=1\n            index=$i\n            break\n        fi\n    done\n\n    echo \"$found $index\"",
    "    local -a array=(\"${!1}\")\n    local element=$2\n    local index=-1\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ ${array[$i]} == $element ]]; then\n            index=$i\n            break\n        fi\n    done\n    echo \"$index\"",
    "  local array=($1)\n  local element=$2\n  local found=false\n  local index=-1\n  for i in \"${!array[@]}\"; do\n    if [[ \"${array[i]}\" -eq \"$element\" ]]; then\n      found=true\n      index=$i\n      break\n    fi\n  done\n  echo \"$found $index\"",
    "    local -a array=(\"$@\")\n    local element=${array[-1]}\n    array=(\"${array[@]:0:$#-1}\")\n    local -i index=-1\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ ${array[i]} -eq $element ]]; then\n            index=$i\n            break\n        fi\n    done\n    echo \"${array[@]}\"\n    echo $index",
    "    local -a array=(\"$@\")\n    local element=${array[-1]}\n    array=(\"${array[@]:0:${#array[@]}-1}\")\n    local -i index=0\n    local -i found=0\n    for i in \"${array[@]}\"; do\n        if [[ $i -eq $element ]]; then\n            found=1\n            break\n        fi\n        index+=1\n    done\n    if [[ $found -eq 0 ]]; then\n        index=-1\n    fi\n    echo \"$found $index\"",
    "  local -n array=$1\n  local element=$2\n  local index=0\n  local found=false\n\n  for i in \"${array[@]}\"; do\n    if [[ $i -eq $element ]]; then\n      found=true\n      break\n    fi\n    index=$((index + 1))\n  done\n\n  if [[ $found == false ]]; then\n    index=-1\n  fi\n\n  echo \"$found $index\"",
    "    local -n arr=$1\n    local elem=$2\n    local found=false\n    local index=-1\n    for i in \"${!arr[@]}\"; do\n        if [[ \"${arr[$i]}\" -eq \"$elem\" ]]; then\n            found=true\n            index=$i\n            break\n        fi\n    done\n    echo \"$found $index\"",
    "  local -a array=(\"$@\")\n  local element=${array[-1]}\n  array=(\"${array[@]:0:${#array[@]}-1}\")\n  local -a result\n  local found=false\n  local index=-1\n  for ((i=0; i<${#array[@]}; i++)); do\n    if [[ ${array[$i]} -eq $element ]]; then\n      found=true\n      index=$i\n      break\n    fi\n  done\n  result=($found $index)\n  echo ${result[@]}",
    "  local -a array=($1)\n  local element=$2\n  local index=0\n  local found=false\n  for i in ${array[@]}; do\n    if [ $i -eq $element ]; then\n      found=true\n      break\n    fi\n    index=$((index + 1))\n  done\n  if [ $found = false ]; then\n    index=-1\n  fi\n  echo \"$found $index\"",
    "  local -a arr=(\"${!1}\")\n  local element=$2\n  local found=0\n  local index=-1\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    if [[ ${arr[$i]} -eq $element ]]; then\n      found=1\n      index=$i\n      break\n    fi\n  done\n  echo \"$found $index\"",
    "  local array=\"$1\"\n  local element=\"$2\"\n  local found=false\n  local index=-1\n  for i in $array; do\n    if [ \"$i\" = \"$element\" ]; then\n      found=true\n      index=$((index+1))\n      break\n    fi\n    index=$((index+1))\n  done\n  echo \"$found $index\"",
    "    local -a array=(\"$@\")\n    local element=${array[-1]}\n    array=(\"${array[@]:0:${#array[@]}-1}\")\n    local -a result=()\n    local found=false\n    local index=-1\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ ${array[i]} -eq $element ]]; then\n            found=true\n            index=$i\n            break\n        fi\n    done\n    result=($found $index)\n    echo \"${result[@]}\"",
    "  local array=($1)\n  local element=$2\n  local found=false\n  local index=-1\n  for i in \"${!array[@]}\"; do\n    if [[ \"${array[$i]}\" == \"$element\" ]]; then\n      found=true\n      index=$i\n      break\n    fi\n  done\n  echo \"$found $index\""
  ]
}
{
  "name": "mbpp_407_rearrange_bigger",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to create the next bigger number by rearranging the digits of a given number.\n#\n# $1 is an integer\nrearrange_bigger() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_407_rearrange_bigger.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    rearrange_bigger \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\") = \"21\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"102\") = \"120\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -i num=\"$1\"\n    local -i num_len=\"${#num}\"\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i tmp=0\n    local -i num_arr=()\n    local -i num_arr_sorted=()\n    local -i num_arr_sorted_len=0\n    local -i num_arr_sorted_last=0\n    local -i num_arr_sorted_last_idx=0\n    local -i num_arr_sorted_last_idx_next=0\n    local -i num_arr_sorted_last_idx_next_val=0\n    local -i num_arr_sorted_last_idx_next_val_tmp=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next_val=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next_val_tmp=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next_val_tmp_idx=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next_val_tmp_idx_next=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next_val_tmp_idx_next_val=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next_val_tmp_idx_next_val_tmp=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next_val_tmp_idx_next_val_tmp_idx=",
    "  local number=$1\n  local number_length=${#number}\n  local number_array=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n",
    "  local number=$1\n  local length=${#number}\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n",
    "    local -i n=$1\n    local -i i=0\n    local -i j=0\n    local -i l=0\n    local -i r=0\n    local -i m=0\n    local -i t=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i k=0\n    local -i p=0\n    local -i q=0\n    local -i s=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i K=0\n    local -i P=0\n    local -i Q=0\n    local -i S=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i N=0\n    local -i M=0\n    local -i L=0\n    local -i R=0\n    local -i T=0\n    local -i I=0\n    local -i J=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i kk=0\n    local -i pp=0\n    local -i qq=0\n    local -i ss=0\n    local -i uu=0",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -a arr\n    local -i tmp=0\n    local -i tmp2=0\n    local -i tmp3=0\n    local -i tmp4=0\n    local -i tmp5=0\n    local -i tmp6=0\n    local -i tmp7=0\n    local -i tmp8=0\n    local -i tmp9=0\n    local -i tmp10=0\n    local -i tmp11=0\n    local -i tmp12=0\n    local -i tmp13=0\n    local -i tmp14=0\n    local -i tmp15=0\n    local -i tmp16=0\n    local -i tmp17=0\n    local -i tmp18=0\n    local -i tmp19=0\n    local -i tmp20=0\n    local -i tmp21=0\n    local -i tmp22=0\n    local -i tmp23=0\n    local -i tmp24=0\n    local -i tmp25=0\n    local -i tmp26=0\n    local -i tmp27=0\n    local -i tmp28=0\n    local -i tmp29=0\n    local -i tmp30=0\n    local -i tmp31=0\n    local -i tmp32=0\n    local -i tmp33=0\n    local -i tmp34=0\n    local -i tmp35=0\n    local -i tmp36=0\n    local -i tmp37=0\n    local -i tmp38=0\n    local -i tmp39=0\n    local -i tmp40=0\n    local -i tmp41=0\n    local -i tmp42=0\n    local -i tmp43=0\n    local -i tmp44=0\n    local -i tmp45=0\n    local -i tmp46=0\n    local -i tmp47=0\n    local -i tmp48=0\n    local -i tmp49=0\n    local -i tmp50=0\n    local -i tmp51=0\n    local -i tmp52=0\n    local -i tmp53",
    "    local -i num=$1\n    local -i digit\n    local -i next_digit\n    local -i next_num\n    local -i next_num_digit\n    local -i next_num_digit_count\n    local -i next_num_digit_count_max\n    local -i next_num_digit_count_max_digit\n    local -i next_num_digit_count_max_digit_count\n    local -i next_num_digit_count_max_digit_count_max\n    local -i next_num_digit_count_max_digit_count_max_digit\n    local -i next_num_digit_count_max_digit_count_max_digit_count\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i result=0\n  local -i arr=()\n  local -i arr_len=0\n\n  if [[ $num -le 0 ]]; then\n    echo \"Invalid input\"\n    return 1\n  fi\n\n  len=${#num}\n  for ((i=0; i<len; i++)); do\n    arr[i]=${num:i:1}\n  done\n  arr_len=${#arr[@]}\n\n  for ((i=arr_len-1; i>0; i--)); do\n    if [[ ${arr[i]} -gt ${arr[i-1]} ]]; then\n      tmp=${arr[i-1]}\n      arr[i-1]=${arr[i]}\n      arr[i]=$tmp\n      break\n    fi\n  done\n\n  for ((i=0; i<arr_len; i++)); do\n    result=$((result*10+arr[i]))\n  done\n\n  echo $result",
    "  local -i num=$1\n  local -i tmp=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i len=0\n  local -i arr=()\n\n  # Convert number to array\n  while [ $num -gt 0 ]; do\n    tmp=$(( num % 10 ))\n    arr[$i]=$tmp\n    num=$(( num / 10 ))\n    (( i++ ))\n  done\n\n  # Find the first digit that is smaller than the digit to its right\n  for (( i = ${#arr[@]} - 2; i >= 0; i-- )); do\n    if [ ${arr[$i]} -lt ${arr[$i + 1]} ]; then\n      break\n    fi\n  done\n\n  # If no such digit is found, the number is the largest possible\n  if [ $i -eq -1 ]; then\n    echo \"No bigger number possible\"\n    return\n  fi\n\n  # Find the smallest digit on the right side of (i-1)'th digit that is greater than number[i-1]\n  for (( j = ${#arr[@]} - 1; j > i; j-- )); do\n    if [ ${arr[$j]} -gt ${arr[$i]} ]; then\n      break\n    fi\n  done\n\n  # Swap the above found smallest digit with number[i-1]\n  tmp=${arr[$i]}\n  arr[$i]=${arr[$j]}\n  arr[$j]=$tmp\n\n  # Sort the digits after (i-1) in ascending order\n  len=${#arr[@]}\n  for (( k = i + 1; k < len; k++ )); do\n    for (( j = k + 1; j < len; j++ )); do\n      if [ ${arr[$k]} -gt ${arr[$j]} ]; then\n        tmp=${arr[$k]}\n        arr[$k]=${arr[$j]}\n        arr[$j]=$tmp\n      fi\n    done\n  done\n\n  # Convert array to number\n  num=0\n  for (( i = 0; i < len; i++ )); do\n    num=$(( num * 10 + arr",
    "  local -i n=$1\n  local -i d\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i res=0\n  local -i arr=()\n  local -i arr_len=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_tmp=0\n  local -i arr_res=0\n  local -i arr_res_len=0\n  local -i arr_res_i=0\n  local -i arr_res_j=0\n  local -i arr_res_tmp=0\n\n  # convert to array\n  while [ $num -gt 0 ]; do\n    arr[$i]=$((num % 10))\n    num=$((num / 10))\n    ((i++))\n  done\n  arr_len=${#arr[@]}\n\n  # find the first digit that is smaller than the next digit\n  for ((i=0; i<arr_len-1; i++)); do\n    if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n      break\n    fi\n  done\n\n  # if no such digit is found, then the number is the biggest possible\n  if [ $i -eq $((arr_len-1)) ]; then\n    echo \"no bigger number found\"\n    return\n  fi\n\n  # find the smallest digit that is larger than arr[i]\n  tmp=${arr[$i]}\n  for ((j=i+1; j<arr_len; j++)); do\n    if [ ${arr[$j]} -gt $tmp ]; then\n      tmp=${arr[$j]}\n    fi\n  done\n\n  # swap arr[i] and arr[j]\n  arr[$i]=$tmp\n  arr[$j]=${arr[$i]}\n\n  # sort the digits after arr[i]\n  for ((i=0; i<arr_len-1; i++)); do\n    for ((j=i+1; j<arr_len; j++)); do\n      if [ ${arr[$i]} -gt ${arr[$j]} ]; then",
    "  local -i n=$1\n  local -i m=$n\n  local -i d=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i t=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i w=0\n  local -i u=0\n  local -i v=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i w=0\n  local -i u=0\n  local -i v=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i w=0\n  local -i u=0\n  local -i v=0\n  local -i o=0\n  local -i p=0\n  local -i q=0",
    "  local -i num=$1\n  local -i digit\n  local -i digits=0\n  local -i digits_arr=()\n  local -i digits_arr_len=0\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i result=0\n\n  # get digits\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    digits_arr[digits++]=$digit\n    num=$(( num / 10 ))\n  done\n\n  # sort digits\n  digits_arr_len=${#digits_arr[@]}\n  for (( i = 0; i < digits_arr_len; i++ )); do\n    for (( j = i + 1; j < digits_arr_len; j++ )); do\n      if (( digits_arr[i] > digits_arr[j] )); then\n        k=digits_arr[i]\n        digits_arr[i]=${digits_arr[j]}\n        digits_arr[j]=$k\n      fi\n    done\n  done\n\n  # get result\n  for (( i = 0; i < digits_arr_len; i++ )); do\n    result=$(( result * 10 + digits_arr[i] ))\n  done\n\n  echo $result",
    "    local -i num=\"$1\"\n    local -i i=0\n    local -a digits\n    local -i j=0\n    local -i k=0\n    local -i temp=0\n    local -i new_num=0\n    local -i new_num_digits=0\n    local -i new_num_digits_len=0\n    local -i new_num_digits_len_minus_1=0\n    local -i new_num_digits_len_minus_2=0\n    local -i new_num_digits_len_minus_3=0\n    local -i new_num_digits_len_minus_4=0\n    local -i new_num_digits_len_minus_5=0\n    local -i new_num_digits_len_minus_6=0\n    local -i new_num_digits_len_minus_7=0\n    local -i new_num_digits_len_minus_8=0\n    local -i new_num_digits_len_minus_9=0\n    local -i new_num_digits_len_minus_10=0\n    local -i new_num_digits_len_minus_11=0\n    local -i new_num_digits_len_minus_12=0\n    local -i new_num_digits_len_minus_13=0\n    local -i new_num_digits_len_minus_14=0\n    local -i new_num_digits_len_minus_15=0\n    local -i new_num_digits_len_minus_16=0\n    local -i new_num_digits_len_minus_17=0\n    local -i new_num_digits_len_minus_18=0\n    local -i new_num_digits_len_minus_19=0\n    local -i new_num_digits_len_minus_20=0\n    local -i new_num_digits_len_minus_21=0\n    local -i new_num_digits_len_minus_22=0\n    local -i new_num",
    "  local number=$1\n  local digits=${#number}\n  local i=0\n  local j=0\n  local number_array=()\n  local number_sorted=()\n  local number_sorted_string=''\n  local number_sorted_string_reversed=''\n  local number_sorted_reversed=()\n  local number_sorted_reversed_string=''\n  local number_sorted_reversed_string_reversed=''\n  local number_sorted_reversed_reversed=()\n  local number_sorted_reversed_reversed_string=''\n  local number_sorted_reversed_reversed_string_reversed=''\n  local number_sorted_reversed_reversed_reversed=()\n  local number_sorted_reversed_reversed_reversed_string=''\n  local number_sorted_reversed_reversed_reversed_string_reversed=''\n  local number_sorted_reversed_reversed_reversed_reversed=()\n  local number_sorted_reversed_reversed_reversed_reversed_string=''\n  local number_sorted_reversed_reversed_reversed_reversed_string_reversed=''\n  local number_sorted_reversed_reversed_reversed_reversed_reversed=()\n  local number_sorted_reversed_reversed_reversed_reversed_reversed_string=''\n  local number_sorted_reversed_reversed_reversed_reversed_reversed_string_reversed=''\n  local number_sorted_reversed_reversed_reversed_reversed_reversed_reversed=()\n  local number_sorted_reversed_reversed_reversed_reversed_reversed_reversed_string=''\n  local number_sorted_reversed_reversed_reversed",
    "  local number=$1\n  local number_length=${#number}\n  local number_array=()\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local temp_array=()\n  local temp_array_length=0\n  local temp_array_index=0\n  local temp_array_index_2=0\n  local temp_array_index_3=0\n  local temp_array_index_4=0\n  local temp_array_index_5=0\n  local temp_array_index_6=0\n  local temp_array_index_7=0\n  local temp_array_index_8=0\n  local temp_array_index_9=0\n  local temp_array_index_10=0\n  local temp_array_index_11=0\n  local temp_array_index_12=0\n  local temp_array_index_13=0\n  local temp_array_index_14=0\n  local temp_array_index_15=0\n  local temp_array_index_16=0\n  local temp_array_index_17=0\n  local temp_array_index_18=0\n  local temp_array_index_19=0\n  local temp_array_index_20=0\n  local temp_array_index_21=0\n  local temp_array_index_22=0\n  local temp_array_index_23=0\n  local temp_array_index_24=0\n  local temp_array_index_25=0\n  local temp_array_index_26=0\n  local temp_array_index_27=0\n  local temp_array_index_28=0\n  local temp_array_index_29=0\n  local temp_array_index_30=0\n  local temp_array_index_31=0\n  local temp_array_index_32=0\n  local temp_array_index_33=0\n  local temp_array_index_34=0\n  local temp_array_index_35=0\n  local temp_array_index_36=0\n  local temp_array_index_37=0\n  local",
    "    local number=$1\n    local digits=${#number}\n    local i=$((digits - 1))\n    local j=$((digits - 1))\n    local k=$((digits - 1))\n    local digit\n    local next_bigger_number\n    local next_bigger_number_digits\n    local next_bigger_number_digit\n    local next_bigger_number_digit_index\n    local next_bigger_number_digit_index_found=0\n    local next_bigger_number_digit_index_found_first=0\n    local next_bigger_number_digit_index_found_last=0\n    local next_bigger_number_digit_index_found_last_digit\n    local next_bigger_number_digit_index_found_last_digit_index\n    local next_bigger_number_digit_index_found_last_digit_index_found=0\n    local next_bigger_number_digit_index_found_last_digit_index_found_first=0\n    local next_bigger_number_digit_index_found_last_digit_index_found_last=0\n    local next_bigger_number_digit_index_found_last_digit_index_found_last_digit\n    local next_bigger_number_digit_index_found_last_digit_index_found_last_digit_index\n    local next_bigger_number_digit_index_found_last_digit_index_found_last_digit_index_found=0\n    local next_bigger_number_digit_index_found_last_digit_index_found_last_digit_index_found_first=0\n    local next_bigger_number_digit_index_found_last_digit_index_found_last_digit_index_found_last=0\n    local next_bigger_number_digit_index_found_last_digit_index_found_last_digit_index_found_last_digit\n    local next_bigger_number_digit_index_found_last_digit_index_found_last_digit_index_found_last_digit_index\n    local next_bigger_number_",
    "  local number=\"$1\"\n  local number_length=${#number}\n  local number_array=( $(echo $number | grep -o .) )\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local temp_array=()\n  local result=0\n\n  # Find the first digit that is smaller than the digit to its right\n  for (( i=0; i<number_length-1; i++ )); do\n    if (( ${number_array[i]} < ${number_array[i+1]} )); then\n      break\n    fi\n  done\n\n  # If no such digit is found, the number is the largest possible\n  if (( i == number_length-1 )); then\n    echo \"No bigger number\"\n    return\n  fi\n\n  # Find the smallest digit to the right of the digit found above\n  for (( j=i+1; j<number_length; j++ )); do\n    if (( ${number_array[j]} > ${number_array[i]} )); then\n      temp=${number_array[j]}\n      number_array[j]=${number_array[i]}\n      number_array[i]=$temp\n      break\n    fi\n  done\n\n  # Sort the digits to the right of the digit found above\n  for (( k=i+1; k<number_length; k++ )); do\n    temp_array[k]=${number_array[k]}\n  done\n  temp_array=( $(echo ${temp_array[@]} | tr ' ' '\\n' | sort -n) )\n  for (( k=i+1; k<number_length; k++ )); do\n    number_array[k]=${temp_array[k]}\n  done\n\n  # Convert the array to a number\n  for (( k=0; k<number_length; k++ )); do\n    result=$(( result * 10 + ${number_array[k]} ))\n  done\n\n  echo $result",
    "  local -i num=$1\n  local -i num_len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i tmp=0\n  local -i num_arr=()\n\n  for (( i=0; i<num_len; i++ )); do\n    num_arr[$i]=${num:$i:1}\n  done\n\n  for (( i=num_len-1; i>0; i-- )); do\n    if [[ ${num_arr[$i]} -gt ${num_arr[$((i-1))]} ]]; then\n      tmp=${num_arr[$i]}\n      num_arr[$i]=${num_arr[$((i-1))]}\n      num_arr[$((i-1))]=$tmp\n      break\n    fi\n  done\n\n  for (( i=0; i<num_len; i++ )); do\n    for (( j=i+1; j<num_len; j++ )); do\n      if [[ ${num_arr[$j]} -lt ${num_arr[$i]} ]]; then\n        tmp=${num_arr[$i]}\n        num_arr[$i]=${num_arr[$j]}\n        num_arr[$j]=$tmp\n      fi\n    done\n  done\n\n  for (( i=0; i<num_len; i++ )); do\n    echo -n \"${num_arr[$i]}\"\n  done\n  echo",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=${#n}\n  local -i n_arr[$n_len]\n  local -i n_arr_sorted[$n_len]\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_last=0\n  local -i n_arr_sorted_last_idx=0\n  local -i n_arr_sorted_last_idx_next=0\n  local -i n_arr_sorted_last_idx_next_val=0\n  local -i n_arr_sorted_last_idx_next_val_idx=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next_val=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val_idx=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val_idx_next=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val_idx_next_val=0\n  local -i n_arr_sorted_last_idx_next_val_idx_",
    "    local number=$1\n    local number_length=${#number}\n    local number_array=($(echo $number | grep -o .))\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local temp_array=()\n    local temp_array_length=0\n    local temp_array_index=0\n    local temp_array_index_prev=0\n    local temp_array_index_next=0\n    local temp_array_index_next_prev=0\n    local temp_array_index_next_next=0\n    local temp_array_index_next_next_prev=0\n    local temp_array_index_next_next_next=0\n    local temp_array_index_next_next_next_prev=0\n    local temp_array_index_next_next_next_next=0\n    local temp_array_index_next_next_next_next_prev=0\n    local temp_array_index_next_next_next_next_next=0\n    local temp_array_index_next_next_next_next_next_prev=0\n    local temp_array_index_next_next_next_next_next_next=0\n    local temp_array_index_next_next_next_next_next_next_prev=0\n    local temp_array_index_next_next_next_next_next_next_next=0\n    local temp_array_index_next_next_next_next_next_next_next_prev=0\n    local temp_array_index_next_next_next_next_next_next_next_next=0\n    local temp_array_index_next_next_next_next_next_next_next_next_prev=0\n    local temp_array_index_next_next_next_next_next_next_next_next_next=0\n    local temp_array_index_next_next_next_next_next_next_next_next_next_prev=0\n    local temp_array_index_next_next_next_next_next_next_next_next_next_next=0\n    local temp_"
  ]
}
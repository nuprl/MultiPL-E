{
  "name": "mbpp_407_rearrange_bigger",
  "language": "sh",
  "prompt": "#!/bin/bash\n# Write a function to create the next bigger number by rearranging the digits of a given number.\n#\n# $1 is an integer\nrearrange_bigger() {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_407_rearrange_bigger.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\ncandidate() {\n    rearrange_bigger \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"12\") = \"21\" ]]\n    [[ $(candidate \"10\") = \"false\" ]]\n    [[ $(candidate \"102\") = \"120\" ]]\n}\n\nrun_test",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    local -i num=\"$1\"\n    local -i num_len=\"${#num}\"\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i tmp=0\n    local -i num_arr=()\n    local -i num_arr_sorted=()\n    local -i num_arr_sorted_len=0\n    local -i num_arr_sorted_last=0\n    local -i num_arr_sorted_last_idx=0\n    local -i num_arr_sorted_last_idx_next=0\n    local -i num_arr_sorted_last_idx_next_val=0\n    local -i num_arr_sorted_last_idx_next_val_tmp=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next_val=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next_val_tmp=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next_val_tmp_idx=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next_val_tmp_idx_next=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next_val_tmp_idx_next_val=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next_val_tmp_idx_next_val_tmp=0\n    local -i num_arr_sorted_last_idx_next_val_tmp_idx_next_val_tmp_idx_next_val_tmp_idx=",
    "  local number=$1\n  local number_length=${#number}\n  local number_array=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n",
    "  local number=$1\n  local length=${#number}\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n",
    "    local -i n=$1\n    local -i i=0\n    local -i j=0\n    local -i l=0\n    local -i r=0\n    local -i m=0\n    local -i t=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i k=0\n    local -i p=0\n    local -i q=0\n    local -i s=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i K=0\n    local -i P=0\n    local -i Q=0\n    local -i S=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i N=0\n    local -i M=0\n    local -i L=0\n    local -i R=0\n    local -i T=0\n    local -i I=0\n    local -i J=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i kk=0\n    local -i pp=0\n    local -i qq=0\n    local -i ss=0\n    local -i uu=0",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -a arr\n    local -i tmp=0\n    local -i tmp2=0\n    local -i tmp3=0\n    local -i tmp4=0\n    local -i tmp5=0\n    local -i tmp6=0\n    local -i tmp7=0\n    local -i tmp8=0\n    local -i tmp9=0\n    local -i tmp10=0\n    local -i tmp11=0\n    local -i tmp12=0\n    local -i tmp13=0\n    local -i tmp14=0\n    local -i tmp15=0\n    local -i tmp16=0\n    local -i tmp17=0\n    local -i tmp18=0\n    local -i tmp19=0\n    local -i tmp20=0\n    local -i tmp21=0\n    local -i tmp22=0\n    local -i tmp23=0\n    local -i tmp24=0\n    local -i tmp25=0\n    local -i tmp26=0\n    local -i tmp27=0\n    local -i tmp28=0\n    local -i tmp29=0\n    local -i tmp30=0\n    local -i tmp31=0\n    local -i tmp32=0\n    local -i tmp33=0\n    local -i tmp34=0\n    local -i tmp35=0\n    local -i tmp36=0\n    local -i tmp37=0\n    local -i tmp38=0\n    local -i tmp39=0\n    local -i tmp40=0\n    local -i tmp41=0\n    local -i tmp42=0\n    local -i tmp43=0\n    local -i tmp44=0\n    local -i tmp45=0\n    local -i tmp46=0\n    local -i tmp47=0\n    local -i tmp48=0\n    local -i tmp49=0\n    local -i tmp50=0\n    local -i tmp51=0\n    local -i tmp52=0\n    local -i tmp53",
    "    local -i num=$1\n    local -i digit\n    local -i next_digit\n    local -i next_num\n    local -i next_num_digit\n    local -i next_num_digit_count\n    local -i next_num_digit_count_max\n    local -i next_num_digit_count_max_digit\n    local -i next_num_digit_count_max_digit_count\n    local -i next_num_digit_count_max_digit_count_max\n    local -i next_num_digit_count_max_digit_count_max_digit\n    local -i next_num_digit_count_max_digit_count_max_digit_count\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count\n    local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i result=0\n  local -i arr=()\n  local -i arr_len=0\n\n  if [[ $num -le 0 ]]; then\n    echo \"Invalid input\"\n    return 1\n  fi\n\n  len=${#num}\n  for ((i=0; i<len; i++)); do\n    arr[i]=${num:i:1}\n  done\n  arr_len=${#arr[@]}\n\n  for ((i=arr_len-1; i>0; i--)); do\n    if [[ ${arr[i]} -gt ${arr[i-1]} ]]; then\n      tmp=${arr[i-1]}\n      arr[i-1]=${arr[i]}\n      arr[i]=$tmp\n      break\n    fi\n  done\n\n  for ((i=0; i<arr_len; i++)); do\n    result=$((result*10+arr[i]))\n  done\n\n  echo $result",
    "  local -i num=$1\n  local -i tmp=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i len=0\n  local -i arr=()\n\n  # Convert number to array\n  while [ $num -gt 0 ]; do\n    tmp=$(( num % 10 ))\n    arr[$i]=$tmp\n    num=$(( num / 10 ))\n    (( i++ ))\n  done\n\n  # Find the first digit that is smaller than the digit to its right\n  for (( i = ${#arr[@]} - 2; i >= 0; i-- )); do\n    if [ ${arr[$i]} -lt ${arr[$i + 1]} ]; then\n      break\n    fi\n  done\n\n  # If no such digit is found, the number is the largest possible\n  if [ $i -eq -1 ]; then\n    echo \"No bigger number possible\"\n    return\n  fi\n\n  # Find the smallest digit on the right side of (i-1)'th digit that is greater than number[i-1]\n  for (( j = ${#arr[@]} - 1; j > i; j-- )); do\n    if [ ${arr[$j]} -gt ${arr[$i]} ]; then\n      break\n    fi\n  done\n\n  # Swap the above found smallest digit with number[i-1]\n  tmp=${arr[$i]}\n  arr[$i]=${arr[$j]}\n  arr[$j]=$tmp\n\n  # Sort the digits after (i-1) in ascending order\n  len=${#arr[@]}\n  for (( k = i + 1; k < len; k++ )); do\n    for (( j = k + 1; j < len; j++ )); do\n      if [ ${arr[$k]} -gt ${arr[$j]} ]; then\n        tmp=${arr[$k]}\n        arr[$k]=${arr[$j]}\n        arr[$j]=$tmp\n      fi\n    done\n  done\n\n  # Convert array to number\n  num=0\n  for (( i = 0; i < len; i++ )); do\n    num=$(( num * 10 + arr",
    "  local -i n=$1\n  local -i d\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i res=0\n  local -i arr=()\n  local -i arr_len=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_tmp=0\n  local -i arr_res=0\n  local -i arr_res_len=0\n  local -i arr_res_i=0\n  local -i arr_res_j=0\n  local -i arr_res_tmp=0\n\n  # convert to array\n  while [ $num -gt 0 ]; do\n    arr[$i]=$((num % 10))\n    num=$((num / 10))\n    ((i++))\n  done\n  arr_len=${#arr[@]}\n\n  # find the first digit that is smaller than the next digit\n  for ((i=0; i<arr_len-1; i++)); do\n    if [ ${arr[$i]} -lt ${arr[$i+1]} ]; then\n      break\n    fi\n  done\n\n  # if no such digit is found, then the number is the biggest possible\n  if [ $i -eq $((arr_len-1)) ]; then\n    echo \"no bigger number found\"\n    return\n  fi\n\n  # find the smallest digit that is larger than arr[i]\n  tmp=${arr[$i]}\n  for ((j=i+1; j<arr_len; j++)); do\n    if [ ${arr[$j]} -gt $tmp ]; then\n      tmp=${arr[$j]}\n    fi\n  done\n\n  # swap arr[i] and arr[j]\n  arr[$i]=$tmp\n  arr[$j]=${arr[$i]}\n\n  # sort the digits after arr[i]\n  for ((i=0; i<arr_len-1; i++)); do\n    for ((j=i+1; j<arr_len; j++)); do\n      if [ ${arr[$i]} -gt ${arr[$j]} ]; then",
    "  local -i n=$1\n  local -i m=$n\n  local -i d=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i t=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i w=0\n  local -i u=0\n  local -i v=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i w=0\n  local -i u=0\n  local -i v=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i w=0\n  local -i u=0\n  local -i v=0\n  local -i o=0\n  local -i p=0\n  local -i q=0",
    "  local -i num=$1\n  local -i digit\n  local -i digits=0\n  local -i digits_arr=()\n  local -i digits_arr_len=0\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i result=0\n\n  # get digits\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    digits_arr[digits++]=$digit\n    num=$(( num / 10 ))\n  done\n\n  # sort digits\n  digits_arr_len=${#digits_arr[@]}\n  for (( i = 0; i < digits_arr_len; i++ )); do\n    for (( j = i + 1; j < digits_arr_len; j++ )); do\n      if (( digits_arr[i] > digits_arr[j] )); then\n        k=digits_arr[i]\n        digits_arr[i]=${digits_arr[j]}\n        digits_arr[j]=$k\n      fi\n    done\n  done\n\n  # get result\n  for (( i = 0; i < digits_arr_len; i++ )); do\n    result=$(( result * 10 + digits_arr[i] ))\n  done\n\n  echo $result",
    "    local -i num=\"$1\"\n    local -i i=0\n    local -a digits\n    local -i j=0\n    local -i k=0\n    local -i temp=0\n    local -i new_num=0\n    local -i new_num_digits=0\n    local -i new_num_digits_len=0\n    local -i new_num_digits_len_minus_1=0\n    local -i new_num_digits_len_minus_2=0\n    local -i new_num_digits_len_minus_3=0\n    local -i new_num_digits_len_minus_4=0\n    local -i new_num_digits_len_minus_5=0\n    local -i new_num_digits_len_minus_6=0\n    local -i new_num_digits_len_minus_7=0\n    local -i new_num_digits_len_minus_8=0\n    local -i new_num_digits_len_minus_9=0\n    local -i new_num_digits_len_minus_10=0\n    local -i new_num_digits_len_minus_11=0\n    local -i new_num_digits_len_minus_12=0\n    local -i new_num_digits_len_minus_13=0\n    local -i new_num_digits_len_minus_14=0\n    local -i new_num_digits_len_minus_15=0\n    local -i new_num_digits_len_minus_16=0\n    local -i new_num_digits_len_minus_17=0\n    local -i new_num_digits_len_minus_18=0\n    local -i new_num_digits_len_minus_19=0\n    local -i new_num_digits_len_minus_20=0\n    local -i new_num_digits_len_minus_21=0\n    local -i new_num_digits_len_minus_22=0\n    local -i new_num",
    "  local number=$1\n  local digits=${#number}\n  local i=0\n  local j=0\n  local number_array=()\n  local number_sorted=()\n  local number_sorted_string=''\n  local number_sorted_string_reversed=''\n  local number_sorted_reversed=()\n  local number_sorted_reversed_string=''\n  local number_sorted_reversed_string_reversed=''\n  local number_sorted_reversed_reversed=()\n  local number_sorted_reversed_reversed_string=''\n  local number_sorted_reversed_reversed_string_reversed=''\n  local number_sorted_reversed_reversed_reversed=()\n  local number_sorted_reversed_reversed_reversed_string=''\n  local number_sorted_reversed_reversed_reversed_string_reversed=''\n  local number_sorted_reversed_reversed_reversed_reversed=()\n  local number_sorted_reversed_reversed_reversed_reversed_string=''\n  local number_sorted_reversed_reversed_reversed_reversed_string_reversed=''\n  local number_sorted_reversed_reversed_reversed_reversed_reversed=()\n  local number_sorted_reversed_reversed_reversed_reversed_reversed_string=''\n  local number_sorted_reversed_reversed_reversed_reversed_reversed_string_reversed=''\n  local number_sorted_reversed_reversed_reversed_reversed_reversed_reversed=()\n  local number_sorted_reversed_reversed_reversed_reversed_reversed_reversed_string=''\n  local number_sorted_reversed_reversed_reversed",
    "  local number=$1\n  local number_length=${#number}\n  local number_array=()\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local temp_array=()\n  local temp_array_length=0\n  local temp_array_index=0\n  local temp_array_index_2=0\n  local temp_array_index_3=0\n  local temp_array_index_4=0\n  local temp_array_index_5=0\n  local temp_array_index_6=0\n  local temp_array_index_7=0\n  local temp_array_index_8=0\n  local temp_array_index_9=0\n  local temp_array_index_10=0\n  local temp_array_index_11=0\n  local temp_array_index_12=0\n  local temp_array_index_13=0\n  local temp_array_index_14=0\n  local temp_array_index_15=0\n  local temp_array_index_16=0\n  local temp_array_index_17=0\n  local temp_array_index_18=0\n  local temp_array_index_19=0\n  local temp_array_index_20=0\n  local temp_array_index_21=0\n  local temp_array_index_22=0\n  local temp_array_index_23=0\n  local temp_array_index_24=0\n  local temp_array_index_25=0\n  local temp_array_index_26=0\n  local temp_array_index_27=0\n  local temp_array_index_28=0\n  local temp_array_index_29=0\n  local temp_array_index_30=0\n  local temp_array_index_31=0\n  local temp_array_index_32=0\n  local temp_array_index_33=0\n  local temp_array_index_34=0\n  local temp_array_index_35=0\n  local temp_array_index_36=0\n  local temp_array_index_37=0\n  local",
    "    local number=$1\n    local digits=${#number}\n    local i=$((digits - 1))\n    local j=$((digits - 1))\n    local k=$((digits - 1))\n    local digit\n    local next_bigger_number\n    local next_bigger_number_digits\n    local next_bigger_number_digit\n    local next_bigger_number_digit_index\n    local next_bigger_number_digit_index_found=0\n    local next_bigger_number_digit_index_found_first=0\n    local next_bigger_number_digit_index_found_last=0\n    local next_bigger_number_digit_index_found_last_digit\n    local next_bigger_number_digit_index_found_last_digit_index\n    local next_bigger_number_digit_index_found_last_digit_index_found=0\n    local next_bigger_number_digit_index_found_last_digit_index_found_first=0\n    local next_bigger_number_digit_index_found_last_digit_index_found_last=0\n    local next_bigger_number_digit_index_found_last_digit_index_found_last_digit\n    local next_bigger_number_digit_index_found_last_digit_index_found_last_digit_index\n    local next_bigger_number_digit_index_found_last_digit_index_found_last_digit_index_found=0\n    local next_bigger_number_digit_index_found_last_digit_index_found_last_digit_index_found_first=0\n    local next_bigger_number_digit_index_found_last_digit_index_found_last_digit_index_found_last=0\n    local next_bigger_number_digit_index_found_last_digit_index_found_last_digit_index_found_last_digit\n    local next_bigger_number_digit_index_found_last_digit_index_found_last_digit_index_found_last_digit_index\n    local next_bigger_number_",
    "  local number=\"$1\"\n  local number_length=${#number}\n  local number_array=( $(echo $number | grep -o .) )\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local temp_array=()\n  local result=0\n\n  # Find the first digit that is smaller than the digit to its right\n  for (( i=0; i<number_length-1; i++ )); do\n    if (( ${number_array[i]} < ${number_array[i+1]} )); then\n      break\n    fi\n  done\n\n  # If no such digit is found, the number is the largest possible\n  if (( i == number_length-1 )); then\n    echo \"No bigger number\"\n    return\n  fi\n\n  # Find the smallest digit to the right of the digit found above\n  for (( j=i+1; j<number_length; j++ )); do\n    if (( ${number_array[j]} > ${number_array[i]} )); then\n      temp=${number_array[j]}\n      number_array[j]=${number_array[i]}\n      number_array[i]=$temp\n      break\n    fi\n  done\n\n  # Sort the digits to the right of the digit found above\n  for (( k=i+1; k<number_length; k++ )); do\n    temp_array[k]=${number_array[k]}\n  done\n  temp_array=( $(echo ${temp_array[@]} | tr ' ' '\\n' | sort -n) )\n  for (( k=i+1; k<number_length; k++ )); do\n    number_array[k]=${temp_array[k]}\n  done\n\n  # Convert the array to a number\n  for (( k=0; k<number_length; k++ )); do\n    result=$(( result * 10 + ${number_array[k]} ))\n  done\n\n  echo $result",
    "  local -i num=$1\n  local -i num_len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i tmp=0\n  local -i num_arr=()\n\n  for (( i=0; i<num_len; i++ )); do\n    num_arr[$i]=${num:$i:1}\n  done\n\n  for (( i=num_len-1; i>0; i-- )); do\n    if [[ ${num_arr[$i]} -gt ${num_arr[$((i-1))]} ]]; then\n      tmp=${num_arr[$i]}\n      num_arr[$i]=${num_arr[$((i-1))]}\n      num_arr[$((i-1))]=$tmp\n      break\n    fi\n  done\n\n  for (( i=0; i<num_len; i++ )); do\n    for (( j=i+1; j<num_len; j++ )); do\n      if [[ ${num_arr[$j]} -lt ${num_arr[$i]} ]]; then\n        tmp=${num_arr[$i]}\n        num_arr[$i]=${num_arr[$j]}\n        num_arr[$j]=$tmp\n      fi\n    done\n  done\n\n  for (( i=0; i<num_len; i++ )); do\n    echo -n \"${num_arr[$i]}\"\n  done\n  echo",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=${#n}\n  local -i n_arr[$n_len]\n  local -i n_arr_sorted[$n_len]\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_last=0\n  local -i n_arr_sorted_last_idx=0\n  local -i n_arr_sorted_last_idx_next=0\n  local -i n_arr_sorted_last_idx_next_val=0\n  local -i n_arr_sorted_last_idx_next_val_idx=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next_val=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val_idx=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val_idx_next=0\n  local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val_idx_next_val=0\n  local -i n_arr_sorted_last_idx_next_val_idx_",
    "    local number=$1\n    local number_length=${#number}\n    local number_array=($(echo $number | grep -o .))\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local temp_array=()\n    local temp_array_length=0\n    local temp_array_index=0\n    local temp_array_index_prev=0\n    local temp_array_index_next=0\n    local temp_array_index_next_prev=0\n    local temp_array_index_next_next=0\n    local temp_array_index_next_next_prev=0\n    local temp_array_index_next_next_next=0\n    local temp_array_index_next_next_next_prev=0\n    local temp_array_index_next_next_next_next=0\n    local temp_array_index_next_next_next_next_prev=0\n    local temp_array_index_next_next_next_next_next=0\n    local temp_array_index_next_next_next_next_next_prev=0\n    local temp_array_index_next_next_next_next_next_next=0\n    local temp_array_index_next_next_next_next_next_next_prev=0\n    local temp_array_index_next_next_next_next_next_next_next=0\n    local temp_array_index_next_next_next_next_next_next_next_prev=0\n    local temp_array_index_next_next_next_next_next_next_next_next=0\n    local temp_array_index_next_next_next_next_next_next_next_next_prev=0\n    local temp_array_index_next_next_next_next_next_next_next_next_next=0\n    local temp_array_index_next_next_next_next_next_next_next_next_next_prev=0\n    local temp_array_index_next_next_next_next_next_next_next_next_next_next=0\n    local temp_",
    "    local -i num=$1\n    local -i num_digits=${#num}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -",
    "  local -i n=$1\n  local -i i=0\n  local -a digits=()\n  local -i digit=0\n  local -i next_digit=0\n  local -i next_bigger=0\n  local -i tmp=0\n  local -i tmp_digit=0\n  local -i tmp_next_digit=0\n  local -i tmp_next_bigger=0\n  local -i tmp_i=0\n  local -i tmp_j=0\n  local -i tmp_k=0\n  local -i tmp_l=0\n  local -i tmp_m=0\n  local -i tmp_n=0\n  local -i tmp_o=0\n  local -i tmp_p=0\n  local -i tmp_q=0\n  local -i tmp_r=0\n  local -i tmp_s=0\n  local -i tmp_t=0\n  local -i tmp_u=0\n  local -i tmp_v=0\n  local -i tmp_w=0\n  local -i tmp_x=0\n  local -i tmp_y=0\n  local -i tmp_z=0\n  local -i tmp_aa=0\n  local -i tmp_bb=0\n  local -i tmp_cc=0\n  local -i tmp_dd=0\n  local -i tmp_ee=0\n  local -i tmp_ff=0\n  local -i tmp_gg=0\n  local -i tmp_hh=0\n  local -i tmp_ii=0\n  local -i tmp_jj=0\n  local -i tmp_kk=0\n  local -i tmp_ll=0\n  local -i tmp_mm=0\n  local -i tmp_nn=0\n  local -i tmp_oo=0\n  local -i tmp_pp=0\n  local -i tmp_qq=0\n  local -i tmp_rr=0\n  local -i tmp_ss=0\n  local -i tmp_tt=0\n  local -i tmp_uu=0\n  local -i tmp_vv=0\n  local -i tmp_ww=0\n  local -i tmp",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i len=0\n  local -i temp=0\n  local -i arr=()\n  local -i arr_len=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_k=0\n  local -i arr_temp=0\n\n  # convert number to array\n  while (( num > 0 )); do\n    arr[$i]=$(( num % 10 ))\n    num=$(( num / 10 ))\n    (( i++ ))\n  done\n  len=$i\n\n  # find the first digit that is smaller than the digit to its right\n  for (( i=len-2; i>=0; i-- )); do\n    if (( arr[i] < arr[i+1] )); then\n      temp=arr[i]\n      break\n    fi\n  done\n\n  # if no such digit is found, the number is the largest possible\n  if (( i < 0 )); then\n    echo \"No bigger number found\"\n    return 1\n  fi\n\n  # find the smallest digit to the right of the digit found in the previous step\n  # that is larger than the digit found in the previous step\n  for (( j=i+1; j<len; j++ )); do\n    if (( arr[j] > temp )); then\n      k=$j\n    fi\n  done\n\n  # swap the two digits found in the previous two steps\n  arr[i]=${arr[k]}\n  arr[k]=$temp\n\n  # reverse all the digits to the right of the digit found in the first step\n  for (( i=i+1, j=len-1; i<j; i++, j-- )); do\n    arr_temp=${arr[i]}\n    arr[i]=${arr[j]}\n    arr[j]=$arr_temp\n  done\n\n  # convert array to number\n  for (( i=0; i<len; i++ )); do\n    num=$(( num * 10 + arr[i] ))\n  done\n\n  echo $num",
    "  local -i number=$1\n  local -i length=${#number}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo",
    "  local number=\"$1\"\n  local length=${#number}\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local",
    "    local -i number=$1\n    local -i digit\n    local -i digits=0\n    local -i power=1\n    local -i new_number=0\n    local -i new_power=1\n    local -i new_digit\n    local -i new_digits=0\n    local -i new_number_found=0\n    local -i new_number_found_digit\n    local -i new_number_found_power\n    local -i new_number_found_digits\n    local -i new_number_found_number\n    local -i new_number_found_new_number\n    local -i new_number_found_new_power\n    local -i new_number_found_new_digit\n    local -i new_number_found_new_digits\n    local -i new_number_found_new_number_found\n    local -i new_number_found_new_number_found_digit\n    local -i new_number_found_new_number_found_power\n    local -i new_number_found_new_number_found_digits\n    local -i new_number_found_new_number_found_number\n    local -i new_number_found_new_number_found_new_number\n    local -i new_number_found_new_number_found_new_power\n    local -i new_number_found_new_number_found_new_digit\n    local -i new_number_found_new_number_found_new_digits\n    local -i new_number_found_new_number_found_new_number_found\n    local -i new_number_found_new_number_found_new_number_found_digit\n    local -i new_number_found_new_number_found_new_number_found_power\n    local -i new_number_found_new_number_found_new_number_found_digits\n    local -i new_number_found_new_number_found_new_number_found_number\n    local -i new_number_found_new_number_found_new_number_found_new_number\n    local -i new_number_found",
    "  local num=$1\n  local num_len=${#num}\n  local num_arr=()\n  local num_arr_len=0\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local temp_num=0\n  local temp_num_len=0\n  local temp_num_arr=()\n  local temp_num_arr_len=0\n  local temp_num_arr_str=''\n  local temp_num_arr_str_len=0\n  local temp_num_arr_str_len_diff=0\n  local temp_num_arr_str_len_diff_str=''\n  local temp_num_arr_str_len_diff_str_len=0\n  local temp_num_arr_str_len_diff_str_len_diff=0\n  local temp_num_arr_str_len_diff_str_len_diff_str=''\n  local temp_num_arr_str_len_diff_str_len_diff_str_len=0\n  local temp_num_arr_str_len_diff_str_len_diff_str_len_diff=0\n  local temp_num_arr_str_len_diff_str_len_diff_str_len_diff_str=''\n  local temp_num_arr_str_len_diff_str_len_diff_str_len_diff_str_len=0\n  local temp_num_arr_str_len_diff_str_len_diff_str_len_diff_str_len_diff=0\n  local temp_num_arr_str_len_diff_str_len_diff_str_len_diff_str_len_diff_str=''\n  local temp_num_arr_str_len_diff_str_len_diff_str_len_diff_str_len_diff_str_len=0\n  local temp_num_arr_str_len_diff_str_len_diff_str_len_diff_str_len_diff_str_len_diff=0\n  local temp_num_arr_str_len_diff_str_len_diff_str_",
    "    local num=$1\n    local num_len=${#num}\n    local num_arr=()\n    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    local tmp_arr=()\n    local tmp_len=0\n    local tmp_str=\"\"\n    local tmp_str_len=0\n    local tmp_str_arr=()\n    local tmp_str_arr_len=0\n    local tmp_str_arr_last=0\n    local tmp_str_arr_last_idx=0\n    local tmp_str_arr_last_idx_next=0\n    local tmp_str_arr_last_idx_next_val=0\n    local tmp_str_arr_last_idx_next_val_idx=0\n    local tmp_str_arr_last_idx_next_val_idx_next=0\n    local tmp_str_arr_last_idx_next_val_idx_next_val=0\n    local tmp_str_arr_last_idx_next_val_idx_next_val_idx=0\n    local tmp_str_arr_last_idx_next_val_idx_next_val_idx_next=0\n    local tmp_str_arr_last_idx_next_val_idx_next_val_idx_next_val=0\n    local tmp_str_arr_last_idx_next_val_idx_next_val_idx_next_val_idx=0\n    local tmp_str_arr_last_idx_next_val_idx_next_val_idx_next_val_idx_next=0\n    local tmp_str_arr_last_idx_next_val_idx_next_val_idx_next_val_idx_next_val=0\n    local tmp_str_arr_last_idx_next_val_idx_next_val_idx_next_val_idx_next_val_idx=0\n    local tmp_str_arr_last_idx_next_val_idx_next_",
    "  local num=$1\n  local num_len=${#num}\n  local i=0\n  local j=0\n  local temp=0\n  local temp_num=0\n  local temp_num_len=0\n  local temp_num_len_diff=0\n  local temp_num_len_diff_str=\"\"\n  local temp_num_len_diff_str_len=0\n  local temp_num_len_diff_str_len_diff=0\n  local temp_num_len_diff_str_len_diff_str=\"\"\n  local temp_num_len_diff_str_len_diff_str_len=0\n  local temp_num_len_diff_str_len_diff_str_len_diff=0\n  local temp_num_len_diff_str_len_diff_str_len_diff_str=\"\"\n  local temp_num_len_diff_str_len_diff_str_len_diff_str_len=0\n  local temp_num_len_diff_str_len_diff_str_len_diff_str_len_diff=0\n  local temp_num_len_diff_str_len_diff_str_len_diff_str_len_diff_str=\"\"\n  local temp_num_len_diff_str_len_diff_str_len_diff_str_len_diff_str_len=0\n  local temp_num_len_diff_str_len_diff_str_len_diff_str_len_diff_str_len_diff=0\n  local temp_num_len_diff_str_len_diff_str_len_diff_str_len_diff_str_len_diff_str=\"\"\n  local temp_num_len_diff_str_len_diff_str_len_diff_str_len_diff_str_len_diff_str_len=0\n  local temp_num_len_diff_str_len_diff_str_len_diff_str_len_diff_str_len_diff_str_len_diff=0\n  local temp_num_len_diff_str_len_diff_str_len_diff_str_len_diff_str_len",
    "  local number=$1\n  local number_length=${#number}\n  local number_array=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n",
    "  local -i n=$1\n  local -i d1 d2\n  local -i n_digits=${#n}\n  local -i n_swaps=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_permutations=0\n  local -i n_permutations_max=0\n  local -i n_permutations_max_index=0\n  local -i n_permutations_max_index_prev=0\n  local -i n_permutations_max_prev=0\n  local -i n_permutations_max_prev_prev=0\n  local -i n_permutations_max_prev_prev_prev=0\n  local -i n_permutations_max_prev_prev_prev_prev=0\n  local -i n_permutations_max_prev_prev_prev_prev_prev=0\n  local -i n_permutations_max_prev_prev_prev_prev_prev_prev=0\n  local -i n_permutations_max_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_permutations_max_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_permutations_max_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_permutations_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_permutations_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_permutations_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_permutations_max_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_permutations_max_prev_prev_prev_prev_prev_prev",
    "    local -i n=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n_len=0\n    local -i n_arr=()\n    local -i n_arr_len=0\n    local -i n_arr_len_minus_1=0\n    local -i n_arr_len_minus_2=0\n    local -i n_arr_len_minus_3=0\n    local -i n_arr_len_minus_4=0\n    local -i n_arr_len_minus_5=0\n    local -i n_arr_len_minus_6=0\n    local -i n_arr_len_minus_7=0\n    local -i n_arr_len_minus_8=0\n    local -i n_arr_len_minus_9=0\n    local -i n_arr_len_minus_10=0\n    local -i n_arr_len_minus_11=0\n    local -i n_arr_len_minus_12=0\n    local -i n_arr_len_minus_13=0\n    local -i n_arr_len_minus_14=0\n    local -i n_arr_len_minus_15=0\n    local -i n_arr_len_minus_16=0\n    local -i n_arr_len_minus_17=0\n    local -i n_arr_len_minus_18=0\n    local -i n_arr_len_minus_19=0\n    local -i n_arr_len_minus_20=0\n    local -i n_arr_len_minus_21=0\n    local -i n_arr_len_minus_22=0\n    local -i n_arr_len_minus_23=0\n    local -i n_arr_len_minus_24=0\n    local -i n_arr_len_minus_25=0\n    local -i n_arr_len_minus_26=0\n    local -i n_arr_len_minus_27=0",
    "    local -i n=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n_len=0\n    local -i n_arr=()\n    local -i n_arr_len=0\n    local -i n_arr_sorted=()\n    local -i n_arr_sorted_len=0\n    local -i n_arr_sorted_min=0\n    local -i n_arr_sorted_min_idx=0\n    local -i n_arr_sorted_min_idx_2=0\n    local -i n_arr_sorted_min_idx_2_val=0\n    local -i n_arr_sorted_min_idx_2_val_idx=0\n    local -i n_arr_sorted_min_idx_2_val_idx_2=0\n    local -i n_arr_sorted_min_idx_2_val_idx_2_val=0\n    local -i n_arr_sorted_min_idx_2_val_idx_2_val_idx=0\n    local -i n_arr_sorted_min_idx_2_val_idx_2_val_idx_2=0\n    local -i n_arr_sorted_min_idx_2_val_idx_2_val_idx_2_val=0\n    local -i n_arr_sorted_min_idx_2_val_idx_2_val_idx_2_val_idx=0\n    local -i n_arr_sorted_min_idx_2_val_idx_2_val_idx_2_val_idx_2=0\n    local -i n_arr_sorted_min_idx_2_val_idx_2_val_idx_2_val_idx_2_val=0\n    local -i n_arr_sorted_min_idx_2_val_idx",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n  local -i ppp=0",
    "  local -i num=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i flag=0\n  local -i arr=()\n  local -i res=0\n\n  if [[ $num -lt 10 ]]; then\n    echo -1\n    return\n  fi\n\n  while [[ $num -gt 0 ]]; do\n    arr[$i]=$(( num % 10 ))\n    num=$(( num / 10 ))\n    (( i++ ))\n  done\n\n  len=$i\n  (( i-- ))\n\n  while [[ $i -gt 0 ]]; do\n    if [[ ${arr[$i]} -gt ${arr[$(( i - 1 ))]} ]]; then\n      tmp=${arr[$i]}\n      arr[$i]=${arr[$(( i - 1 ))]}\n      arr[$(( i - 1 ))]=$tmp\n      flag=1\n      break\n    fi\n    (( i-- ))\n  done\n\n  if [[ $flag -eq 0 ]]; then\n    echo -1\n    return\n  fi\n\n  for (( j = 0; j < len; j++ )); do\n    res=$(( res * 10 + arr[$j] ))\n  done\n\n  echo $res",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i nn=0\n  local -i nnn=0\n  local -i nnnn=0\n  local -i nnnnn=0\n  local -i nnnnnn=0\n  local -i nnnnnnn=0\n  local -i nnnnnnnn=0\n  local -i nnnnnnnnn=0\n  local -i nnnnnnnnnn=0\n  local -i nnnnnnnnnnn=0\n  local -i nnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnn",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_last=0\n  local -i n_arr_sorted_last_idx=0\n  local -i n_arr_sorted_last_idx_prev=0\n  local -i n_arr_sorted_last_idx_prev_val=0\n  local -i n_arr_sorted_last_idx_prev_val_idx=0\n  local -i n_arr_sorted_last_idx_prev_val_idx_prev=0\n  local -i n_arr_sorted_last_idx_prev_val_idx_prev_val=0\n  local -i n_arr_sorted_last_idx_prev_val_idx_prev_val_idx=0\n  local -i n_arr_sorted_last_idx_prev_val_idx_prev_val_idx_prev=0\n  local -i n_arr_sorted_last_idx_prev_val_idx_prev_val_idx_prev_val=0\n  local -i n_arr_sorted_last_idx_prev_val_idx_prev_val_idx_prev_val_idx=0\n  local -i n_arr_sorted_last_idx_prev_val_idx_prev_val_idx_prev_val_idx_prev=0\n  local -i n_arr_sorted_last_idx_prev_val_idx_prev_val_idx_prev_val_idx_prev_val=0\n  local -i n_arr_sorted_last_idx_prev_val_idx_prev_val_idx_prev_val_",
    "  local num=$1\n  local len=${#num}\n  local i=0\n  local j=0\n  local tmp=0\n  local arr=()\n  local result=0\n\n  for ((i=0; i<len; i++)); do\n    arr[i]=${num:$i:1}\n  done\n\n  for ((i=len-1; i>0; i--)); do\n    if [[ ${arr[i]} -gt ${arr[i-1]} ]]; then\n      tmp=${arr[i]}\n      arr[i]=${arr[i-1]}\n      arr[i-1]=$tmp\n      break\n    fi\n  done\n\n  for ((i=i+1; i<len; i++)); do\n    for ((j=i+1; j<len; j++)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$tmp\n      fi\n    done\n  done\n\n  for ((i=0; i<len; i++)); do\n    result=$((result*10+arr[i]))\n  done\n\n  echo $result",
    "  local -i number=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0",
    "    local number=$1\n    local digits=$(echo $number | sed 's/./& /g')\n    local -a array=($digits)\n    local -a sorted=($(echo ${array[*]} | tr ' ' '\\n' | sort -n))\n    local -a reversed=($(echo ${sorted[*]} | tr ' ' '\\n' | tac))\n    local -a next=($(echo ${reversed[*]} | tr ' ' '\\n' | sort -n))\n    local -a next_reversed=($(echo ${next[*]} | tr ' ' '\\n' | tac))\n    local next_number=$(echo ${next_reversed[*]} | tr ' ' '')\n    echo $next_number",
    "  local -i num=$1\n  local -i len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo",
    "  local -i num=$1\n  local -i digit=0\n  local -i next_digit=0\n  local -i next_bigger_num=0\n  local -i multiplier=1\n  local -i next_multiplier=1\n  local -i digits=0\n  local -i next_digits=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n ",
    "    local -i n=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n_len=0\n    local -i n_arr=()\n    local -i n_arr_len=0\n    local -i n_arr_i=0\n    local -i n_arr_j=0\n    local -i n_arr_k=0\n    local -i n_arr_l=0\n    local -i n_arr_m=0\n    local -i n_arr_tmp=0\n    local -i n_arr_tmp_len=0\n    local -i n_arr_tmp_i=0\n    local -i n_arr_tmp_j=0\n    local -i n_arr_tmp_k=0\n    local -i n_arr_tmp_l=0\n    local -i n_arr_tmp_m=0\n    local -i n_arr_tmp_n=0\n    local -i n_arr_tmp_n_len=0\n    local -i n_arr_tmp_n_arr=()\n    local -i n_arr_tmp_n_arr_len=0\n    local -i n_arr_tmp_n_arr_i=0\n    local -i n_arr_tmp_n_arr_j=0\n    local -i n_arr_tmp_n_arr_k=0\n    local -i n_arr_tmp_n_arr_l=0\n    local -i n_arr_tmp_n_arr_m=0\n    local -i n_arr_tmp_n_arr_tmp=0\n    local -i n_arr_tmp_n_arr_tmp_len=0\n    local -i n_arr_tmp_n_arr_tmp_i=0\n    local -i n_arr_tmp_n_arr_tmp_j=0\n    local -i n_arr_tmp_n_arr_tmp_k=0\n    local -i n_arr_tmp_n_arr_tmp_l=0\n    local -",
    "  local num=$1\n  local num_len=${#num}\n  local num_arr=($(echo $num | grep -o .))\n  local i=0\n  local j=0\n  local tmp=0\n  local swap=0\n  local swap_idx=0\n  local swap_idx_arr=()\n  local swap_idx_len=0\n  local swap_idx_arr_len=0\n  local swap_num=0\n  local swap_num_len=0\n  local swap_num_arr=()\n  local swap_num_arr_len=0\n  local swap_num_arr_idx=0\n  local swap_num_arr_idx_len=0\n  local swap_num_arr_idx_arr=()\n  local swap_num_arr_idx_arr_len=0\n  local swap_num_arr_idx_arr_idx=0\n  local swap_num_arr_idx_arr_idx_len=0\n  local swap_num_arr_idx_arr_idx_arr=()\n  local swap_num_arr_idx_arr_idx_arr_len=0\n  local swap_num_arr_idx_arr_idx_arr_idx=0\n  local swap_num_arr_idx_arr_idx_arr_idx_len=0\n  local swap_num_arr_idx_arr_idx_arr_idx_arr=()\n  local swap_num_arr_idx_arr_idx_arr_idx_arr_len=0\n  local swap_num_arr_idx_arr_idx_arr_idx_arr_idx=0\n  local swap_num_arr_idx_arr_idx_arr_idx_arr_idx_len=0\n  local swap_num_arr_idx_arr_idx_arr_idx_arr_idx_arr=()\n  local swap_num_arr_idx_arr_idx_arr_idx_arr_idx_arr_len=0\n  local swap_num_arr_",
    "    local number=$1\n    local digits=${#number}\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local arr=()\n    local result=0\n\n    for (( i=0; i<digits; i++ )); do\n        arr[i]=${number:i:1}\n    done\n\n    for (( i=digits-1; i>0; i-- )); do\n        if (( arr[i] > arr[i-1] )); then\n            temp=${arr[i]}\n            arr[i]=${arr[i-1]}\n            arr[i-1]=$temp\n            break\n        fi\n    done\n\n    for (( i=i+1; i<digits; i++ )); do\n        for (( j=i+1; j<digits; j++ )); do\n            if (( arr[i] > arr[j] )); then\n                temp=${arr[i]}\n                arr[i]=${arr[j]}\n                arr[j]=$temp\n            fi\n        done\n    done\n\n    for (( i=0; i<digits; i++ )); do\n        result=$(( result*10 + arr[i] ))\n    done\n\n    echo $result",
    "  local num=$1\n  local len=${#num}\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local aa\n  local bb\n  local cc\n  local dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local ii\n  local jj\n  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n  local pp\n  local qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local vv\n  local ww\n  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n  local ccc\n  local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n  local iii\n  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n  local ooo\n  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n  local uuu\n  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n  local aaaa\n  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local ffff\n  local gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n  local llll\n  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n  local qqqq\n  local rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local vvvv\n  local wwww\n  local xxxx\n  local yyyy\n  local zzzz\n  local aaaaa\n  local bbbbb\n  local ccccc\n  local ddddd\n  local eeeee\n",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i tmp=0\n    local -i len=0\n    local -a arr\n    local -a arr2\n    local -i arr_len=0\n    local -i arr2_len=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i result=0\n  local -a arr\n  local -a arr_sorted\n  local -a arr_sorted_rev\n\n  # Convert the number to an array of digits\n  while (( num > 0 )); do\n    arr[i++]=$(( num % 10 ))\n    num=$(( num / 10 ))\n  done\n  len=${#arr[@]}\n\n  # Sort the array of digits in ascending order\n  arr_sorted=($(printf '%s\\n' \"${arr[@]}\" | sort -n))\n\n  # Reverse the sorted array\n  for (( i=0; i<len; i++ )); do\n    arr_sorted_rev[i]=${arr_sorted[len-i-1]}\n  done\n\n  # Find the first digit in the sorted array that is greater than the digit in the same position in the original array\n  for (( i=0; i<len; i++ )); do\n    if (( arr[i] < arr_sorted_rev[i] )); then\n      tmp=${arr_sorted_rev[i]}\n      arr_sorted_rev[i]=${arr[i]}\n      arr[i]=$tmp\n      break\n    fi\n  done\n\n  # Sort the digits in the original array after the first digit that was swapped\n  for (( i=i+1; i<len; i++ )); do\n    for (( j=i+1; j<len; j++ )); do\n      if (( arr[i] > arr[j] )); then\n        tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$tmp\n      fi\n    done\n  done\n\n  # Concatenate the digits in the original array after the first digit that was swapped\n  for (( i=0; i<len; i++ )); do\n    result=$(( result * 10 + arr[i] ))\n  done\n\n  # Concatenate the digits in the sorted array before the first digit that was swapped\n  for (( i=0; i",
    "    local -i n=$1\n    local -i d1 d2\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n1=0\n    local -i n2=0\n    local -i n3=0\n    local -i n4=0\n    local -i n5=0\n    local -i n6=0\n    local -i n7=0\n    local -i n8=0\n    local -i n9=0\n    local -i n10=0\n    local -i n11=0\n    local -i n12=0\n    local -i n13=0\n    local -i n14=0\n    local -i n15=0\n    local -i n16=0\n    local -i n17=0\n    local -i n18=0\n    local -i n19=0\n    local -i n20=0\n    local -i n21=0\n    local -i n22=0\n    local -i n23=0\n    local -i n24=0\n    local -i n25=0\n    local -i n26=0\n    local -i n27=0\n    local -i n28=0\n    local -i n29=0\n    local -i n30=0\n    local -i n31=0\n    local -i n32=0\n    local -i n33=0\n    local -i n34=0\n    local -i n35=0\n    local -i n36=0\n    local -i n37=0\n    local -i n38=0\n    local -i n39=0\n    local -i n40=0\n    local -i n41=0\n    local -i n42=0\n    local -i n43=0\n    local -i n44=0\n    local -i n45=0\n    local -i n46=0\n    local -i n47=0\n    local -i n48=0\n    local -i n49=0\n    local -i n50=0\n    local -i",
    "    local number=\"$1\"\n    local number_len=${#number}\n    local number_array=($(echo \"$number\" | grep -o .))\n\n    # Find the first digit that is smaller than the digit to its right\n    local i=0\n    while [[ $i -lt $((number_len - 1)) ]]; do\n        if [[ ${number_array[$i]} -lt ${number_array[$((i + 1))]} ]]; then\n            break\n        fi\n        i=$((i + 1))\n    done\n\n    # If no such digit exists, the number is already the largest possible\n    if [[ $i -eq $((number_len - 1)) ]]; then\n        echo \"$number\"\n        return\n    fi\n\n    # Find the smallest digit to the right of the digit found above that is larger than it\n    local j=$((i + 1))\n    while [[ $j -lt $number_len ]]; do\n        if [[ ${number_array[$i]} -lt ${number_array[$j]} ]]; then\n            if [[ $j -eq $((i + 1)) ]] || [[ ${number_array[$j]} -lt ${number_array[$((j - 1))]} ]]; then\n                break\n            fi\n        fi\n        j=$((j + 1))\n    done\n\n    # Swap the two digits found above\n    local temp=${number_array[$i]}\n    number_array[$i]=${number_array[$j]}\n    number_array[$j]=$temp\n\n    # Reverse all the digits to the right of the digit found in step 1\n    local k=$((i + 1))\n    local l=$((number_len - 1))\n    while [[ $k -lt $l ]]; do\n        temp=${number_array[$k]}\n        number_array[$k]=${number_array[$l]}\n        number_array[$l]=$temp\n        k=$((k + 1))\n        l=$((l - 1))\n    done\n\n    # Join the array into a string\n    local result=\"\"\n    for digit in \"${number_array[@]}\"; do\n        result+=\"$digit\"\n    done\n   ",
    "  local -i number=\"$1\"\n  local -i digit\n  local -i digits=0\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i next_bigger_number\n\n  # Count the number of digits\n  while (( number > 0 )); do\n    (( number /= 10 ))\n    (( digits++ ))\n  done\n\n  # Extract the digits\n  number=\"$1\"\n  for (( i = 0; i < digits; i++ )); do\n    (( digit = number % 10 ))\n    (( number /= 10 ))\n    case \"$digit\" in\n      0) (( z++ )) ;;\n      1) (( y++ )) ;;\n      2) (( x++ )) ;;\n      3) (( w++ )) ;;\n      4) (( v++ )) ;;\n      5) (( u++ )) ;;\n      6) (( t++ )) ;;\n      7) (( s++ )) ;;\n      8) (( r++ )) ;;\n      9) (( q++ )) ;;\n    esac\n  done\n\n  # Find the next bigger number\n  for (( i = 0; i < digits; i++ )); do\n    (( digit = number % 10 ))\n    (( number /= 10 ))\n    case \"$digit\" in\n      0) (( z-- )) ;;\n      1) (( y-- )) ;;\n      2) (( x-- )) ;;\n      3) (( w-- )) ;;\n      4) (( v-- )) ;;\n      5) (( u-- )) ;;\n      6) (( t-- )) ;;\n      7) (( s-- )) ;;\n      8) (( r-- )) ;;\n      9) (( q-- )) ;;\n    esac\n    for (( j = digit + 1; j < 10; j++ )); do\n      case \"$j\" in\n        0) (( z > 0 )) && (( next_bigger_number =",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_i=0\n  local -i n_arr_j=0\n  local -i n_arr_k=0\n  local -i n_arr_l=0\n  local -i n_arr_m=0\n  local -i n_arr_n=0\n  local -i n_arr_n_len=0\n  local -i n_arr_n_arr=()\n  local -i n_arr_n_arr_len=0\n  local -i n_arr_n_arr_i=0\n  local -i n_arr_n_arr_j=0\n  local -i n_arr_n_arr_k=0\n  local -i n_arr_n_arr_l=0\n  local -i n_arr_n_arr_m=0\n  local -i n_arr_n_arr_n=0\n  local -i n_arr_n_arr_n_len=0\n  local -i n_arr_n_arr_n_arr=()\n  local -i n_arr_n_arr_n_arr_len=0\n  local -i n_arr_n_arr_n_arr_i=0\n  local -i n_arr_n_arr_n_arr_j=0\n  local -i n_arr_n_arr_n_arr_k=0\n  local -i n_arr_n_arr_n_arr_l=0\n  local -i n_arr_n_arr_n_arr_m=0\n  local -i n_arr_n_arr_n_arr_n=0\n  local -i n_arr_n_arr_n_arr_n_len=0\n  local -i n_arr_n_arr_n_arr_n_arr=()",
    "  local -i num=$1\n  local -i i=0\n  local -a digits\n  local -i len=${#num}\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n",
    "  local -i n=$1\n  local -i n_len=${#n}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_bigger=0\n  local -i n_bigger_len=0\n  local -i n_bigger_arr=()\n  local -i n_bigger_arr_len=0\n  local -i n_bigger_arr_last=0\n  local -i n_bigger_arr_last_idx=0\n  local -i n_bigger_arr_last_idx_1=0\n  local -i n_bigger_arr_last_idx_2=0\n  local -i n_bigger_arr_last_idx_3=0\n  local -i n_bigger_arr_last_idx_4=0\n  local -i n_bigger_arr_last_idx_5=0\n  local -i n_bigger_arr_last_idx_6=0\n  local -i n_bigger_arr_last_idx_7=0\n  local -i n_bigger_arr_last_idx_8=0\n  local -i n_bigger_arr_last_idx_9=0\n  local -i n_bigger_arr_last_idx_10=0\n  local -i n_bigger_arr_last_idx_11=0\n  local -i n_bigger_arr_last_idx_12=0\n  local -i n_bigger_arr_last_idx_13=0\n  local -i n_bigger_arr_last_idx_14=0\n  local -i n_bigger_arr_last_idx_15=0\n  local -i n_bigger_arr_last_idx_16=0\n  local -i n_bigger_arr_last_idx_17=0\n  local -i n_bigger_arr_last_idx_18=0\n  local -i n",
    "  local number=$1\n  local digits=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local result=0\n  local temp=0\n  local temp2=0\n\n  # Split number into digits\n  while [ $number -gt 0 ]; do\n    digits[$i]=$(( number % 10 ))\n    number=$(( number / 10 ))\n    i=$(( i + 1 ))\n  done\n\n  # Find the first digit that is smaller than the next digit\n  for (( j = ${#digits[@]} - 2; j >= 0; j-- )); do\n    if [ ${digits[$j]} -lt ${digits[$(( j + 1 ))]} ]; then\n      break\n    fi\n  done\n\n  # If no digit is smaller than the next digit, the number is the biggest possible\n  if [ $j -eq -1 ]; then\n    echo \"No bigger number possible\"\n    return\n  fi\n\n  # Find the smallest digit that is bigger than the digit at $j\n  for (( k = ${#digits[@]} - 1; k > j; k-- )); do\n    if [ ${digits[$k]} -gt ${digits[$j]} ]; then\n      break\n    fi\n  done\n\n  # Swap the digits at $j and $k\n  temp=${digits[$j]}\n  digits[$j]=${digits[$k]}\n  digits[$k]=$temp\n\n  # Reverse the digits after $j\n  for (( l = j + 1, m = ${#digits[@]} - 1; l < m; l++, m-- )); do\n    temp=${digits[$l]}\n    digits[$l]=${digits[$m]}\n    digits[$m]=$temp\n  done\n\n  # Build the result",
    "    local -i num=$1\n    local -i len=${#num}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i tmp=0\n    local -i arr=()\n    local -i arr2=()\n    local -i arr3=()\n    local -i arr4=()\n    local -i arr5=()\n    local -i arr6=()\n    local -i arr7=()\n    local -i arr8=()\n    local -i arr9=()\n    local -i arr10=()\n    local -i arr11=()\n    local -i arr12=()\n    local -i arr13=()\n    local -i arr14=()\n    local -i arr15=()\n    local -i arr16=()\n    local -i arr17=()\n    local -i arr18=()\n    local -i arr19=()\n    local -i arr20=()\n    local -i arr21=()\n    local -i arr22=()\n    local -i arr23=()\n    local -i arr24=()\n    local -i arr25=()\n    local -i arr26=()\n    local -i arr27=()\n    local -i arr28=()\n    local -i arr29=()\n    local -i arr30=()\n    local -i arr31=()\n    local -i arr32=()\n    local -i arr33=()\n    local -i arr34=()\n    local -i arr35=()\n    local -i arr36=()\n    local -i arr37=()\n    local -i arr38=()\n    local -i arr39=()\n    local -i arr40=()\n    local -i arr41=()\n    local -i arr42=()\n    local -i arr43=()\n    local -i arr44=()\n    local -i arr45=()\n    local -i arr46=()\n    local -i arr47=()\n    local -i arr48=()\n    local -i arr49=()\n    local -i arr50=()\n    local -i arr51=()\n    local",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i num_arr=()\n    local -i tmp=0\n    local -i tmp_arr=()\n    local -i tmp_len=0\n    local -i tmp_i=0\n    local -i tmp_j=0\n    local -i tmp_num=0\n    local -i tmp_num_arr=()\n    local -i tmp_num_len=0\n    local -i tmp_num_i=0\n    local -i tmp_num_j=0\n    local -i result=0\n    local -i result_arr=()\n    local -i result_len=0\n    local -i result_i=0\n    local -i result_j=0\n    local -i result_num=0\n    local -i result_num_arr=()\n    local -i result_num_len=0\n    local -i result_num_i=0\n    local -i result_num_j=0\n\n    if [[ $num -lt 0 ]]; then\n        echo \"Error: $num is not a positive integer.\"\n        return 1\n    fi\n\n    if [[ $num -lt 10 ]]; then\n        echo \"Error: $num is a single digit number.\"\n        return 1\n    fi\n\n    num_arr=($(echo $num | sed -e 's/\\(.\\)/\\1 /g'))\n    len=${#num_arr[@]}\n\n    for ((i=0; i<len; i++)); do\n        if [[ ${num_arr[$i]} -lt ${num_arr[$((i+1))]} ]]; then\n            tmp=${num_arr[$i]}\n            num_arr[$i]=${num_arr[$((i+1))]}\n            num_arr[$((i+1))]=$tmp\n            break\n        fi\n    done\n\n    tmp_arr=(${num_arr[@]:$((i+1))})\n    tmp_len=${#tmp_arr[@]}\n\n    for ((tmp_i=0; tmp_i<tmp",
    "    local num=$1\n    local digits=()\n    local i=0\n    local j=0\n    local tmp=0\n    local result=0\n\n    # Convert the number to an array of digits\n    while [ $num -gt 0 ]; do\n        digits[$i]=$((num % 10))\n        num=$((num / 10))\n        i=$((i + 1))\n    done\n\n    # Find the first digit that is smaller than the digit to its right\n    for ((j = ${#digits[@]} - 1; j > 0; j--)); do\n        if [ ${digits[$j]} -gt ${digits[$((j - 1))]} ]; then\n            break\n        fi\n    done\n\n    # If no such digit exists, the number is already at its maximum\n    if [ $j -eq 0 ]; then\n        echo \"No bigger number exists\"\n        return\n    fi\n\n    # Find the smallest digit to the right of the pivot that is larger than the pivot\n    for ((i = ${#digits[@]} - 1; i > j; i--)); do\n        if [ ${digits[$i]} -gt ${digits[$((j - 1))]} ]; then\n            break\n        fi\n    done\n\n    # Swap the pivot with the smallest digit to its right that is larger than the pivot\n    tmp=${digits[$((j - 1))]}\n    digits[$((j - 1))]=${digits[$i]}\n    digits[$i]=$tmp\n\n    # Reverse the digits to the right of the pivot\n    for ((i = 0; i < ${#digits[@]} - j; i++)); do\n        tmp=${digits[$((j + i))]}\n        digits[$((j + i))]=${digits[$(((j - 1) - i))]}\n        digits[$(((j - 1) - i))]=$tmp\n    done\n\n    # Convert the array of digits back to a number\n    for ((i = 0; i < ${#digits[@]}; i++)); do\n        result=$((result * 10 + digits[$i]))\n    done\n\n    echo $result",
    "  local -i num=\"$1\"\n  local -i num_len=\"${#num}\"\n  local -i i=0 j=0\n  local -i num_arr=()\n  local -i num_arr_len=0\n  local -i num_arr_sorted=()\n  local -i num_arr_sorted_len=0\n  local -i num_arr_sorted_idx=0\n  local -i num_arr_sorted_idx_prev=0\n  local -i num_arr_sorted_idx_prev_prev=0\n  local -i num_arr_sorted_idx_prev_prev_prev=0\n  local -i num_arr_sorted_idx_prev_prev_prev_prev=0\n  local -i num_arr_sorted_idx_prev_prev_prev_prev_prev=0\n  local -i num_arr_sorted_idx_prev_prev_prev_prev_prev_prev=0\n  local -i num_arr_sorted_idx_prev_prev_prev_prev_prev_prev_prev=0\n  local -i num_arr_sorted_idx_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i num_arr_sorted_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i num_arr_sorted_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i num_arr_sorted_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i num_arr_sorted_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i num_arr_sorted_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i num_arr_sorted_idx_prev_prev_prev_prev",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n  local -i ppp=0\n  local -i qqq=0\n  local -i rrr",
    "  local -i num=$1\n  local -i len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo",
    "  local -i num=$1\n  local -i num_len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local",
    "  local -i num=$1\n  local -i len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i tmp=0\n  local -i res=0\n  local -i arr=()\n  local -i arr_len=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_tmp=0\n  local -i arr_res=0\n  local -i arr_flag=0\n  local -i flag=0\n  local -i flag_arr=0\n  local -i flag_arr_tmp=0\n  local -i flag_arr_res=0\n  local -i flag_arr_flag=0\n  local -i flag_arr_i=0\n  local -i flag_arr_j=0\n  local -i flag_arr_len=0\n  local -i flag_arr_arr=()\n  local -i flag_arr_arr_len=0\n  local -i flag_arr_arr_i=0\n  local -i flag_arr_arr_j=0\n  local -i flag_arr_arr_tmp=0\n  local -i flag_arr_arr_res=0\n  local -i flag_arr_arr_flag=0\n  local -i flag_arr_arr_arr=()\n  local -i flag_arr_arr_arr_len=0\n  local -i flag_arr_arr_arr_i=0\n  local -i flag_arr_arr_arr_j=0\n  local -i flag_arr_arr_arr_tmp=0\n  local -i flag_arr_arr_arr_res=0\n  local -i flag_arr_arr_arr_flag=0\n  local -i flag_arr_arr_arr_arr=()\n  local -i flag_arr_arr_arr_arr_len=0\n  local -i flag_arr_arr_arr_arr_i=0\n  local -i flag_arr_arr_arr_arr_j=0\n  local -i flag_arr_arr_arr_arr_tmp=0\n  local -i flag_arr_",
    "    local -i n=\"$1\"\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n_len=0\n    local -i n_arr=()\n    local -i n_arr_len=0\n    local -i n_arr_sorted=()\n    local -i n_arr_sorted_len=0\n    local -i n_arr_sorted_last=0\n    local -i n_arr_sorted_last_idx=0\n    local -i n_arr_sorted_last_idx_next=0\n    local -i n_arr_sorted_last_idx_next_val=0\n    local -i n_arr_sorted_last_idx_next_val_idx=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next_val=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val_idx=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val_idx_next=0\n    local -i n_arr_sorted_last_idx_next_val_idx_next_val_idx_next_val_idx_next_val=0\n    local -i n_arr_sorted_last_idx_next_val_",
    "  local number=$1\n  local -a digits\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\n  # Split the number into digits\n  while [ $number -gt 0 ]; do\n    digits[i++]=$(( number % 10 ))\n    number=$(( number / 10 ))\n  done\n\n  # Count the number of each digit\n  for (( i=0; i<${#digits[@]}; i++ )); do\n    case ${digits[i]} in\n      0) (( j++ )) ;;\n      1) (( k++ )) ;;\n      2) (( l++ )) ;;\n      3) (( m++ )) ;;\n      4) (( n++ )) ;;\n      5) (( o++ )) ;;\n      6) (( p++ )) ;;\n      7) (( q++ )) ;;\n      8) (( r++ )) ;;\n      9) (( s++ )) ;;\n    esac\n  done\n\n  # Find the first digit that is not the maximum\n  for (( i=0; i<${#digits[@]}; i++ )); do\n    case ${digits[i]} in\n      0) (( t++ )) ;;\n      1) (( u++ )) ;;\n      2) (( v++ )) ;;\n      3) (( w++ )) ;;\n      4) (( x++ )) ;;\n      5) (( y++ )) ;;\n      6) (( z++ )) ;;\n    esac\n    if [ $t -lt $j ]; then\n      digits[i]=1\n      break\n    elif [ $u -lt $k ]; then\n      digits[i]=2\n      break\n    elif [ $v -lt $l ]; then\n      digits[i",
    "    local -i n=$1\n    local -i i=0\n    local -i j=0\n    local -a digits=()\n    local -i num_digits=0\n    local -i tmp=0\n    local -i next_bigger=0\n    local -i next_bigger_found=0\n\n    while [ $n -gt 0 ]; do\n        tmp=$(( n % 10 ))\n        digits[$i]=$tmp\n        n=$(( n / 10 ))\n        (( i++ ))\n    done\n\n    num_digits=$i\n\n    for (( i = num_digits - 1; i > 0; i-- )); do\n        if [ ${digits[$i]} -gt ${digits[$(( i - 1 ))]} ]; then\n            tmp=${digits[$i]}\n            digits[$i]=${digits[$(( i - 1 ))]}\n            digits[$(( i - 1 ))]=$tmp\n            next_bigger_found=1\n            break\n        fi\n    done\n\n    if [ $next_bigger_found -eq 0 ]; then\n        echo \"No bigger number found\"\n        return\n    fi\n\n    for (( i = 0; i < num_digits; i++ )); do\n        next_bigger=$(( next_bigger * 10 + digits[$i] ))\n    done\n\n    echo $next_bigger",
    "    local number=$1\n    local number_length=${#number}\n    local number_array=($(echo $number | grep -o .))\n    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n    local next_bigger_number\n    local next_bigger_number_array\n    local next_bigger_number_length\n    local next_bigger_number_array_length\n    local next_bigger_number_array_length_minus_one\n    local next_bigger_number_array_length_minus_two\n    local next_bigger_number_array_length_minus_three\n    local next_bigger_number_array_length_minus_four\n    local next_bigger_number_array_length_minus_five\n    local next_bigger_number_array_length_minus_six\n    local next_bigger_number_array_length_minus_seven\n    local next_bigger_number_array_length_minus_eight\n    local next_bigger_number_array_length_minus_nine\n    local next_bigger_number_array_length_minus_ten\n    local next_bigger_number_array_length_minus_eleven\n    local next_bigger_number_array_length_minus_twelve\n    local next_bigger_number_array_length_minus_thirteen\n    local next_bigger_number_array_length_minus_fourteen\n    local next_bigger_number_array_length_minus_fifteen\n    local next_bigger_number_array_length_minus_sixteen\n    local next_bigger_number_array_length_minus_seventeen\n    local next_bigger_number_array_length_minus_eighteen\n    local next_bigger_number_array_length_",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i res=0\n  local -i arr=()\n  local -i arr2=()\n  local -i arr3=()\n  local -i arr4=()\n  local -i arr5=()\n  local -i arr6=()\n  local -i arr7=()\n  local -i arr8=()\n  local -i arr9=()\n  local -i arr0=()\n  local -i arr_len=0\n  local -i arr2_len=0\n  local -i arr3_len=0\n  local -i arr4_len=0\n  local -i arr5_len=0\n  local -i arr6_len=0\n  local -i arr7_len=0\n  local -i arr8_len=0\n  local -i arr9_len=0\n  local -i arr0_len=0\n  local -i arr_idx=0\n  local -i arr2_idx=0\n  local -i arr3_idx=0\n  local -i arr4_idx=0\n  local -i arr5_idx=0\n  local -i arr6_idx=0\n  local -i arr7_idx=0\n  local -i arr8_idx=0\n  local -i arr9_idx=0\n  local -i arr0_idx=0\n  local -i arr_idx2=0\n  local -i arr2_idx2=0\n  local -i arr3_idx2=0\n  local -i arr4_idx2=0\n  local -i arr5_idx2=0\n  local -i arr6_idx2=0\n  local -i arr7_idx2=0\n  local -i arr8_idx2=0\n  local -i arr9_idx2=0\n  local -i arr0_idx2=0\n  local -i arr_idx3=0\n  local -i arr",
    "    local num=$1\n    local num_len=${#num}\n    local num_arr=()\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local temp_num=0\n    local temp_num_len=0\n    local temp_num_arr=()\n    local temp_num_arr_len=0\n    local temp_num_arr_last_idx=0\n    local temp_num_arr_last_val=0\n    local temp_num_arr_last_val_idx=0\n    local temp_num_arr_last_val_idx_next=0\n    local temp_num_arr_last_val_idx_next_val=0\n    local temp_num_arr_last_val_idx_next_val_idx=0\n    local temp_num_arr_last_val_idx_next_val_idx_next=0\n    local temp_num_arr_last_val_idx_next_val_idx_next_val=0\n    local temp_num_arr_last_val_idx_next_val_idx_next_val_idx=0\n    local temp_num_arr_last_val_idx_next_val_idx_next_val_idx_next=0\n    local temp_num_arr_last_val_idx_next_val_idx_next_val_idx_next_val=0\n    local temp_num_arr_last_val_idx_next_val_idx_next_val_idx_next_val_idx=0\n    local temp_num_arr_last_val_idx_next_val_idx_next_val_idx_next_val_idx_next=0\n    local temp_num_arr_last_val_idx_next_val_idx_next_val_idx_next_val_idx_next_val=0\n    local temp_num_arr_last_val_idx_next_val_idx_next_val_idx_next_val_idx_next_val",
    "  local number=\"$1\"\n  local digits=${#number}\n  local i=0\n  local j=0\n  local temp=0\n  local result=0\n  local number_array=()\n  local result_array=()\n  local number_array_sorted=()\n  local result_array_sorted=()\n  local number_array_sorted_string=''\n  local result_array_sorted_string=''\n  local number_array_sorted_string_length=0\n  local result_array_sorted_string_length=0\n\n  # convert number to array of digits\n  for (( i=0; i<digits; i++ )); do\n    number_array[i]=${number:$i:1}\n  done\n\n  # copy number_array to result_array\n  for (( i=0; i<digits; i++ )); do\n    result_array[i]=${number_array[i]}\n  done\n\n  # sort number_array\n  for (( i=0; i<digits; i++ )); do\n    for (( j=0; j<digits; j++ )); do\n      if (( ${number_array[i]} < ${number_array[j]} )); then\n        temp=${number_array[i]}\n        number_array[i]=${number_array[j]}\n        number_array[j]=$temp\n      fi\n    done\n  done\n\n  # sort result_array\n  for (( i=0; i<digits; i++ )); do\n    for (( j=0; j<digits; j++ )); do\n      if (( ${result_array[i]} < ${result_array[j]} )); then\n        temp=${result_array[i]}\n        result_array[i]=${result_array[j]}\n        result_array[j]=$temp\n      fi\n    done\n  done\n\n  # convert number_array to string\n  for (( i=0; i<digits; i++ )); do\n    number_array_sorted_string+=\"${number_array[i]}\"\n  done\n\n  # convert result_array to string\n  for (( i=0; i<digits; i",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_idx=0\n  local -i n_arr_idx_1=0\n  local -i n_arr_idx_2=0\n  local -i n_arr_idx_3=0\n  local -i n_arr_idx_4=0\n  local -i n_arr_idx_5=0\n  local -i n_arr_idx_6=0\n  local -i n_arr_idx_7=0\n  local -i n_arr_idx_8=0\n  local -i n_arr_idx_9=0\n  local -i n_arr_idx_10=0\n  local -i n_arr_idx_11=0\n  local -i n_arr_idx_12=0\n  local -i n_arr_idx_13=0\n  local -i n_arr_idx_14=0\n  local -i n_arr_idx_15=0\n  local -i n_arr_idx_16=0\n  local -i n_arr_idx_17=0\n  local -i n_arr_idx_18=0\n  local -i n_arr_idx_19=0\n  local -i n_arr_idx_20=0\n  local -i n_arr_idx_21=0\n  local -i n_arr_idx_22=0\n  local -i n_arr_idx_23=0\n  local -i n_arr_idx_24=0\n  local -i n_arr_idx_25=0\n  local -i n_arr_idx_26=0\n  local -i n_arr_idx_27=0\n  local -i n_arr_idx_28=",
    "    local -i n=$1\n    local -i d\n    local -i i=0\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n_len=${#n}\n    local -i n_arr[$n_len]\n    local -i n_arr_sorted[$n_len]\n    local -i n_arr_sorted_len=0\n    local -i n_arr_sorted_last_idx\n    local -i n_arr_sorted_last_val\n    local -i n_arr_sorted_last_val_idx\n    local -i n_arr_sorted_last_val_idx_next\n    local -i n_arr_sorted_last_val_idx_next_val\n    local -i n_arr_sorted_last_val_idx_next_val_idx\n    local -i n_arr_sorted_last_val_idx_next_val_idx_next\n    local -i n_arr_sorted_last_val_idx_next_val_idx_next_val\n    local -i n_arr_sorted_last_val_idx_next_val_idx_next_val_idx\n    local -i n_arr_sorted_last_val_idx_next_val_idx_next_val_idx_next\n    local -i n_arr_sorted_last_val_idx_next_val_idx_next_val_idx_next_val\n    local -i n_arr_sorted_last_val_idx_next_val_idx_next_val_idx_next_val_idx\n    local -i n_arr_sorted_last_val_idx_next_val_idx_next_val_idx_next_val_idx_next\n    local -i n_arr_sorted_last_val_idx_next_val_idx_next_val_idx_next_val_idx_next_val\n    local -i n_arr_s",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i tmp=0\n    local -i result=0\n    local -i arr=()\n\n    # convert number to array\n    while [ $num -gt 0 ]; do\n        arr[$i]=$((num % 10))\n        num=$((num / 10))\n        ((i++))\n    done\n\n    # find the first digit that is smaller than the digit that follows it\n    for ((i=${#arr[@]}-1; i>0; i--)); do\n        if [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n            break\n        fi\n    done\n\n    # if no such digit is found, the number is the largest possible\n    if [ $i -eq 0 ]; then\n        echo \"No bigger number possible\"\n        return\n    fi\n\n    # find the smallest digit to the right of the digit found above\n    # that is larger than the digit found above\n    for ((j=${#arr[@]}-1; j>i-1; j--)); do\n        if [ ${arr[$j]} -gt ${arr[$i-1]} ]; then\n            break\n        fi\n    done\n\n    # swap the two digits found above\n    tmp=${arr[$i-1]}\n    arr[$i-1]=${arr[$j]}\n    arr[$j]=$tmp\n\n    # reverse the digits to the right of the digit found above\n    len=${#arr[@]}\n    for ((j=i; j<len; j++)); do\n        tmp=${arr[$j]}\n        arr[$j]=${arr[$len-j+i-1]}\n        arr[$len-j+i-1]=$tmp\n    done\n\n    # convert array to number\n    for ((i=0; i<${#arr[@]}; i++)); do\n        result=$((result * 10 + arr[$i]))\n    done\n\n    echo $result",
    "    local -i num=\"$1\"\n    local -i i=0\n    local -i j=0\n    local -i len=${#num}\n    local -i min=0\n    local -i min_index=0\n    local -i temp=0\n    local -i temp_index=0\n    local -i temp_len=0\n    local -i temp_num=0\n    local -i temp_num_len=0\n    local -i temp_num_index=0\n    local -i temp_num_min=0\n    local -i temp_num_min_index=0\n    local -i temp_num_min_len=0\n    local -i temp_num_min_num=0\n    local -i temp_num_min_num_len=0\n    local -i temp_num_min_num_index=0\n    local -i temp_num_min_num_min=0\n    local -i temp_num_min_num_min_index=0\n    local -i temp_num_min_num_min_len=0\n    local -i temp_num_min_num_min_num=0\n    local -i temp_num_min_num_min_num_len=0\n    local -i temp_num_min_num_min_num_index=0\n    local -i temp_num_min_num_min_num_min=0\n    local -i temp_num_min_num_min_num_min_index=0\n    local -i temp_num_min_num_min_num_min_len=0\n    local -i temp_num_min_num_min_num_min_num=0\n    local -i temp_num_min_num_min_num_min_num_len=0\n    local -i temp_num_min_num_min_num_min_num_index=0\n    local -i temp_num_min_num_min_num_min_num_min=0\n    local -i temp_num_min_num_min_num_min_num_min_index=0\n    local -i temp_num_min_num_min_",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i tmp=0\n    local -i res=0\n    local -i arr=()\n    local -i arr_len=0\n    local -i arr_i=0\n    local -i arr_j=0\n    local -i arr_tmp=0\n    local -i arr_res=0\n\n    # convert to array\n    while (( num > 0 )); do\n        arr[i]=$(( num % 10 ))\n        num=$(( num / 10 ))\n        (( i++ ))\n    done\n    arr_len=${#arr[@]}\n\n    # find the first digit that is smaller than the digit after it\n    for (( i=arr_len-2; i>=0; i-- )); do\n        if (( arr[i] < arr[i+1] )); then\n            break\n        fi\n    done\n    if (( i < 0 )); then\n        echo \"no answer\"\n        return\n    fi\n\n    # find the smallest digit that is larger than arr[i]\n    for (( j=i+1; j<arr_len; j++ )); do\n        if (( arr[j] > arr[i] )); then\n            tmp=$arr[j]\n            arr[j]=$arr[i]\n            arr[i]=$tmp\n            break\n        fi\n    done\n\n    # sort the digits after arr[i] in ascending order\n    for (( i=i+1; i<arr_len; i++ )); do\n        for (( j=i+1; j<arr_len; j++ )); do\n            if (( arr[j] < arr[i] )); then\n                tmp=$arr[j]\n                arr[j]=$arr[i]\n                arr[i]=$tmp\n            fi\n        done\n    done\n\n    # convert to integer\n    for (( i=0; i<arr_len; i++ )); do\n        res=$(( res * 10 + arr[i] ))\n    done\n    echo $res",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=${#n}\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_max=0\n  local -i n_arr_max_idx=0\n  local -i n_arr_max_idx_prev=0\n  local -i n_arr_max_idx_prev_val=0\n  local -i n_arr_max_idx_prev_val_idx=0\n  local -i n_arr_max_idx_prev_val_idx_prev=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx_prev=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx_prev_val=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx_prev_val_idx=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx_prev_val_idx_prev=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx_prev_val_idx_prev_val=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx_prev_val_idx_prev_val_idx=0\n  local -i n_arr_max_idx_prev_val_idx_prev_val_idx_prev_val_idx_prev_val_idx_prev=",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_max=0\n  local -i n_arr_max_idx=0\n  local -i n_arr_max_idx_2=0\n  local -i n_arr_max_idx_3=0\n  local -i n_arr_max_idx_4=0\n  local -i n_arr_max_idx_5=0\n  local -i n_arr_max_idx_6=0\n  local -i n_arr_max_idx_7=0\n  local -i n_arr_max_idx_8=0\n  local -i n_arr_max_idx_9=0\n  local -i n_arr_max_idx_10=0\n  local -i n_arr_max_idx_11=0\n  local -i n_arr_max_idx_12=0\n  local -i n_arr_max_idx_13=0\n  local -i n_arr_max_idx_14=0\n  local -i n_arr_max_idx_15=0\n  local -i n_arr_max_idx_16=0\n  local -i n_arr_max_idx_17=0\n  local -i n_arr_max_idx_18=0\n  local -i n_arr_max_idx_19=0\n  local -i n_arr_max_idx_20=0\n  local -i n_arr_max_idx_21=0\n  local -i n_arr_max_idx_22=0\n  local -i n_arr_max_idx_23=0\n  local -i n_arr_max_idx_24=0\n  local -i n_arr_max_idx_",
    "    local -i number=$1\n    local -i digit=0\n    local -i next_digit=0\n    local -i next_number=0\n    local -i next_number_digit=0\n    local -i next_number_digit_count=0\n    local -i next_number_digit_count_max=0\n    local -i next_number_digit_count_max_index=0\n    local -i next_number_digit_count_max_index_prev=0\n    local -i next_number_digit_count_max_index_prev_prev=0\n    local -i next_number_digit_count_max_index_prev_prev_prev=0\n    local -i next_number_digit_count_max_index_prev_prev_prev_prev=0\n    local -i next_number_digit_count_max_index_prev_prev_prev_prev_prev=0\n    local -i next_number_digit_count_max_index_prev_prev_prev_prev_prev_prev=0\n    local -i next_number_digit_count_max_index_prev_prev_prev_prev_prev_prev_prev=0\n    local -i next_number_digit_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i next_number_digit_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i next_number_digit_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i next_number_digit_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i next_number_digit_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i next_number_digit_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0",
    "    local -i num=\"$1\"\n    local -i num_len=\"${#num}\"\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local",
    "  local number=$1\n  local n=$number\n  local digits=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n ",
    "  local -i number=\"$1\"\n  local -i length=${#number}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i tmp=0\n  local -i result=0\n  local -i arr=()\n  local -i arr_length=0\n  local -i arr_index=0\n  local -i arr_tmp=0\n  local -i arr_result=0\n\n  # Convert number to array\n  for (( i=0; i<length; i++ )); do\n    arr[i]=${number:$i:1}\n  done\n\n  # Find the first digit that is smaller than the digit to its right\n  for (( i=0; i<length-1; i++ )); do\n    if (( arr[i] < arr[i+1] )); then\n      break\n    fi\n  done\n\n  # If no such digit exists, the number is the biggest possible\n  if (( i == length-1 )); then\n    echo \"No bigger number\"\n    return 1\n  fi\n\n  # Find the smallest digit to the right of the digit found above that is bigger than it\n  for (( j=i+1; j<length; j++ )); do\n    if (( arr[j] > arr[i] )); then\n      if (( arr[j] < arr[k] )); then\n        k=$j\n      fi\n    fi\n  done\n\n  # Swap the two digits\n  tmp=${arr[i]}\n  arr[i]=${arr[k]}\n  arr[k]=$tmp\n\n  # Sort the digits to the right of the digit found above in ascending order\n  arr_length=${#arr[@]}\n  for (( i=0; i<arr_length-1; i++ )); do\n    for (( j=0; j<arr_length-i-1; j++ )); do\n      if (( arr[j] > arr[j+1] )); then\n        arr_tmp=${arr[j]}\n        arr[j]=${arr[j+1]}\n        arr[j+1]=$arr_tmp\n      fi\n    done\n  done\n\n  # Convert array to number\n  for (( i",
    "  local -i number=$1\n  local -i digit\n  local -i digits=0\n  local -i digits_count=0\n  local -i digits_array\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n\n  # Count the number of digits\n  while (( number > 0 )); do\n    (( digits_count++ ))\n    (( number /= 10 ))\n  done\n\n  # Create an array of digits\n  for (( i = 0; i < digits_count; i++ )); do\n    (( digit = number % 10 ))\n    (( number /= 10 ))\n    digits_array[i]=$digit\n  done\n\n  # Find the first digit that is smaller than the next digit\n  for (( i = 0; i < digits_count; i++ )); do\n    (( j = i + 1 ))\n    if (( j < digits_count )); then\n      if (( digits_array[i] < digits_array[j] )); then\n        break\n      fi\n    fi\n  done\n\n  # If no digit was found, the number is already the biggest possible\n  if (( i == digits_count )); then\n    echo $1\n    return\n  fi\n\n  # Find the smallest digit that is bigger than the digit found above\n  for (( k = i + 1; k < digits_count; k++ )); do\n    if (( digits_array[k] > digits_array[i] )); then\n      break\n    fi\n  done\n\n  # Swap the digits\n  (( l = digits_array[i] ))\n  (( digits_array[i] = digits_array[k] ))\n  (( digits_array[k] = l ))\n\n  # Sort the digits after the digit found above\n  for (( m = i + 1; m < digits_count; m++ )); do\n    for (( n = m + 1;",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i temp=0\n    local -i flag=0\n    local -i num_arr=()\n    local -i temp_arr=()\n    local -i result=0\n    local -i result_arr=()\n    local -i result_len=0\n    local -i temp_len=0\n    local -i temp_result=0\n    local -i temp_result_arr=()\n    local -i temp_result_len=0\n\n    if [[ $num -lt 0 ]]; then\n        echo \"Error: $num is not a positive integer\"\n        exit 1\n    fi\n\n    if [[ $num -lt 10 ]]; then\n        echo \"Error: $num is a single digit number\"\n        exit 1\n    fi\n\n    # Convert the number to an array\n    while [[ $num -gt 0 ]]; do\n        num_arr[$i]=$(( $num % 10 ))\n        num=$(( $num / 10 ))\n        (( i++ ))\n    done\n\n    len=${#num_arr[@]}\n\n    # Find the first digit that is smaller than the digit to its right\n    for (( i=len-1; i>0; i-- )); do\n        if [[ ${num_arr[$i]} -gt ${num_arr[$(( i-1 ))]} ]]; then\n            flag=1\n            break\n        fi\n    done\n\n    if [[ $flag -eq 0 ]]; then\n        echo \"Error: $1 is the largest number that can be formed from its digits\"\n        exit 1\n    fi\n\n    # Find the smallest digit that is greater than num_arr[$i]\n    temp=${num_arr[$i]}\n    for (( j=i+1; j<len; j++ )); do\n        if [[ ${num_arr[$j]} -gt $temp ]]; then\n            temp=${num_arr[$j]}\n        fi\n    done\n\n    # Swap the digits\n    temp_arr=(${num_arr[@]})\n    temp_arr[$i]=$temp\n    temp_arr[",
    "  local -i number=$1\n  local -i digit\n  local -i i=0\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i tmp=0\n    local -i res=0\n    local -i arr=()\n    local -i arr_len=0\n    local -i arr_tmp=0\n    local -i arr_res=0\n    local -i arr_i=0\n    local -i arr_j=0\n    local -i arr_len=0\n\n    len=${#num}\n    for ((i=0; i<len; i++)); do\n        arr[i]=${num:i:1}\n    done\n\n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if [[ ${arr[i]} -lt ${arr[j]} ]]; then\n                tmp=${arr[i]}\n                arr[i]=${arr[j]}\n                arr[j]=$tmp\n            fi\n        done\n    done\n\n    for ((i=0; i<len; i++)); do\n        res=$((res*10+arr[i]))\n    done\n\n    if [[ $res -eq $num ]]; then\n        echo \"Not possible\"\n    else\n        echo $res\n    fi",
    "  local -i num=\"$1\"\n  local -i len=\"${#num}\"\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i tmp=0\n  local -i next=0\n  local -i arr=()\n\n  # Convert to array\n  for ((i=0; i<len; i++)); do\n    arr[i]=${num:i:1}\n  done\n\n  # Find the first digit that is smaller than the next digit\n  for ((i=0; i<len-1; i++)); do\n    if (( arr[i] < arr[i+1] )); then\n      break\n    fi\n  done\n\n  # If no such digit is found, the number is the biggest possible\n  if (( i == len-1 )); then\n    echo \"No bigger number found\"\n    return\n  fi\n\n  # Find the smallest digit on the right side of (i-1)th digit that is greater than number[i-1]\n  for ((j=i+1; j<len; j++)); do\n    if (( arr[j] > arr[i] )); then\n      tmp=arr[i]\n      arr[i]=arr[j]\n      arr[j]=tmp\n      break\n    fi\n  done\n\n  # Sort the digits after i-1 in ascending order\n  for ((j=i+1; j<len; j++)); do\n    for ((k=j+1; k<len; k++)); do\n      if (( arr[j] > arr[k] )); then\n        tmp=arr[j]\n        arr[j]=arr[k]\n        arr[k]=tmp\n      fi\n    done\n  done\n\n  # Convert to number\n  for ((i=0; i<len; i++)); do\n    next=$(( next * 10 + arr[i] ))\n  done\n\n  echo \"$next\"",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_max=0\n  local -i n_arr_max_idx=0\n  local -i n_arr_min=0\n  local -i n_arr_min_idx=0\n  local -i n_arr_min_idx_next=0\n  local -i n_arr_min_idx_prev=0\n  local -i n_arr_min_idx_prev_val=0\n  local -i n_arr_min_idx_prev_val_idx=0\n  local -i n_arr_min_idx_prev_val_idx_next=0\n  local -i n_arr_min_idx_prev_val_idx_prev=0\n  local -i n_arr_min_idx_prev_val_idx_prev_val=0\n  local -i n_arr_min_idx_prev_val_idx_prev_val_idx=0\n  local -i n_arr_min_idx_prev_val_idx_prev_val_idx_next=0\n  local -i n_arr_min_idx_prev_val_idx_prev_val_idx_prev=0\n  local -i n_arr_min_idx_prev_val_idx_prev_val_idx_prev_val=0\n  local -i n_arr_min_idx_prev_val_idx_prev_val_idx_prev_val_idx=0\n  local -i n_arr_min_idx_prev_val_idx_prev_val_idx_prev_val_idx_next=0\n  local -i n_arr_min_idx_prev_val_idx_prev_val_idx_prev_val",
    "    local -i i j\n    local -a a\n    local -i n=$1\n    local -i d=0\n    local -i m=0\n    local -i r=0\n    local -i p=1\n    local -i q=0\n    local -i t=0\n    local -i s=0\n    local -i u=0\n    local -i v=0\n\n    while (( n > 0 )); do\n        (( d++ ))\n        (( a[d] = n % 10 ))\n        (( n /= 10 ))\n    done\n\n    for (( i = 1; i < d; i++ )); do\n        (( m = i ))\n        for (( j = i + 1; j <= d; j++ )); do\n            if (( a[j] > a[m] )); then\n                (( m = j ))\n            fi\n        done\n        if (( m > i )); then\n            (( t = a[i] ))\n            (( a[i] = a[m] ))\n            (( a[m] = t ))\n            (( q = 1 ))\n        fi\n    done\n\n    if (( q == 0 )); then\n        echo \"No bigger number\"\n        return\n    fi\n\n    for (( i = 1; i <= d; i++ )); do\n        (( r = r * 10 + a[i] ))\n    done\n\n    for (( i = 1; i <= d; i++ )); do\n        (( p *= 10 ))\n    done\n\n    for (( i = 1; i <= d; i++ )); do\n        (( p /= 10 ))\n        (( s = r / p ))\n        (( r %= p ))\n        (( u = s % 10 ))\n        (( s /= 10 ))\n        (( v = s % 10 ))\n        if (( u > v )); then\n            (( t = a[i] ))\n            (( a[i] = a[i + 1] ))\n            (( a[i + 1] = t ))\n            break\n        fi\n    done\n\n    for (( i = 1; i <= d; i++ )); do\n        (( r = r * 10 + a[i] ))\n    done\n\n    echo $r",
    "  local number=$1\n  local number_length=${#number}\n  local number_array=()\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local temp_array=()\n  local temp_array_length=0\n  local temp_array_index=0\n  local temp_array_index_length=0\n  local temp_array_index_length_length=0\n  local temp_array_index_length_length_length=0\n  local temp_array_index_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local",
    "  local number=$1\n  local length=${#number}\n  local i=0\n  local j=0\n  local swap=0\n  local swapped=0\n  local result=\"\"\n\n  for ((i=0; i<length; i++)); do\n    for ((j=i+1; j<length; j++)); do\n      if [ ${number:$i:1} -lt ${number:$j:1} ]; then\n        swap=${number:$i:1}\n        number=${number:0:$i}${number:$j:1}${number:$((i+1)):$((j-i-1))}${swap}${number:$((j+1))}\n        swapped=1\n        break\n      fi\n    done\n    if [ $swapped -eq 1 ]; then\n      break\n    fi\n  done\n\n  if [ $swapped -eq 1 ]; then\n    for ((i=0; i<length; i++)); do\n      result=${result}${number:$i:1}\n    done\n  else\n    result=-1\n  fi\n\n  echo $result",
    "  local -i number=$1\n  local -i digit\n  local -i digits=0\n  local -i digits_array=()\n  local -i digits_array_length=0\n  local -i digits_array_index=0\n  local -i digits_array_index_min=0\n  local -i digits_array_index_max=0\n  local -i digits_array_index_min_value=0\n  local -i digits_array_index_max_value=0\n  local -i digits_array_index_min_value_index=0\n  local -i digits_array_index_max_value_index=0\n  local -i digits_array_index_min_value_index_min=0\n  local -i digits_array_index_max_value_index_max=0\n  local -i digits_array_index_min_value_index_min_value=0\n  local -i digits_array_index_max_value_index_max_value=0\n  local -i digits_array_index_min_value_index_min_value_index=0\n  local -i digits_array_index_max_value_index_max_value_index=0\n  local -i digits_array_index_min_value_index_min_value_index_min=0\n  local -i digits_array_index_max_value_index_max_value_index_max=0\n  local -i digits_array_index_min_value_index_min_value_index_min_value=0\n  local -i digits_array_index_max_value_index_max_value_index_max_value=0\n  local -i digits_array_index_min_value_index_min_value_index_min_value_index=0\n  local -i digits_array_index_max_value_index_max_value_index_max_value_index=0\n  local -i digits_array_index_min_value_index_min_value_index_min_value_index_min=0\n  local -i digits_array_index_max_value_index_max_value_index_max_value_index",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i tmp=0\n  local -i len=0\n  local -i arr=()\n  local -i arr_len=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_tmp=0\n  local -i arr_len_minus_1=0\n  local -i arr_len_minus_2=0\n  local -i arr_len_minus_3=0\n  local -i arr_len_minus_4=0\n  local -i arr_len_minus_5=0\n  local -i arr_len_minus_6=0\n  local -i arr_len_minus_7=0\n  local -i arr_len_minus_8=0\n  local -i arr_len_minus_9=0\n  local -i arr_len_minus_10=0\n  local -i arr_len_minus_11=0\n  local -i arr_len_minus_12=0\n  local -i arr_len_minus_13=0\n  local -i arr_len_minus_14=0\n  local -i arr_len_minus_15=0\n  local -i arr_len_minus_16=0\n  local -i arr_len_minus_17=0\n  local -i arr_len_minus_18=0\n  local -i arr_len_minus_19=0\n  local -i arr_len_minus_20=0\n  local -i arr_len_minus_21=0\n  local -i arr_len_minus_22=0\n  local -i arr_len_minus_23=0\n  local -i arr_len_minus_24=0\n  local -i arr_len_minus_25=0\n  local -i arr_len_minus_26=0\n  local -i arr_len_minus_27=0\n  local -i arr_len_minus_28=0\n  local -i arr_len_minus_29=0\n  local -i arr_len_minus_30=0\n  local -",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0",
    "  local -i num=$1\n  local -a digits\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i temp=0\n  local -i result=0\n\n  while (( num > 0 )); do\n    digits[i++]=$(( num % 10 ))\n    num=$(( num / 10 ))\n  done\n\n  len=${#digits[@]}\n\n  for (( i = len - 1; i > 0; i-- )); do\n    for (( j = i - 1; j >= 0; j-- )); do\n      if (( digits[i] > digits[j] )); then\n        temp=${digits[i]}\n        digits[i]=${digits[j]}\n        digits[j]=$temp\n        break 2\n      fi\n    done\n  done\n\n  for (( i = 0; i < len; i++ )); do\n    result=$(( result * 10 + digits[i] ))\n  done\n\n  echo $result",
    "    local -i num=\"$1\"\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i tmp=0\n    local -i arr=()\n    local -i len=0\n    local -i flag=0\n    local -i result=0\n\n    if [[ $num -lt 0 ]]; then\n        echo \"Error: $num is not a positive integer\"\n        return 1\n    fi\n\n    if [[ $num -eq 0 ]]; then\n        echo \"Error: $num is 0\"\n        return 1\n    fi\n\n    while [[ $num -gt 0 ]]; do\n        arr[$i]=$((num%10))\n        num=$((num/10))\n        ((i++))\n    done\n\n    len=${#arr[@]}\n\n    for ((i=len-1; i>0; i--)); do\n        for ((j=i-1; j>=0; j--)); do\n            if [[ ${arr[$i]} -gt ${arr[$j]} ]]; then\n                tmp=${arr[$i]}\n                arr[$i]=${arr[$j]}\n                arr[$j]=$tmp\n                flag=1\n                break\n            fi\n        done\n\n        if [[ $flag -eq 1 ]]; then\n            break\n        fi\n    done\n\n    if [[ $flag -eq 0 ]]; then\n        echo \"Error: $1 is the biggest number\"\n        return 1\n    fi\n\n    for ((i=0; i<len; i++)); do\n        result=$((result*10+arr[$i]))\n    done\n\n    echo $result",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=${#num}\n  local -a arr\n  local -a arr2\n  local -i tmp=0\n  local -i tmp2=0\n  local -i tmp3=0\n  local -i tmp4=0\n  local -i tmp5=0\n  local -i tmp6=0\n  local -i tmp7=0\n  local -i tmp8=0\n  local -i tmp9=0\n  local -i tmp10=0\n  local -i tmp11=0\n  local -i tmp12=0\n  local -i tmp13=0\n  local -i tmp14=0\n  local -i tmp15=0\n  local -i tmp16=0\n  local -i tmp17=0\n  local -i tmp18=0\n  local -i tmp19=0\n  local -i tmp20=0\n  local -i tmp21=0\n  local -i tmp22=0\n  local -i tmp23=0\n  local -i tmp24=0\n  local -i tmp25=0\n  local -i tmp26=0\n  local -i tmp27=0\n  local -i tmp28=0\n  local -i tmp29=0\n  local -i tmp30=0\n  local -i tmp31=0\n  local -i tmp32=0\n  local -i tmp33=0\n  local -i tmp34=0\n  local -i tmp35=0\n  local -i tmp36=0\n  local -i tmp37=0\n  local -i tmp38=0\n  local -i tmp39=0\n  local -i tmp40=0\n  local -i tmp41=0\n  local -i tmp42=0\n  local -i tmp43=0\n  local -i tmp44=0\n  local -i tmp45=0\n  local -i tmp46=0\n  local -i tmp47=0\n  local -i tmp48=0\n  local -i tmp49=0\n  local -i tmp50=0\n  local -i tmp51=0\n  local -i tmp",
    "  local -i num=$1\n  local -i num_len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i",
    "  local input=$1\n  local digits=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n ",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_last=0\n  local -i n_arr_last_len=0\n  local -i n_arr_last_arr=()\n  local -i n_arr_last_arr_len=0\n  local -i n_arr_last_arr_last=0\n  local -i n_arr_last_arr_last_len=0\n  local -i n_arr_last_arr_last_arr=()\n  local -i n_arr_last_arr_last_arr_len=0\n  local -i n_arr_last_arr_last_arr_last=0\n  local -i n_arr_last_arr_last_arr_last_len=0\n  local -i n_arr_last_arr_last_arr_last_arr=()\n  local -i n_arr_last_arr_last_arr_last_arr_len=0\n  local -i n_arr_last_arr_last_arr_last_arr_last=0\n  local -i n_arr_last_arr_last_arr_last_arr_last_len=0\n  local -i n_arr_last_arr_last_arr_last_arr_last_arr=()\n  local -i n_arr_last_arr_last_arr_last_arr_last_arr_len=0\n  local -i n_arr_last_arr_last_arr_last_arr_last_arr_last=0\n  local -i n_arr_last_arr_last_arr_last_arr_last_arr_last_len=0\n  local -i n_arr_last_arr_last_arr_last_arr_last_arr_last_arr=()\n  local -i n_arr_last_arr_last_arr_last_arr_last_arr",
    "  local number=$1\n  local number_length=${#number}\n  local number_array=()\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local temp_array=()\n  local temp_array_length=0\n  local temp_number=0\n  local temp_number_length=0\n  local temp_number_array=()\n  local temp_number_array_length=0\n  local temp_number_array_index=0\n  local temp_number_array_index_length=0\n  local temp_number_array_index_length_length=0\n  local temp_number_array_index_length_length_length=0\n  local temp_number_array_index_length_length_length_length=0\n  local temp_number_array_index_length_length_length_length_length=0\n  local temp_number_array_index_length_length_length_length_length_length=0\n  local temp_number_array_index_length_length_length_length_length_length_length=0\n  local temp_number_array_index_length_length_length_length_length_length_length_length=0\n  local temp_number_array_index_length_length_length_length_length_length_length_length_length=0\n  local temp_number_array_index_length_length_length_length_length_length_length_length_length_length=0\n  local temp_number_array_index_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_number_array_index_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_number_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_number_array_index_length_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_number_array_index_length_length_",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_next=()\n  local -i n_arr_sorted_next_len=0\n  local -i n_arr_sorted_next_str=''\n  local -i n_arr_sorted_next_int=0\n  local -i n_arr_sorted_next_int_len=0\n  local -i n_arr_sorted_next_int_arr=()\n  local -i n_arr_sorted_next_int_arr_len=0\n  local -i n_arr_sorted_next_int_arr_sorted=()\n  local -i n_arr_sorted_next_int_arr_sorted_len=0\n  local -i n_arr_sorted_next_int_arr_sorted_str=''\n  local -i n_arr_sorted_next_int_arr_sorted_int=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_len=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr=()\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_len=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_sorted=()\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_sorted_len=0\n  local -i n_arr_sorted_next_int_arr_sorted_int_arr_sorted_str=''\n  local -i n_arr_sorted_next_",
    "  local -i num=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i max=0\n  local -i max_index=0\n  local -i temp=0\n  local -i result=0\n  local -a arr\n  local -a arr2\n\n  if [[ \"$num\" -lt 0 ]]; then\n    echo \"Error: $num is not a positive integer\" >&2\n    return 1\n  fi\n\n  arr=($(echo \"$num\" | grep -o .))\n  len=${#arr[@]}\n\n  for (( i=0; i<len; i++ )); do\n    max=${arr[i]}\n    max_index=$i\n    for (( j=i+1; j<len; j++ )); do\n      if [[ ${arr[j]} -gt $max ]]; then\n        max=${arr[j]}\n        max_index=$j\n      fi\n    done\n    temp=${arr[i]}\n    arr[i]=${arr[max_index]}\n    arr[max_index]=$temp\n    arr2=(${arr[@]:i})\n    result=$(( 10**(len-i-1) * ${arr[i]} + rearrange_bigger \"${arr2[*]}\" ))\n    break\n  done\n\n  echo \"$result\"",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i nn=0\n  local -i nnn=0\n  local -i nnnn=0\n  local -i nnnnn=0\n  local -i nnnnnn=0\n  local -i nnnnnnn=0\n  local -i nnnnnnnn=0\n  local -i nnnnnnnnn=0\n  local -i nnnnnnnnnn=0\n  local -i nnnnnnnnnnn=0\n  local -i nnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn=0\n  local -i nnn",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0",
    "  local number=$1\n  local digits=${#number}\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local arr=()\n  local arr2=()\n  local arr3=()\n  local arr4=()\n  local arr5=()\n  local arr6=()\n  local arr7=()\n  local arr8=()\n  local arr9=()\n  local arr10=()\n  local arr11=()\n  local arr12=()\n  local arr13=()\n  local arr14=()\n  local arr15=()\n  local arr16=()\n  local arr17=()\n  local arr18=()\n  local arr19=()\n  local arr20=()\n  local arr21=()\n  local arr22=()\n  local arr23=()\n  local arr24=()\n  local arr25=()\n  local arr26=()\n  local arr27=()\n  local arr28=()\n  local arr29=()\n  local arr30=()\n  local arr31=()\n  local arr32=()\n  local arr33=()\n  local arr34=()\n  local arr35=()\n  local arr36=()\n  local arr37=()\n  local arr38=()\n  local arr39=()\n  local arr40=()\n  local arr41=()\n  local arr42=()\n  local arr43=()\n  local arr44=()\n  local arr45=()\n  local arr46=()\n  local arr47=()\n  local arr48=()\n  local arr49=()\n  local arr50=()\n  local arr51=()\n  local arr52=()\n  local arr53=()\n  local arr54=()\n  local arr55=()\n  local arr56=()\n  local arr57=()\n  local arr58=()\n  local arr59=()\n  local arr60=()\n  local arr61=()\n  local arr62=()\n  local arr63=()\n  local arr64=()\n  local arr65=()\n  local arr66=()\n  local arr67=()\n  local arr68",
    "    local -i n=$1\n    local -i n_len=${#n}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n_bigger=0\n    local -i n_bigger_len=0\n    local -i n_bigger_digits=()\n    local -i n_digits=()\n    local -i n_digits_sorted=()\n    local -i n_digits_sorted_len=0\n    local -i n_digits_sorted_last_idx=0\n    local -i n_digits_sorted_last_idx_prev=0\n    local -i n_digits_sorted_last_idx_prev_prev=0\n    local -i n_digits_sorted_last_idx_prev_prev_prev=0\n    local -i n_digits_sorted_last_idx_prev_prev_prev_prev=0\n    local -i n_digits_sorted_last_idx_prev_prev_prev_prev_prev=0\n    local -i n_digits_sorted_last_idx_prev_prev_prev_prev_prev_prev=0\n    local -i n_digits_sorted_last_idx_prev_prev_prev_prev_prev_prev_prev=0\n    local -i n_digits_sorted_last_idx_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i n_digits_sorted_last_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i n_digits_sorted_last_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i n_digits_sorted_last_idx_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i n_digits_sorted",
    "    local -i n=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n_len=0\n    local -i n_arr=()\n    local -i n_arr_len=0\n    local -i n_arr_sorted=()\n    local -i n_arr_sorted_len=0\n    local -i n_arr_sorted_next=()\n    local -i n_arr_sorted_next_len=0\n    local -i n_arr_sorted_next_len_diff=0\n    local -i n_arr_sorted_next_len_diff_half=0\n    local -i n_arr_sorted_next_len_diff_half_floor=0\n    local -i n_arr_sorted_next_len_diff_half_ceil=0\n    local -i n_arr_sorted_next_len_diff_half_floor_i=0\n    local -i n_arr_sorted_next_len_diff_half_ceil_i=0\n    local -i n_arr_sorted_next_len_diff_half_floor_j=0\n    local -i n_arr_sorted_next_len_diff_half_ceil_j=0\n    local -i n_arr_sorted_next_len_diff_half_floor_k=0\n    local -i n_arr_sorted_next_len_diff_half_ceil_k=0\n    local -i n_arr_sorted_next_len_diff_half_floor_l=0\n    local -i n_arr_sorted_next_len_diff_half_ceil_l=0\n    local -i n_arr_sorted_next_len_diff_half_floor_m=0\n    local -i n_arr_sorted_next_len_diff_half_ceil_m=0\n    local -i n_arr_sorted_next_len_diff_half_floor_n=0\n    local -i",
    "  local -i n=$1\n  local -i d=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0",
    "  local number=$1\n  local digits=${#number}\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local result=0\n\n  for ((i=digits-1; i>0; i--)); do\n    for ((j=i-1; j>=0; j--)); do\n      if [[ ${number:$i:1} -gt ${number:$j:1} ]]; then\n        temp=${number:$i:1}\n        number=${number:0:$i}${number:$j:1}${number:$((i+1))}\n        number=${number:0:$j}$temp${number:$((j+1))}\n        for ((k=0; k<i-j-1; k++)); do\n          temp=${number:$((j+1)):1}\n          number=${number:0:$((j+1))}${number:$((j+2)):1}${number:$((j+1))}\n        done\n        result=$number\n        break 2\n      fi\n    done\n  done\n\n  echo $result",
    "  local -i num=$1\n  local -i digit\n  local -i next_digit\n  local -i next_num\n  local -i next_num_digit\n  local -i next_num_digit_count\n  local -i next_num_digit_count_max\n  local -i next_num_digit_count_max_index\n  local -i next_num_digit_count_max_index_prev\n  local -i next_num_digit_count_max_index_prev_digit\n  local -i next_num_digit_count_max_index_prev_digit_count\n  local -i next_num_digit_count_max_index_prev_digit_count_max\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev_digit\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev_digit_count\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max_index\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max_index_prev\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max_index_prev_digit\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max_index_prev_digit_count\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max_index_prev_digit",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i result=0\n  local -i arr=()\n  local -i swap=0\n  local -i swap_idx=0\n\n  # convert $num to an array\n  while (( num > 0 )); do\n    arr[i]=$(( num % 10 ))\n    (( num /= 10 ))\n    (( i++ ))\n  done\n  len=${#arr[@]}\n\n  # find the first digit that is smaller than the digit to its right\n  for (( i=len-1; i>0; i-- )); do\n    if (( arr[i-1] < arr[i] )); then\n      swap=arr[i-1]\n      swap_idx=i-1\n      break\n    fi\n  done\n\n  # if no such digit exists, the number is already the largest possible\n  if (( swap == 0 )); then\n    echo \"no bigger number exists\"\n    return\n  fi\n\n  # find the smallest digit to the right of the digit found above that is larger than it\n  for (( j=len-1; j>swap_idx; j-- )); do\n    if (( arr[j] > swap )); then\n      arr[swap_idx]=arr[j]\n      arr[j]=swap\n      break\n    fi\n  done\n\n  # sort the digits to the right of the digit found above in ascending order\n  for (( i=swap_idx+1; i<len; i++ )); do\n    for (( j=i+1; j<len; j++ )); do\n      if (( arr[i] > arr[j] )); then\n        tmp=arr[i]\n        arr[i]=arr[j]\n        arr[j]=tmp\n      fi\n    done\n  done\n\n  # convert the array back to an integer\n  for (( i=0; i<len; i++ )); do\n    (( result += arr[i] * 10**i ))\n  done\n\n  echo $result",
    "  local number=$1\n  local digits=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n ",
    "  local number=\"$1\"\n  local digits=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local result=0\n  local temp=0\n  local temp2=0\n  local temp3=0\n  local temp4=0\n  local temp5=0\n  local temp6=0\n  local temp7=0\n  local temp8=0\n  local temp9=0\n  local temp10=0\n  local temp11=0\n  local temp12=0\n  local temp13=0\n  local temp14=0\n  local temp15=0\n  local temp16=0\n  local temp17=0\n  local temp18=0\n  local temp19=0\n  local temp20=0\n  local temp21=0\n  local temp22=0\n  local temp23=0\n  local temp24=0\n  local temp25=0\n  local temp26=0\n  local temp27=0\n  local temp28=0\n  local temp29=0\n  local temp30=0\n  local temp31=0\n  local temp32=0\n  local temp33=0\n  local temp34=0\n  local temp35=0\n  local temp36=0\n  local temp37=0\n  local temp38=0\n  local temp39=0\n  local temp40=0\n  local temp41=0\n  local temp42=0\n  local temp43=0\n  local temp44=0\n  local temp45=0\n  local temp46=0\n  local temp47=0\n  local temp48=0\n  local temp49=0\n  local temp50=0\n  local temp51=0\n  local temp52=0\n  local temp53=0\n  local temp54=0\n  local temp55=0",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i tmp=0\n    local -i arr=()\n    local -i arr_len=0\n    local -i arr_i=0\n    local -i arr_j=0\n    local -i arr_tmp=0\n\n    # convert $num to array\n    while (( num > 0 )); do\n        arr[i]=$(( num % 10 ))\n        num=$(( num / 10 ))\n        (( i++ ))\n    done\n    len=${#arr[@]}\n\n    # find the first digit that is smaller than the digit after it\n    for (( i=len-2; i>=0; i-- )); do\n        if (( arr[i] < arr[i+1] )); then\n            break\n        fi\n    done\n    if (( i < 0 )); then\n        echo \"No answer\"\n        return\n    fi\n\n    # find the smallest digit that is bigger than arr[i]\n    for (( j=i+1; j<len; j++ )); do\n        if (( arr[j] > arr[i] )); then\n            if (( j == i+1 || arr[j] < arr[i+1] )); then\n                tmp=arr[i+1]\n                arr[i+1]=arr[j]\n                arr[j]=$tmp\n            fi\n        fi\n    done\n\n    # sort the digits after arr[i]\n    arr_len=${#arr[@]}\n    for (( arr_i=i+1; arr_i<arr_len; arr_i++ )); do\n        for (( arr_j=arr_i+1; arr_j<arr_len; arr_j++ )); do\n            if (( arr[arr_i] > arr[arr_j] )); then\n                arr_tmp=arr[arr_i]\n                arr[arr_i]=arr[arr_j]\n                arr[arr_j]=$arr_tmp\n            fi\n        done\n    done\n\n    # convert array to number\n    num=0\n    for (( i=0; i<len; i++ )); do\n        num=$",
    "  local number=\"$1\"\n  local digits=\"$(echo \"$number\" | grep -o .)\";\n  local digits_count=\"$(echo \"$digits\" | wc -l)\"\n  local digits_sorted=\"$(echo \"$digits\" | sort -n)\"\n  local digits_sorted_reversed=\"$(echo \"$digits_sorted\" | tac)\"\n  local digits_sorted_reversed_count=\"$(echo \"$digits_sorted_reversed\" | wc -l)\"\n  local digits_sorted_reversed_last=\"$(echo \"$digits_sorted_reversed\" | tail -n 1)\"\n  local digits_sorted_reversed_last_index=\"$(echo \"$digits_sorted_reversed\" | grep -n \"$digits_sorted_reversed_last\" | cut -d: -f1)\"\n  local digits_sorted_reversed_last_index_plus_one=\"$((digits_sorted_reversed_last_index + 1))\"\n  local digits_sorted_reversed_last_index_plus_one_digit=\"$(echo \"$digits_sorted_reversed\" | head -n \"$digits_sorted_reversed_last_index_plus_one\" | tail -n 1)\"\n  local digits_sorted_reversed_last_index_plus_one_digit_index=\"$(echo \"$digits_sorted_reversed\" | grep -n \"$digits_sorted_reversed_last_index_plus_one_digit\" | cut -d: -f1)\"\n  local digits_sorted_reversed_last_index_plus_one_digit_index_minus_one=\"$((digits_sorted_reversed_last_index_plus_one_digit_index - 1))\"\n  local digits_sorted_reversed_last_index_plus_one_digit_index_minus_one_digit=\"$(echo \"$digits_sorted_reversed\" | head -n \"$digits_sorted_reversed_last_index_plus_one_",
    "  local -i num=$1\n  local -i digit\n  local -i next_digit\n  local -i next_num\n  local -i next_num_digit\n  local -i next_num_digit_count\n  local -i next_num_digit_count_max\n  local -i next_num_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_count\n  local -i next_num_digit_count_max_digit_count_max\n  local -i next_num_digit_count_max_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_count_max_digit_count\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count\n  local -i next_num_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit_count_max_digit",
    "  local -i num=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i bigger=0\n  local -i arr=()\n  local -i arr_len=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_tmp=0\n\n  if [[ $num -lt 10 ]]; then\n    echo $num\n    return\n  fi\n\n  len=${#num}\n  for ((i=0; i<len; i++)); do\n    arr[i]=${num:i:1}\n  done\n  arr_len=${#arr[@]}\n\n  for ((i=arr_len-1; i>0; i--)); do\n    for ((j=i-1; j>=0; j--)); do\n      if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n        arr_tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$arr_tmp\n        for ((arr_i=0; arr_i<arr_len; arr_i++)); do\n          bigger=$((bigger*10+arr[arr_i]))\n        done\n        echo $bigger\n        return\n      fi\n    done\n  done\n\n  echo $num",
    "  local -i num=\"$1\"\n  local -i len=\"${#num}\"\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i",
    "  local -i n=$1\n  local -i i=0\n  local -a digits=()\n  local -i n_digits=0\n  local -i digit=0\n  local -i next_digit=0\n  local -i next_bigger=0\n  local -i multiplier=1\n\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    n=$(( n / 10 ))\n    digits[i]=$digit\n    (( i++ ))\n  done\n\n  n_digits=${#digits[@]}\n  for (( i=n_digits-1; i>0; i-- )); do\n    digit=${digits[i]}\n    next_digit=${digits[i-1]}\n    if (( digit > next_digit )); then\n      digits[i]=$next_digit\n      digits[i-1]=$digit\n      break\n    fi\n  done\n\n  for (( i=0; i<n_digits; i++ )); do\n    digit=${digits[i]}\n    next_bigger=$(( next_bigger + digit * multiplier ))\n    multiplier=$(( multiplier * 10 ))\n  done\n\n  echo $next_bigger",
    "  local -i n=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_index=0\n  local -i n_arr_sorted_index_next=0\n  local -i n_arr_sorted_index_next_len=0\n  local -i n_arr_sorted_index_next_len_max=0\n  local -i n_arr_sorted_index_next_len_max_index=0\n  local -i n_arr_sorted_index_next_len_max_index_next=0\n  local -i n_arr_sorted_index_next_len_max_index_next_len=0\n  local -i n_arr_sorted_index_next_len_max_index_next_len_max=0\n  local -i n_arr_sorted_index_next_len_max_index_next_len_max_index=0\n  local -i n_arr_sorted_index_next_len_max_index_next_len_max_index_next=0\n  local -i n_arr_sorted_index_next_len_max_index_next_len_max_index_next_len=0\n  local -i n_arr_sorted_index_next_len_max_index_next_len_max_index_next_len_max=0\n  local -i n_arr_sorted_index_next_len_max_index_next_len_max_index_next_len_max_index=0\n  local -i n_arr_sorted_index_next_len_max_index_next_len_max_index_next_len_max_index_next=0\n  local -i n_arr_sorted_index_next_len_max_index_",
    "  local -i n=$1\n  local -i d\n  local -i i=0\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n_len=${#n}\n  local -i n_arr\n  local -i n_arr_len\n  local -i n_arr_max\n  local -i n_arr_min\n  local -i n_arr_min_idx\n  local -i n_arr_max_idx\n  local -i n_arr_min_idx_2\n  local -i n_arr_max_idx_2\n  local -i n_arr_min_idx_3\n  local -i n_arr_max_idx_3\n  local -i n_arr_min_idx_4\n  local -i n_arr_max_idx_4\n  local -i n_arr_min_idx_5\n  local -i n_arr_max_idx_5\n  local -i n_arr_min_idx_6\n  local -i n_arr_max_idx_6\n  local -i n_arr_min_idx_7\n  local -i n_arr_max_idx_7\n  local -i n_arr_min_idx_8\n  local -i n_arr_max_idx_8\n  local -i n_arr_min_idx_9\n  local -i n_arr_max_idx_9\n  local -i n_arr_min_idx_10\n  local -i n_arr_max_idx_10\n  local -i n_arr_min_idx_11\n  local -i n_arr_max_idx_11\n  local -i n_arr_min_idx_12\n  local -i n_arr_max_idx_12\n  local -i n_arr_min_idx_13\n  local -i n_arr_max_idx_13\n  local -i n_arr_min_idx_14\n  local -i n_arr_max_idx_",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0",
    "  local -i n=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_i=0\n  local -i n_arr_j=0\n  local -i n_arr_k=0\n  local -i n_arr_l=0\n  local -i n_arr_m=0\n  local -i n_arr_n=0\n  local -i n_arr_o=0\n  local -i n_arr_p=0\n  local -i n_arr_q=0\n  local -i n_arr_r=0\n  local -i n_arr_s=0\n  local -i n_arr_t=0\n  local -i n_arr_u=0\n  local -i n_arr_v=0\n  local -i n_arr_w=0\n  local -i n_arr_x=0\n  local -i n_arr_y=0\n  local -i n_arr_z=0\n  local -i n_arr_aa=0\n  local -i n_arr_bb=0\n  local -i n_arr_cc=0\n  local -i n_arr_dd=0\n  local -i n_arr_ee=0\n  local -i n_arr_ff=0\n  local -i n_arr_gg=0\n  local -i n_arr_hh=0\n  local -i n_arr_ii=0\n  local -i n_arr_jj=0\n  local -i n_arr_kk=0\n  local -i n_arr_ll=0\n  local -i n_arr_mm=0\n  local -i n_arr_nn=0\n  local -i n_arr_oo=0\n  local -i n_arr_pp=0\n  local -i n_arr_qq=0\n  local -i n_arr_rr",
    "    local num=$1\n    local num_len=${#num}\n    local num_arr=()\n    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    local tmp_num=0\n    local tmp_num_len=0\n    local tmp_num_arr=()\n    local tmp_num_arr_len=0\n    local tmp_num_arr_last=0\n    local tmp_num_arr_last_idx=0\n    local tmp_num_arr_last_idx_next=0\n    local tmp_num_arr_last_idx_next_val=0\n    local tmp_num_arr_last_idx_next_val_idx=0\n    local tmp_num_arr_last_idx_next_val_idx_next=0\n    local tmp_num_arr_last_idx_next_val_idx_next_val=0\n    local tmp_num_arr_last_idx_next_val_idx_next_val_idx=0\n    local tmp_num_arr_last_idx_next_val_idx_next_val_idx_next=0\n    local tmp_num_arr_last_idx_next_val_idx_next_val_idx_next_val=0\n    local tmp_num_arr_last_idx_next_val_idx_next_val_idx_next_val_idx=0\n    local tmp_num_arr_last_idx_next_val_idx_next_val_idx_next_val_idx_next=0\n    local tmp_num_arr_last_idx_next_val_idx_next_val_idx_next_val_idx_next_val=0\n    local tmp_num_arr_last_idx_next_val_idx_next_val_idx_next_val_idx_next_val_idx=0\n    local tmp_num_arr_last_idx_next_val_idx_next_val_idx_next_val_idx_next_val",
    "    local -i num=$1\n    local -i num_len=${#num}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i",
    "  local -i n=$1\n  local -i d=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i nn=0\n  local -i ds=0\n  local -i dn=0\n  local -i dm=0\n  local -i dl=0\n  local -i dk=0\n  local -i dj=0\n  local -i di=0\n  local -i d0=0\n  local -i d1=0\n  local -i d2=0\n  local -i d3=0\n  local -i d4=0\n  local -i d5=0\n  local -i d6=0\n  local -i d7=0\n  local -i d8=0\n  local -i d9=0\n  local -i d10=0\n  local -i d11=0\n  local -i d12=0\n  local -i d13=0\n  local -i d14=0\n  local -i d15=0\n  local -i d16=0\n  local -i d17=0\n  local -i d18=0\n  local -i d19=0\n  local -i d20=0\n  local -i d21=0\n  local -i d22=0\n  local -i d23=0\n  local -i d24=0\n  local -i d25=0\n  local -i d26=0\n  local -i d27=0\n  local -i d28=0\n  local -i d29=0\n  local -i d30=0\n  local -i d31=0\n  local -i d32=0\n  local -i d33=0\n  local -i d34=0\n  local -i d35=0\n  local -i d36=0\n  local -i d37=0\n  local -i d38=0\n  local -i d39=0\n  local -i d40=0\n  local -i d41=0\n  local -i d42=",
    "  local n=\"$1\"\n  local n_len=\"${#n}\"\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n_arr\n  local n_arr_len\n  local n_arr_i\n  local n_arr_j\n  local n_arr_k\n  local n_arr_l\n  local n_arr_m\n  local n_arr_n\n  local n_arr_o\n  local n_arr_p\n  local n_arr_q\n  local n_arr_r\n  local n_arr_s\n  local n_arr_t\n  local n_arr_u\n  local n_arr_v\n  local n_arr_w\n  local n_arr_x\n  local n_arr_y\n  local n_arr_z\n  local n_arr_0\n  local n_arr_1\n  local n_arr_2\n  local n_arr_3\n  local n_arr_4\n  local n_arr_5\n  local n_arr_6\n  local n_arr_7\n  local n_arr_8\n  local n_arr_9\n  local n_arr_10\n  local n_arr_11\n  local n_arr_12\n  local n_arr_13\n  local n_arr_14\n  local n_arr_15\n  local n_arr_16\n  local n_arr_17\n  local n_arr_18\n  local n_arr_19\n  local n_arr_20\n  local n_arr_21\n  local n_arr_22\n  local n_arr_23\n  local n_arr_24\n  local n_arr_25\n  local n_arr_26\n  local n_arr_27\n  local n_arr_28\n  local n_arr_29\n  local n_arr_30\n  local n_arr_31\n  local n_arr_32\n  local n_arr_33\n  local n_arr_34\n  local n_arr_35\n  local n_arr_36\n  local n_arr_37\n  local n_arr_38\n  local",
    "    local -i num=\"$1\"\n    local -i num_len=\"${#1}\"\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n",
    "    local number=\"$1\"\n    local number_length=${#number}\n    local number_array=($(echo \"$number\" | grep -o .))\n    local i\n    local j\n    local temp\n    local next_bigger_number\n\n    for ((i=number_length-1; i>0; i--)); do\n        if [[ ${number_array[i]} -gt ${number_array[i-1]} ]]; then\n            for ((j=number_length-1; j>=i; j--)); do\n                if [[ ${number_array[j]} -gt ${number_array[i-1]} ]]; then\n                    temp=${number_array[i-1]}\n                    number_array[i-1]=${number_array[j]}\n                    number_array[j]=$temp\n                    break\n                fi\n            done\n            break\n        fi\n    done\n\n    next_bigger_number=\"${number_array[@]}\"\n    echo \"${next_bigger_number:0:i}${next_bigger_number:i-1}\"",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i temp=0\n  local -i arr=()\n  local -i arr_len=0\n  local -i flag=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local",
    "    local -i n=$1\n    local -i d\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u",
    "  local -i num=$1\n  local -i num_len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local",
    "  local number=\"$1\"\n  local -i length=${#number}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo",
    "  local -i num=\"$1\"\n  local -i digit\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i result=0\n  local -i digits=0\n  local -i digits_sorted=0\n  local -i digits_sorted_rev=0\n  local -i digits_sorted_rev_bigger=0\n  local -i digits_sorted_rev_bigger_rev=0\n  local -i digits_sorted_rev_bigger_rev_sorted=0\n  local -i digits_sorted_rev_bigger_rev_sorted_rev=0\n  local -i digits_sorted_rev_bigger_rev_sorted_rev_bigger=0\n  local -i digits_sorted_rev_bigger_rev_sorted_rev_bigger_rev=0\n  local -i digits_sorted_rev_bigger_rev_sorted_rev_bigger_rev_sorted=0\n  local -i digits_sorted_rev_bigger_rev_sorted_rev_bigger_rev_sorted_rev=0\n  local -i digits_sorted_rev_bigger_rev_sorted_rev_bigger_rev_sorted_rev_bigger=0\n  local -i digits_sorted_rev_bigger_rev_sorted_rev_bigger_rev_sorted_rev_bigger_rev=0\n  local -i digits_sorted_rev_bigger_rev_sorted_rev_bigger_rev_sorted_rev_bigger_rev_sorted=0\n  local -i digits_sorted_rev_bigger_rev_sorted_rev_bigger_rev_sorted_rev_bigger_rev_",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n  local -i ppp=0",
    "  local number=$1\n  local digits=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local result=0\n  local temp=0\n  local temp2=0\n  local temp3=0\n  local temp4=0\n  local temp5=0\n  local temp6=0\n  local temp7=0\n  local temp8=0\n  local temp9=0\n  local temp10=0\n  local temp11=0\n  local temp12=0\n  local temp13=0\n  local temp14=0\n  local temp15=0\n  local temp16=0\n  local temp17=0\n  local temp18=0\n  local temp19=0\n  local temp20=0\n  local temp21=0\n  local temp22=0\n  local temp23=0\n  local temp24=0\n  local temp25=0\n  local temp26=0\n  local temp27=0\n  local temp28=0\n  local temp29=0\n  local temp30=0\n  local temp31=0\n  local temp32=0\n  local temp33=0\n  local temp34=0\n  local temp35=0\n  local temp36=0\n  local temp37=0\n  local temp38=0\n  local temp39=0\n  local temp40=0\n  local temp41=0\n  local temp42=0\n  local temp43=0\n  local temp44=0\n  local temp45=0\n  local temp46=0\n  local temp47=0\n  local temp48=0\n  local temp49=0\n  local temp50=0\n  local temp51=0\n  local temp52=0\n  local temp53=0\n  local temp54=0\n  local temp55=0\n ",
    "  local num=$1\n  local num_len=${#num}\n  local num_arr=($(echo $num | grep -o .))\n  local i=0\n  local j=0\n  local temp=0\n  local swap_idx=0\n  local swap_val=0\n  local swap_idx_arr=()\n  local swap_val_arr=()\n\n  # Find the first digit that is smaller than the digit to its right\n  for ((i=0; i<num_len-1; i++)); do\n    if ((${num_arr[i]} < ${num_arr[i+1]})); then\n      swap_idx=$i\n      swap_val=${num_arr[i]}\n      break\n    fi\n  done\n\n  # If no such digit is found, the number is the largest possible\n  if ((swap_idx == 0)); then\n    echo \"No bigger number can be made\"\n    return\n  fi\n\n  # Find the smallest digit to the right of the digit found above that is larger than it\n  for ((j=swap_idx+1; j<num_len; j++)); do\n    if ((${num_arr[j]} > swap_val)); then\n      swap_idx_arr+=($j)\n      swap_val_arr+=(${num_arr[j]})\n    fi\n  done\n\n  # Swap the two digits\n  for ((i=0; i<${#swap_idx_arr[@]}; i++)); do\n    if ((${swap_val_arr[i]} < ${swap_val_arr[$((i+1))]})); then\n      temp=${swap_val_arr[i]}\n      swap_val_arr[i]=${swap_val_arr[$((i+1))]}\n      swap_val_arr[$((i+1))]=$temp\n      temp=${swap_idx_arr[i]}\n      swap_idx_arr[i]=${swap_idx_arr[$((i+1))]}\n      swap_idx_arr[$((i+1))]=$temp\n    fi\n  done\n\n",
    "  local -i num=\"$1\"\n  local -i num_len=\"${#1}\"\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n    local -i ppp=0",
    "  local n=$1\n  local n_len=${#n}\n  local n_arr=()\n  local i\n  local j\n  local k\n  local tmp\n  local tmp_len\n  local tmp_arr=()\n  local tmp_arr_len\n  local tmp_arr_idx\n  local tmp_arr_idx_len\n  local tmp_arr_idx_arr=()\n  local tmp_arr_idx_arr_len\n  local tmp_arr_idx_arr_idx\n  local tmp_arr_idx_arr_idx_len\n  local tmp_arr_idx_arr_idx_arr=()\n  local tmp_arr_idx_arr_idx_arr_len\n  local tmp_arr_idx_arr_idx_arr_idx\n  local tmp_arr_idx_arr_idx_arr_idx_len\n  local tmp_arr_idx_arr_idx_arr_idx_arr=()\n  local tmp_arr_idx_arr_idx_arr_idx_arr_len\n  local tmp_arr_idx_arr_idx_arr_idx_arr_idx\n  local tmp_arr_idx_arr_idx_arr_idx_arr_idx_len\n  local tmp_arr_idx_arr_idx_arr_idx_arr_idx_arr=()\n  local tmp_arr_idx_arr_idx_arr_idx_arr_idx_arr_len\n  local tmp_arr_idx_arr_idx_arr_idx_arr_idx_arr_idx\n  local tmp_arr_idx_arr_idx_arr_idx_arr_idx_arr_idx_len\n  local tmp_arr_idx_arr_idx_arr_idx_arr_idx_arr_idx_arr=()\n  local tmp_arr_idx_arr_idx_arr_idx_arr_idx_arr_idx_arr_len\n  local tmp_arr_idx_arr_idx_arr_idx",
    "  local -i num=$1\n  local -i len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo",
    "  local -i num=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i min=0\n  local -i min_index=0\n  local -i arr=()\n\n  # convert number to array\n  while (( num > 0 )); do\n    arr[i++]=$(( num % 10 ))\n    num=$(( num / 10 ))\n  done\n  len=${#arr[@]}\n\n  # find the first digit that is smaller than the digit to its right\n  for (( i = len - 2; i >= 0; i-- )); do\n    if (( arr[i] < arr[i+1] )); then\n      min=arr[i+1]\n      min_index=i+1\n      break\n    fi\n  done\n\n  # find the smallest digit to the right of arr[i] that is greater than arr[i]\n  for (( j = i + 1; j < len; j++ )); do\n    if (( arr[j] > arr[i] && arr[j] < min )); then\n      min=arr[j]\n      min_index=j\n    fi\n  done\n\n  # swap arr[i] and arr[min_index]\n  tmp=arr[i]\n  arr[i]=arr[min_index]\n  arr[min_index]=tmp\n\n  # sort the digits after arr[i] in ascending order\n  for (( i = i + 1; i < len; i++ )); do\n    for (( j = i + 1; j < len; j++ )); do\n      if (( arr[i] > arr[j] )); then\n        tmp=arr[i]\n        arr[i]=arr[j]\n        arr[j]=tmp\n      fi\n    done\n  done\n\n  # convert array to number\n  num=0\n  for (( i = 0; i < len; i++ )); do\n    num=$(( num * 10 + arr[i] ))\n  done\n\n  echo \"$num\"",
    "  local number=$1\n  local digits=${#number}\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local result=0\n  local arr=()\n  local arr2=()\n  local arr3=()\n  local arr4=()\n  local arr5=()\n  local arr6=()\n  local arr7=()\n  local arr8=()\n  local arr9=()\n  local arr10=()\n  local arr11=()\n  local arr12=()\n  local arr13=()\n  local arr14=()\n  local arr15=()\n  local arr16=()\n  local arr17=()\n  local arr18=()\n  local arr19=()\n  local arr20=()\n  local arr21=()\n  local arr22=()\n  local arr23=()\n  local arr24=()\n  local arr25=()\n  local arr26=()\n  local arr27=()\n  local arr28=()\n  local arr29=()\n  local arr30=()\n  local arr31=()\n  local arr32=()\n  local arr33=()\n  local arr34=()\n  local arr35=()\n  local arr36=()\n  local arr37=()\n  local arr38=()\n  local arr39=()\n  local arr40=()\n  local arr41=()\n  local arr42=()\n  local arr43=()\n  local arr44=()\n  local arr45=()\n  local arr46=()\n  local arr47=()\n  local arr48=()\n  local arr49=()\n  local arr50=()\n  local arr51=()\n  local arr52=()\n  local arr53=()\n  local arr54=()\n  local arr55=()\n  local arr56=()\n  local arr57=()\n  local arr58=()\n  local arr59=()\n  local arr60=()\n  local arr61=()\n  local arr62=()\n  local arr63=()\n  local arr64=()\n  local arr65=()\n  local arr66=()\n  local arr67=",
    "    local -i num=$1\n    local -i len=${#num}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo",
    "  local number=$1\n  local length=${#number}\n  local i=0\n  local j=0\n  local k=0\n  local tmp=0\n  local result=0\n\n  for ((i=length-1; i>0; i--)); do\n    for ((j=i-1; j>=0; j--)); do\n      if [[ ${number:$i:1} -gt ${number:$j:1} ]]; then\n        tmp=${number:$i:1}\n        number=${number:0:$i}${number:$j:1}${number:$i+1}\n        number=${number:0:$j}$tmp${number:$j+1}\n        for ((k=0; k<=i-1; k++)); do\n          result=$result${number:$k:1}\n        done\n        for ((k=length-1; k>=i; k--)); do\n          result=$result${number:$k:1}\n        done\n        echo $result\n        return\n      fi\n    done\n  done\n  echo \"No answer\"",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_str=''\n  local -i n_arr_sorted_str_len=0\n  local -i n_arr_sorted_str_arr=()\n  local -i n_arr_sorted_str_arr_len=0\n  local -i n_arr_sorted_str_arr_sorted=()\n  local -i n_arr_sorted_str_arr_sorted_len=0\n  local -i n_arr_sorted_str_arr_sorted_str=''\n  local -i n_arr_sorted_str_arr_sorted_str_len=0\n  local -i n_arr_sorted_str_arr_sorted_str_arr=()\n  local -i n_arr_sorted_str_arr_sorted_str_arr_len=0\n  local -i n_arr_sorted_str_arr_sorted_str_arr_sorted=()\n  local -i n_arr_sorted_str_arr_sorted_str_arr_sorted_len=0\n  local -i n_arr_sorted_str_arr_sorted_str_arr_sorted_str=''\n  local -i n_arr_sorted_str_arr_sorted_str_arr_sorted_str_len=0\n  local -i n_arr_sorted_str_arr_sorted_str_arr_sorted_str_arr=()\n  local -i n_arr_sorted_str_arr_sorted_str_arr_sorted_str_arr_len=0\n  local -i n_arr_sorted_str_arr_sorted",
    "  local -i n=$1\n  local -i n_len=${#n}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_min=0\n  local -i n_arr_min_idx=0\n  local -i n_arr_min_idx_prev=0\n  local -i n_arr_min_idx_prev_val=0\n  local -i n_arr_min_idx_val=0\n  local -i n_arr_min_val=0\n  local -i n_arr_min_val_idx=0\n  local -i n_arr_min_val_idx_prev=0\n  local -i n_arr_min_val_idx_prev_val=0\n  local -i n_arr_min_val_idx_val=0\n  local -i n_arr_min_val_val=0\n  local -i n_arr_min_val_val_idx=0\n  local -i n_arr_min_val_val_idx_prev=0\n  local -i n_arr_min_val_val_idx_prev_val=0\n  local -i n_arr_min_val_val_idx_val=0\n  local -i n_arr_min_val_val_val=0\n  local -i n_arr_min_val_val_val_idx=0\n  local -i n_arr_min_val_val_val_idx_prev=0\n  local -i n_arr_min_val_val_val_idx_prev_val=0\n  local -i n_arr_min_val_val_val_idx_val=0\n  local -i n_arr_min_val_val_val_val=0\n  local -i n_arr_min_val_val_val_val_idx=0\n  local -i n",
    "  local -i n=$1\n  local -i d=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0",
    "  local number=\"$1\"\n  local len=${#number}\n  local i\n  local j\n  local k\n  local tmp\n  local next_bigger\n  local next_bigger_len\n  local next_bigger_len_diff\n\n  # Find the first digit that is smaller than the digit to its right\n  for ((i=len-2; i>=0; i--)); do\n    if [[ ${number:$i:1} -lt ${number:$((i+1)):1} ]]; then\n      break\n    fi\n  done\n\n  # If no such digit was found, the number is already the largest possible\n  if (( i < 0 )); then\n    echo \"$number\"\n    return\n  fi\n\n  # Find the smallest digit to the right of the digit found above that is larger than it\n  for ((j=i+1; j<len; j++)); do\n    if [[ ${number:$i:1} -lt ${number:$j:1} ]]; then\n      break\n    fi\n  done\n\n  # Swap the two digits\n  tmp=${number:$i:1}\n  number=\"${number:0:$i}${number:$j:1}${number:$((i+1)):$((j-i-1))}${tmp}${number:$((j+1))}\"\n\n  # Reverse the digits to the right of the digit found above\n  for ((k=0; k<len-i-1; k++)); do\n    tmp=${number:$((i+1+k)):1}\n    number=\"${number:0:$((i+1+k))}${number:$((len-k-1)):1}${number:$((i+2+k)):$((len-i-2-k))}${tmp}\"\n  done\n\n  echo \"$number\"",
    "    local -i num=$1\n    local -i num_len=${#num}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_next=()\n  local -i n_arr_sorted_next_len=0\n  local -i n_arr_sorted_next_str=''\n  local -i n_arr_sorted_next_int=0\n  local -i n_arr_sorted_next_int_len=0\n  local -i n_arr_sorted_next_int_len_diff=0\n  local -i n_arr_sorted_next_int_str=''\n  local -i n_arr_sorted_next_int_str_len=0\n  local -i n_arr_sorted_next_int_str_len_diff=0\n  local -i n_arr_sorted_next_int_str_diff=0\n  local -i n_arr_sorted_next_int_str_diff_len=0\n  local -i n_arr_sorted_next_int_str_diff_len_diff=0\n  local -i n_arr_sorted_next_int_str_diff_len_diff_diff=0\n  local -i n_arr_sorted_next_int_str_diff_len_diff_diff_diff=0\n  local -i n_arr_sorted_next_int_str_diff_len_diff_diff_diff_diff=0\n  local -i n_arr_sorted_next_int_str_diff_len_diff_diff_diff_diff_diff=0\n  local -i n_arr_sorted_next_int_str_diff_len_diff_diff_diff_diff_diff_diff=0\n  local -i n_arr_sorted",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=${#num}\n  local -i arr=()\n  local -i tmp=0\n  local -i swap=0\n  local -i min=0\n  local -i min_idx=0\n  local -i max=0\n  local -i max_idx=0\n  local -i result=0\n\n  # convert number to array\n  for ((i=0; i<len; i++)); do\n    arr[i]=${num:$i:1}\n  done\n\n  # find the first digit that is smaller than the digit to its right\n  for ((i=0; i<len-1; i++)); do\n    if ((arr[i] < arr[i+1])); then\n      swap=i\n      break\n    fi\n  done\n\n  # if no such digit exists, the number is the biggest possible\n  if ((swap == 0)); then\n    echo \"No bigger number possible\"\n    return\n  fi\n\n  # find the smallest digit to the right of the digit found above\n  # that is bigger than the digit found above\n  min=arr[swap+1]\n  min_idx=swap+1\n  for ((j=swap+1; j<len; j++)); do\n    if ((arr[j] < min && arr[j] > arr[swap])); then\n      min=arr[j]\n      min_idx=j\n    fi\n  done\n\n  # swap the two digits\n  tmp=arr[swap]\n  arr[swap]=arr[min_idx]\n  arr[min_idx]=tmp\n\n  # sort the digits to the right of the digit found above in ascending order\n  for ((i=swap+1; i<len; i++)); do\n    max=arr[i]\n    max_idx=i\n    for ((j=i+1; j<len; j++)); do\n      if ((arr[j] > max)); then\n        max=arr[j]\n        max_idx=j\n      fi\n    done\n    tmp=arr[",
    "  local number=\"$1\"\n  local length=${#number}\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local temp_number=0\n  local temp_length=0\n  local temp_number_length=0\n  local result=0\n  local result_length=0\n\n  # Find the first digit that is smaller than the digit to its right\n  for ((i=0; i<length-1; i++)); do\n    if [[ ${number:i:1} -lt ${number:i+1:1} ]]; then\n      break\n    fi\n  done\n\n  # If no such digit is found, the number is the largest possible number\n  if [[ $i -eq $((length-1)) ]]; then\n    echo \"No such number exists\"\n    return 1\n  fi\n\n  # Find the smallest digit to the right of the digit found above\n  for ((j=i+1; j<length; j++)); do\n    if [[ ${number:j:1} -lt ${number:i:1} ]]; then\n      temp=${number:j:1}\n      number=${number:0:j}${number:i:1}${number:j+1:length-j-1}\n      number=${number:0:i}${temp}${number:i+1:length-i-1}\n      break\n    fi\n  done\n\n  # Sort the digits to the right of the digit found above in ascending order\n  temp_number=${number:i+1:length-i-1}\n  temp_length=${#temp_number}\n  for ((j=0; j<temp_length-1; j++)); do\n    for ((k=j+1; k<temp_length; k++)); do\n      if [[ ${temp_number:j:1} -gt ${temp_number:k:1} ]]; then\n        temp=${temp_number:j:1}\n        temp_number=${temp_number:0:j}${temp_number:k:1}${temp_number:j+1:temp_length-j-1}\n        temp_number=${temp_number",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_next=()\n  local -i n_arr_sorted_next_len=0\n  local -i n_arr_sorted_next_str=''\n  local -i n_arr_sorted_next_int=0\n  local -i n_arr_sorted_next_int_len=0\n  local -i n_arr_sorted_next_int_str=''\n  local -i n_arr_sorted_next_int_str_len=0\n  local -i n_arr_sorted_next_int_str_next=''\n  local -i n_arr_sorted_next_int_str_next_len=0\n  local -i n_arr_sorted_next_int_str_next_int=0\n  local -i n_arr_sorted_next_int_str_next_int_len=0\n  local -i n_arr_sorted_next_int_str_next_int_str=''\n  local -i n_arr_sorted_next_int_str_next_int_str_len=0\n  local -i n_arr_sorted_next_int_str_next_int_str_next=''\n  local -i n_arr_sorted_next_int_str_next_int_str_next_len=0\n  local -i n_arr_sorted_next_int_str_next_int_str_next_int=0\n  local -i n_arr_sorted_next_int_str_next_int_str_next_int_len=0\n  local -i n_arr_sorted_next_int_str_next",
    "    local number=\"$1\"\n    local length=${#number}\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local result=0\n    local flag=0\n    local array=()\n\n    for ((i=0; i<length; i++)); do\n        array[i]=${number:i:1}\n    done\n\n    for ((i=length-1; i>0; i--)); do\n        if [[ ${array[i]} -gt ${array[i-1]} ]]; then\n            temp=${array[i]}\n            array[i]=${array[i-1]}\n            array[i-1]=$temp\n            flag=1\n            break\n        fi\n    done\n\n    if [[ $flag -eq 0 ]]; then\n        echo \"No bigger number found\"\n        return\n    fi\n\n    for ((i=length-1; i>0; i--)); do\n        for ((j=i-1; j>=0; j--)); do\n            if [[ ${array[i]} -lt ${array[j]} ]]; then\n                temp=${array[i]}\n                array[i]=${array[j]}\n                array[j]=$temp\n            fi\n        done\n    done\n\n    for ((k=0; k<length; k++)); do\n        result=$((result*10+array[k]))\n    done\n\n    echo $result",
    "    local -i num=\"$1\"\n    local -i len=\"${#num}\"\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i tmp=0\n    local -i arr=()\n    local -i res=0\n    local -i flag=0\n\n    for ((i=0; i<len; i++)); do\n        arr[i]=${num:i:1}\n    done\n\n    for ((i=len-1; i>0; i--)); do\n        if ((arr[i] > arr[i-1])); then\n            tmp=arr[i-1]\n            arr[i-1]=arr[i]\n            arr[i]=tmp\n            flag=1\n            break\n        fi\n    done\n\n    if ((flag == 0)); then\n        echo \"No bigger number found\"\n        return\n    fi\n\n    for ((i=len-1; i>0; i--)); do\n        for ((j=i-1; j>=0; j--)); do\n            if ((arr[j] > arr[i])); then\n                tmp=arr[i]\n                arr[i]=arr[j]\n                arr[j]=tmp\n            fi\n        done\n    done\n\n    for ((i=0; i<len; i++)); do\n        res=$((res*10 + arr[i]))\n    done\n\n    echo \"$res\"",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_next=()\n  local -i n_arr_sorted_next_len=0\n  local -i n_arr_sorted_next_str=''\n  local -i n_arr_sorted_next_int=0\n\n  # convert n to array\n  n_len=${#n}\n  for (( i=0; i<n_len; i++ )); do\n    n_arr[i]=${n:i:1}\n  done\n  n_arr_len=${#n_arr[@]}\n\n  # sort array\n  n_arr_sorted=($(printf '%s\\n' \"${n_arr[@]}\" | sort -n))\n  n_arr_sorted_len=${#n_arr_sorted[@]}\n\n  # find next bigger number\n  for (( i=0; i<n_arr_sorted_len; i++ )); do\n    if [[ ${n_arr_sorted[i]} -gt ${n_arr[i]} ]]; then\n      n_arr_sorted_next=(${n_arr_sorted[@]:i})\n      n_arr_sorted_next_len=${#n_arr_sorted_next[@]}\n      n_arr_sorted_next_str=${n_arr_sorted_next[0]}\n      for (( j=1; j<n_arr_sorted_next_len; j++ )); do\n        n_arr_sorted_next_str+=\"${n_arr_sorted_next[j]}\"\n      done\n      n_arr_sorted_next_int=$((10#$n_arr_sorted_next_",
    "  local number=\"$1\"\n  local digits=\"$(echo \"$number\" | grep -o .)\";\n  local count=\"$(echo \"$digits\" | wc -l)\"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_next=()\n  local -i n_arr_sorted_next_len=0\n  local -i n_arr_sorted_next_str=''\n  local -i n_arr_sorted_next_int=0\n  local -i n_arr_sorted_next_int_len=0\n  local -i n_arr_sorted_next_int_len_diff=0\n  local -i n_arr_sorted_next_int_len_diff_arr=()\n  local -i n_arr_sorted_next_int_len_diff_arr_len=0\n  local -i n_arr_sorted_next_int_len_diff_arr_len_i=0\n  local -i n_arr_sorted_next_int_len_diff_arr_len_j=0\n  local -i n_arr_sorted_next_int_len_diff_arr_len_k=0\n  local -i n_arr_sorted_next_int_len_diff_arr_len_l=0\n  local -i n_arr_sorted_next_int_len_diff_arr_len_m=0\n  local -i n_arr_sorted_next_int_len_diff_arr_len_n=0\n  local -i n_arr_sorted_next_int_len_diff_arr_len_o=0\n  local -i n_arr_sorted_next_int_len_diff_arr_len_p=0\n  local -i n_arr_sorted_next_int_len_diff_arr_len_q=0\n  local -i n_",
    "  local number=\"$1\"\n  local digits=($(echo \"$number\" | grep -o .))\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n",
    "  local number=$1\n  local digits=${#number}\n  local i=$((digits - 1))\n  local j=$((digits - 1))\n  local k=$((digits - 1))\n  local digit\n  local next_digit\n  local next_bigger_number\n\n  # Find the first digit that is smaller than the digit to its right\n  while [[ $i -gt 0 ]]; do\n    digit=${number:$i:1}\n    next_digit=${number:$((i - 1)):1}\n    if [[ $digit -gt $next_digit ]]; then\n      break\n    fi\n    ((i--))\n  done\n\n  # If no such digit is found, then the number is already the largest possible\n  if [[ $i -eq 0 ]]; then\n    echo -1\n    return\n  fi\n\n  # Find the smallest digit to the right of the digit found in the previous step\n  # that is larger than the digit found in the previous step\n  while [[ $j -ge $i ]]; do\n    digit=${number:$i:1}\n    next_digit=${number:$j:1}\n    if [[ $next_digit -gt $digit ]]; then\n      break\n    fi\n    ((j--))\n  done\n\n  # Swap the digits found in the previous two steps\n  next_bigger_number=${number:0:$((i - 1))}\n  next_bigger_number+=$next_digit\n  next_bigger_number+=$digit\n  next_bigger_number+=${number:$((i + 1)):$((j - i - 1))}\n  next_bigger_number+=${number:$i:1}\n  next_bigger_number+=${number:$((j + 1)):$((digits - j - 1))}\n\n  # Sort the digits to the right of the digit found in the first step in ascending order\n  while [[ $k -ge $i ]]; do\n    digit=${next_bigger_number:$k:1}\n    next_digit=${next_bigger_number:$((k - 1)):1}\n    if [[ $digit -lt $next_",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_next=()\n  local -i n_arr_sorted_next_len=0\n  local -i n_arr_sorted_next_str=''\n  local -i n_arr_sorted_next_int=0\n  local -i n_arr_sorted_next_int_len=0\n  local -i n_arr_sorted_next_int_len_diff=0\n  local -i n_arr_sorted_next_int_str=''\n  local -i n_arr_sorted_next_int_str_len=0\n  local -i n_arr_sorted_next_int_str_len_diff=0\n  local -i n_arr_sorted_next_int_str_zeros=''\n  local -i n_arr_sorted_next_int_str_zeros_len=0\n  local -i n_arr_sorted_next_int_str_zeros_len_diff=0\n  local -i n_arr_sorted_next_int_str_zeros_str=''\n  local -i n_arr_sorted_next_int_str_zeros_str_len=0\n  local -i n_arr_sorted_next_int_str_zeros_str_len_diff=0\n  local -i n_arr_sorted_next_int_str_zeros_str_zeros=''\n  local -i n_arr_sorted_next_int_str_zeros_str_zeros_len=0\n  local -i n_arr_sorted_next_int_str_zeros_str_zeros_len_diff",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i result=0\n  local -a arr\n  local -a arr_sorted\n  local -a arr_sorted_rev\n\n  # convert to array\n  while (( num > 0 )); do\n    arr[i]=$(( num % 10 ))\n    num=$(( num / 10 ))\n    (( i++ ))\n  done\n\n  # sort array\n  len=${#arr[@]}\n  for (( i=0; i<len; i++ )); do\n    for (( j=i+1; j<len; j++ )); do\n      if (( arr[i] > arr[j] )); then\n        tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$tmp\n      fi\n    done\n  done\n\n  # convert to number\n  for (( i=0; i<len; i++ )); do\n    result=$(( result * 10 + arr[i] ))\n  done\n\n  echo $result",
    "  local -i n=$1\n  local -i d1 d2\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n1=0\n  local -i n2=0\n  local -i n3=0\n  local -i n4=0\n  local -i n5=0\n  local -i n6=0\n  local -i n7=0\n  local -i n8=0\n  local -i n9=0\n  local -i n10=0\n  local -i n11=0\n  local -i n12=0\n  local -i n13=0\n  local -i n14=0\n  local -i n15=0\n  local -i n16=0\n  local -i n17=0\n  local -i n18=0\n  local -i n19=0\n  local -i n20=0\n  local -i n21=0\n  local -i n22=0\n  local -i n23=0\n  local -i n24=0\n  local -i n25=0\n  local -i n26=0\n  local -i n27=0\n  local -i n28=0\n  local -i n29=0\n  local -i n30=0\n  local -i n31=0\n  local -i n32=0\n  local -i n33=0\n  local -i n34=0\n  local -i n35=0\n  local -i n36=0\n  local -i n37=0\n  local -i n38=0\n  local -i n39=0\n  local -i n40=0\n  local -i n41=0\n  local -i n42=0\n  local -i n43=0\n  local -i n44=0\n  local -i n45=0\n  local -i n46=0\n  local -i n47=0\n  local -i n48=0\n  local -i n49=0\n  local -i n50=0\n  local -i",
    "  local -i num=$1\n  local -i digit=0\n  local -i next_digit=0\n  local -i next_num=0\n  local -i next_num_digit=0\n  local -i next_num_digit_count=0\n  local -i next_num_digit_count_max=0\n  local -i next_num_digit_count_max_index=0\n  local -i next_num_digit_count_max_index_prev=0\n  local -i next_num_digit_count_max_index_prev_digit=0\n  local -i next_num_digit_count_max_index_prev_digit_count=0\n  local -i next_num_digit_count_max_index_prev_digit_count_max=0\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index=0\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev=0\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev_digit=0\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev_digit_count=0\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max=0\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max_index=0\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max_index_prev=0\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max_index_prev_digit=0\n  local -i next_num_digit_count_max_index_prev_digit_count_max_index_prev_digit_count_max_index_prev_digit_count=0",
    "  local -i i=${#1}-1\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n  local -i cccc\n  local -i dddd\n  local -i eeee\n  local -i",
    "    local digits=()\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local num=$1\n    local len=${#num}\n    local result=0\n    local tmp=0\n    local tmp_num=0\n    local tmp_len=0\n    local tmp_result=0\n    local tmp_digits=()\n    local tmp_i=0\n    local tmp_j=0\n    local tmp_k=0\n    local tmp_l=0\n    local tmp_m=0\n    local tmp_n=0\n    local tmp_o=0\n    local tmp_p=0\n    local tmp_q=0\n    local tmp_r=0\n    local tmp_s=0\n    local tmp_t=0\n    local tmp_u=0\n    local tmp_v=0\n    local tmp_w=0\n    local tmp_x=0\n    local tmp_y=0\n    local tmp_z=0\n    local tmp_result=0\n    local tmp_tmp=0\n    local tmp_tmp_num=0\n    local tmp_tmp_len=0\n    local tmp_tmp_result=0\n    local tmp_tmp_digits=()\n    local tmp_tmp_i=0\n    local tmp_tmp_j=0\n    local tmp_tmp_k=0\n    local tmp_tmp_l=0\n    local tmp_tmp_m=0\n    local tmp_tmp_n=0\n    local tmp_tmp_o=0\n    local tmp_tmp_p=0\n    local tmp_tmp_q=0\n    local tmp_tmp_r=0\n    local tmp_tmp_s=0\n    local tmp_tmp_t=0\n    local tmp_tmp_u=0\n    local tmp_tmp_",
    "  local number=$1\n  local number_length=${#number}\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local temp_number=0\n  local temp_number_length=0\n  local temp_number_length_diff=0\n  local temp_number_length_diff_length=0\n  local temp_number_length_diff_length_length=0\n  local temp_number_length_diff_length_length_length=0\n  local temp_number_length_diff_length_length_length_length=0\n  local temp_number_length_diff_length_length_length_length_length=0\n  local temp_number_length_diff_length_length_length_length_length_length=0\n  local temp_number_length_diff_length_length_length_length_length_length_length=0\n  local temp_number_length_diff_length_length_length_length_length_length_length_length=0\n  local temp_number_length_diff_length_length_length_length_length_length_length_length_length=0\n  local temp_number_length_diff_length_length_length_length_length_length_length_length_length_length=0\n  local temp_number_length_diff_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_number_length_diff_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_number_length_diff_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_number_length_diff_length_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_number_length_diff_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length=0\n  local temp_number_length_diff_length_length_length_length_length_",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=${#num}\n  local -i arr=()\n  local -i tmp=0\n  local -i new=0\n  local -i new_len=0\n  local -i new_arr=()\n\n  for ((i=0; i<len; i++)); do\n    arr[i]=${num:i:1}\n  done\n\n  for ((i=len-1; i>0; i--)); do\n    if (( arr[i] > arr[i-1] )); then\n      tmp=arr[i]\n      arr[i]=arr[i-1]\n      arr[i-1]=tmp\n      break\n    fi\n  done\n\n  new_len=${#arr[@]}\n  for ((i=0; i<new_len; i++)); do\n    new_arr[i]=${arr[i]}\n  done\n\n  for ((i=0; i<new_len; i++)); do\n    for ((j=i+1; j<new_len; j++)); do\n      if (( new_arr[i] > new_arr[j] )); then\n        tmp=new_arr[i]\n        new_arr[i]=new_arr[j]\n        new_arr[j]=tmp\n      fi\n    done\n  done\n\n  for ((i=0; i<new_len; i++)); do\n    new=$(( new*10 + new_arr[i] ))\n  done\n\n  echo $new",
    "    local -i num=$1\n    local -i i=0\n    local -i j=0\n    local -i len=0\n    local -i temp=0\n    local -i arr=()\n    local -i result=0\n    local -i flag=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i",
    "    local number=$1\n    local number_length=${#number}\n    local number_array=($(echo $number | grep -o .))\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local temp_array=()\n    local temp_array_length=0\n    local temp_array_length_minus_one=0\n    local temp_array_length_minus_two=0\n    local temp_array_length_minus_three=0\n    local temp_array_length_minus_four=0\n    local temp_array_length_minus_five=0\n    local temp_array_length_minus_six=0\n    local temp_array_length_minus_seven=0\n    local temp_array_length_minus_eight=0\n    local temp_array_length_minus_nine=0\n    local temp_array_length_minus_ten=0\n    local temp_array_length_minus_eleven=0\n    local temp_array_length_minus_twelve=0\n    local temp_array_length_minus_thirteen=0\n    local temp_array_length_minus_fourteen=0\n    local temp_array_length_minus_fifteen=0\n    local temp_array_length_minus_sixteen=0\n    local temp_array_length_minus_seventeen=0\n    local temp_array_length_minus_eighteen=0\n    local temp_array_length_minus_nineteen=0\n    local temp_array_length_minus_twenty=0\n    local temp_array_length_minus_twenty_one=0\n    local temp_array_length_minus_twenty_two=0\n    local temp_array_length_minus_twenty_three=0\n    local temp_array_length_minus_twenty_four=0\n    local temp_array_length_minus_twenty_five=0\n    local temp_array_length_minus_twenty_six=0\n    local temp_array_length_minus_twenty_seven=0\n    local temp_array_length_minus_twenty_eight=0\n    local temp_array_length",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=${#num}\n  local -a digits=()\n  local -i tmp=0\n  local -i swap=0\n  local -i result=0\n\n  # Split the number into an array of digits\n  while [ $num -gt 0 ]; do\n    tmp=$((num % 10))\n    digits+=($tmp)\n    num=$((num / 10))\n  done\n\n  # Reverse the array of digits\n  for ((i=0; i<len/2; i++)); do\n    swap=${digits[i]}\n    digits[i]=${digits[len-i-1]}\n    digits[len-i-1]=$swap\n  done\n\n  # Find the first digit that is smaller than the digit to its right\n  for ((i=0; i<len-1; i++)); do\n    if [ ${digits[i]} -lt ${digits[i+1]} ]; then\n      break\n    fi\n  done\n\n  # If no such digit exists, the number is already the largest possible\n  if [ $i -eq $len ]; then\n    echo \"No bigger number exists\"\n    return\n  fi\n\n  # Find the smallest digit to the right of the pivot that is larger than the pivot\n  for ((j=i+1; j<len; j++)); do\n    if [ ${digits[j]} -gt ${digits[i]} ]; then\n      if [ $j -eq $i+1 ] || [ ${digits[j]} -lt ${digits[j-1]} ]; then\n        break\n      fi\n    fi\n  done\n\n  # Swap the pivot with the smallest digit to its right\n  swap=${digits[i]}\n  digits[i]=${digits[j]}\n  digits[j]=$swap\n\n  # Reverse the digits to the right of the pivot\n  for ((i=i+1; i<len/2; i++)); do\n    swap=${digits[i]}\n    digits[i]=${digits[len-i-1]}\n    digits[len-i-1]=$swap\n",
    "    local number=$1\n    local digits=${#number}\n    local i=0\n    local j=0\n    local temp=0\n    local result=0\n    local arr=()\n    local arr2=()\n    local arr3=()\n    local arr4=()\n\n    if [[ $number -eq 0 ]]; then\n        echo \"0\"\n        return\n    fi\n\n    if [[ $number -eq 1 ]]; then\n        echo \"1\"\n        return\n    fi\n\n    if [[ $number -eq 2 ]]; then\n        echo \"2\"\n        return\n    fi\n\n    if [[ $number -eq 3 ]]; then\n        echo \"3\"\n        return\n    fi\n\n    if [[ $number -eq 4 ]]; then\n        echo \"4\"\n        return\n    fi\n\n    if [[ $number -eq 5 ]]; then\n        echo \"5\"\n        return\n    fi\n\n    if [[ $number -eq 6 ]]; then\n        echo \"6\"\n        return\n    fi\n\n    if [[ $number -eq 7 ]]; then\n        echo \"7\"\n        return\n    fi\n\n    if [[ $number -eq 8 ]]; then\n        echo \"8\"\n        return\n    fi\n\n    if [[ $number -eq 9 ]]; then\n        echo \"9\"\n        return\n    fi\n\n    if [[ $number -eq 10 ]]; then\n        echo \"10\"\n        return\n    fi\n\n    if [[ $number -eq 11 ]]; then\n        echo \"11\"\n        return\n    fi\n\n    if [[ $number -eq 12 ]]; then\n        echo \"12\"\n        return\n    fi\n\n    if [[ $number -eq 13 ]]; then\n        echo \"13\"\n        return\n    fi\n\n    if [[ $number -eq 14 ]]; then\n        echo \"14\"\n        return\n    fi\n\n    if [[ $number -eq 15 ]]; then\n        echo \"15\"\n        return\n    fi\n\n    if [[ $number -eq 16 ]]; then\n        echo \"16\"\n        return\n    fi\n\n    if [[ $number -eq 17 ]]; then\n        echo \"17\"\n        return\n    fi\n\n    if [[ $number -eq 18 ]]; then\n       ",
    "  local -i n=$1\n  local -i i=0\n  local -a digits\n  local -i d\n  local -i j\n  local -i k\n  local -i tmp\n  local -i min\n  local -i min_idx\n  local -i max_idx\n  local -i max\n  local -i max_idx\n  local -i min_idx\n  local -i max_idx\n  local -i max\n  local -i max_idx\n  local -i min_idx\n  local -i max_idx\n  local -i max\n  local -i max_idx\n  local -i min_idx\n  local -i max_idx\n  local -i max\n  local -i max_idx\n  local -i min_idx\n  local -i max_idx\n  local -i max\n  local -i max_idx\n  local -i min_idx\n  local -i max_idx\n  local -i max\n  local -i max_idx\n  local -i min_idx\n  local -i max_idx\n  local -i max\n  local -i max_idx\n  local -i min_idx\n  local -i max_idx\n  local -i max\n  local -i max_idx\n  local -i min_idx\n  local -i max_idx\n  local -i max\n  local -i max_idx\n  local -i min_idx\n  local -i max_idx\n  local -i max\n  local -i max_idx\n  local -i min_idx\n  local -i max_idx\n  local -i max\n  local -i max_idx\n  local -i min_idx\n  local -i max_idx\n  local -i max\n  local -i max_idx\n  local -i min_idx\n  local -i max_idx\n  local -i max\n  local -i max_idx\n  local -i min_idx\n  local -i max_idx\n  local -i max\n  local -i max_",
    "    local -i num=$1\n    local -i digit=0\n    local -i next_digit=0\n    local -i next_num=0\n    local -i next_num_digit=0\n    local -i next_num_digit_count=0\n    local -i next_num_digit_count_max=0\n    local -i next_num_digit_count_max_index=0\n    local -i next_num_digit_count_max_index_last=0\n    local -i next_num_digit_count_max_index_last_digit=0\n    local -i next_num_digit_count_max_index_last_digit_next=0\n    local -i next_num_digit_count_max_index_last_digit_next_index=0\n    local -i next_num_digit_count_max_index_last_digit_next_index_last=0\n    local -i next_num_digit_count_max_index_last_digit_next_index_last_digit=0\n    local -i next_num_digit_count_max_index_last_digit_next_index_last_digit_next=0\n    local -i next_num_digit_count_max_index_last_digit_next_index_last_digit_next_index=0\n    local -i next_num_digit_count_max_index_last_digit_next_index_last_digit_next_index_last=0\n    local -i next_num_digit_count_max_index_last_digit_next_index_last_digit_next_index_last_digit=0\n    local -i next_num_digit_count_max_index_last_digit_next_index_last_digit_next_index_last_digit_next=0\n    local -i next_num_digit_count_max_index_last_digit_next_index_last_digit_next_index_last_digit_next_index=0\n    local -i next_num_digit_count_max_index_last_digit_next_index_last_digit_next_index_last_digit_next_index_last=0",
    "    local number=\"$1\"\n    local length=${#number}\n    local i=0\n    local j=0\n    local k=0\n    local temp=0\n    local result=0\n    local array=()\n    local array_length=0\n    local array_index=0\n    local array_temp=0\n    local array_result=0\n\n    # Convert the number to an array\n    for ((i=0; i<length; i++)); do\n        array[i]=${number:$i:1}\n    done\n\n    # Find the first digit that is smaller than the digit to its right\n    for ((i=0; i<length-1; i++)); do\n        if ((array[i] < array[i+1])); then\n            break\n        fi\n    done\n\n    # If no such digit exists, the number is the largest possible\n    if ((i == length-1)); then\n        echo \"No bigger number exists\"\n        return\n    fi\n\n    # Find the smallest digit to the right of the digit found above that is larger than it\n    for ((j=i+1; j<length; j++)); do\n        if ((array[j] > array[i])); then\n            if ((array[j] < array[k])); then\n                k=$j\n            fi\n        fi\n    done\n\n    # Swap the two digits found above\n    temp=${array[i]}\n    array[i]=${array[k]}\n    array[k]=$temp\n\n    # Sort the digits to the right of the digit found above in ascending order\n    array_length=${#array[@]}\n    for ((i=0; i<array_length-1; i++)); do\n        for ((j=i+1; j<array_length; j++)); do\n            if ((array[i] > array[j])); then\n                array_temp=${array[i]}\n                array[i]=${array[j]}\n                array[j]=$array_temp\n            fi\n        done\n    done\n\n    # Convert the array back to a number\n    for ((i=0; i<length; i++)); do\n        array_result=$((array_result * 10 + array",
    "  local number=$1\n  local digits=${#number}\n  local i=0\n  local j=0\n  local digit=0\n  local digit_next=0\n  local number_new=0\n  local number_new_digits=0\n  local number_new_digit=0\n  local number_new_digit_next=0\n  local number_new_digit_next_next=0\n  local number_new_digit_next_next_next=0\n  local number_new_digit_next_next_next_next=0\n  local number_new_digit_next_next_next_next_next=0\n  local number_new_digit_next_next_next_next_next_next=0\n  local number_new_digit_next_next_next_next_next_next_next=0\n  local number_new_digit_next_next_next_next_next_next_next_next=0\n  local number_new_digit_next_next_next_next_next_next_next_next_next=0\n  local number_new_digit_next_next_next_next_next_next_next_next_next_next=0\n  local number_new_digit_next_next_next_next_next_next_next_next_next_next_next=0\n  local number_new_digit_next_next_next_next_next_next_next_next_next_next_next_next=0\n  local number_new_digit_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n  local number_new_digit_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n  local number_new_digit_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n  local number_new_digit_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n  local number_new_digit_next",
    "  local -i num=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i res=0\n  local -i arr=()\n  local -i arr_len=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_tmp=0\n  local -i arr_res=0\n  local -i arr_max=0\n  local -i arr_max_i=0\n  local -i arr_max_j=0\n  local -i arr_max_tmp=0\n  local -i arr_max_res=0\n\n  if [[ $num -lt 0 ]]; then\n    echo \"Error: $num is not a positive integer\"\n    return 1\n  fi\n\n  if [[ $num -lt 10 ]]; then\n    echo \"Error: $num is a single digit number\"\n    return 2\n  fi\n\n  len=${#num}\n  for ((i=len-1; i>0; i--)); do\n    for ((j=i-1; j>=0; j--)); do\n      tmp=$((num%10))\n      num=$((num/10))\n      if [[ $tmp -gt $((num%10)) ]]; then\n        res=$((num*10**(i+1)+tmp*10**i+num%10*10**j+tmp%10*10**(j-1)))\n        echo $res\n        return 0\n      fi\n    done\n  done\n\n  arr=($(echo $1 | grep -o .))\n  arr_len=${#arr[@]}\n  for ((arr_i=arr_len-1; arr_i>0; arr_i--)); do\n    for ((arr_j=arr_i-1; arr_j>=0; arr_j--)); do\n      arr_tmp=${arr[$arr_i]}\n      arr_res=$((arr_res+arr_tmp*10**arr_i))\n      if [[ $arr_tmp -gt ${arr[$arr_j]} ]]; then\n        arr_max=$((",
    "  local -i num=$1\n  local -i i=0\n  local -a digits\n  local -i num_digits=0\n  local -i j=0\n  local -i k=0\n  local -i tmp=0\n  local -i result=0\n  local -i divisor=1\n  local -i multiplier=1\n  local -i digit=0\n  local -i next_digit=0\n  local -i next_bigger=0\n  local -i next_bigger_digit=0\n  local -i next_bigger_multiplier=1\n\n  # convert to an array of digits\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    num_digits=$(( num_digits + 1 ))\n    digits[i]=$digit\n    num=$(( num / 10 ))\n    i=$(( i + 1 ))\n  done\n\n  # find the first digit that is smaller than the next digit\n  for (( i=num_digits-1; i>0; i-- )); do\n    digit=${digits[i]}\n    next_digit=${digits[i-1]}\n    if (( digit > next_digit )); then\n      next_bigger=$(( i - 1 ))\n      break\n    fi\n  done\n\n  # if no digit was found, the number is already the biggest possible\n  if (( next_bigger == 0 )); then\n    echo $1\n    return\n  fi\n\n  # find the smallest digit that is bigger than the digit at next_bigger\n  for (( i=0; i<num_digits; i++ )); do\n    digit=${digits[i]}\n    if (( digit > next_digit )); then\n      if (( next_bigger_digit == 0 )); then\n        next_bigger_digit=$digit\n        next_bigger_multiplier=$(( 10 ** i ))\n      elif (( digit < next_bigger_digit )); then\n        next_bigger_digit=$digit\n        next_bigger_multiplier=$(( 10 ** i ))\n      fi\n    fi\n  done\n\n  # swap the digits\n  digits[next_bigger]=$next_bigger_digit\n  digits[",
    "  local -i n=$1\n  local -i i=0 j=0\n  local -a a=()\n  local -i l=${#n}\n  local -i r=0\n  local -i t=0\n  local -i s=0\n  local -i p=0\n  local -i q=0\n  local -i m=0\n  local -i k=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i z=0\n  local -i x=0\n  local -i y=0\n  local -i w=0\n  local -i v=0\n  local -i u=0\n  local -i o=0\n  local -i b=0\n  local -i c=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n",
    "  local -i num=$1\n  local -i len=${#num}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i",
    "  local -i num=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i tmp=0\n  local -i len=${#num}\n  local -i arr=()\n  local -i res=0\n  local -i flag=0\n  local -i k=0\n\n  for ((i=0; i<len; i++)); do\n    arr[i]=${num:i:1}\n  done\n\n  for ((i=len-1; i>0; i--)); do\n    for ((j=i-1; j>=0; j--)); do\n      if ((arr[i]>arr[j])); then\n        tmp=arr[i]\n        arr[i]=arr[j]\n        arr[j]=tmp\n        flag=1\n        break\n      fi\n    done\n    if ((flag==1)); then\n      break\n    fi\n  done\n\n  if ((flag==0)); then\n    echo \"no bigger number\"\n    return\n  fi\n\n  for ((i=0; i<len; i++)); do\n    res=res*10+arr[i]\n  done\n\n  echo \"$res\"",
    "  local -i num=$1\n  local -i digit\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i result=0\n  local -i tmp=0\n  local -i tmp2=0\n  local -i tmp3=0\n  local -i tmp4=0\n  local -i tmp5=0\n  local -i tmp6=0\n  local -i tmp7=0\n  local -i tmp8=0\n  local -i tmp9=0\n  local -i tmp10=0\n  local -i tmp11=0\n  local -i tmp12=0\n  local -i tmp13=0\n  local -i tmp14=0\n  local -i tmp15=0\n  local -i tmp16=0\n  local -i tmp17=0\n  local -i tmp18=0\n  local -i tmp19=0\n  local -i tmp20=0\n  local -i tmp21=0\n  local -i tmp22=0\n  local -i tmp23=0\n  local -i tmp24=0\n  local -i tmp25=0\n  local -i tmp26=0\n  local -i tmp27=0\n  local -i tmp28=0\n  local -i tmp29=0\n  local -i tmp30=0\n  local -i tmp31=0\n  local -i tmp32=0\n  local -i tmp33=0\n  local -i tmp34=0\n  local -i tmp35=0\n  local -i tmp36=0\n  local -i tmp37=0\n  local -i tmp38=0\n  local -i",
    "  local number=\"$1\"\n  local length=${#number}\n  local i=0\n  local j=0\n  local k=0\n  local tmp=0\n  local tmp_array=()\n  local result=0\n\n  for ((i=0; i<length; i++)); do\n    tmp_array[i]=${number:$i:1}\n  done\n\n  for ((i=length-1; i>0; i--)); do\n    if ((tmp_array[i] > tmp_array[i-1])); then\n      tmp=${tmp_array[i]}\n      tmp_array[i]=${tmp_array[i-1]}\n      tmp_array[i-1]=$tmp\n      break\n    fi\n  done\n\n  if ((i == 0)); then\n    echo \"No bigger number\"\n    return\n  fi\n\n  for ((j=i+1; j<length; j++)); do\n    for ((k=j; k<length; k++)); do\n      if ((tmp_array[j] > tmp_array[k])); then\n        tmp=${tmp_array[j]}\n        tmp_array[j]=${tmp_array[k]}\n        tmp_array[k]=$tmp\n      fi\n    done\n  done\n\n  for ((i=0; i<length; i++)); do\n    result=$((result*10 + tmp_array[i]))\n  done\n\n  echo \"$result\"",
    "  local number=$1\n  local digits=${#number}\n  local i=0\n  local j=0\n  local digit=0\n  local digit_next=0\n  local digit_next_index=0\n  local digit_next_index_min=0\n  local digit_next_min=0\n  local number_rearranged=0\n  local number_rearranged_min=0\n  local number_rearranged_min_index=0\n  local number_rearranged_min_index_min=0\n  local number_rearranged_min_min=0\n  local number_rearranged_min_min_index=0\n  local number_rearranged_min_min_index_min=0\n  local number_rearranged_min_min_min=0\n  local number_rearranged_min_min_min_index=0\n  local number_rearranged_min_min_min_index_min=0\n  local number_rearranged_min_min_min_min=0\n  local number_rearranged_min_min_min_min_index=0\n  local number_rearranged_min_min_min_min_index_min=0\n  local number_rearranged_min_min_min_min_min=0\n  local number_rearranged_min_min_min_min_min_index=0\n  local number_rearranged_min_min_min_min_min_index_min=0\n  local number_rearranged_min_min_min_min_min_min=0\n  local number_rearranged_min_min_min_min_min_min_index=0\n  local number_rearranged_min_min_min_min_min_min_index_min=0\n  local number_rearranged_min_min_min_min_min_min_min=0\n  local number_rearranged_min_min_min_min_min_min_min_index=0\n  local number_rearranged_min_min_min_min_min_min_min_index_min=0\n  local number_rearranged_",
    "  local -i number=\"$1\"\n  local -i digit\n  local -i new_number=0\n  local -i new_digit\n  local -i new_digit_count=0\n  local -i new_digit_pos=1\n  local -i new_digit_pos_count=1\n  local -i new_digit_pos_count_max=1\n  local -i new_digit_pos_count_max_pos=1\n  local -i new_digit_pos_count_max_pos_prev=1\n  local -i new_digit_pos_count_max_pos_prev_prev=1\n  local -i new_digit_pos_count_max_pos_prev_prev_prev=1\n  local -i new_digit_pos_count_max_pos_prev_prev_prev_prev=1\n  local -i new_digit_pos_count_max_pos_prev_prev_prev_prev_prev=1\n  local -i new_digit_pos_count_max_pos_prev_prev_prev_prev_prev_prev=1\n  local -i new_digit_pos_count_max_pos_prev_prev_prev_prev_prev_prev_prev=1\n  local -i new_digit_pos_count_max_pos_prev_prev_prev_prev_prev_prev_prev_prev=1\n  local -i new_digit_pos_count_max_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev=1\n  local -i new_digit_pos_count_max_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=1\n  local -i new_digit_pos_count_max_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=1\n  local -i new_digit_pos_count_max_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=1\n  local -i new_digit_pos_count_max_pos_prev_prev_prev_prev_prev_prev_prev_prev_prev",
    "  local -i num=\"$1\"\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i min=0\n  local -i min_idx=0\n  local -i max=0\n  local -i max_idx=0\n  local -i res=0\n  local -a arr=()\n\n  if [[ $num -lt 10 ]]; then\n    echo -1\n    return\n  fi\n\n  while [[ $num -gt 0 ]]; do\n    arr[$i]=$(( num % 10 ))\n    num=$(( num / 10 ))\n    (( i++ ))\n  done\n\n  len=$i\n  (( i-- ))\n\n  while [[ $i -gt 0 ]]; do\n    min=${arr[$i]}\n    min_idx=$i\n    j=$(( i - 1 ))\n    while [[ $j -ge 0 ]]; do\n      if [[ ${arr[$j]} -lt $min ]]; then\n        min=${arr[$j]}\n        min_idx=$j\n      fi\n      (( j-- ))\n    done\n\n    if [[ $min_idx -lt $i ]]; then\n      tmp=${arr[$i]}\n      arr[$i]=${arr[$min_idx]}\n      arr[$min_idx]=$tmp\n      break\n    fi\n\n    (( i-- ))\n  done\n\n  if [[ $i -eq 0 ]]; then\n    echo -1\n    return\n  fi\n\n  (( i++ ))\n  while [[ $i -lt $len ]]; do\n    max=${arr[$i]}\n    max_idx=$i\n    j=$(( i + 1 ))\n    while [[ $j -lt $len ]]; do\n      if [[ ${arr[$j]} -gt $max ]]; then\n        max=${arr[$j]}\n        max_idx=$j\n      fi\n      (( j++ ))\n    done\n\n    if [[ $max_idx -gt $i ]]; then\n      tmp=${arr[$i]}\n      arr[$i]=${arr[$max_idx]}\n",
    "    local -i num=$1\n    local -i len=${#num}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo",
    "    local -i n=$1\n    local -i d\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u",
    "  local number=$1\n  local digits=${#number}\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local array=()\n  local result=0\n\n  # convert number to array of digits\n  for ((i=0; i<digits; i++)); do\n    array[i]=${number:$i:1}\n  done\n\n  # find the first digit that is smaller than the next digit\n  for ((i=0; i<digits-1; i++)); do\n    if [[ ${array[i]} -lt ${array[i+1]} ]]; then\n      break\n    fi\n  done\n\n  # if no such digit exists, then the number is the largest possible\n  if [[ $i -eq $((digits-1)) ]]; then\n    echo \"No bigger number\"\n    return\n  fi\n\n  # find the smallest digit that is larger than the digit at index i\n  for ((j=i+1; j<digits; j++)); do\n    if [[ ${array[j]} -gt ${array[i]} ]]; then\n      temp=${array[i]}\n      array[i]=${array[j]}\n      array[j]=$temp\n      break\n    fi\n  done\n\n  # sort the digits after index i\n  for ((k=i+1; k<digits; k++)); do\n    for ((j=k+1; j<digits; j++)); do\n      if [[ ${array[k]} -gt ${array[j]} ]]; then\n        temp=${array[k]}\n        array[k]=${array[j]}\n        array[j]=$temp\n      fi\n    done\n  done\n\n  # convert array to number\n  for ((i=0; i<digits; i++)); do\n    result=$((result*10+array[i]))\n  done\n\n  echo $result",
    "    local -i number=\"$1\"\n    local -i digits=${#number}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i temp=0\n    local -i bigger=0\n    local -i digit=0\n    local -i digit_next=0\n    local -i digit_next_next=0\n    local -i digit_next_next_next=0\n    local -i digit_next_next_next_next=0\n    local -i digit_next_next_next_next_next=0\n    local -i digit_next_next_next_next_next_next=0\n    local -i digit_next_next_next_next_next_next_next=0\n    local -i digit_next_next_next_next_next_next_next_next=0\n    local -i digit_next_next_next_next_next_next_next_next_next=0\n    local -i digit_next_next_next_next_next_next_next_next_next_next=0\n    local -i digit_next_next_next_next_next_next_next_next_next_next_next=0\n    local -i digit_next_next_next_next_next_next_next_next_next_next_next_next=0\n    local -i digit_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n    local -i digit_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n    local -i digit_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n    local -i digit_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n    local -i digit_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next=0\n",
    "    local -i num=$1\n    local -i num_len=${#num}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local",
    "  local number=\"$1\"\n  local digits=\"$(echo \"$number\" | grep -o .)\";\n  local sorted=\"$(echo \"$digits\" | sort -n)\";\n  local reversed=\"$(echo \"$sorted\" | rev)\";\n  local result=\"$(echo \"$reversed\" | tr -d '\\n')\";\n  if [[ \"$result\" == \"$number\" ]]; then\n    echo \"Not possible\";\n  else\n    echo \"$result\";\n  fi",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i result=0\n  local -a arr\n\n  # convert number to array\n  while (( num > 0 )); do\n    arr[i++]=$(( num % 10 ))\n    num=$(( num / 10 ))\n  done\n  len=${#arr[@]}\n\n  # find the first pair of two adjacent digits which are in the wrong order\n  for (( i = len - 1; i > 0; i-- )); do\n    if (( arr[i] > arr[i - 1] )); then\n      break\n    fi\n  done\n\n  # no such pair found, so the number is the biggest possible\n  if (( i == 0 )); then\n    echo \"no answer\"\n    return\n  fi\n\n  # find the smallest digit on the right side of (i - 1)-th digit that is greater than it\n  tmp=${arr[i - 1]}\n  for (( j = i + 1; j < len; j++ )); do\n    if (( arr[j] > tmp && arr[j] < arr[i] )); then\n      i=$j\n    fi\n  done\n\n  # swap the above found smallest digit with (i - 1)-th digit\n  tmp=${arr[i]}\n  arr[i]=${arr[i - 1]}\n  arr[i - 1]=$tmp\n\n  # sort the digits after (i - 1)-th digit in ascending order\n  for (( i = i; i < len; i++ )); do\n    for (( j = i + 1; j < len; j++ )); do\n      if (( arr[i] > arr[j] )); then\n        tmp=${arr[i]}\n        arr[i]=${arr[j]}\n        arr[j]=$tmp\n      fi\n    done\n  done\n\n  # convert array to number\n  for (( i = 0; i < len; i++ )); do\n    result=$(( result * 10 + arr[i] ))\n  done\n  echo $result",
    "  local -i n=$1\n  local -i n_len=${#n}\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_bigger=0\n  local -i n_bigger_len=0\n  local -i n_bigger_digit=0\n  local -i n_bigger_digit_len=0\n  local -i n_bigger_digit_len_max=0\n  local -i n_bigger_digit_len_min=0\n  local -i n_bigger_digit_len_min_index=0\n  local -i n_bigger_digit_len_min_index_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i n_bigger_digit_len_min_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local -i",
    "    local -i num=$1\n    local -i digits=${#num}\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i temp=0\n    local -i result=0\n    local -i arr=()\n    local -i arr2=()\n    local -i arr3=()\n    local -i arr4=()\n    local -i arr5=()\n    local -i arr6=()\n    local -i arr7=()\n    local -i arr8=()\n    local -i arr9=()\n    local -i arr10=()\n    local -i arr11=()\n    local -i arr12=()\n    local -i arr13=()\n    local -i arr14=()\n    local -i arr15=()\n    local -i arr16=()\n    local -i arr17=()\n    local -i arr18=()\n    local -i arr19=()\n    local -i arr20=()\n    local -i arr21=()\n    local -i arr22=()\n    local -i arr23=()\n    local -i arr24=()\n    local -i arr25=()\n    local -i arr26=()\n    local -i arr27=()\n    local -i arr28=()\n    local -i arr29=()\n    local -i arr30=()\n    local -i arr31=()\n    local -i arr32=()\n    local -i arr33=()\n    local -i arr34=()\n    local -i arr35=()\n    local -i arr36=()\n    local -i arr37=()\n    local -i arr38=()\n    local -i arr39=()\n    local -i arr40=()\n    local -i arr41=()\n    local -i arr42=()\n    local -i arr43=()\n    local -i arr44=()\n    local -i arr45=()\n    local -i arr46=()\n    local -i arr47=()\n    local -i arr48=()\n    local -i arr49=()\n    local -i arr50=()\n    local -",
    "    local -i n=$1\n    local -i d1 d2\n    local -i i=0 j=0\n    local -i digits=0\n    local -i num=0\n    local -i num_digits=0\n    local -i num_digits_max=0\n    local -i num_digits_min=0\n    local -i num_digits_min_index=0\n    local -i num_digits_min_value=0\n    local -i num_digits_min_value_index=0\n    local -i num_digits_min_value_index_min=0\n    local -i num_digits_min_value_index_min_index=0\n    local -i num_digits_min_value_index_min_index_min=0\n    local -i num_digits_min_value_index_min_index_min_index=0\n    local -i num_digits_min_value_index_min_index_min_index_min=0\n    local -i num_digits_min_value_index_min_index_min_index_min_index=0\n    local -i num_digits_min_value_index_min_index_min_index_min_index_min=0\n    local -i num_digits_min_value_index_min_index_min_index_min_index_min_index=0\n    local -i num_digits_min_value_index_min_index_min_index_min_index_min_index_min=0\n    local -i num_digits_min_value_index_min_index_min_index_min_index_min_index_min_index=0\n    local -i num_digits_min_value_index_min_index_min_index_min_index_min_index_min_index_min=0\n    local -i num_digits_min_value_index_min_index_min_index_min_index_min_index_min_index_min_index=0\n    local -i num_digits_min_value_index_min_index_min_index_",
    "  local -i num=\"$1\"\n  local -i len=\"${#1}\"\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i",
    "  local -i n=$1\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n_len=0\n  local -i n_arr=()\n  local -i n_arr_len=0\n  local -i n_arr_sorted=()\n  local -i n_arr_sorted_len=0\n  local -i n_arr_sorted_next=()\n  local -i n_arr_sorted_next_len=0\n  local -i n_arr_sorted_next_len_diff=0\n  local -i n_arr_sorted_next_len_diff_i=0\n  local -i n_arr_sorted_next_len_diff_j=0\n  local -i n_arr_sorted_next_len_diff_k=0\n  local -i n_arr_sorted_next_len_diff_l=0\n  local -i n_arr_sorted_next_len_diff_m=0\n  local -i n_arr_sorted_next_len_diff_n=0\n  local -i n_arr_sorted_next_len_diff_o=0\n  local -i n_arr_sorted_next_len_diff_p=0\n  local -i n_arr_sorted_next_len_diff_q=0\n  local -i n_arr_sorted_next_len_diff_r=0\n  local -i n_arr_sorted_next_len_diff_s=0\n  local -i n_arr_sorted_next_len_diff_t=0\n  local -i n_arr_sorted_next_len_diff_u=0\n  local -i n_arr_sorted_next_len_diff_v=0\n  local -i n_arr_sorted_next_len_diff_w=0\n  local -i n_arr_sorted_next_len_diff_x=0\n  local -i n_arr_sorted_next_len_diff",
    "  local -i num=$1\n  local -i i=0\n  local -i j=0\n  local -i len=0\n  local -i tmp=0\n  local -i arr=()\n  local -i arr_len=0\n  local -i arr_i=0\n  local -i arr_j=0\n  local -i arr_tmp=0\n  local -i arr_min=0\n  local -i arr_min_i=0\n  local -i arr_min_j=0\n  local -i arr_min_tmp=0\n  local -i arr_min_arr=()\n  local -i arr_min_arr_len=0\n  local -i arr_min_arr_i=0\n  local -i arr_min_arr_j=0\n  local -i arr_min_arr_tmp=0\n  local -i arr_min_arr_min=0\n  local -i arr_min_arr_min_i=0\n  local -i arr_min_arr_min_j=0\n  local -i arr_min_arr_min_tmp=0\n  local -i arr_min_arr_min_arr=()\n  local -i arr_min_arr_min_arr_len=0\n  local -i arr_min_arr_min_arr_i=0\n  local -i arr_min_arr_min_arr_j=0\n  local -i arr_min_arr_min_arr_tmp=0\n  local -i arr_min_arr_min_arr_min=0\n  local -i arr_min_arr_min_arr_min_i=0\n  local -i arr_min_arr_min_arr_min_j=0\n  local -i arr_min_arr_min_arr_min_tmp=0\n  local -i arr_min_arr_min_arr_min_arr=()\n  local -i arr_min_arr_min_arr_min_arr_len=0\n  local -i arr_min_arr_min_arr_min_arr_i=0\n  local -i arr_min_arr_min_arr_min_arr"
  ]
}